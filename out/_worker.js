globalThis.process = {
	argv: [],
	env: {},
};
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var __privateMethod = (obj, member, method) => {
  __accessCheck(obj, member, "access private method");
  return method;
};

// ../../node_modules/cookie/index.js
var require_cookie = __commonJS({
  "../../node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse3;
    exports.serialize = serialize3;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse3(str, options) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options || {};
      var dec = opt.decode || decode2;
      var index = 0;
      while (index < str.length) {
        var eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index, eqIdx).trim();
        if (void 0 === obj[key]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode(val, dec);
        }
        index = endIdx + 1;
      }
      return obj;
    }
    function serialize3(name, val, options) {
      var opt = options || {};
      var enc = opt.encode || encode2;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode2(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode2(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode(str, decode3) {
      try {
        return decode3(str);
      } catch (e) {
        return str;
      }
    }
  }
});

// ../../node_modules/@astrojs/internal-helpers/dist/path.js
function prependForwardSlash(path) {
  return path[0] === "/" ? path : "/" + path;
}
function collapseDuplicateSlashes(path) {
  return path.replace(/(?<!:)\/\/+/g, "/");
}
function removeTrailingForwardSlash(path) {
  return path.endsWith("/") ? path.slice(0, path.length - 1) : path;
}
function removeLeadingForwardSlash(path) {
  return path.startsWith("/") ? path.substring(1) : path;
}
function trimSlashes(path) {
  return path.replace(/^\/|\/$/g, "");
}
function isString(path) {
  return typeof path === "string" || path instanceof String;
}
function joinPaths(...paths) {
  return paths.filter(isString).map((path, i2) => {
    if (i2 === 0) {
      return removeTrailingForwardSlash(path);
    } else if (i2 === paths.length - 1) {
      return removeLeadingForwardSlash(path);
    } else {
      return trimSlashes(path);
    }
  }).join("/");
}
function slash(path) {
  return path.replace(/\\/g, "/");
}
var init_path = __esm({
  "../../node_modules/@astrojs/internal-helpers/dist/path.js"() {
  }
});

// ../../node_modules/kleur/colors.mjs
function init(x2, y) {
  let rgx = new RegExp(`\\x1b\\[${y}m`, "g");
  let open2 = `\x1B[${x2}m`, close = `\x1B[${y}m`;
  return function(txt) {
    if (!$.enabled || txt == null)
      return txt;
    return open2 + (!!~("" + txt).indexOf(close) ? txt.replace(rgx, close + open2) : txt) + close;
  };
}
var FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY, $, reset, bold, dim, italic, underline, inverse, hidden, strikethrough, black, red, green, yellow, blue, magenta, cyan, white, gray, grey, bgBlack, bgRed, bgGreen, bgYellow, bgBlue, bgMagenta, bgCyan, bgWhite;
var init_colors = __esm({
  "../../node_modules/kleur/colors.mjs"() {
    isTTY = true;
    if (typeof process !== "undefined") {
      ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});
      isTTY = process.stdout && process.stdout.isTTY;
    }
    $ = {
      enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== "dumb" && (FORCE_COLOR != null && FORCE_COLOR !== "0" || isTTY)
    };
    reset = init(0, 0);
    bold = init(1, 22);
    dim = init(2, 22);
    italic = init(3, 23);
    underline = init(4, 24);
    inverse = init(7, 27);
    hidden = init(8, 28);
    strikethrough = init(9, 29);
    black = init(30, 39);
    red = init(31, 39);
    green = init(32, 39);
    yellow = init(33, 39);
    blue = init(34, 39);
    magenta = init(35, 39);
    cyan = init(36, 39);
    white = init(37, 39);
    gray = init(90, 39);
    grey = init(90, 39);
    bgBlack = init(40, 49);
    bgRed = init(41, 49);
    bgGreen = init(42, 49);
    bgYellow = init(43, 49);
    bgBlue = init(44, 49);
    bgMagenta = init(45, 49);
    bgCyan = init(46, 49);
    bgWhite = init(47, 49);
  }
});

// ../../node_modules/path-to-regexp/dist.es2015/index.js
function lexer(str) {
  var tokens = [];
  var i2 = 0;
  while (i2 < str.length) {
    var char = str[i2];
    if (char === "*" || char === "+" || char === "?") {
      tokens.push({ type: "MODIFIER", index: i2, value: str[i2++] });
      continue;
    }
    if (char === "\\") {
      tokens.push({ type: "ESCAPED_CHAR", index: i2++, value: str[i2++] });
      continue;
    }
    if (char === "{") {
      tokens.push({ type: "OPEN", index: i2, value: str[i2++] });
      continue;
    }
    if (char === "}") {
      tokens.push({ type: "CLOSE", index: i2, value: str[i2++] });
      continue;
    }
    if (char === ":") {
      var name = "";
      var j = i2 + 1;
      while (j < str.length) {
        var code = str.charCodeAt(j);
        if (
          // `0-9`
          code >= 48 && code <= 57 || // `A-Z`
          code >= 65 && code <= 90 || // `a-z`
          code >= 97 && code <= 122 || // `_`
          code === 95
        ) {
          name += str[j++];
          continue;
        }
        break;
      }
      if (!name)
        throw new TypeError("Missing parameter name at ".concat(i2));
      tokens.push({ type: "NAME", index: i2, value: name });
      i2 = j;
      continue;
    }
    if (char === "(") {
      var count = 1;
      var pattern = "";
      var j = i2 + 1;
      if (str[j] === "?") {
        throw new TypeError('Pattern cannot start with "?" at '.concat(j));
      }
      while (j < str.length) {
        if (str[j] === "\\") {
          pattern += str[j++] + str[j++];
          continue;
        }
        if (str[j] === ")") {
          count--;
          if (count === 0) {
            j++;
            break;
          }
        } else if (str[j] === "(") {
          count++;
          if (str[j + 1] !== "?") {
            throw new TypeError("Capturing groups are not allowed at ".concat(j));
          }
        }
        pattern += str[j++];
      }
      if (count)
        throw new TypeError("Unbalanced pattern at ".concat(i2));
      if (!pattern)
        throw new TypeError("Missing pattern at ".concat(i2));
      tokens.push({ type: "PATTERN", index: i2, value: pattern });
      i2 = j;
      continue;
    }
    tokens.push({ type: "CHAR", index: i2, value: str[i2++] });
  }
  tokens.push({ type: "END", index: i2, value: "" });
  return tokens;
}
function parse(str, options) {
  if (options === void 0) {
    options = {};
  }
  var tokens = lexer(str);
  var _a4 = options.prefixes, prefixes = _a4 === void 0 ? "./" : _a4;
  var defaultPattern = "[^".concat(escapeString(options.delimiter || "/#?"), "]+?");
  var result = [];
  var key = 0;
  var i2 = 0;
  var path = "";
  var tryConsume = function(type) {
    if (i2 < tokens.length && tokens[i2].type === type)
      return tokens[i2++].value;
  };
  var mustConsume = function(type) {
    var value2 = tryConsume(type);
    if (value2 !== void 0)
      return value2;
    var _a5 = tokens[i2], nextType = _a5.type, index = _a5.index;
    throw new TypeError("Unexpected ".concat(nextType, " at ").concat(index, ", expected ").concat(type));
  };
  var consumeText = function() {
    var result2 = "";
    var value2;
    while (value2 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")) {
      result2 += value2;
    }
    return result2;
  };
  while (i2 < tokens.length) {
    var char = tryConsume("CHAR");
    var name = tryConsume("NAME");
    var pattern = tryConsume("PATTERN");
    if (name || pattern) {
      var prefix = char || "";
      if (prefixes.indexOf(prefix) === -1) {
        path += prefix;
        prefix = "";
      }
      if (path) {
        result.push(path);
        path = "";
      }
      result.push({
        name: name || key++,
        prefix,
        suffix: "",
        pattern: pattern || defaultPattern,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    var value = char || tryConsume("ESCAPED_CHAR");
    if (value) {
      path += value;
      continue;
    }
    if (path) {
      result.push(path);
      path = "";
    }
    var open2 = tryConsume("OPEN");
    if (open2) {
      var prefix = consumeText();
      var name_1 = tryConsume("NAME") || "";
      var pattern_1 = tryConsume("PATTERN") || "";
      var suffix = consumeText();
      mustConsume("CLOSE");
      result.push({
        name: name_1 || (pattern_1 ? key++ : ""),
        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
        prefix,
        suffix,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    mustConsume("END");
  }
  return result;
}
function compile(str, options) {
  return tokensToFunction(parse(str, options), options);
}
function tokensToFunction(tokens, options) {
  if (options === void 0) {
    options = {};
  }
  var reFlags = flags(options);
  var _a4 = options.encode, encode2 = _a4 === void 0 ? function(x2) {
    return x2;
  } : _a4, _b3 = options.validate, validate = _b3 === void 0 ? true : _b3;
  var matches = tokens.map(function(token) {
    if (typeof token === "object") {
      return new RegExp("^(?:".concat(token.pattern, ")$"), reFlags);
    }
  });
  return function(data) {
    var path = "";
    for (var i2 = 0; i2 < tokens.length; i2++) {
      var token = tokens[i2];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data ? data[token.name] : void 0;
      var optional = token.modifier === "?" || token.modifier === "*";
      var repeat = token.modifier === "*" || token.modifier === "+";
      if (Array.isArray(value)) {
        if (!repeat) {
          throw new TypeError('Expected "'.concat(token.name, '" to not repeat, but got an array'));
        }
        if (value.length === 0) {
          if (optional)
            continue;
          throw new TypeError('Expected "'.concat(token.name, '" to not be empty'));
        }
        for (var j = 0; j < value.length; j++) {
          var segment = encode2(value[j], token);
          if (validate && !matches[i2].test(segment)) {
            throw new TypeError('Expected all "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
          }
          path += token.prefix + segment + token.suffix;
        }
        continue;
      }
      if (typeof value === "string" || typeof value === "number") {
        var segment = encode2(String(value), token);
        if (validate && !matches[i2].test(segment)) {
          throw new TypeError('Expected "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
        }
        path += token.prefix + segment + token.suffix;
        continue;
      }
      if (optional)
        continue;
      var typeOfMessage = repeat ? "an array" : "a string";
      throw new TypeError('Expected "'.concat(token.name, '" to be ').concat(typeOfMessage));
    }
    return path;
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
var init_dist = __esm({
  "../../node_modules/path-to-regexp/dist.es2015/index.js"() {
  }
});

// ../../node_modules/mime/Mime.js
var require_Mime = __commonJS({
  "../../node_modules/mime/Mime.js"(exports, module) {
    "use strict";
    function Mime() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i2 = 0; i2 < arguments.length; i2++) {
        this.define(arguments[i2]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t) {
          return t.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i2 = 0; i2 < extensions.length; i2++) {
          const ext = extensions[i2];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    module.exports = Mime;
  }
});

// ../../node_modules/mime/types/standard.js
var require_standard = __commonJS({
  "../../node_modules/mime/types/standard.js"(exports, module) {
    module.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
  }
});

// ../../node_modules/mime/types/other.js
var require_other = __commonJS({
  "../../node_modules/mime/types/other.js"(exports, module) {
    module.exports = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
  }
});

// ../../node_modules/mime/index.js
var require_mime = __commonJS({
  "../../node_modules/mime/index.js"(exports, module) {
    "use strict";
    var Mime = require_Mime();
    module.exports = new Mime(require_standard(), require_other());
  }
});

// ../../node_modules/strip-ansi/node_modules/ansi-regex/index.js
function ansiRegex({ onlyFirst = false } = {}) {
  const pattern = [
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
  ].join("|");
  return new RegExp(pattern, onlyFirst ? void 0 : "g");
}
var init_ansi_regex = __esm({
  "../../node_modules/strip-ansi/node_modules/ansi-regex/index.js"() {
  }
});

// ../../node_modules/strip-ansi/index.js
var regex;
var init_strip_ansi = __esm({
  "../../node_modules/strip-ansi/index.js"() {
    init_ansi_regex();
    regex = ansiRegex();
  }
});

// ../../node_modules/eastasianwidth/eastasianwidth.js
var require_eastasianwidth = __commonJS({
  "../../node_modules/eastasianwidth/eastasianwidth.js"(exports, module) {
    var eaw = {};
    if ("undefined" == typeof module) {
      window.eastasianwidth = eaw;
    } else {
      module.exports = eaw;
    }
    eaw.eastAsianWidth = function(character) {
      var x2 = character.charCodeAt(0);
      var y = character.length == 2 ? character.charCodeAt(1) : 0;
      var codePoint = x2;
      if (55296 <= x2 && x2 <= 56319 && (56320 <= y && y <= 57343)) {
        x2 &= 1023;
        y &= 1023;
        codePoint = x2 << 10 | y;
        codePoint += 65536;
      }
      if (12288 == codePoint || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510) {
        return "F";
      }
      if (8361 == codePoint || 65377 <= codePoint && codePoint <= 65470 || 65474 <= codePoint && codePoint <= 65479 || 65482 <= codePoint && codePoint <= 65487 || 65490 <= codePoint && codePoint <= 65495 || 65498 <= codePoint && codePoint <= 65500 || 65512 <= codePoint && codePoint <= 65518) {
        return "H";
      }
      if (4352 <= codePoint && codePoint <= 4447 || 4515 <= codePoint && codePoint <= 4519 || 4602 <= codePoint && codePoint <= 4607 || 9001 <= codePoint && codePoint <= 9002 || 11904 <= codePoint && codePoint <= 11929 || 11931 <= codePoint && codePoint <= 12019 || 12032 <= codePoint && codePoint <= 12245 || 12272 <= codePoint && codePoint <= 12283 || 12289 <= codePoint && codePoint <= 12350 || 12353 <= codePoint && codePoint <= 12438 || 12441 <= codePoint && codePoint <= 12543 || 12549 <= codePoint && codePoint <= 12589 || 12593 <= codePoint && codePoint <= 12686 || 12688 <= codePoint && codePoint <= 12730 || 12736 <= codePoint && codePoint <= 12771 || 12784 <= codePoint && codePoint <= 12830 || 12832 <= codePoint && codePoint <= 12871 || 12880 <= codePoint && codePoint <= 13054 || 13056 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42124 || 42128 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 55216 <= codePoint && codePoint <= 55238 || 55243 <= codePoint && codePoint <= 55291 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65106 || 65108 <= codePoint && codePoint <= 65126 || 65128 <= codePoint && codePoint <= 65131 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127490 || 127504 <= codePoint && codePoint <= 127546 || 127552 <= codePoint && codePoint <= 127560 || 127568 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 194367 || 177984 <= codePoint && codePoint <= 196605 || 196608 <= codePoint && codePoint <= 262141) {
        return "W";
      }
      if (32 <= codePoint && codePoint <= 126 || 162 <= codePoint && codePoint <= 163 || 165 <= codePoint && codePoint <= 166 || 172 == codePoint || 175 == codePoint || 10214 <= codePoint && codePoint <= 10221 || 10629 <= codePoint && codePoint <= 10630) {
        return "Na";
      }
      if (161 == codePoint || 164 == codePoint || 167 <= codePoint && codePoint <= 168 || 170 == codePoint || 173 <= codePoint && codePoint <= 174 || 176 <= codePoint && codePoint <= 180 || 182 <= codePoint && codePoint <= 186 || 188 <= codePoint && codePoint <= 191 || 198 == codePoint || 208 == codePoint || 215 <= codePoint && codePoint <= 216 || 222 <= codePoint && codePoint <= 225 || 230 == codePoint || 232 <= codePoint && codePoint <= 234 || 236 <= codePoint && codePoint <= 237 || 240 == codePoint || 242 <= codePoint && codePoint <= 243 || 247 <= codePoint && codePoint <= 250 || 252 == codePoint || 254 == codePoint || 257 == codePoint || 273 == codePoint || 275 == codePoint || 283 == codePoint || 294 <= codePoint && codePoint <= 295 || 299 == codePoint || 305 <= codePoint && codePoint <= 307 || 312 == codePoint || 319 <= codePoint && codePoint <= 322 || 324 == codePoint || 328 <= codePoint && codePoint <= 331 || 333 == codePoint || 338 <= codePoint && codePoint <= 339 || 358 <= codePoint && codePoint <= 359 || 363 == codePoint || 462 == codePoint || 464 == codePoint || 466 == codePoint || 468 == codePoint || 470 == codePoint || 472 == codePoint || 474 == codePoint || 476 == codePoint || 593 == codePoint || 609 == codePoint || 708 == codePoint || 711 == codePoint || 713 <= codePoint && codePoint <= 715 || 717 == codePoint || 720 == codePoint || 728 <= codePoint && codePoint <= 731 || 733 == codePoint || 735 == codePoint || 768 <= codePoint && codePoint <= 879 || 913 <= codePoint && codePoint <= 929 || 931 <= codePoint && codePoint <= 937 || 945 <= codePoint && codePoint <= 961 || 963 <= codePoint && codePoint <= 969 || 1025 == codePoint || 1040 <= codePoint && codePoint <= 1103 || 1105 == codePoint || 8208 == codePoint || 8211 <= codePoint && codePoint <= 8214 || 8216 <= codePoint && codePoint <= 8217 || 8220 <= codePoint && codePoint <= 8221 || 8224 <= codePoint && codePoint <= 8226 || 8228 <= codePoint && codePoint <= 8231 || 8240 == codePoint || 8242 <= codePoint && codePoint <= 8243 || 8245 == codePoint || 8251 == codePoint || 8254 == codePoint || 8308 == codePoint || 8319 == codePoint || 8321 <= codePoint && codePoint <= 8324 || 8364 == codePoint || 8451 == codePoint || 8453 == codePoint || 8457 == codePoint || 8467 == codePoint || 8470 == codePoint || 8481 <= codePoint && codePoint <= 8482 || 8486 == codePoint || 8491 == codePoint || 8531 <= codePoint && codePoint <= 8532 || 8539 <= codePoint && codePoint <= 8542 || 8544 <= codePoint && codePoint <= 8555 || 8560 <= codePoint && codePoint <= 8569 || 8585 == codePoint || 8592 <= codePoint && codePoint <= 8601 || 8632 <= codePoint && codePoint <= 8633 || 8658 == codePoint || 8660 == codePoint || 8679 == codePoint || 8704 == codePoint || 8706 <= codePoint && codePoint <= 8707 || 8711 <= codePoint && codePoint <= 8712 || 8715 == codePoint || 8719 == codePoint || 8721 == codePoint || 8725 == codePoint || 8730 == codePoint || 8733 <= codePoint && codePoint <= 8736 || 8739 == codePoint || 8741 == codePoint || 8743 <= codePoint && codePoint <= 8748 || 8750 == codePoint || 8756 <= codePoint && codePoint <= 8759 || 8764 <= codePoint && codePoint <= 8765 || 8776 == codePoint || 8780 == codePoint || 8786 == codePoint || 8800 <= codePoint && codePoint <= 8801 || 8804 <= codePoint && codePoint <= 8807 || 8810 <= codePoint && codePoint <= 8811 || 8814 <= codePoint && codePoint <= 8815 || 8834 <= codePoint && codePoint <= 8835 || 8838 <= codePoint && codePoint <= 8839 || 8853 == codePoint || 8857 == codePoint || 8869 == codePoint || 8895 == codePoint || 8978 == codePoint || 9312 <= codePoint && codePoint <= 9449 || 9451 <= codePoint && codePoint <= 9547 || 9552 <= codePoint && codePoint <= 9587 || 9600 <= codePoint && codePoint <= 9615 || 9618 <= codePoint && codePoint <= 9621 || 9632 <= codePoint && codePoint <= 9633 || 9635 <= codePoint && codePoint <= 9641 || 9650 <= codePoint && codePoint <= 9651 || 9654 <= codePoint && codePoint <= 9655 || 9660 <= codePoint && codePoint <= 9661 || 9664 <= codePoint && codePoint <= 9665 || 9670 <= codePoint && codePoint <= 9672 || 9675 == codePoint || 9678 <= codePoint && codePoint <= 9681 || 9698 <= codePoint && codePoint <= 9701 || 9711 == codePoint || 9733 <= codePoint && codePoint <= 9734 || 9737 == codePoint || 9742 <= codePoint && codePoint <= 9743 || 9748 <= codePoint && codePoint <= 9749 || 9756 == codePoint || 9758 == codePoint || 9792 == codePoint || 9794 == codePoint || 9824 <= codePoint && codePoint <= 9825 || 9827 <= codePoint && codePoint <= 9829 || 9831 <= codePoint && codePoint <= 9834 || 9836 <= codePoint && codePoint <= 9837 || 9839 == codePoint || 9886 <= codePoint && codePoint <= 9887 || 9918 <= codePoint && codePoint <= 9919 || 9924 <= codePoint && codePoint <= 9933 || 9935 <= codePoint && codePoint <= 9953 || 9955 == codePoint || 9960 <= codePoint && codePoint <= 9983 || 10045 == codePoint || 10071 == codePoint || 10102 <= codePoint && codePoint <= 10111 || 11093 <= codePoint && codePoint <= 11097 || 12872 <= codePoint && codePoint <= 12879 || 57344 <= codePoint && codePoint <= 63743 || 65024 <= codePoint && codePoint <= 65039 || 65533 == codePoint || 127232 <= codePoint && codePoint <= 127242 || 127248 <= codePoint && codePoint <= 127277 || 127280 <= codePoint && codePoint <= 127337 || 127344 <= codePoint && codePoint <= 127386 || 917760 <= codePoint && codePoint <= 917999 || 983040 <= codePoint && codePoint <= 1048573 || 1048576 <= codePoint && codePoint <= 1114109) {
        return "A";
      }
      return "N";
    };
    eaw.characterLength = function(character) {
      var code = this.eastAsianWidth(character);
      if (code == "F" || code == "W" || code == "A") {
        return 2;
      } else {
        return 1;
      }
    };
    function stringToArray(string) {
      return string.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
    }
    eaw.length = function(string) {
      var characters = stringToArray(string);
      var len = 0;
      for (var i2 = 0; i2 < characters.length; i2++) {
        len = len + this.characterLength(characters[i2]);
      }
      return len;
    };
    eaw.slice = function(text, start, end) {
      textLen = eaw.length(text);
      start = start ? start : 0;
      end = end ? end : 1;
      if (start < 0) {
        start = textLen + start;
      }
      if (end < 0) {
        end = textLen + end;
      }
      var result = "";
      var eawLen = 0;
      var chars = stringToArray(text);
      for (var i2 = 0; i2 < chars.length; i2++) {
        var char = chars[i2];
        var charLen = eaw.length(char);
        if (eawLen >= start - (charLen == 2 ? 1 : 0)) {
          if (eawLen + charLen <= end) {
            result += char;
          } else {
            break;
          }
        }
        eawLen += charLen;
      }
      return result;
    };
  }
});

// ../../node_modules/emoji-regex/index.js
var require_emoji_regex = __commonJS({
  "../../node_modules/emoji-regex/index.js"(exports, module) {
    "use strict";
    module.exports = function() {
      return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
    };
  }
});

// ../../node_modules/string-width/index.js
var import_eastasianwidth, import_emoji_regex;
var init_string_width = __esm({
  "../../node_modules/string-width/index.js"() {
    init_strip_ansi();
    import_eastasianwidth = __toESM(require_eastasianwidth(), 1);
    import_emoji_regex = __toESM(require_emoji_regex(), 1);
  }
});

// ../../node_modules/html-escaper/esm/index.js
var replace, ca, esca, pe, escape;
var init_esm = __esm({
  "../../node_modules/html-escaper/esm/index.js"() {
    ({ replace } = "");
    ca = /[&<>'"]/g;
    esca = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "'": "&#39;",
      '"': "&quot;"
    };
    pe = (m) => esca[m];
    escape = (es) => replace.call(es, ca, pe);
  }
});

// dist/$server_build/chunks/astro.0fa599e7.mjs
function normalizeLF(code) {
  return code.replace(/\r\n|\r(?!\n)|\n/g, "\n");
}
function codeFrame(src, loc) {
  if (!loc || loc.line === void 0 || loc.column === void 0) {
    return "";
  }
  const lines = normalizeLF(src).split("\n").map((ln) => ln.replace(/\t/g, "  "));
  const visibleLines = [];
  for (let n = -2; n <= 2; n++) {
    if (lines[loc.line + n])
      visibleLines.push(loc.line + n);
  }
  let gutterWidth = 0;
  for (const lineNo of visibleLines) {
    let w2 = `> ${lineNo}`;
    if (w2.length > gutterWidth)
      gutterWidth = w2.length;
  }
  let output = "";
  for (const lineNo of visibleLines) {
    const isFocusedLine = lineNo === loc.line - 1;
    output += isFocusedLine ? "> " : "  ";
    output += `${lineNo + 1} | ${lines[lineNo]}
`;
    if (isFocusedLine)
      output += `${Array.from({ length: gutterWidth }).join(" ")}  | ${Array.from({
        length: loc.column
      }).join(" ")}^
`;
  }
  return output;
}
function validateArgs(args) {
  if (args.length !== 3)
    return false;
  if (!args[0] || typeof args[0] !== "object")
    return false;
  return true;
}
function baseCreateComponent(cb, moduleId, propagation) {
  var _a4;
  const name = ((_a4 = moduleId == null ? void 0 : moduleId.split("/").pop()) == null ? void 0 : _a4.replace(".astro", "")) ?? "";
  const fn = (...args) => {
    if (!validateArgs(args)) {
      throw new AstroError({
        ...InvalidComponentArgs,
        message: InvalidComponentArgs.message(name)
      });
    }
    return cb(...args);
  };
  Object.defineProperty(fn, "name", { value: name, writable: false });
  fn.isAstroComponentFactory = true;
  fn.moduleId = moduleId;
  fn.propagation = propagation;
  return fn;
}
function createComponentWithOptions(opts2) {
  const cb = baseCreateComponent(opts2.factory, opts2.moduleId, opts2.propagation);
  return cb;
}
function createComponent(arg1, moduleId, propagation) {
  if (typeof arg1 === "function") {
    return baseCreateComponent(arg1, moduleId, propagation);
  } else {
    return createComponentWithOptions(arg1);
  }
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult) => {
    if (typeof importMetaGlobResult === "string") {
      throw new AstroError({
        ...AstroGlobUsedOutside,
        message: AstroGlobUsedOutside.message(JSON.stringify(importMetaGlobResult))
      });
    }
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new AstroError({
        ...AstroGlobNoMatch,
        message: AstroGlobNoMatch.message(JSON.stringify(importMetaGlobResult))
      });
    }
    return Promise.all(allEntries.map((fn) => fn()));
  };
  return globHandler;
}
function createAstro(site) {
  return {
    site: site ? new URL(site) : void 0,
    generator: `Astro v${ASTRO_VERSION}`,
    glob: createAstroGlobFn()
  };
}
function getHandlerFromModule(mod, method) {
  if (mod[method]) {
    return mod[method];
  }
  if (method === "delete" && mod["del"]) {
    return mod["del"];
  }
  if (mod["all"]) {
    return mod["all"];
  }
  return void 0;
}
async function renderEndpoint(mod, context, ssr) {
  var _a4;
  const { request, params } = context;
  const chosenMethod = (_a4 = request.method) == null ? void 0 : _a4.toLowerCase();
  const handler = getHandlerFromModule(mod, chosenMethod);
  if (!ssr && ssr === false && chosenMethod && chosenMethod !== "get") {
    console.warn(`
${chosenMethod} requests are not available when building a static site. Update your config to \`output: 'server'\` or \`output: 'hybrid'\` with an \`export const prerender = false\` to handle ${chosenMethod} requests.`);
  }
  if (!handler || typeof handler !== "function") {
    let response = new Response(null, {
      status: 404,
      headers: {
        "X-Astro-Response": "Not-Found"
      }
    });
    return response;
  }
  if (handler.length > 1) {
    console.warn(`
API routes with 2 arguments have been deprecated. Instead they take a single argument in the form of:

export function get({ params, request }) {
	//...
}

Update your code to remove this warning.`);
  }
  const proxy = new Proxy(context, {
    get(target, prop) {
      if (prop in target) {
        return Reflect.get(target, prop);
      } else if (prop in params) {
        console.warn(`
API routes no longer pass params as the first argument. Instead an object containing a params property is provided in the form of:

export function get({ params }) {
	// ...
}

Update your code to remove this warning.`);
        return Reflect.get(params, prop);
      } else {
        return void 0;
      }
    }
  });
  return handler.call(mod, proxy, request);
}
function serializeListValue(value) {
  const hash = {};
  push(value);
  return Object.keys(hash).join(" ");
  function push(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push(name);
      });
    else {
      item = item === false || item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}
function isPromise(value) {
  return !!value && typeof value === "object" && typeof value.then === "function";
}
async function* streamAsyncIterator(stream) {
  const reader = stream.getReader();
  try {
    while (true) {
      const { done, value } = await reader.read();
      if (done)
        return;
      yield value;
    }
  } finally {
    reader.releaseLock();
  }
}
function isHTMLString(value) {
  return Object.prototype.toString.call(value) === "[object HTMLString]";
}
function markHTMLBytes(bytes) {
  return new HTMLBytes(bytes);
}
function hasGetReader(obj) {
  return typeof obj.getReader === "function";
}
async function* unescapeChunksAsync(iterable) {
  if (hasGetReader(iterable)) {
    for await (const chunk2 of streamAsyncIterator(iterable)) {
      yield unescapeHTML(chunk2);
    }
  } else {
    for await (const chunk2 of iterable) {
      yield unescapeHTML(chunk2);
    }
  }
}
function* unescapeChunks(iterable) {
  for (const chunk2 of iterable) {
    yield unescapeHTML(chunk2);
  }
}
function unescapeHTML(str) {
  if (!!str && typeof str === "object") {
    if (str instanceof Uint8Array) {
      return markHTMLBytes(str);
    } else if (str instanceof Response && str.body) {
      const body = str.body;
      return unescapeChunksAsync(body);
    } else if (typeof str.then === "function") {
      return Promise.resolve(str).then((value) => {
        return unescapeHTML(value);
      });
    } else if (Symbol.iterator in str) {
      return unescapeChunks(str);
    } else if (Symbol.asyncIterator in str || hasGetReader(str)) {
      return unescapeChunksAsync(str);
    }
  }
  return markHTMLString(str);
}
function createRenderInstruction(instruction) {
  return Object.defineProperty(instruction, RenderInstructionSymbol, {
    value: true
  });
}
function isRenderInstruction(chunk2) {
  return chunk2 && typeof chunk2 === "object" && chunk2[RenderInstructionSymbol];
}
function serializeArray(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = value.map((v) => {
    return convertToSerializedForm(v, metadata, parents);
  });
  parents.delete(value);
  return serialized;
}
function serializeObject(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = Object.fromEntries(
    Object.entries(value).map(([k2, v]) => {
      return [k2, convertToSerializedForm(v, metadata, parents)];
    })
  );
  parents.delete(value);
  return serialized;
}
function convertToSerializedForm(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  const tag = Object.prototype.toString.call(value);
  switch (tag) {
    case "[object Date]": {
      return [PROP_TYPE.Date, value.toISOString()];
    }
    case "[object RegExp]": {
      return [PROP_TYPE.RegExp, value.source];
    }
    case "[object Map]": {
      return [PROP_TYPE.Map, serializeArray(Array.from(value), metadata, parents)];
    }
    case "[object Set]": {
      return [PROP_TYPE.Set, serializeArray(Array.from(value), metadata, parents)];
    }
    case "[object BigInt]": {
      return [PROP_TYPE.BigInt, value.toString()];
    }
    case "[object URL]": {
      return [PROP_TYPE.URL, value.toString()];
    }
    case "[object Array]": {
      return [PROP_TYPE.JSON, serializeArray(value, metadata, parents)];
    }
    case "[object Uint8Array]": {
      return [PROP_TYPE.Uint8Array, Array.from(value)];
    }
    case "[object Uint16Array]": {
      return [PROP_TYPE.Uint16Array, Array.from(value)];
    }
    case "[object Uint32Array]": {
      return [PROP_TYPE.Uint32Array, Array.from(value)];
    }
    default: {
      if (value !== null && typeof value === "object") {
        return [PROP_TYPE.Value, serializeObject(value, metadata, parents)];
      } else if (value === void 0) {
        return [PROP_TYPE.Value];
      } else {
        return [PROP_TYPE.Value, value];
      }
    }
  }
}
function serializeProps(props, metadata) {
  const serialized = JSON.stringify(serializeObject(props, metadata));
  return serialized;
}
function extractDirectives(inputProps, clientDirectives) {
  let extracted = {
    isPage: false,
    hydration: null,
    props: {}
  };
  for (const [key, value] of Object.entries(inputProps)) {
    if (key.startsWith("server:")) {
      if (key === "server:root") {
        extracted.isPage = true;
      }
    }
    if (key.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        case "client:display-name": {
          break;
        }
        default: {
          extracted.hydration.directive = key.split(":")[1];
          extracted.hydration.value = value;
          if (!clientDirectives.has(extracted.hydration.directive)) {
            const hydrationMethods = Array.from(clientDirectives.keys()).map((d) => `client:${d}`).join(", ");
            throw new Error(
              `Error: invalid hydration directive "${key}". Supported hydration methods: ${hydrationMethods}`
            );
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new AstroError(MissingMediaQueryDirective);
          }
          break;
        }
      }
    } else if (key === "class:list") {
      if (value) {
        extracted.props[key.slice(0, -5)] = serializeListValue(value);
      }
    } else {
      extracted.props[key] = value;
    }
  }
  for (const sym of Object.getOwnPropertySymbols(inputProps)) {
    extracted.props[sym] = inputProps[sym];
  }
  return extracted;
}
async function generateHydrateScript(scriptOptions, metadata) {
  const { renderer, result, astroId, props, attrs } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata;
  if (!componentExport.value) {
    throw new Error(
      `Unable to resolve a valid export for "${metadata.displayName}"! Please open an issue at https://astro.build/issues!`
    );
  }
  const island = {
    children: "",
    props: {
      // This is for HMR, probably can avoid it in prod
      uid: astroId
    }
  };
  if (attrs) {
    for (const [key, value] of Object.entries(attrs)) {
      island.props[key] = escapeHTML(value);
    }
  }
  island.props["component-url"] = await result.resolve(decodeURI(componentUrl));
  if (renderer.clientEntrypoint) {
    island.props["component-export"] = componentExport.value;
    island.props["renderer-url"] = await result.resolve(decodeURI(renderer.clientEntrypoint));
    island.props["props"] = escapeHTML(serializeProps(props, metadata));
  }
  island.props["ssr"] = "";
  island.props["client"] = hydrate;
  let beforeHydrationUrl = await result.resolve("astro:scripts/before-hydration.js");
  if (beforeHydrationUrl.length) {
    island.props["before-hydration-url"] = beforeHydrationUrl;
  }
  island.props["opts"] = escapeHTML(
    JSON.stringify({
      name: metadata.displayName,
      value: metadata.hydrateArgs || ""
    })
  );
  transitionDirectivesToCopyOnIsland.forEach((name) => {
    if (props[name]) {
      island.props[name] = props[name];
    }
  });
  return island;
}
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i2 = 0; i2 < str.length; i2++) {
    const ch = str.charCodeAt(i2);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash(text) {
  let num;
  let result = "";
  let integer = bitwise(text);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary) {
    num = integer % binary;
    integer = Math.floor(integer / binary);
    result = dictionary[num] + result;
  }
  if (integer > 0) {
    result = dictionary[integer] + result;
  }
  return sign + result;
}
function isAstroComponentFactory(obj) {
  return obj == null ? false : obj.isAstroComponentFactory === true;
}
function isAPropagatingComponent(result, factory) {
  let hint = factory.propagation || "none";
  if (factory.moduleId && result.componentMetadata.has(factory.moduleId) && hint === "none") {
    hint = result.componentMetadata.get(factory.moduleId).propagation;
  }
  return hint === "in-tree" || hint === "self";
}
function isHeadAndContent(obj) {
  return typeof obj === "object" && !!obj[headAndContentSym];
}
function determineIfNeedsHydrationScript(result) {
  if (result._metadata.hasHydrationScript) {
    return false;
  }
  return result._metadata.hasHydrationScript = true;
}
function determinesIfNeedsDirectiveScript(result, directive) {
  if (result._metadata.hasDirectives.has(directive)) {
    return false;
  }
  result._metadata.hasDirectives.add(directive);
  return true;
}
function getDirectiveScriptText(result, directive) {
  const clientDirectives = result.clientDirectives;
  const clientDirective = clientDirectives.get(directive);
  if (!clientDirective) {
    throw new Error(`Unknown directive: ${directive}`);
  }
  return clientDirective;
}
function getPrescripts(result, type, directive) {
  switch (type) {
    case "both":
      return `${ISLAND_STYLES}<script>${getDirectiveScriptText(
        result,
        directive
      )};${astro_island_prebuilt_default}<\/script>`;
    case "directive":
      return `<script>${getDirectiveScriptText(result, directive)}<\/script>`;
  }
  return "";
}
function defineScriptVars(vars) {
  var _a4;
  let output = "";
  for (const [key, value] of Object.entries(vars)) {
    output += `const ${toIdent(key)} = ${(_a4 = JSON.stringify(value)) == null ? void 0 : _a4.replace(
      /<\/script>/g,
      "\\x3C/script>"
    )};
`;
  }
  return markHTMLString(output);
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
function addAttribute(value, key, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {
      return markHTMLString(` ${key}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key)) {
    console.warn(`[astro] The "${key}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key}": value }}\`).`);
    return "";
  }
  if (key === "class:list") {
    const listValue = toAttributeString(serializeListValue(value), shouldEscape);
    if (listValue === "") {
      return "";
    }
    return markHTMLString(` ${key.slice(0, -5)}="${listValue}"`);
  }
  if (key === "style" && !(value instanceof HTMLString)) {
    if (Array.isArray(value) && value.length === 2) {
      return markHTMLString(
        ` ${key}="${toAttributeString(`${toStyleString(value[0])};${value[1]}`, shouldEscape)}"`
      );
    }
    if (typeof value === "object") {
      return markHTMLString(` ${key}="${toAttributeString(toStyleString(value), shouldEscape)}"`);
    }
  }
  if (key === "className") {
    return markHTMLString(` class="${toAttributeString(value, shouldEscape)}"`);
  }
  if (value === true && (key.startsWith("data-") || htmlBooleanAttributes.test(key))) {
    return markHTMLString(` ${key}`);
  } else {
    return markHTMLString(` ${key}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, shouldEscape);
  }
  return markHTMLString(output);
}
function renderElement$1(name, { props: _props, children = "" }, shouldEscape = true) {
  const { lang: _2, "data-astro-id": astroId, "define:vars": defineVars, ...props } = _props;
  if (defineVars) {
    if (name === "style") {
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children = defineScriptVars(defineVars) + "\n" + children;
    }
  }
  if ((children == null || children == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;
}
function renderAllHeadContent(result) {
  result._metadata.hasRenderedHead = true;
  const styles = Array.from(result.styles).filter(uniqueElements).map(
    (style) => style.props.rel === "stylesheet" ? renderElement$1("link", style) : renderElement$1("style", style)
  );
  result.styles.clear();
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script) => {
    return renderElement$1("script", script, false);
  });
  const links = Array.from(result.links).filter(uniqueElements).map((link) => renderElement$1("link", link, false));
  let content = links.join("\n") + styles.join("\n") + scripts.join("\n");
  if (result._metadata.extraHead.length > 0) {
    for (const part of result._metadata.extraHead) {
      content += part;
    }
  }
  return markHTMLString(content);
}
function* renderHead() {
  yield createRenderInstruction({ type: "head" });
}
function* maybeRenderHead() {
  yield createRenderInstruction({ type: "maybe-head" });
}
function isSlotString(str) {
  return !!str[slotString];
}
function renderSlot(result, slotted, fallback) {
  if (!slotted && fallback) {
    return renderSlot(result, fallback);
  }
  return {
    async render(destination) {
      await renderChild(destination, typeof slotted === "function" ? slotted(result) : slotted);
    }
  };
}
async function renderSlotToString(result, slotted, fallback) {
  let content = "";
  let instructions = null;
  const temporaryDestination = {
    write(chunk2) {
      if (chunk2 instanceof Response)
        return;
      if (typeof chunk2 === "object" && "type" in chunk2 && typeof chunk2.type === "string") {
        if (instructions === null) {
          instructions = [];
        }
        instructions.push(chunk2);
      } else {
        content += chunkToString(result, chunk2);
      }
    }
  };
  const renderInstance = renderSlot(result, slotted, fallback);
  await renderInstance.render(temporaryDestination);
  return markHTMLString(new SlotString(content, instructions));
}
async function renderSlots(result, slots = {}) {
  let slotInstructions = null;
  let children = {};
  if (slots) {
    await Promise.all(
      Object.entries(slots).map(
        ([key, value]) => renderSlotToString(result, value).then((output) => {
          if (output.instructions) {
            if (slotInstructions === null) {
              slotInstructions = [];
            }
            slotInstructions.push(...output.instructions);
          }
          children[key] = output;
        })
      )
    );
  }
  return { slotInstructions, children };
}
function stringifyChunk(result, chunk2) {
  if (isRenderInstruction(chunk2)) {
    const instruction = chunk2;
    switch (instruction.type) {
      case "directive": {
        const { hydration } = instruction;
        let needsHydrationScript = hydration && determineIfNeedsHydrationScript(result);
        let needsDirectiveScript = hydration && determinesIfNeedsDirectiveScript(result, hydration.directive);
        let prescriptType = needsHydrationScript ? "both" : needsDirectiveScript ? "directive" : null;
        if (prescriptType) {
          let prescripts = getPrescripts(result, prescriptType, hydration.directive);
          return markHTMLString(prescripts);
        } else {
          return "";
        }
      }
      case "head": {
        if (result._metadata.hasRenderedHead) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      case "maybe-head": {
        if (result._metadata.hasRenderedHead || result._metadata.headInTree) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      default: {
        throw new Error(`Unknown chunk type: ${chunk2.type}`);
      }
    }
  } else if (chunk2 instanceof Response) {
    return "";
  } else if (isSlotString(chunk2)) {
    let out = "";
    const c = chunk2;
    if (c.instructions) {
      for (const instr of c.instructions) {
        out += stringifyChunk(result, instr);
      }
    }
    out += chunk2.toString();
    return out;
  }
  return chunk2.toString();
}
function chunkToString(result, chunk2) {
  if (ArrayBuffer.isView(chunk2)) {
    return decoder.decode(chunk2);
  } else {
    return stringifyChunk(result, chunk2);
  }
}
function chunkToByteArray(result, chunk2) {
  if (ArrayBuffer.isView(chunk2)) {
    return chunk2;
  } else {
    const stringified = stringifyChunk(result, chunk2);
    return encoder.encode(stringified.toString());
  }
}
function isRenderInstance(obj) {
  return !!obj && typeof obj === "object" && "render" in obj && typeof obj.render === "function";
}
async function renderChild(destination, child) {
  child = await child;
  if (child instanceof SlotString) {
    destination.write(child);
  } else if (isHTMLString(child)) {
    destination.write(child);
  } else if (Array.isArray(child)) {
    for (const c of child) {
      await renderChild(destination, c);
    }
  } else if (typeof child === "function") {
    await renderChild(destination, child());
  } else if (typeof child === "string") {
    destination.write(markHTMLString(escapeHTML(child)));
  } else if (!child && child !== 0)
    ;
  else if (isRenderInstance(child)) {
    await child.render(destination);
  } else if (isRenderTemplateResult(child)) {
    await child.render(destination);
  } else if (isAstroComponentInstance(child)) {
    await child.render(destination);
  } else if (ArrayBuffer.isView(child)) {
    destination.write(child);
  } else if (typeof child === "object" && (Symbol.asyncIterator in child || Symbol.iterator in child)) {
    for await (const value of child) {
      await renderChild(destination, value);
    }
  } else {
    destination.write(child);
  }
}
function validateComponentProps(props, displayName) {
  if (props != null) {
    for (const prop of Object.keys(props)) {
      if (prop.startsWith("client:")) {
        console.warn(
          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`
        );
      }
    }
  }
}
function createAstroComponentInstance(result, displayName, factory, props, slots = {}) {
  validateComponentProps(props, displayName);
  const instance = new AstroComponentInstance(result, props, slots, factory);
  if (isAPropagatingComponent(result, factory) && !result._metadata.propagators.has(factory)) {
    result._metadata.propagators.set(factory, instance);
  }
  return instance;
}
function isAstroComponentInstance(obj) {
  return typeof obj === "object" && !!obj[astroComponentInstanceSym];
}
function isRenderTemplateResult(obj) {
  return typeof obj === "object" && !!obj[renderTemplateResultSym];
}
function renderTemplate(htmlParts, ...expressions) {
  return new RenderTemplateResult(htmlParts, expressions);
}
async function renderToString(result, componentFactory, props, children, isPage = false, route) {
  const templateResult = await callComponentAsTemplateResultOrResponse(
    result,
    componentFactory,
    props,
    children,
    route
  );
  if (templateResult instanceof Response)
    return templateResult;
  let str = "";
  let renderedFirstPageChunk = false;
  const destination = {
    write(chunk2) {
      if (isPage && !renderedFirstPageChunk) {
        renderedFirstPageChunk = true;
        if (!/<!doctype html/i.test(String(chunk2))) {
          const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
          str += doctype;
        }
      }
      if (chunk2 instanceof Response)
        return;
      str += chunkToString(result, chunk2);
    }
  };
  await templateResult.render(destination);
  return str;
}
async function renderToReadableStream(result, componentFactory, props, children, isPage = false, route) {
  const templateResult = await callComponentAsTemplateResultOrResponse(
    result,
    componentFactory,
    props,
    children,
    route
  );
  if (templateResult instanceof Response)
    return templateResult;
  let renderedFirstPageChunk = false;
  if (isPage) {
    await bufferHeadContent(result);
  }
  return new ReadableStream({
    start(controller) {
      const destination = {
        write(chunk2) {
          if (isPage && !renderedFirstPageChunk) {
            renderedFirstPageChunk = true;
            if (!/<!doctype html/i.test(String(chunk2))) {
              const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
              controller.enqueue(encoder.encode(doctype));
            }
          }
          if (chunk2 instanceof Response) {
            throw new AstroError({
              ...ResponseSentError
            });
          }
          const bytes = chunkToByteArray(result, chunk2);
          controller.enqueue(bytes);
        }
      };
      (async () => {
        try {
          await templateResult.render(destination);
          controller.close();
        } catch (e) {
          if (AstroError.is(e) && !e.loc) {
            e.setLocation({
              file: route == null ? void 0 : route.component
            });
          }
          setTimeout(() => controller.error(e), 0);
        }
      })();
    }
  });
}
async function callComponentAsTemplateResultOrResponse(result, componentFactory, props, children, route) {
  const factoryResult = await componentFactory(result, props, children);
  if (factoryResult instanceof Response) {
    return factoryResult;
  } else if (!isRenderTemplateResult(factoryResult)) {
    throw new AstroError({
      ...OnlyResponseCanBeReturned,
      message: OnlyResponseCanBeReturned.message(route == null ? void 0 : route.route, typeof factoryResult),
      location: {
        file: route == null ? void 0 : route.component
      }
    });
  }
  return isHeadAndContent(factoryResult) ? factoryResult.content : factoryResult;
}
async function bufferHeadContent(result) {
  const iterator = result._metadata.propagators.values();
  while (true) {
    const { value, done } = iterator.next();
    if (done) {
      break;
    }
    const returnValue = await value.init(result);
    if (isHeadAndContent(returnValue)) {
      result._metadata.extraHead.push(returnValue.head);
    }
  }
}
function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString(await props[attr])}"`;
  }
  return markHTMLString(
    `<${name}${attrHTML}>${await renderSlotToString(result, slots == null ? void 0 : slots.default)}</${name}>`
  );
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}
function guessRenderers(componentUrl) {
  const extname = componentUrl == null ? void 0 : componentUrl.split(".").pop();
  switch (extname) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/solid-js", "@astrojs/vue (jsx)"];
    default:
      return [
        "@astrojs/react",
        "@astrojs/preact",
        "@astrojs/solid-js",
        "@astrojs/vue",
        "@astrojs/svelte",
        "@astrojs/lit"
      ];
  }
}
function isFragmentComponent(Component) {
  return Component === Fragment;
}
function isHTMLComponent(Component) {
  return Component && Component["astro:html"] === true;
}
function removeStaticAstroSlot(html, supportsAstroStaticSlot) {
  const exp = supportsAstroStaticSlot ? ASTRO_STATIC_SLOT_EXP : ASTRO_SLOT_EXP;
  return html.replace(exp, "");
}
async function renderFrameworkComponent(result, displayName, Component, _props, slots = {}) {
  var _a4, _b3, _c;
  if (!Component && !_props["client:only"]) {
    throw new Error(
      `Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`
    );
  }
  const { renderers: renderers2, clientDirectives } = result;
  const metadata = {
    astroStaticSlot: true,
    displayName
  };
  const { hydration, isPage, props } = extractDirectives(_props, clientDirectives);
  let html = "";
  let attrs = void 0;
  if (hydration) {
    metadata.hydrate = hydration.directive;
    metadata.hydrateArgs = hydration.value;
    metadata.componentExport = hydration.componentExport;
    metadata.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata.componentUrl);
  const validRenderers = renderers2.filter((r) => r.name !== "astro:jsx");
  const { children, slotInstructions } = await renderSlots(result, slots);
  let renderer;
  if (metadata.hydrate !== "only") {
    let isTagged = false;
    try {
      isTagged = Component && Component[Renderer];
    } catch {
    }
    if (isTagged) {
      const rendererName = Component[Renderer];
      renderer = renderers2.find(({ name }) => name === rendererName);
    }
    if (!renderer) {
      let error2;
      for (const r of renderers2) {
        try {
          if (await r.ssr.check.call({ result }, Component, props, children)) {
            renderer = r;
            break;
          }
        } catch (e) {
          error2 ?? (error2 = e);
        }
      }
      if (!renderer && error2) {
        throw error2;
      }
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = await renderHTMLElement(
        result,
        Component,
        _props,
        slots
      );
      return {
        render(destination) {
          destination.write(output);
        }
      };
    }
  } else {
    if (metadata.hydrateArgs) {
      const passedName = metadata.hydrateArgs;
      const rendererName = rendererAliases.has(passedName) ? rendererAliases.get(passedName) : passedName;
      renderer = renderers2.find(
        ({ name }) => name === `@astrojs/${rendererName}` || name === rendererName
      );
    }
    if (!renderer && validRenderers.length === 1) {
      renderer = validRenderers[0];
    }
    if (!renderer) {
      const extname = (_a4 = metadata.componentUrl) == null ? void 0 : _a4.split(".").pop();
      renderer = renderers2.filter(
        ({ name }) => name === `@astrojs/${extname}` || name === extname
      )[0];
    }
  }
  if (!renderer) {
    if (metadata.hydrate === "only") {
      throw new AstroError({
        ...NoClientOnlyHint,
        message: NoClientOnlyHint.message(metadata.displayName),
        hint: NoClientOnlyHint.hint(
          probableRendererNames.map((r) => r.replace("@astrojs/", "")).join("|")
        )
      });
    } else if (typeof Component !== "string") {
      const matchingRenderers = validRenderers.filter(
        (r) => probableRendererNames.includes(r.name)
      );
      const plural = validRenderers.length > 1;
      if (matchingRenderers.length === 0) {
        throw new AstroError({
          ...NoMatchingRenderer,
          message: NoMatchingRenderer.message(
            metadata.displayName,
            (_b3 = metadata == null ? void 0 : metadata.componentUrl) == null ? void 0 : _b3.split(".").pop(),
            plural,
            validRenderers.length
          ),
          hint: NoMatchingRenderer.hint(
            formatList(probableRendererNames.map((r) => "`" + r + "`"))
          )
        });
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
          { result },
          Component,
          props,
          children,
          metadata
        ));
      } else {
        throw new Error(`Unable to render ${metadata.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata.hydrate === "only") {
      html = await renderSlotToString(result, slots == null ? void 0 : slots.fallback);
    } else {
      ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
        { result },
        Component,
        props,
        children,
        metadata
      ));
    }
  }
  if (renderer && !renderer.clientEntrypoint && renderer.name !== "@astrojs/lit" && metadata.hydrate) {
    throw new AstroError({
      ...NoClientEntrypoint,
      message: NoClientEntrypoint.message(
        displayName,
        metadata.hydrate,
        renderer.name
      )
    });
  }
  if (!html && typeof Component === "string") {
    const Tag = sanitizeElementName(Component);
    const childSlots = Object.values(children).join("");
    const renderTemplateResult = renderTemplate`<${Tag}${internalSpreadAttributes(
      props
    )}${markHTMLString(
      childSlots === "" && voidElementNames.test(Tag) ? `/>` : `>${childSlots}</${Tag}>`
    )}`;
    html = "";
    const destination = {
      write(chunk2) {
        if (chunk2 instanceof Response)
          return;
        html += chunkToString(result, chunk2);
      }
    };
    await renderTemplateResult.render(destination);
  }
  if (!hydration) {
    return {
      render(destination) {
        var _a22;
        if (slotInstructions) {
          for (const instruction of slotInstructions) {
            destination.write(instruction);
          }
        }
        if (isPage || (renderer == null ? void 0 : renderer.name) === "astro:jsx") {
          destination.write(html);
        } else if (html && html.length > 0) {
          destination.write(
            markHTMLString(
              removeStaticAstroSlot(html, ((_a22 = renderer == null ? void 0 : renderer.ssr) == null ? void 0 : _a22.supportsAstroStaticSlot) ?? false)
            )
          );
        }
      }
    };
  }
  const astroId = shorthash(
    `<!--${metadata.componentExport.value}:${metadata.componentUrl}-->
${html}
${serializeProps(
      props,
      metadata
    )}`
  );
  const island = await generateHydrateScript(
    { renderer, result, astroId, props, attrs },
    metadata
  );
  let unrenderedSlots = [];
  if (html) {
    if (Object.keys(children).length > 0) {
      for (const key of Object.keys(children)) {
        let tagName = ((_c = renderer == null ? void 0 : renderer.ssr) == null ? void 0 : _c.supportsAstroStaticSlot) ? !!metadata.hydrate ? "astro-slot" : "astro-static-slot" : "astro-slot";
        let expectedHTML = key === "default" ? `<${tagName}>` : `<${tagName} name="${key}">`;
        if (!html.includes(expectedHTML)) {
          unrenderedSlots.push(key);
        }
      }
    }
  } else {
    unrenderedSlots = Object.keys(children);
  }
  const template = unrenderedSlots.length > 0 ? unrenderedSlots.map(
    (key) => `<template data-astro-template${key !== "default" ? `="${key}"` : ""}>${children[key]}</template>`
  ).join("") : "";
  island.children = `${html ?? ""}${template}`;
  if (island.children) {
    island.props["await-children"] = "";
  }
  return {
    render(destination) {
      if (slotInstructions) {
        for (const instruction of slotInstructions) {
          destination.write(instruction);
        }
      }
      destination.write(createRenderInstruction({ type: "directive", hydration }));
      destination.write(markHTMLString(renderElement$1("astro-island", island, false)));
    }
  };
}
function sanitizeElementName(tag) {
  const unsafe = /[&<>'"\s]+/g;
  if (!unsafe.test(tag))
    return tag;
  return tag.trim().split(unsafe)[0].trim();
}
async function renderFragmentComponent(result, slots = {}) {
  const children = await renderSlotToString(result, slots == null ? void 0 : slots.default);
  return {
    render(destination) {
      if (children == null)
        return;
      destination.write(children);
    }
  };
}
async function renderHTMLComponent(result, Component, _props, slots = {}) {
  const { slotInstructions, children } = await renderSlots(result, slots);
  const html = Component({ slots: children });
  const hydrationHtml = slotInstructions ? slotInstructions.map((instr) => chunkToString(result, instr)).join("") : "";
  return {
    render(destination) {
      destination.write(markHTMLString(hydrationHtml + html));
    }
  };
}
function renderAstroComponent(result, displayName, Component, props, slots = {}) {
  const instance = createAstroComponentInstance(result, displayName, Component, props, slots);
  const bufferChunks = [];
  const bufferDestination = {
    write: (chunk2) => bufferChunks.push(chunk2)
  };
  const renderPromise = instance.render(bufferDestination);
  return {
    async render(destination) {
      for (const chunk2 of bufferChunks) {
        destination.write(chunk2);
      }
      bufferChunks.length = 0;
      bufferDestination.write = (chunk2) => destination.write(chunk2);
      await renderPromise;
    }
  };
}
async function renderComponent(result, displayName, Component, props, slots = {}) {
  if (isPromise(Component)) {
    Component = await Component;
  }
  if (isFragmentComponent(Component)) {
    return await renderFragmentComponent(result, slots);
  }
  if (isHTMLComponent(Component)) {
    return await renderHTMLComponent(result, Component, props, slots);
  }
  if (isAstroComponentFactory(Component)) {
    return renderAstroComponent(result, displayName, Component, props, slots);
  }
  return await renderFrameworkComponent(result, displayName, Component, props, slots);
}
async function renderComponentToString(result, displayName, Component, props, slots = {}, isPage = false, route) {
  let str = "";
  let renderedFirstPageChunk = false;
  let head = "";
  if (nonAstroPageNeedsHeadInjection(Component)) {
    for (const headChunk of maybeRenderHead()) {
      head += chunkToString(result, headChunk);
    }
  }
  try {
    const destination = {
      write(chunk2) {
        if (isPage && !renderedFirstPageChunk) {
          renderedFirstPageChunk = true;
          if (!/<!doctype html/i.test(String(chunk2))) {
            const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
            str += doctype + head;
          }
        }
        if (chunk2 instanceof Response)
          return;
        str += chunkToString(result, chunk2);
      }
    };
    const renderInstance = await renderComponent(result, displayName, Component, props, slots);
    await renderInstance.render(destination);
  } catch (e) {
    if (AstroError.is(e) && !e.loc) {
      e.setLocation({
        file: route == null ? void 0 : route.component
      });
    }
    throw e;
  }
  return str;
}
function nonAstroPageNeedsHeadInjection(pageComponent) {
  return !!(pageComponent == null ? void 0 : pageComponent[needsHeadRenderingSymbol]);
}
async function renderJSX(result, vnode) {
  switch (true) {
    case vnode instanceof HTMLString:
      if (vnode.toString().trim() === "") {
        return "";
      }
      return vnode;
    case typeof vnode === "string":
      return markHTMLString(escapeHTML(vnode));
    case typeof vnode === "function":
      return vnode;
    case (!vnode && vnode !== 0):
      return "";
    case Array.isArray(vnode):
      return markHTMLString(
        (await Promise.all(vnode.map((v) => renderJSX(result, v)))).join("")
      );
  }
  let skip;
  if (vnode.props) {
    if (vnode.props[Skip.symbol]) {
      skip = vnode.props[Skip.symbol];
    } else {
      skip = new Skip(vnode);
    }
  } else {
    skip = new Skip(vnode);
  }
  return renderJSXVNode(result, vnode, skip);
}
async function renderJSXVNode(result, vnode, skip) {
  if (isVNode(vnode)) {
    switch (true) {
      case !vnode.type: {
        throw new Error(`Unable to render ${result.pathname} because it contains an undefined Component!
Did you forget to import the component or is it possible there is a typo?`);
      }
      case vnode.type === Symbol.for("astro:fragment"):
        return renderJSX(result, vnode.props.children);
      case vnode.type.isAstroComponentFactory: {
        let props = {};
        let slots = {};
        for (const [key, value] of Object.entries(vnode.props ?? {})) {
          if (key === "children" || value && typeof value === "object" && value["$$slot"]) {
            slots[key === "children" ? "default" : key] = () => renderJSX(result, value);
          } else {
            props[key] = value;
          }
        }
        const str = await renderToString(result, vnode.type, props, slots);
        if (str instanceof Response) {
          throw str;
        }
        const html = markHTMLString(str);
        return html;
      }
      case (!vnode.type && vnode.type !== 0):
        return "";
      case (typeof vnode.type === "string" && vnode.type !== ClientOnlyPlaceholder):
        return markHTMLString(await renderElement(result, vnode.type, vnode.props ?? {}));
    }
    if (vnode.type) {
      let extractSlots2 = function(child) {
        if (Array.isArray(child)) {
          return child.map((c) => extractSlots2(c));
        }
        if (!isVNode(child)) {
          _slots2.default.push(child);
          return;
        }
        if ("slot" in child.props) {
          _slots2[child.props.slot] = [..._slots2[child.props.slot] ?? [], child];
          delete child.props.slot;
          return;
        }
        _slots2.default.push(child);
      };
      if (typeof vnode.type === "function" && vnode.type["astro:renderer"]) {
        skip.increment();
      }
      if (typeof vnode.type === "function" && vnode.props["server:root"]) {
        const output2 = await vnode.type(vnode.props ?? {});
        return await renderJSX(result, output2);
      }
      if (typeof vnode.type === "function") {
        if (skip.haveNoTried() || skip.isCompleted()) {
          useConsoleFilter();
          try {
            const output2 = await vnode.type(vnode.props ?? {});
            let renderResult;
            if (output2 == null ? void 0 : output2[AstroJSX]) {
              renderResult = await renderJSXVNode(result, output2, skip);
              return renderResult;
            } else if (!output2) {
              renderResult = await renderJSXVNode(result, output2, skip);
              return renderResult;
            }
          } catch (e) {
            if (skip.isCompleted()) {
              throw e;
            }
            skip.increment();
          } finally {
            finishUsingConsoleFilter();
          }
        } else {
          skip.increment();
        }
      }
      const { children = null, ...props } = vnode.props ?? {};
      const _slots2 = {
        default: []
      };
      extractSlots2(children);
      for (const [key, value] of Object.entries(props)) {
        if (value["$$slot"]) {
          _slots2[key] = value;
          delete props[key];
        }
      }
      const slotPromises = [];
      const slots = {};
      for (const [key, value] of Object.entries(_slots2)) {
        slotPromises.push(
          renderJSX(result, value).then((output2) => {
            if (output2.toString().trim().length === 0)
              return;
            slots[key] = () => output2;
          })
        );
      }
      await Promise.all(slotPromises);
      props[Skip.symbol] = skip;
      let output;
      if (vnode.type === ClientOnlyPlaceholder && vnode.props["client:only"]) {
        output = await renderComponentToString(
          result,
          vnode.props["client:display-name"] ?? "",
          null,
          props,
          slots
        );
      } else {
        output = await renderComponentToString(
          result,
          typeof vnode.type === "function" ? vnode.type.name : vnode.type,
          vnode.type,
          props,
          slots
        );
      }
      return markHTMLString(output);
    }
  }
  return markHTMLString(`${vnode}`);
}
async function renderElement(result, tag, { children, ...props }) {
  return markHTMLString(
    `<${tag}${spreadAttributes(props)}${markHTMLString(
      (children == null || children == "") && voidElementNames.test(tag) ? `/>` : `>${children == null ? "" : await renderJSX(result, prerenderElementChildren(tag, children))}</${tag}>`
    )}`
  );
}
function prerenderElementChildren(tag, children) {
  if (typeof children === "string" && (tag === "style" || tag === "script")) {
    return markHTMLString(children);
  } else {
    return children;
  }
}
function useConsoleFilter() {
  consoleFilterRefs++;
  if (!originalConsoleError) {
    originalConsoleError = console.error;
    try {
      console.error = filteredConsoleError;
    } catch (error2) {
    }
  }
}
function finishUsingConsoleFilter() {
  consoleFilterRefs--;
}
function filteredConsoleError(msg, ...rest) {
  if (consoleFilterRefs > 0 && typeof msg === "string") {
    const isKnownReactHookError = msg.includes("Warning: Invalid hook call.") && msg.includes("https://reactjs.org/link/invalid-hook-call");
    if (isKnownReactHookError)
      return;
  }
  originalConsoleError(msg, ...rest);
}
function createResponseClass() {
  var _isStream, _body, _a4;
  StreamingCompatibleResponse = (_a4 = class extends Response {
    constructor(body, init2) {
      let isStream = body instanceof ReadableStream;
      super(isStream ? null : body, init2);
      __privateAdd(this, _isStream, void 0);
      __privateAdd(this, _body, void 0);
      __privateSet(this, _isStream, isStream);
      __privateSet(this, _body, body);
    }
    get body() {
      return __privateGet(this, _body);
    }
    async text() {
      if (__privateGet(this, _isStream) && isNodeJS) {
        let decoder2 = new TextDecoder();
        let body = __privateGet(this, _body);
        let out = "";
        for await (let chunk2 of streamAsyncIterator(body)) {
          out += decoder2.decode(chunk2);
        }
        return out;
      }
      return super.text();
    }
    async arrayBuffer() {
      if (__privateGet(this, _isStream) && isNodeJS) {
        let body = __privateGet(this, _body);
        let chunks = [];
        let len = 0;
        for await (let chunk2 of streamAsyncIterator(body)) {
          chunks.push(chunk2);
          len += chunk2.length;
        }
        let ab = new Uint8Array(len);
        let offset = 0;
        for (const chunk2 of chunks) {
          ab.set(chunk2, offset);
          offset += chunk2.length;
        }
        return ab;
      }
      return super.arrayBuffer();
    }
    clone() {
      return new StreamingCompatibleResponse(__privateGet(this, _body), {
        status: this.status,
        statusText: this.statusText,
        headers: this.headers
      });
    }
  }, _isStream = new WeakMap(), _body = new WeakMap(), _a4);
  return StreamingCompatibleResponse;
}
async function renderPage$1(result, componentFactory, props, children, streaming, route) {
  var _a4, _b3;
  if (!isAstroComponentFactory(componentFactory)) {
    result._metadata.headInTree = ((_a4 = result.componentMetadata.get(componentFactory.moduleId)) == null ? void 0 : _a4.containsHead) ?? false;
    const pageProps = { ...props ?? {}, "server:root": true };
    const str = await renderComponentToString(
      result,
      componentFactory.name,
      componentFactory,
      pageProps,
      null,
      true,
      route
    );
    const bytes = encoder.encode(str);
    return new Response(bytes, {
      headers: new Headers([
        ["Content-Type", "text/html; charset=utf-8"],
        ["Content-Length", bytes.byteLength.toString()]
      ])
    });
  }
  result._metadata.headInTree = ((_b3 = result.componentMetadata.get(componentFactory.moduleId)) == null ? void 0 : _b3.containsHead) ?? false;
  let body;
  if (streaming) {
    body = await renderToReadableStream(result, componentFactory, props, children, true, route);
  } else {
    body = await renderToString(result, componentFactory, props, children, true, route);
  }
  if (body instanceof Response)
    return body;
  const init2 = result.response;
  const headers = new Headers(init2.headers);
  if (!streaming && typeof body === "string") {
    body = encoder.encode(body);
    headers.set("Content-Length", body.byteLength.toString());
  }
  const response = createResponse(body, { ...init2, headers });
  return response;
}
function spreadAttributes(values = {}, _name, { class: scopedClassName } = {}) {
  let output = "";
  if (scopedClassName) {
    if (typeof values.class !== "undefined") {
      values.class += ` ${scopedClassName}`;
    } else if (typeof values["class:list"] !== "undefined") {
      values["class:list"] = [values["class:list"], scopedClassName];
    } else {
      values.class = scopedClassName;
    }
  }
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, true);
  }
  return markHTMLString(output);
}
function isVNode(vnode) {
  return vnode && typeof vnode === "object" && vnode[AstroJSX];
}
function transformSlots(vnode) {
  if (typeof vnode.type === "string")
    return vnode;
  const slots = {};
  if (isVNode(vnode.props.children)) {
    const child = vnode.props.children;
    if (!isVNode(child))
      return;
    if (!("slot" in child.props))
      return;
    const name = toSlotName(child.props.slot);
    slots[name] = [child];
    slots[name]["$$slot"] = true;
    delete child.props.slot;
    delete vnode.props.children;
  }
  if (Array.isArray(vnode.props.children)) {
    vnode.props.children = vnode.props.children.map((child) => {
      if (!isVNode(child))
        return child;
      if (!("slot" in child.props))
        return child;
      const name = toSlotName(child.props.slot);
      if (Array.isArray(slots[name])) {
        slots[name].push(child);
      } else {
        slots[name] = [child];
        slots[name]["$$slot"] = true;
      }
      delete child.props.slot;
      return Empty;
    }).filter((v) => v !== Empty);
  }
  Object.assign(vnode.props, slots);
}
function markRawChildren(child) {
  if (typeof child === "string")
    return markHTMLString(child);
  if (Array.isArray(child))
    return child.map((c) => markRawChildren(c));
  return child;
}
function transformSetDirectives(vnode) {
  if (!("set:html" in vnode.props || "set:text" in vnode.props))
    return;
  if ("set:html" in vnode.props) {
    const children = markRawChildren(vnode.props["set:html"]);
    delete vnode.props["set:html"];
    Object.assign(vnode.props, { children });
    return;
  }
  if ("set:text" in vnode.props) {
    const children = vnode.props["set:text"];
    delete vnode.props["set:text"];
    Object.assign(vnode.props, { children });
    return;
  }
}
function createVNode(type, props) {
  const vnode = {
    [Renderer]: "astro:jsx",
    [AstroJSX]: true,
    type,
    props: props ?? {}
  };
  transformSetDirectives(vnode);
  transformSlots(vnode);
  return vnode;
}
async function check(Component, props, { default: children = null, ...slotted } = {}) {
  if (typeof Component !== "function")
    return false;
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  try {
    const result = await Component({ ...props, ...slots, children });
    return result[AstroJSX];
  } catch (e) {
    const error2 = e;
    if (Component[Symbol.for("mdx-component")]) {
      throw createFormattedError({
        message: error2.message,
        title: error2.name,
        hint: `This issue often occurs when your MDX component encounters runtime errors.`,
        name: error2.name,
        stack: error2.stack
      });
    }
  }
  return false;
}
async function renderToStaticMarkup(Component, props = {}, { default: children = null, ...slotted } = {}) {
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  const { result } = this;
  const html = await renderJSX(result, createVNode(Component, { ...props, ...slots, children }));
  return { html };
}
function createFormattedError({ message, name, stack, hint }) {
  const error2 = new Error(message);
  error2.name = name;
  error2.stack = stack;
  error2.hint = hint;
  return error2;
}
function attachToResponse(response, cookies) {
  Reflect.set(response, astroCookiesSymbol, cookies);
}
function getFromResponse(response) {
  let cookies = Reflect.get(response, astroCookiesSymbol);
  if (cookies != null) {
    return cookies;
  } else {
    return void 0;
  }
}
function* getSetCookiesFromResponse(response) {
  const cookies = getFromResponse(response);
  if (!cookies) {
    return [];
  }
  for (const headerValue of cookies.headers()) {
    yield headerValue;
  }
  return [];
}
function log(opts2, level, type, message) {
  const logLevel = opts2.level;
  const dest = opts2.dest;
  const event = {
    type,
    level,
    message
  };
  if (levels[logLevel] > levels[level]) {
    return;
  }
  dest.write(event);
}
function warn(opts2, type, message) {
  return log(opts2, "warn", type, message);
}
function error(opts2, type, message) {
  return log(opts2, "error", type, message);
}
function debug(...args) {
  if ("_astroGlobalDebug" in globalThis) {
    globalThis._astroGlobalDebug(...args);
  }
}
function routeIsRedirect(route) {
  return (route == null ? void 0 : route.type) === "redirect";
}
function redirectRouteGenerate(redirectRoute, data) {
  const routeData = redirectRoute.redirectRoute;
  const route = redirectRoute.redirect;
  if (typeof routeData !== "undefined") {
    return (routeData == null ? void 0 : routeData.generate(data)) || (routeData == null ? void 0 : routeData.pathname) || "/";
  } else if (typeof route === "string") {
    return route;
  } else if (typeof route === "undefined") {
    return "/";
  }
  return route.destination;
}
function redirectRouteStatus(redirectRoute, method = "GET") {
  const routeData = redirectRoute.redirectRoute;
  if (typeof (routeData == null ? void 0 : routeData.redirect) === "object") {
    return routeData.redirect.status;
  } else if (method !== "GET") {
    return 308;
  }
  return 301;
}
async function callMiddleware(logging, onRequest2, apiContext, responseFunction) {
  let nextCalled = false;
  let responseFunctionPromise = void 0;
  const next = async () => {
    nextCalled = true;
    responseFunctionPromise = responseFunction();
    return responseFunctionPromise;
  };
  let middlewarePromise = onRequest2(apiContext, next);
  return await Promise.resolve(middlewarePromise).then(async (value) => {
    if (isEndpointOutput(value)) {
      warn(
        logging,
        "middleware",
        `Using simple endpoints can cause unexpected issues in the chain of middleware functions.
It's strongly suggested to use full ${bold("Response")} objects.`
      );
    }
    if (nextCalled) {
      if (typeof value !== "undefined") {
        if (value instanceof Response === false) {
          throw new AstroError(MiddlewareNotAResponse);
        }
        return value;
      } else {
        if (responseFunctionPromise) {
          return responseFunctionPromise;
        } else {
          throw new AstroError(MiddlewareNotAResponse);
        }
      }
    } else if (typeof value === "undefined") {
      throw new AstroError(MiddlewareNoDataOrNextCalled);
    } else if (value instanceof Response === false) {
      throw new AstroError(MiddlewareNotAResponse);
    } else {
      return value;
    }
  });
}
function isEndpointOutput(endpointResult) {
  return !(endpointResult instanceof Response) && typeof endpointResult === "object" && typeof endpointResult.body === "string";
}
function createAPIContext({
  request,
  params,
  site,
  props,
  adapterName
}) {
  const context = {
    cookies: new AstroCookies(request),
    request,
    params,
    site: site ? new URL(site) : void 0,
    generator: `Astro v${ASTRO_VERSION}`,
    props,
    redirect(path, status) {
      return new Response(null, {
        status: status || 302,
        headers: {
          Location: path
        }
      });
    },
    url: new URL(request.url),
    get clientAddress() {
      if (!(clientAddressSymbol$1 in request)) {
        if (adapterName) {
          throw new AstroError({
            ...ClientAddressNotAvailable,
            message: ClientAddressNotAvailable.message(adapterName)
          });
        } else {
          throw new AstroError(StaticClientAddressNotAvailable);
        }
      }
      return Reflect.get(request, clientAddressSymbol$1);
    }
  };
  Object.defineProperty(context, "locals", {
    enumerable: true,
    get() {
      return Reflect.get(request, clientLocalsSymbol$2);
    },
    set(val) {
      if (typeof val !== "object") {
        throw new AstroError(LocalsNotAnObject);
      } else {
        Reflect.set(request, clientLocalsSymbol$2, val);
      }
    }
  });
  return context;
}
async function callEndpoint(mod, env, ctx, onRequest2) {
  var _a4;
  const context = createAPIContext({
    request: ctx.request,
    params: ctx.params,
    props: ctx.props,
    site: env.site,
    adapterName: env.adapterName
  });
  let response;
  if (onRequest2) {
    response = await callMiddleware(
      env.logging,
      onRequest2,
      context,
      async () => {
        return await renderEndpoint(mod, context, env.ssr);
      }
    );
  } else {
    response = await renderEndpoint(mod, context, env.ssr);
  }
  if (response instanceof Response) {
    attachToResponse(response, context.cookies);
    return {
      type: "response",
      response
    };
  }
  if (env.ssr && !((_a4 = ctx.route) == null ? void 0 : _a4.prerender)) {
    if (response.hasOwnProperty("headers")) {
      warn(
        env.logging,
        "ssr",
        "Setting headers is not supported when returning an object. Please return an instance of Response. See https://docs.astro.build/en/core-concepts/endpoints/#server-endpoints-api-routes for more information."
      );
    }
    if (response.encoding) {
      warn(
        env.logging,
        "ssr",
        "`encoding` is ignored in SSR. To return a charset other than UTF-8, please return an instance of Response. See https://docs.astro.build/en/core-concepts/endpoints/#server-endpoints-api-routes for more information."
      );
    }
  }
  return {
    ...response,
    type: "simple",
    cookies: context.cookies
  };
}
function getFunctionExpression(slot) {
  var _a4;
  if (!slot)
    return;
  if (((_a4 = slot.expressions) == null ? void 0 : _a4.length) !== 1)
    return;
  return slot.expressions[0];
}
function createResult(args) {
  const { markdown, params, request, resolve, locals } = args;
  const url3 = new URL(request.url);
  const headers = new Headers();
  headers.set("Content-Type", "text/html");
  const response = {
    status: args.status,
    statusText: "OK",
    headers
  };
  Object.defineProperty(response, "headers", {
    value: response.headers,
    enumerable: true,
    writable: false
  });
  let cookies = args.cookies;
  const result = {
    styles: args.styles ?? /* @__PURE__ */ new Set(),
    scripts: args.scripts ?? /* @__PURE__ */ new Set(),
    links: args.links ?? /* @__PURE__ */ new Set(),
    componentMetadata: args.componentMetadata ?? /* @__PURE__ */ new Map(),
    renderers: args.renderers,
    clientDirectives: args.clientDirectives,
    compressHTML: args.compressHTML,
    pathname: args.pathname,
    cookies,
    /** This function returns the `Astro` faux-global */
    createAstro(astroGlobal, props, slots) {
      const astroSlots = new Slots(result, slots, args.logging);
      const Astro = {
        // @ts-expect-error
        __proto__: astroGlobal,
        get clientAddress() {
          if (!(clientAddressSymbol in request)) {
            if (args.adapterName) {
              throw new AstroError({
                ...ClientAddressNotAvailable,
                message: ClientAddressNotAvailable.message(args.adapterName)
              });
            } else {
              throw new AstroError(StaticClientAddressNotAvailable);
            }
          }
          return Reflect.get(request, clientAddressSymbol);
        },
        get cookies() {
          if (cookies) {
            return cookies;
          }
          cookies = new AstroCookies(request);
          result.cookies = cookies;
          return cookies;
        },
        params,
        props,
        locals,
        request,
        url: url3,
        redirect(path, status) {
          if (request[responseSentSymbol$1]) {
            throw new AstroError({
              ...ResponseSentError
            });
          }
          return new Response(null, {
            status: status || 302,
            headers: {
              Location: path
            }
          });
        },
        response,
        slots: astroSlots
      };
      Object.defineProperty(Astro, "__renderMarkdown", {
        // Ensure this API is not exposed to users
        enumerable: false,
        writable: false,
        // TODO: Remove this hole "Deno" logic once our plugin gets Deno support
        value: async function(content, opts2) {
          if (typeof Deno !== "undefined") {
            throw new Error("Markdown is not supported in Deno SSR");
          }
          if (!renderMarkdown) {
            let astroRemark = "@astrojs/";
            astroRemark += "markdown-remark";
            renderMarkdown = (await import(astroRemark)).renderMarkdown;
          }
          const { code } = await renderMarkdown(content, { ...markdown, ...opts2 ?? {} });
          return code;
        }
      });
      return Astro;
    },
    resolve,
    response,
    _metadata: {
      hasHydrationScript: false,
      hasRenderedHead: false,
      hasDirectives: /* @__PURE__ */ new Set(),
      headInTree: false,
      extraHead: [],
      propagators: /* @__PURE__ */ new Map()
    }
  };
  return result;
}
async function renderPage({ mod, renderContext, env, cookies }) {
  if (routeIsRedirect(renderContext.route)) {
    return new Response(null, {
      status: redirectRouteStatus(renderContext.route, renderContext.request.method),
      headers: {
        location: redirectRouteGenerate(renderContext.route, renderContext.params)
      }
    });
  }
  const Component = mod.default;
  if (!Component)
    throw new Error(`Expected an exported Astro component but received typeof ${typeof Component}`);
  const result = createResult({
    adapterName: env.adapterName,
    links: renderContext.links,
    styles: renderContext.styles,
    logging: env.logging,
    markdown: env.markdown,
    params: renderContext.params,
    pathname: renderContext.pathname,
    componentMetadata: renderContext.componentMetadata,
    resolve: env.resolve,
    renderers: env.renderers,
    clientDirectives: env.clientDirectives,
    compressHTML: env.compressHTML,
    request: renderContext.request,
    site: env.site,
    scripts: renderContext.scripts,
    ssr: env.ssr,
    status: renderContext.status ?? 200,
    cookies,
    locals: renderContext.locals ?? {}
  });
  if (typeof mod.components === "object") {
    Object.assign(renderContext.props, { components: mod.components });
  }
  let response = await renderPage$1(
    result,
    Component,
    renderContext.props,
    null,
    env.streaming,
    renderContext.route
  );
  if (result.cookies) {
    attachToResponse(response, result.cookies);
  }
  return response;
}
async function tryRenderRoute(routeType, renderContext, env, mod, onRequest2) {
  const apiContext = createAPIContext({
    request: renderContext.request,
    params: renderContext.params,
    props: renderContext.props,
    site: env.site,
    adapterName: env.adapterName
  });
  switch (routeType) {
    case "page":
    case "redirect": {
      if (onRequest2) {
        return await callMiddleware(
          env.logging,
          onRequest2,
          apiContext,
          () => {
            return renderPage({
              mod,
              renderContext,
              env,
              cookies: apiContext.cookies
            });
          }
        );
      } else {
        return await renderPage({
          mod,
          renderContext,
          env,
          cookies: apiContext.cookies
        });
      }
    }
    case "endpoint": {
      const result = await callEndpoint(
        mod,
        env,
        renderContext,
        onRequest2
      );
      return result;
    }
    default:
      throw new Error(`Couldn't find route of type [${routeType}]`);
  }
}
function isResponse(result, routeType) {
  return result instanceof Response && (routeType === "page" || routeType === "redirect");
}
function validateGetStaticPathsParameter([key, value], route) {
  if (!VALID_PARAM_TYPES.includes(typeof value)) {
    throw new AstroError({
      ...GetStaticPathsInvalidRouteParam,
      message: GetStaticPathsInvalidRouteParam.message(key, value, typeof value),
      location: {
        file: route
      }
    });
  }
}
function validateDynamicRouteModule(mod, {
  ssr,
  route
}) {
  if ((!ssr || route.prerender) && !mod.getStaticPaths) {
    throw new AstroError({
      ...GetStaticPathsRequired,
      location: { file: route.component }
    });
  }
}
function validateGetStaticPathsResult(result, logging, route) {
  if (!Array.isArray(result)) {
    throw new AstroError({
      ...InvalidGetStaticPathsReturn,
      message: InvalidGetStaticPathsReturn.message(typeof result),
      location: {
        file: route.component
      }
    });
  }
  result.forEach((pathObject) => {
    if (pathObject.params === void 0 || pathObject.params === null || pathObject.params && Object.keys(pathObject.params).length === 0) {
      throw new AstroError({
        ...GetStaticPathsExpectedParams,
        location: {
          file: route.component
        }
      });
    }
    if (typeof pathObject.params !== "object") {
      throw new AstroError({
        ...InvalidGetStaticPathParam,
        message: InvalidGetStaticPathParam.message(typeof pathObject.params),
        location: {
          file: route.component
        }
      });
    }
    for (const [key, val] of Object.entries(pathObject.params)) {
      if (!(typeof val === "undefined" || typeof val === "string" || typeof val === "number")) {
        warn(
          logging,
          "getStaticPaths",
          `invalid path param: ${key}. A string, number or undefined value was expected, but got \`${JSON.stringify(
            val
          )}\`.`
        );
      }
      if (typeof val === "string" && val === "") {
        warn(
          logging,
          "getStaticPaths",
          `invalid path param: ${key}. \`undefined\` expected for an optional param, but got empty string.`
        );
      }
    }
  });
}
function getParams(array) {
  const fn = (match) => {
    const params = {};
    array.forEach((key, i2) => {
      if (key.startsWith("...")) {
        params[key.slice(3)] = match[i2 + 1] ? decodeURIComponent(match[i2 + 1]) : void 0;
      } else {
        params[key] = decodeURIComponent(match[i2 + 1]);
      }
    });
    return params;
  };
  return fn;
}
function stringifyParams(params, route) {
  const validatedParams = Object.entries(params).reduce((acc, next) => {
    validateGetStaticPathsParameter(next, route.component);
    const [key, value] = next;
    acc[key] = value == null ? void 0 : value.toString();
    return acc;
  }, {});
  return JSON.stringify(route.generate(validatedParams));
}
function generatePaginateFunction(routeMatch) {
  return function paginateUtility(data, args = {}) {
    let { pageSize: _pageSize, params: _params, props: _props } = args;
    const pageSize = _pageSize || 10;
    const paramName = "page";
    const additionalParams = _params || {};
    const additionalProps = _props || {};
    let includesFirstPageNumber;
    if (routeMatch.params.includes(`...${paramName}`)) {
      includesFirstPageNumber = false;
    } else if (routeMatch.params.includes(`${paramName}`)) {
      includesFirstPageNumber = true;
    } else {
      throw new AstroError({
        ...PageNumberParamNotFound,
        message: PageNumberParamNotFound.message(paramName)
      });
    }
    const lastPage = Math.max(1, Math.ceil(data.length / pageSize));
    const result = [...Array(lastPage).keys()].map((num) => {
      const pageNum = num + 1;
      const start = pageSize === Infinity ? 0 : (pageNum - 1) * pageSize;
      const end = Math.min(start + pageSize, data.length);
      const params = {
        ...additionalParams,
        [paramName]: includesFirstPageNumber || pageNum > 1 ? String(pageNum) : void 0
      };
      const current = correctIndexRoute(routeMatch.generate({ ...params }));
      const next = pageNum === lastPage ? void 0 : correctIndexRoute(routeMatch.generate({ ...params, page: String(pageNum + 1) }));
      const prev = pageNum === 1 ? void 0 : correctIndexRoute(
        routeMatch.generate({
          ...params,
          page: !includesFirstPageNumber && pageNum - 1 === 1 ? void 0 : String(pageNum - 1)
        })
      );
      return {
        params,
        props: {
          ...additionalProps,
          page: {
            data: data.slice(start, end),
            start,
            end: end - 1,
            size: pageSize,
            total: data.length,
            currentPage: pageNum,
            lastPage,
            url: { current, next, prev }
          }
        }
      };
    });
    return result;
  };
}
function correctIndexRoute(route) {
  if (route === "") {
    return "/";
  }
  return route;
}
async function callGetStaticPaths({
  mod,
  route,
  routeCache,
  isValidate,
  logging,
  ssr
}) {
  const cached = routeCache.get(route);
  if (cached == null ? void 0 : cached.staticPaths)
    return cached.staticPaths;
  validateDynamicRouteModule(mod, { ssr, route });
  if (ssr && !route.prerender) {
    const entry = Object.assign([], { keyed: /* @__PURE__ */ new Map() });
    routeCache.set(route, { ...cached, staticPaths: entry });
    return entry;
  }
  if (!mod.getStaticPaths) {
    throw new Error("Unexpected Error.");
  }
  let staticPaths = [];
  staticPaths = await mod.getStaticPaths({
    paginate: generatePaginateFunction(route),
    rss() {
      throw new AstroError(GetStaticPathsRemovedRSSHelper);
    }
  });
  if (Array.isArray(staticPaths)) {
    staticPaths = staticPaths.flat();
  }
  if (isValidate) {
    validateGetStaticPathsResult(staticPaths, logging, route);
  }
  const keyedStaticPaths = staticPaths;
  keyedStaticPaths.keyed = /* @__PURE__ */ new Map();
  for (const sp of keyedStaticPaths) {
    const paramsKey = stringifyParams(sp.params, route);
    keyedStaticPaths.keyed.set(paramsKey, sp);
  }
  routeCache.set(route, { ...cached, staticPaths: keyedStaticPaths });
  return keyedStaticPaths;
}
function findPathItemByKey(staticPaths, params, route) {
  const paramsKey = stringifyParams(params, route);
  const matchedStaticPath = staticPaths.keyed.get(paramsKey);
  if (matchedStaticPath) {
    return matchedStaticPath;
  }
  debug("findPathItemByKey", `Unexpected cache miss looking for ${paramsKey}`);
}
async function getParamsAndProps(opts2) {
  const { logging, mod, route, routeCache, pathname, ssr } = opts2;
  if (!route || route.pathname) {
    return [{}, {}];
  }
  const params = getRouteParams(route, pathname) ?? {};
  validatePrerenderEndpointCollision(route, mod, params);
  const staticPaths = await callGetStaticPaths({
    mod,
    route,
    routeCache,
    isValidate: true,
    logging,
    ssr
  });
  const matchedStaticPath = findPathItemByKey(staticPaths, params, route);
  if (!matchedStaticPath && (ssr ? route.prerender : true)) {
    throw new AstroError({
      ...NoMatchingStaticPathFound,
      message: NoMatchingStaticPathFound.message(pathname),
      hint: NoMatchingStaticPathFound.hint([route.component])
    });
  }
  const props = (matchedStaticPath == null ? void 0 : matchedStaticPath.props) ? { ...matchedStaticPath.props } : {};
  return [params, props];
}
function getRouteParams(route, pathname) {
  if (route.params.length) {
    const paramsMatch = route.pattern.exec(decodeURIComponent(pathname));
    if (paramsMatch) {
      return getParams(route.params)(paramsMatch);
    }
  }
}
function validatePrerenderEndpointCollision(route, mod, params) {
  if (route.type === "endpoint" && mod.getStaticPaths) {
    const lastSegment = route.segments[route.segments.length - 1];
    const paramValues = Object.values(params);
    const lastParam = paramValues[paramValues.length - 1];
    if (lastSegment.length === 1 && lastSegment[0].dynamic && lastParam === void 0) {
      throw new AstroError({
        ...PrerenderDynamicEndpointPathCollide,
        message: PrerenderDynamicEndpointPathCollide.message(route.route),
        hint: PrerenderDynamicEndpointPathCollide.hint(route.component),
        location: {
          file: route.component
        }
      });
    }
  }
}
async function createRenderContext(options) {
  const request = options.request;
  const pathname = options.pathname ?? new URL(request.url).pathname;
  const [params, props] = await getParamsAndProps({
    mod: options.mod,
    route: options.route,
    routeCache: options.env.routeCache,
    pathname,
    logging: options.env.logging,
    ssr: options.env.ssr
  });
  const context = {
    ...options,
    pathname,
    params,
    props
  };
  Object.defineProperty(context, "locals", {
    enumerable: true,
    get() {
      return Reflect.get(request, clientLocalsSymbol$1);
    },
    set(val) {
      if (typeof val !== "object") {
        throw new AstroError(LocalsNotAnObject);
      } else {
        Reflect.set(request, clientLocalsSymbol$1, val);
      }
    }
  });
  return context;
}
function createEnvironment(options) {
  return options;
}
function createAssetLink(href, base, assetsPrefix) {
  if (assetsPrefix) {
    return joinPaths(assetsPrefix, slash(href));
  } else if (base) {
    return prependForwardSlash(joinPaths(base, slash(href)));
  } else {
    return href;
  }
}
function createStylesheetElement(stylesheet, base, assetsPrefix) {
  if (stylesheet.type === "inline") {
    return {
      props: {
        type: "text/css"
      },
      children: stylesheet.content
    };
  } else {
    return {
      props: {
        rel: "stylesheet",
        href: createAssetLink(stylesheet.src, base, assetsPrefix)
      },
      children: ""
    };
  }
}
function createStylesheetElementSet(stylesheets, base, assetsPrefix) {
  return new Set(stylesheets.map((s2) => createStylesheetElement(s2, base, assetsPrefix)));
}
function createModuleScriptElement(script, base, assetsPrefix) {
  if (script.type === "external") {
    return createModuleScriptElementWithSrc(script.value, base, assetsPrefix);
  } else {
    return {
      props: {
        type: "module"
      },
      children: script.value
    };
  }
}
function createModuleScriptElementWithSrc(src, base, assetsPrefix) {
  return {
    props: {
      type: "module",
      src: createAssetLink(src, base, assetsPrefix)
    },
    children: ""
  };
}
function matchRoute(pathname, manifest) {
  return manifest.routes.find((route) => route.pattern.test(decodeURI(pathname)));
}
function getRouteGenerator(segments, addTrailingSlash) {
  const template = segments.map((segment) => {
    return "/" + segment.map((part) => {
      if (part.spread) {
        return `:${part.content.slice(3)}(.*)?`;
      } else if (part.dynamic) {
        return `:${part.content}`;
      } else {
        return part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
    }).join("");
  }).join("");
  let trailing = "";
  if (addTrailingSlash === "always" && segments.length) {
    trailing = "/";
  }
  const toPath = compile(template + trailing);
  return toPath;
}
function deserializeRouteData(rawRouteData) {
  return {
    route: rawRouteData.route,
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments,
    prerender: rawRouteData.prerender,
    redirect: rawRouteData.redirect,
    redirectRoute: rawRouteData.redirectRoute ? deserializeRouteData(rawRouteData.redirectRoute) : void 0
  };
}
function deserializeManifest(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push({
      ...serializedRoute,
      routeData: deserializeRouteData(serializedRoute.routeData)
    });
    const route = serializedRoute;
    route.routeData = deserializeRouteData(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  const componentMetadata = new Map(serializedManifest.componentMetadata);
  const clientDirectives = new Map(serializedManifest.clientDirectives);
  return {
    ...serializedManifest,
    assets,
    componentMetadata,
    clientDirectives,
    routes
  };
}
var import_cookie, import_mime, ClientAddressNotAvailable, StaticClientAddressNotAvailable, NoMatchingStaticPathFound, OnlyResponseCanBeReturned, MissingMediaQueryDirective, NoMatchingRenderer, NoClientEntrypoint, NoClientOnlyHint, InvalidGetStaticPathParam, InvalidGetStaticPathsReturn, GetStaticPathsRemovedRSSHelper, GetStaticPathsExpectedParams, GetStaticPathsInvalidRouteParam, GetStaticPathsRequired, ReservedSlotName, InvalidComponentArgs, PageNumberParamNotFound, PrerenderDynamicEndpointPathCollide, ResponseSentError, MiddlewareNoDataOrNextCalled, MiddlewareNotAResponse, LocalsNotAnObject, AstroGlobUsedOutside, AstroGlobNoMatch, AstroError, ASTRO_VERSION, escapeHTML, HTMLBytes, HTMLString, markHTMLString, RenderInstructionSymbol, PROP_TYPE, transitionDirectivesToCopyOnIsland, dictionary, binary, headAndContentSym, astro_island_prebuilt_default, ISLAND_STYLES, voidElementNames, htmlBooleanAttributes, htmlEnumAttributes, svgEnumAttributes, STATIC_DIRECTIVES, toIdent, toAttributeString, kebab, toStyleString, uniqueElements, slotString, SlotString, Fragment, Renderer, encoder, decoder, _a$1, astroComponentInstanceSym, AstroComponentInstance, _a, renderTemplateResultSym, RenderTemplateResult, needsHeadRenderingSymbol, rendererAliases, ASTRO_SLOT_EXP, ASTRO_STATIC_SLOT_EXP, ClientOnlyPlaceholder, Skip, originalConsoleError, consoleFilterRefs, isNodeJS, StreamingCompatibleResponse, createResponse, AstroJSX, Empty, toSlotName, slotName, server_default, DELETED_EXPIRATION, DELETED_VALUE, responseSentSymbol$2, AstroCookie, _request, _requestValues, _outgoing, _ensureParsed, ensureParsed_fn, _ensureOutgoingMap, ensureOutgoingMap_fn, _parse, parse_fn, AstroCookies, astroCookiesSymbol, dateTimeFormat, levels, lastMessage, lastMessageCount, consoleLogDestination, RedirectComponentInstance, RedirectSinglePageBuiltModule, clientAddressSymbol$1, clientLocalsSymbol$2, clientAddressSymbol, responseSentSymbol$1, _result, _slots, _loggingOpts, Slots, renderMarkdown, VALID_PARAM_TYPES, RouteCache, clientLocalsSymbol$1, clientLocalsSymbol, responseSentSymbol, STATUS_CODES, _env, _manifest, _manifestData, _routeDataToRouteInfo, _encoder, _logging, _baseWithoutTrailingSlash, _createEnvironment, createEnvironment_fn, _createRenderContext, createRenderContext_fn, _renderError, renderError_fn, _mergeResponses, mergeResponses_fn, _getDefaultStatusCode, getDefaultStatusCode_fn, _getModuleForRoute, getModuleForRoute_fn, App;
var init_astro_0fa599e7 = __esm({
  "dist/$server_build/chunks/astro.0fa599e7.mjs"() {
    import_cookie = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    init_dist();
    import_mime = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    ClientAddressNotAvailable = {
      name: "ClientAddressNotAvailable",
      title: "`Astro.clientAddress` is not available in current adapter.",
      message: (adapterName) => `\`Astro.clientAddress\` is not available in the \`${adapterName}\` adapter. File an issue with the adapter to add support.`
    };
    StaticClientAddressNotAvailable = {
      name: "StaticClientAddressNotAvailable",
      title: "`Astro.clientAddress` is not available in static mode.",
      message: "`Astro.clientAddress` is only available when using `output: 'server'` or `output: 'hybrid'`. Update your Astro config if you need SSR features.",
      hint: "See https://docs.astro.build/en/guides/server-side-rendering/#enabling-ssr-in-your-project for more information on how to enable SSR."
    };
    NoMatchingStaticPathFound = {
      name: "NoMatchingStaticPathFound",
      title: "No static path found for requested path.",
      message: (pathName) => `A \`getStaticPaths()\` route pattern was matched, but no matching static path was found for requested path \`${pathName}\`.`,
      hint: (possibleRoutes) => `Possible dynamic routes being matched: ${possibleRoutes.join(", ")}.`
    };
    OnlyResponseCanBeReturned = {
      name: "OnlyResponseCanBeReturned",
      title: "Invalid type returned by Astro page.",
      message: (route, returnedValue) => `Route \`${route ? route : ""}\` returned a \`${returnedValue}\`. Only a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) can be returned from Astro files.`,
      hint: "See https://docs.astro.build/en/guides/server-side-rendering/#response for more information."
    };
    MissingMediaQueryDirective = {
      name: "MissingMediaQueryDirective",
      title: "Missing value for `client:media` directive.",
      message: 'Media query not provided for `client:media` directive. A media query similar to `client:media="(max-width: 600px)"` must be provided'
    };
    NoMatchingRenderer = {
      name: "NoMatchingRenderer",
      title: "No matching renderer found.",
      message: (componentName, componentExtension, plural, validRenderersCount) => `Unable to render \`${componentName}\`.

${validRenderersCount > 0 ? `There ${plural ? "are" : "is"} ${validRenderersCount} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render \`${componentName}\`.` : `No valid renderer was found ${componentExtension ? `for the \`.${componentExtension}\` file extension.` : `for this file extension.`}`}`,
      hint: (probableRenderers) => `Did you mean to enable the ${probableRenderers} integration?

See https://docs.astro.build/en/core-concepts/framework-components/ for more information on how to install and configure integrations.`
    };
    NoClientEntrypoint = {
      name: "NoClientEntrypoint",
      title: "No client entrypoint specified in renderer.",
      message: (componentName, clientDirective, rendererName) => `\`${componentName}\` component has a \`client:${clientDirective}\` directive, but no client entrypoint was provided by \`${rendererName}\`.`,
      hint: "See https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option for more information on how to configure your renderer."
    };
    NoClientOnlyHint = {
      name: "NoClientOnlyHint",
      title: "Missing hint on client:only directive.",
      message: (componentName) => `Unable to render \`${componentName}\`. When using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.`,
      hint: (probableRenderers) => `Did you mean to pass \`client:only="${probableRenderers}"\`? See https://docs.astro.build/en/reference/directives-reference/#clientonly for more information on client:only`
    };
    InvalidGetStaticPathParam = {
      name: "InvalidGetStaticPathParam",
      title: "Invalid value returned by a `getStaticPaths` path.",
      message: (paramType) => `Invalid params given to \`getStaticPaths\` path. Expected an \`object\`, got \`${paramType}\``,
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    InvalidGetStaticPathsReturn = {
      name: "InvalidGetStaticPathsReturn",
      title: "Invalid value returned by getStaticPaths.",
      message: (returnType) => `Invalid type returned by \`getStaticPaths\`. Expected an \`array\`, got \`${returnType}\``,
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsRemovedRSSHelper = {
      name: "GetStaticPathsRemovedRSSHelper",
      title: "getStaticPaths RSS helper is not available anymore.",
      message: "The RSS helper has been removed from `getStaticPaths`. Try the new @astrojs/rss package instead.",
      hint: "See https://docs.astro.build/en/guides/rss/ for more information."
    };
    GetStaticPathsExpectedParams = {
      name: "GetStaticPathsExpectedParams",
      title: "Missing params property on `getStaticPaths` route.",
      message: "Missing or empty required `params` property on `getStaticPaths` route.",
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsInvalidRouteParam = {
      name: "GetStaticPathsInvalidRouteParam",
      title: "Invalid value for `getStaticPaths` route parameter.",
      message: (key, value, valueType) => `Invalid getStaticPaths route parameter for \`${key}\`. Expected undefined, a string or a number, received \`${valueType}\` (\`${value}\`)`,
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsRequired = {
      name: "GetStaticPathsRequired",
      title: "`getStaticPaths()` function required for dynamic routes.",
      message: "`getStaticPaths()` function is required for dynamic routes. Make sure that you `export` a `getStaticPaths` function from your dynamic route.",
      hint: `See https://docs.astro.build/en/core-concepts/routing/#dynamic-routes for more information on dynamic routes.

Alternatively, set \`output: "server"\` or \`output: "hybrid"\` in your Astro config file to switch to a non-static server build. This error can also occur if using \`export const prerender = true;\`.
See https://docs.astro.build/en/guides/server-side-rendering/ for more information on non-static rendering.`
    };
    ReservedSlotName = {
      name: "ReservedSlotName",
      title: "Invalid slot name.",
      message: (slotName3) => `Unable to create a slot named \`${slotName3}\`. \`${slotName3}\` is a reserved slot name. Please update the name of this slot.`
    };
    InvalidComponentArgs = {
      name: "InvalidComponentArgs",
      title: "Invalid component arguments.",
      message: (name) => `Invalid arguments passed to${name ? ` <${name}>` : ""} component.`,
      hint: "Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."
    };
    PageNumberParamNotFound = {
      name: "PageNumberParamNotFound",
      title: "Page number param not found.",
      message: (paramName) => `[paginate()] page number param \`${paramName}\` not found in your filepath.`,
      hint: "Rename your file to `[page].astro` or `[...page].astro`."
    };
    PrerenderDynamicEndpointPathCollide = {
      name: "PrerenderDynamicEndpointPathCollide",
      title: "Prerendered dynamic endpoint has path collision.",
      message: (pathname) => `Could not render \`${pathname}\` with an \`undefined\` param as the generated path will collide during prerendering. Prevent passing \`undefined\` as \`params\` for the endpoint's \`getStaticPaths()\` function, or add an additional extension to the endpoint's filename.`,
      hint: (filename) => `Rename \`${filename}\` to \`${filename.replace(/\.(js|ts)/, (m) => `.json` + m)}\``
    };
    ResponseSentError = {
      name: "ResponseSentError",
      title: "Unable to set response.",
      message: "The response has already been sent to the browser and cannot be altered."
    };
    MiddlewareNoDataOrNextCalled = {
      name: "MiddlewareNoDataOrNextCalled",
      title: "The middleware didn't return a response or call `next`.",
      message: "The middleware needs to either return a `Response` object or call the `next` function."
    };
    MiddlewareNotAResponse = {
      name: "MiddlewareNotAResponse",
      title: "The middleware returned something that is not a `Response` object.",
      message: "Any data returned from middleware must be a valid `Response` object."
    };
    LocalsNotAnObject = {
      name: "LocalsNotAnObject",
      title: "Value assigned to `locals` is not accepted.",
      message: "`locals` can only be assigned to an object. Other values like numbers, strings, etc. are not accepted.",
      hint: "If you tried to remove some information from the `locals` object, try to use `delete` or set the property to `undefined`."
    };
    AstroGlobUsedOutside = {
      name: "AstroGlobUsedOutside",
      title: "Astro.glob() used outside of an Astro file.",
      message: (globStr) => `\`Astro.glob(${globStr})\` can only be used in \`.astro\` files. \`import.meta.glob(${globStr})\` can be used instead to achieve a similar result.`,
      hint: "See Vite's documentation on `import.meta.glob` for more information: https://vitejs.dev/guide/features.html#glob-import"
    };
    AstroGlobNoMatch = {
      name: "AstroGlobNoMatch",
      title: "Astro.glob() did not match any files.",
      message: (globStr) => `\`Astro.glob(${globStr})\` did not return any matching files. Check the pattern for typos.`
    };
    AstroError = class extends Error {
      constructor(props, ...params) {
        super(...params);
        this.type = "AstroError";
        const { name, title, message, stack, location, hint, frame } = props;
        this.title = title;
        this.name = name;
        if (message)
          this.message = message;
        this.stack = stack ? stack : this.stack;
        this.loc = location;
        this.hint = hint;
        this.frame = frame;
      }
      setLocation(location) {
        this.loc = location;
      }
      setName(name) {
        this.name = name;
      }
      setMessage(message) {
        this.message = message;
      }
      setHint(hint) {
        this.hint = hint;
      }
      setFrame(source, location) {
        this.frame = codeFrame(source, location);
      }
      static is(err) {
        return err.type === "AstroError";
      }
    };
    ASTRO_VERSION = "2.10.12";
    escapeHTML = escape;
    HTMLBytes = class extends Uint8Array {
    };
    Object.defineProperty(HTMLBytes.prototype, Symbol.toStringTag, {
      get() {
        return "HTMLBytes";
      }
    });
    HTMLString = class extends String {
      get [Symbol.toStringTag]() {
        return "HTMLString";
      }
    };
    markHTMLString = (value) => {
      if (value instanceof HTMLString) {
        return value;
      }
      if (typeof value === "string") {
        return new HTMLString(value);
      }
      return value;
    };
    RenderInstructionSymbol = Symbol.for("astro:render");
    PROP_TYPE = {
      Value: 0,
      JSON: 1,
      // Actually means Array
      RegExp: 2,
      Date: 3,
      Map: 4,
      Set: 5,
      BigInt: 6,
      URL: 7,
      Uint8Array: 8,
      Uint16Array: 9,
      Uint32Array: 10
    };
    transitionDirectivesToCopyOnIsland = Object.freeze([
      "data-astro-transition-scope",
      "data-astro-transition-persist"
    ]);
    dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
    binary = dictionary.length;
    headAndContentSym = Symbol.for("astro.headAndContent");
    astro_island_prebuilt_default = `(()=>{var d;{let p={0:t=>u(t),1:t=>l(t),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(l(t)),5:t=>new Set(l(t)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(t),9:t=>new Uint16Array(t),10:t=>new Uint32Array(t)},h=t=>{let[e,n]=t;return e in p?p[e](n):void 0},l=t=>t.map(h),u=t=>typeof t!="object"||t===null?t:Object.fromEntries(Object.entries(t).map(([e,n])=>[e,h(n)]));customElements.get("astro-island")||customElements.define("astro-island",(d=class extends HTMLElement{constructor(){super(...arguments);this.hydrate=async()=>{var i;if(!this.hydrator||!this.isConnected)return;let e=(i=this.parentElement)==null?void 0:i.closest("astro-island[ssr]");if(e){e.addEventListener("astro:hydrate",this.hydrate,{once:!0});return}let n=this.querySelectorAll("astro-slot"),o={},a=this.querySelectorAll("template[data-astro-template]");for(let r of a){let s=r.closest(this.tagName);s!=null&&s.isSameNode(this)&&(o[r.getAttribute("data-astro-template")||"default"]=r.innerHTML,r.remove())}for(let r of n){let s=r.closest(this.tagName);s!=null&&s.isSameNode(this)&&(o[r.getAttribute("name")||"default"]=r.innerHTML)}let c;try{c=this.hasAttribute("props")?u(JSON.parse(this.getAttribute("props"))):{}}catch(r){let s=this.getAttribute("component-url")||"<unknown>",y=this.getAttribute("component-export");throw y&&(s+=\` (export \${y})\`),console.error(\`[hydrate] Error parsing props for component \${s}\`,this.getAttribute("props"),r),r}await this.hydrator(this)(this.Component,c,o,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),this.dispatchEvent(new CustomEvent("astro:hydrate"))}}connectedCallback(){!this.hasAttribute("await-children")||this.firstChild?this.childrenConnectedCallback():new MutationObserver((e,n)=>{n.disconnect(),setTimeout(()=>this.childrenConnectedCallback(),0)}).observe(this,{childList:!0})}async childrenConnectedCallback(){let e=this.getAttribute("before-hydration-url");e&&await import(e),this.start()}start(){let e=JSON.parse(this.getAttribute("opts")),n=this.getAttribute("client");if(Astro[n]===void 0){window.addEventListener(\`astro:\${n}\`,()=>this.start(),{once:!0});return}Astro[n](async()=>{let o=this.getAttribute("renderer-url"),[a,{default:c}]=await Promise.all([import(this.getAttribute("component-url")),o?import(o):()=>()=>{}]),i=this.getAttribute("component-export")||"default";if(!i.includes("."))this.Component=a[i];else{this.Component=a;for(let r of i.split("."))this.Component=this.Component[r]}return this.hydrator=c,this.hydrate},e,this)}attributeChangedCallback(){this.hydrate()}},d.observedAttributes=["props"],d))}})();`;
    ISLAND_STYLES = `<style>astro-island,astro-slot,astro-static-slot{display:contents}</style>`;
    voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
    htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;
    svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
    STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
    toIdent = (k2) => k2.trim().replace(/(?:(?!^)\b\w|\s+|[^\w]+)/g, (match, index) => {
      if (/[^\w]|\s/.test(match))
        return "";
      return index === 0 ? match : match.toUpperCase();
    });
    toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
    kebab = (k2) => k2.toLowerCase() === k2 ? k2 : k2.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
    toStyleString = (obj) => Object.entries(obj).map(([k2, v]) => {
      if (k2[0] !== "-" && k2[1] !== "-")
        return `${kebab(k2)}:${v}`;
      if (kebab(k2) !== k2)
        return `${kebab(k2)}:var(${k2});${k2}:${v}`;
      return `${k2}:${v}`;
    }).join(";");
    uniqueElements = (item, index, all) => {
      const props = JSON.stringify(item.props);
      const children = item.children;
      return index === all.findIndex((i2) => JSON.stringify(i2.props) === props && i2.children == children);
    };
    slotString = Symbol.for("astro:slot-string");
    SlotString = class extends HTMLString {
      constructor(content, instructions) {
        super(content);
        this.instructions = instructions;
        this[slotString] = true;
      }
    };
    Fragment = Symbol.for("astro:fragment");
    Renderer = Symbol.for("astro:renderer");
    encoder = new TextEncoder();
    decoder = new TextDecoder();
    astroComponentInstanceSym = Symbol.for("astro.componentInstance");
    AstroComponentInstance = class {
      constructor(result, props, slots, factory) {
        this[_a$1] = true;
        this.result = result;
        this.props = props;
        this.factory = factory;
        this.slotValues = {};
        for (const name in slots) {
          const value = slots[name](result);
          this.slotValues[name] = () => value;
        }
      }
      async init(result) {
        if (this.returnValue !== void 0)
          return this.returnValue;
        this.returnValue = this.factory(result, this.props, this.slotValues);
        return this.returnValue;
      }
      async render(destination) {
        if (this.returnValue === void 0) {
          await this.init(this.result);
        }
        let value = this.returnValue;
        if (isPromise(value)) {
          value = await value;
        }
        if (isHeadAndContent(value)) {
          await value.content.render(destination);
        } else {
          await renderChild(destination, value);
        }
      }
    };
    _a$1 = astroComponentInstanceSym;
    renderTemplateResultSym = Symbol.for("astro.renderTemplateResult");
    RenderTemplateResult = class {
      constructor(htmlParts, expressions) {
        this[_a] = true;
        this.htmlParts = htmlParts;
        this.error = void 0;
        this.expressions = expressions.map((expression) => {
          if (isPromise(expression)) {
            return Promise.resolve(expression).catch((err) => {
              if (!this.error) {
                this.error = err;
                throw err;
              }
            });
          }
          return expression;
        });
      }
      async render(destination) {
        for (let i2 = 0; i2 < this.htmlParts.length; i2++) {
          const html = this.htmlParts[i2];
          const exp = this.expressions[i2];
          destination.write(markHTMLString(html));
          if (exp || exp === 0) {
            await renderChild(destination, exp);
          }
        }
      }
    };
    _a = renderTemplateResultSym;
    needsHeadRenderingSymbol = Symbol.for("astro.needsHeadRendering");
    rendererAliases = /* @__PURE__ */ new Map([["solid", "solid-js"]]);
    ASTRO_SLOT_EXP = /\<\/?astro-slot\b[^>]*>/g;
    ASTRO_STATIC_SLOT_EXP = /\<\/?astro-static-slot\b[^>]*>/g;
    ClientOnlyPlaceholder = "astro-client-only";
    Skip = class {
      constructor(vnode) {
        this.vnode = vnode;
        this.count = 0;
      }
      increment() {
        this.count++;
      }
      haveNoTried() {
        return this.count === 0;
      }
      isCompleted() {
        return this.count > 2;
      }
    };
    Skip.symbol = Symbol("astro:jsx:skip");
    consoleFilterRefs = 0;
    isNodeJS = typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";
    createResponse = isNodeJS ? (body, init2) => {
      if (typeof body === "string" || ArrayBuffer.isView(body)) {
        return new Response(body, init2);
      }
      if (typeof StreamingCompatibleResponse === "undefined") {
        return new (createResponseClass())(body, init2);
      }
      return new StreamingCompatibleResponse(body, init2);
    } : (body, init2) => new Response(body, init2);
    AstroJSX = "astro:jsx";
    Empty = Symbol("empty");
    toSlotName = (slotAttr) => slotAttr;
    slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_2, w2) => w2.toUpperCase());
    server_default = {
      check,
      renderToStaticMarkup
    };
    DELETED_EXPIRATION = /* @__PURE__ */ new Date(0);
    DELETED_VALUE = "deleted";
    responseSentSymbol$2 = Symbol.for("astro.responseSent");
    AstroCookie = class {
      constructor(value) {
        this.value = value;
      }
      json() {
        if (this.value === void 0) {
          throw new Error(`Cannot convert undefined to an object.`);
        }
        return JSON.parse(this.value);
      }
      number() {
        return Number(this.value);
      }
      boolean() {
        if (this.value === "false")
          return false;
        if (this.value === "0")
          return false;
        return Boolean(this.value);
      }
    };
    AstroCookies = class {
      constructor(request) {
        __privateAdd(this, _ensureParsed);
        __privateAdd(this, _ensureOutgoingMap);
        __privateAdd(this, _parse);
        __privateAdd(this, _request, void 0);
        __privateAdd(this, _requestValues, void 0);
        __privateAdd(this, _outgoing, void 0);
        __privateSet(this, _request, request);
        __privateSet(this, _requestValues, null);
        __privateSet(this, _outgoing, null);
      }
      /**
       * Astro.cookies.delete(key) is used to delete a cookie. Using this method will result
       * in a Set-Cookie header added to the response.
       * @param key The cookie to delete
       * @param options Options related to this deletion, such as the path of the cookie.
       */
      delete(key, options) {
        const serializeOptions = {
          expires: DELETED_EXPIRATION
        };
        if (options == null ? void 0 : options.domain) {
          serializeOptions.domain = options.domain;
        }
        if (options == null ? void 0 : options.path) {
          serializeOptions.path = options.path;
        }
        __privateMethod(this, _ensureOutgoingMap, ensureOutgoingMap_fn).call(this).set(key, [
          DELETED_VALUE,
          (0, import_cookie.serialize)(key, DELETED_VALUE, serializeOptions),
          false
        ]);
      }
      /**
       * Astro.cookies.get(key) is used to get a cookie value. The cookie value is read from the
       * request. If you have set a cookie via Astro.cookies.set(key, value), the value will be taken
       * from that set call, overriding any values already part of the request.
       * @param key The cookie to get.
       * @returns An object containing the cookie value as well as convenience methods for converting its value.
       */
      get(key) {
        var _a4;
        if ((_a4 = __privateGet(this, _outgoing)) == null ? void 0 : _a4.has(key)) {
          let [serializedValue, , isSetValue] = __privateGet(this, _outgoing).get(key);
          if (isSetValue) {
            return new AstroCookie(serializedValue);
          } else {
            return new AstroCookie(void 0);
          }
        }
        const values = __privateMethod(this, _ensureParsed, ensureParsed_fn).call(this);
        const value = values[key];
        return new AstroCookie(value);
      }
      /**
       * Astro.cookies.has(key) returns a boolean indicating whether this cookie is either
       * part of the initial request or set via Astro.cookies.set(key)
       * @param key The cookie to check for.
       * @returns
       */
      has(key) {
        var _a4;
        if ((_a4 = __privateGet(this, _outgoing)) == null ? void 0 : _a4.has(key)) {
          let [, , isSetValue] = __privateGet(this, _outgoing).get(key);
          return isSetValue;
        }
        const values = __privateMethod(this, _ensureParsed, ensureParsed_fn).call(this);
        return !!values[key];
      }
      /**
       * Astro.cookies.set(key, value) is used to set a cookie's value. If provided
       * an object it will be stringified via JSON.stringify(value). Additionally you
       * can provide options customizing how this cookie will be set, such as setting httpOnly
       * in order to prevent the cookie from being read in client-side JavaScript.
       * @param key The name of the cookie to set.
       * @param value A value, either a string or other primitive or an object.
       * @param options Options for the cookie, such as the path and security settings.
       */
      set(key, value, options) {
        let serializedValue;
        if (typeof value === "string") {
          serializedValue = value;
        } else {
          let toStringValue = value.toString();
          if (toStringValue === Object.prototype.toString.call(value)) {
            serializedValue = JSON.stringify(value);
          } else {
            serializedValue = toStringValue;
          }
        }
        const serializeOptions = {};
        if (options) {
          Object.assign(serializeOptions, options);
        }
        __privateMethod(this, _ensureOutgoingMap, ensureOutgoingMap_fn).call(this).set(key, [
          serializedValue,
          (0, import_cookie.serialize)(key, serializedValue, serializeOptions),
          true
        ]);
        if (__privateGet(this, _request)[responseSentSymbol$2]) {
          throw new AstroError({
            ...ResponseSentError
          });
        }
      }
      /**
       * Astro.cookies.header() returns an iterator for the cookies that have previously
       * been set by either Astro.cookies.set() or Astro.cookies.delete().
       * This method is primarily used by adapters to set the header on outgoing responses.
       * @returns
       */
      *headers() {
        if (__privateGet(this, _outgoing) == null)
          return;
        for (const [, value] of __privateGet(this, _outgoing)) {
          yield value[1];
        }
      }
    };
    _request = new WeakMap();
    _requestValues = new WeakMap();
    _outgoing = new WeakMap();
    _ensureParsed = new WeakSet();
    ensureParsed_fn = function() {
      if (!__privateGet(this, _requestValues)) {
        __privateMethod(this, _parse, parse_fn).call(this);
      }
      if (!__privateGet(this, _requestValues)) {
        __privateSet(this, _requestValues, {});
      }
      return __privateGet(this, _requestValues);
    };
    _ensureOutgoingMap = new WeakSet();
    ensureOutgoingMap_fn = function() {
      if (!__privateGet(this, _outgoing)) {
        __privateSet(this, _outgoing, /* @__PURE__ */ new Map());
      }
      return __privateGet(this, _outgoing);
    };
    _parse = new WeakSet();
    parse_fn = function() {
      const raw = __privateGet(this, _request).headers.get("cookie");
      if (!raw) {
        return;
      }
      __privateSet(this, _requestValues, (0, import_cookie.parse)(raw));
    };
    astroCookiesSymbol = Symbol.for("astro.cookies");
    dateTimeFormat = new Intl.DateTimeFormat([], {
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
    levels = {
      debug: 20,
      info: 30,
      warn: 40,
      error: 50,
      silent: 90
    };
    if (typeof process !== "undefined") {
      let proc = process;
      if ("argv" in proc && Array.isArray(proc.argv)) {
        if (proc.argv.includes("--verbose"))
          ;
        else if (proc.argv.includes("--silent"))
          ;
        else
          ;
      }
    }
    lastMessageCount = 1;
    consoleLogDestination = {
      write(event) {
        let dest = console.error;
        if (levels[event.level] < levels["error"]) {
          dest = console.log;
        }
        function getPrefix() {
          let prefix = "";
          let type = event.type;
          if (type) {
            prefix += dim(dateTimeFormat.format(/* @__PURE__ */ new Date()) + " ");
            if (event.level === "info") {
              type = bold(cyan(`[${type}]`));
            } else if (event.level === "warn") {
              type = bold(yellow(`[${type}]`));
            } else if (event.level === "error") {
              type = bold(red(`[${type}]`));
            }
            prefix += `${type} `;
          }
          return reset(prefix);
        }
        let message = event.message;
        if (message === lastMessage) {
          lastMessageCount++;
          message = `${message} ${yellow(`(x${lastMessageCount})`)}`;
        } else {
          lastMessage = message;
          lastMessageCount = 1;
        }
        const outMessage = getPrefix() + message;
        dest(outMessage);
        return true;
      }
    };
    RedirectComponentInstance = {
      default() {
        return new Response(null, {
          status: 301
        });
      }
    };
    RedirectSinglePageBuiltModule = {
      page: () => Promise.resolve(RedirectComponentInstance),
      onRequest: (ctx, next) => next(),
      renderers: []
    };
    clientAddressSymbol$1 = Symbol.for("astro.clientAddress");
    clientLocalsSymbol$2 = Symbol.for("astro.locals");
    clientAddressSymbol = Symbol.for("astro.clientAddress");
    responseSentSymbol$1 = Symbol.for("astro.responseSent");
    Slots = class {
      constructor(result, slots, logging) {
        __privateAdd(this, _result, void 0);
        __privateAdd(this, _slots, void 0);
        __privateAdd(this, _loggingOpts, void 0);
        __privateSet(this, _result, result);
        __privateSet(this, _slots, slots);
        __privateSet(this, _loggingOpts, logging);
        if (slots) {
          for (const key of Object.keys(slots)) {
            if (this[key] !== void 0) {
              throw new AstroError({
                ...ReservedSlotName,
                message: ReservedSlotName.message(key)
              });
            }
            Object.defineProperty(this, key, {
              get() {
                return true;
              },
              enumerable: true
            });
          }
        }
      }
      has(name) {
        if (!__privateGet(this, _slots))
          return false;
        return Boolean(__privateGet(this, _slots)[name]);
      }
      async render(name, args = []) {
        if (!__privateGet(this, _slots) || !this.has(name))
          return;
        const result = __privateGet(this, _result);
        if (!Array.isArray(args)) {
          warn(
            __privateGet(this, _loggingOpts),
            "Astro.slots.render",
            `Expected second parameter to be an array, received a ${typeof args}. If you're trying to pass an array as a single argument and getting unexpected results, make sure you're passing your array as a item of an array. Ex: Astro.slots.render('default', [["Hello", "World"]])`
          );
        } else if (args.length > 0) {
          const slotValue = __privateGet(this, _slots)[name];
          const component = typeof slotValue === "function" ? await slotValue(result) : await slotValue;
          const expression = getFunctionExpression(component);
          if (expression) {
            const slot = async () => typeof expression === "function" ? expression(...args) : expression;
            return await renderSlotToString(result, slot).then((res) => {
              return res != null ? String(res) : res;
            });
          }
          if (typeof component === "function") {
            return await renderJSX(result, component(...args)).then(
              (res) => res != null ? String(res) : res
            );
          }
        }
        const content = await renderSlotToString(result, __privateGet(this, _slots)[name]);
        const outHTML = chunkToString(result, content);
        return outHTML;
      }
    };
    _result = new WeakMap();
    _slots = new WeakMap();
    _loggingOpts = new WeakMap();
    renderMarkdown = null;
    VALID_PARAM_TYPES = ["string", "number", "undefined"];
    RouteCache = class {
      constructor(logging, mode = "production") {
        this.cache = {};
        this.logging = logging;
        this.mode = mode;
      }
      /** Clear the cache. */
      clearAll() {
        this.cache = {};
      }
      set(route, entry) {
        var _a4;
        if (this.mode === "production" && ((_a4 = this.cache[route.component]) == null ? void 0 : _a4.staticPaths)) {
          warn(
            this.logging,
            "routeCache",
            `Internal Warning: route cache overwritten. (${route.component})`
          );
        }
        this.cache[route.component] = entry;
      }
      get(route) {
        return this.cache[route.component];
      }
    };
    clientLocalsSymbol$1 = Symbol.for("astro.locals");
    clientLocalsSymbol = Symbol.for("astro.locals");
    responseSentSymbol = Symbol.for("astro.responseSent");
    STATUS_CODES = /* @__PURE__ */ new Set([404, 500]);
    App = class {
      constructor(manifest, streaming = true) {
        /**
         * Creates an environment by reading the stored manifest
         *
         * @param streaming
         * @private
         */
        __privateAdd(this, _createEnvironment);
        /**
         * Creates the render context of the current route
         */
        __privateAdd(this, _createRenderContext);
        /**
         * If it is a known error code, try sending the according page (e.g. 404.astro / 500.astro).
         * This also handles pre-rendered /404 or /500 routes
         */
        __privateAdd(this, _renderError);
        __privateAdd(this, _mergeResponses);
        __privateAdd(this, _getDefaultStatusCode);
        __privateAdd(this, _getModuleForRoute);
        /**
         * The current environment of the application
         */
        __privateAdd(this, _env, void 0);
        __privateAdd(this, _manifest, void 0);
        __privateAdd(this, _manifestData, void 0);
        __privateAdd(this, _routeDataToRouteInfo, void 0);
        __privateAdd(this, _encoder, new TextEncoder());
        __privateAdd(this, _logging, {
          dest: consoleLogDestination,
          level: "info"
        });
        __privateAdd(this, _baseWithoutTrailingSlash, void 0);
        __privateSet(this, _manifest, manifest);
        __privateSet(this, _manifestData, {
          routes: manifest.routes.map((route) => route.routeData)
        });
        __privateSet(this, _routeDataToRouteInfo, new Map(manifest.routes.map((route) => [route.routeData, route])));
        __privateSet(this, _baseWithoutTrailingSlash, removeTrailingForwardSlash(__privateGet(this, _manifest).base));
        __privateSet(this, _env, __privateMethod(this, _createEnvironment, createEnvironment_fn).call(this, streaming));
      }
      set setManifest(newManifest) {
        __privateSet(this, _manifest, newManifest);
      }
      set setManifestData(newManifestData) {
        __privateSet(this, _manifestData, newManifestData);
      }
      removeBase(pathname) {
        if (pathname.startsWith(__privateGet(this, _manifest).base)) {
          return pathname.slice(__privateGet(this, _baseWithoutTrailingSlash).length + 1);
        }
        return pathname;
      }
      // Disable no-unused-vars to avoid breaking signature change
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      match(request, _opts = {}) {
        const url3 = new URL(request.url);
        if (__privateGet(this, _manifest).assets.has(url3.pathname))
          return void 0;
        const pathname = prependForwardSlash(this.removeBase(url3.pathname));
        const routeData = matchRoute(pathname, __privateGet(this, _manifestData));
        if (!routeData || routeData.prerender)
          return void 0;
        return routeData;
      }
      async render(request, routeData, locals) {
        if (request.url !== collapseDuplicateSlashes(request.url)) {
          request = new Request(collapseDuplicateSlashes(request.url), request);
        }
        if (!routeData) {
          routeData = this.match(request);
        }
        if (!routeData) {
          return __privateMethod(this, _renderError, renderError_fn).call(this, request, { status: 404 });
        }
        Reflect.set(request, clientLocalsSymbol, locals ?? {});
        const defaultStatus = __privateMethod(this, _getDefaultStatusCode, getDefaultStatusCode_fn).call(this, routeData.route);
        const mod = await __privateMethod(this, _getModuleForRoute, getModuleForRoute_fn).call(this, routeData);
        const pageModule = await mod.page();
        const url3 = new URL(request.url);
        const renderContext = await __privateMethod(this, _createRenderContext, createRenderContext_fn).call(this, url3, request, routeData, mod, defaultStatus);
        let response;
        try {
          response = await tryRenderRoute(
            routeData.type,
            renderContext,
            __privateGet(this, _env),
            pageModule,
            mod.onRequest
          );
        } catch (err) {
          error(__privateGet(this, _logging), "ssr", err.stack || err.message || String(err));
          return __privateMethod(this, _renderError, renderError_fn).call(this, request, { status: 500 });
        }
        if (isResponse(response, routeData.type)) {
          if (STATUS_CODES.has(response.status)) {
            return __privateMethod(this, _renderError, renderError_fn).call(this, request, {
              response,
              status: response.status
            });
          }
          Reflect.set(response, responseSentSymbol, true);
          return response;
        } else {
          if (response.type === "response") {
            if (response.response.headers.get("X-Astro-Response") === "Not-Found") {
              return __privateMethod(this, _renderError, renderError_fn).call(this, request, {
                response: response.response,
                status: 404
              });
            }
            return response.response;
          } else {
            const headers = new Headers();
            const mimeType = import_mime.default.getType(url3.pathname);
            if (mimeType) {
              headers.set("Content-Type", `${mimeType};charset=utf-8`);
            } else {
              headers.set("Content-Type", "text/plain;charset=utf-8");
            }
            const bytes = response.encoding !== "binary" ? __privateGet(this, _encoder).encode(response.body) : response.body;
            headers.set("Content-Length", bytes.byteLength.toString());
            const newResponse = new Response(bytes, {
              status: 200,
              headers
            });
            attachToResponse(newResponse, response.cookies);
            return newResponse;
          }
        }
      }
      setCookieHeaders(response) {
        return getSetCookiesFromResponse(response);
      }
    };
    _env = new WeakMap();
    _manifest = new WeakMap();
    _manifestData = new WeakMap();
    _routeDataToRouteInfo = new WeakMap();
    _encoder = new WeakMap();
    _logging = new WeakMap();
    _baseWithoutTrailingSlash = new WeakMap();
    _createEnvironment = new WeakSet();
    createEnvironment_fn = function(streaming = false) {
      return createEnvironment({
        adapterName: __privateGet(this, _manifest).adapterName,
        logging: __privateGet(this, _logging),
        markdown: __privateGet(this, _manifest).markdown,
        mode: "production",
        compressHTML: __privateGet(this, _manifest).compressHTML,
        renderers: __privateGet(this, _manifest).renderers,
        clientDirectives: __privateGet(this, _manifest).clientDirectives,
        resolve: async (specifier) => {
          if (!(specifier in __privateGet(this, _manifest).entryModules)) {
            throw new Error(`Unable to resolve [${specifier}]`);
          }
          const bundlePath = __privateGet(this, _manifest).entryModules[specifier];
          switch (true) {
            case bundlePath.startsWith("data:"):
            case bundlePath.length === 0: {
              return bundlePath;
            }
            default: {
              return createAssetLink(bundlePath, __privateGet(this, _manifest).base, __privateGet(this, _manifest).assetsPrefix);
            }
          }
        },
        routeCache: new RouteCache(__privateGet(this, _logging)),
        site: __privateGet(this, _manifest).site,
        ssr: true,
        streaming
      });
    };
    _createRenderContext = new WeakSet();
    createRenderContext_fn = async function(url3, request, routeData, page22, status = 200) {
      if (routeData.type === "endpoint") {
        const pathname = "/" + this.removeBase(url3.pathname);
        const mod = await page22.page();
        const handler = mod;
        return await createRenderContext({
          request,
          pathname,
          route: routeData,
          status,
          env: __privateGet(this, _env),
          mod: handler
        });
      } else {
        const pathname = prependForwardSlash(this.removeBase(url3.pathname));
        const info = __privateGet(this, _routeDataToRouteInfo).get(routeData);
        const links = /* @__PURE__ */ new Set();
        const styles = createStylesheetElementSet(info.styles);
        let scripts = /* @__PURE__ */ new Set();
        for (const script of info.scripts) {
          if ("stage" in script) {
            if (script.stage === "head-inline") {
              scripts.add({
                props: {},
                children: script.children
              });
            }
          } else {
            scripts.add(createModuleScriptElement(script));
          }
        }
        const mod = await page22.page();
        return await createRenderContext({
          request,
          pathname,
          componentMetadata: __privateGet(this, _manifest).componentMetadata,
          scripts,
          styles,
          links,
          route: routeData,
          status,
          mod,
          env: __privateGet(this, _env)
        });
      }
    };
    _renderError = new WeakSet();
    renderError_fn = async function(request, { status, response: originalResponse }) {
      const errorRouteData = matchRoute("/" + status, __privateGet(this, _manifestData));
      const url3 = new URL(request.url);
      if (errorRouteData) {
        if (errorRouteData.prerender) {
          const maybeDotHtml = errorRouteData.route.endsWith(`/${status}`) ? ".html" : "";
          const statusURL = new URL(
            `${__privateGet(this, _baseWithoutTrailingSlash)}/${status}${maybeDotHtml}`,
            url3
          );
          const response2 = await fetch(statusURL.toString());
          const override = { status };
          return __privateMethod(this, _mergeResponses, mergeResponses_fn).call(this, response2, originalResponse, override);
        }
        const mod = await __privateMethod(this, _getModuleForRoute, getModuleForRoute_fn).call(this, errorRouteData);
        try {
          const newRenderContext = await __privateMethod(this, _createRenderContext, createRenderContext_fn).call(this, url3, request, errorRouteData, mod, status);
          const page22 = await mod.page();
          const response2 = await tryRenderRoute(
            "page",
            // this is hardcoded to ensure proper behavior for missing endpoints
            newRenderContext,
            __privateGet(this, _env),
            page22
          );
          return __privateMethod(this, _mergeResponses, mergeResponses_fn).call(this, response2, originalResponse);
        } catch {
        }
      }
      const response = __privateMethod(this, _mergeResponses, mergeResponses_fn).call(this, new Response(null, { status }), originalResponse);
      Reflect.set(response, responseSentSymbol, true);
      return response;
    };
    _mergeResponses = new WeakSet();
    mergeResponses_fn = function(newResponse, oldResponse, override) {
      if (!oldResponse) {
        if (override !== void 0) {
          return new Response(newResponse.body, {
            status: override.status,
            statusText: newResponse.statusText,
            headers: newResponse.headers
          });
        }
        return newResponse;
      }
      const { statusText, headers } = oldResponse;
      const status = (override == null ? void 0 : override.status) ? override.status : oldResponse.status === 200 ? newResponse.status : oldResponse.status;
      return new Response(newResponse.body, {
        status,
        statusText: status === 200 ? newResponse.statusText : statusText,
        headers: new Headers(Array.from(headers))
      });
    };
    _getDefaultStatusCode = new WeakSet();
    getDefaultStatusCode_fn = function(route) {
      route = removeTrailingForwardSlash(route);
      if (route.endsWith("/404"))
        return 404;
      if (route.endsWith("/500"))
        return 500;
      return 200;
    };
    _getModuleForRoute = new WeakSet();
    getModuleForRoute_fn = async function(route) {
      if (route.type === "redirect") {
        return RedirectSinglePageBuiltModule;
      } else {
        if (__privateGet(this, _manifest).pageMap) {
          const importComponentInstance = __privateGet(this, _manifest).pageMap.get(route.component);
          if (!importComponentInstance) {
            throw new Error(
              `Unexpectedly unable to find a component instance for route ${route.route}`
            );
          }
          const pageModule = await importComponentInstance();
          return pageModule;
        } else if (__privateGet(this, _manifest).pageModule) {
          const importComponentInstance = __privateGet(this, _manifest).pageModule;
          return importComponentInstance;
        } else {
          throw new Error(
            "Astro couldn't find the correct page to render, probably because it wasn't correctly mapped for SSR usage. This is an internal error, please file an issue."
          );
        }
      }
    };
  }
});

// ../../node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "../../node_modules/react/cjs/react.development.js"(exports, module) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          // Used to reproduce behavior of `batchedUpdates` in legacy mode.
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error2("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function(publicInstance) {
            return false;
          },
          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn2("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray(a2) {
          return isArrayImpl(a2);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x2) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error2("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error2("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error2('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement3(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            self2 = config.__self === void 0 ? null : config.__self;
            source = config.__source === void 0 ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i2 = 0; i2 < childrenLength; i2++) {
              childArray[i2] = arguments[i2 + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          if (element === null || element === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
          }
          var propName;
          var props = assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i2 = 0; i2 < childrenLength; i2++) {
              childArray[i2] = arguments[i2 + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape2(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape2("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                  (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                    // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/"
                  ) : "") + childKey
                );
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray(children)) {
            for (var i2 = 0; i2 < children.length; i2++) {
              child = children[i2];
              nextName = nextNamePrefix + getElementKey(child, i2);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = String(children);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n = 0;
          mapChildren(children, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children;
        }
        function createContext(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error2("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error2("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn2("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = moduleObject2;
              }
            }, function(error3) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error3;
              }
            });
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error2("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error2("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error2("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error2("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error2("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error2("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!render.name && !render.displayName) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error2("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!type.name && !type.displayName) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error2("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error2("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error2("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init2) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init2);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x2) {
                var match = x2.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x2) {
                  control = x2;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x2) {
                  control = x2;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x2) {
                control = x2;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s2 = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s2 >= 1 && c >= 0 && sampleLines[s2] !== controlLines[c]) {
                c--;
              }
              for (; s2 >= 1 && c >= 0; s2--, c--) {
                if (sampleLines[s2] !== controlLines[c]) {
                  if (s2 !== 1 || c !== 1) {
                    do {
                      s2--;
                      c--;
                      if (c < 0 || sampleLines[s2] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x2) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error2('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (isArray(node)) {
            for (var i2 = 0; i2 < node.length; i2++) {
              var child = node[i2];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error2("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i2 = 0; i2 < keys.length; i2++) {
              var key = keys[i2];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error2("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error2("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error2("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement3.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i2 = 2; i2 < arguments.length; i2++) {
              validateChildKeys(arguments[i2], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn2("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn2("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i2 = 2; i2 < arguments.length; i2++) {
            validateChildKeys(arguments[i2], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn2("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module && module[requireString];
              enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error2("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error3) {
              popActScope(prevActScopeDepth);
              throw error3;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result !== null && typeof result === "object" && typeof result.then === "function") {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error3) {
                    popActScope(prevActScopeDepth);
                    reject(error3);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error2("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error2("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error3) {
                reject(error3);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i2 = 0;
              try {
                for (; i2 < queue.length; i2++) {
                  var callback = queue[i2];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error3) {
                queue = queue.slice(i2 + 1);
                throw error3;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild
        };
        exports.Children = Children;
        exports.Component = Component;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.Profiler = REACT_PROFILER_TYPE;
        exports.PureComponent = PureComponent;
        exports.StrictMode = REACT_STRICT_MODE_TYPE;
        exports.Suspense = REACT_SUSPENSE_TYPE;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef;
        exports.forwardRef = forwardRef;
        exports.isValidElement = isValidElement;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.startTransition = startTransition;
        exports.unstable_act = act;
        exports.useCallback = useCallback;
        exports.useContext = useContext;
        exports.useDebugValue = useDebugValue;
        exports.useDeferredValue = useDeferredValue;
        exports.useEffect = useEffect;
        exports.useId = useId;
        exports.useImperativeHandle = useImperativeHandle;
        exports.useInsertionEffect = useInsertionEffect;
        exports.useLayoutEffect = useLayoutEffect;
        exports.useMemo = useMemo;
        exports.useReducer = useReducer;
        exports.useRef = useRef;
        exports.useState = useState;
        exports.useSyncExternalStore = useSyncExternalStore;
        exports.useTransition = useTransition;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/react/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
var require_react_dom_server_legacy_browser_development = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React2 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback) {
          callback();
        }
        function beginWriting(destination) {
        }
        function writeChunk(destination, chunk2) {
          writeChunkAndReturn(destination, chunk2);
        }
        function writeChunkAndReturn(destination, chunk2) {
          return destination.push(chunk2);
        }
        function completeWriting(destination) {
        }
        function close(destination) {
          destination.push(null);
        }
        function stringToChunk(content) {
          return content;
        }
        function stringToPrecomputedChunk(content) {
          return content;
        }
        function closeWithError(destination, error3) {
          destination.destroy(error3);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid2 = validateProperty(type, key);
              if (!isValid2) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid2 = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid2) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_2, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape2;
          }
          return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === "boolean" || typeof text === "number") {
            return "" + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url3) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url3)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url3));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a2) {
          return isArrayImpl(a2);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s2, suffix) {
          return "" + prefix2 + (s2 === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i2 = 0; i2 < bootstrapScripts.length; i2++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i2])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk2 = styleNameCache.get(styleName);
          if (chunk2 !== void 0) {
            return chunk2;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk("" + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React2.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i2 = 0; i2 < selectedValue.length; i2++) {
                {
                  checkAttributeStringCoercion(selectedValue[i2], "value");
                }
                var v = "" + selectedValue[i2];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (typeof html === "string" && html.length > 0 && html[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk("" + html));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i2 = 0;
          for (; i2 < bootstrapChunks.length - 1; i2++) {
            writeChunk(destination, bootstrapChunks[i2]);
          }
          if (i2 < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i2]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        function createResponseState$1(generateStaticMarkup, identifierPrefix) {
          var responseState = createResponseState(identifierPrefix, void 0);
          return {
            // Keep this in sync with ReactDOMServerFormatConfig
            bootstrapChunks: responseState.bootstrapChunks,
            startInlineScript: responseState.startInlineScript,
            placeholderPrefix: responseState.placeholderPrefix,
            segmentPrefix: responseState.segmentPrefix,
            boundaryPrefix: responseState.boundaryPrefix,
            idPrefix: responseState.idPrefix,
            nextSuspenseID: responseState.nextSuspenseID,
            sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,
            sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,
            sentClientRenderFunction: responseState.sentClientRenderFunction,
            // This is an extra field for the legacy renderer
            generateStaticMarkup
          };
        }
        function createRootFormatContext() {
          return {
            insertionMode: HTML_MODE,
            // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
            selectedValue: null
          };
        }
        function pushTextInstance$1(target, text, responseState, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            target.push(stringToChunk(escapeTextForBrowser(text)));
            return false;
          } else {
            return pushTextInstance(target, text, responseState, textEmbedded);
          }
        }
        function pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            return;
          } else {
            return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);
          }
        }
        function writeStartCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartCompletedSuspenseBoundary(destination);
        }
        function writeStartClientRenderedSuspenseBoundary$1(destination, responseState, errorDigest, errorMessage, errorComponentStack) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);
        }
        function writeEndCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndCompletedSuspenseBoundary(destination);
        }
        function writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndClientRenderedSuspenseBoundary(destination);
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x2) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x2) {
                var match = x2.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x2) {
                  control = x2;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x2) {
                  control = x2;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x2) {
                control = x2;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s2 = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s2 >= 1 && c >= 0 && sampleLines[s2] !== controlLines[c]) {
                c--;
              }
              for (; s2 >= 1 && c >= 0; s2--, c--) {
                if (sampleLines[s2] !== controlLines[c]) {
                  if (s2 !== 1 || c !== 1) {
                    do {
                      s2--;
                      c--;
                      if (c < 0 || sampleLines[s2] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x2) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue2 = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue2 = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue2;
            context._currentValue2 = nextValue;
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var _value = prevSnapshot.parentValue;
            if (_value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue2 = _value;
            }
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue2;
          return value;
        }
        function get5(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback) {
            var internals = get5(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var internals = get5(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var internals = get5(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid2 = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid2 && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state3 = instance.state;
            if (_state3 && (typeof _state3 !== "object" || isArray(_state3))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i2 = oldReplace ? 1 : 0; i2 < oldQueue.length; i2++) {
                var partial = oldQueue[i2];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x2) {
          var asUint = x2 >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log2(asUint) / LN2 | 0) | 0;
        }
        function is(x2, y) {
          return x2 === y && (x2 !== 0 || 1 / x2 === 1 / y) || x2 !== x2 && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
            if (objectIs(nextDeps[i2], prevDeps[i2])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init2) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init2 !== void 0 ? init2(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function() {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop2() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop2,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop2,
          // Effects are not run in the server environment.
          useEffect: noop2,
          // Debugging effect
          useDebugValue: noop2,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x2) {
            return "\nError generating stack: " + x2.message + "\n" + x2.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$1() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError2 === void 0 ? defaultErrorHandler : onError2,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render = props.children;
          {
            if (typeof render !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init2 = lazyComponent._init;
          var Component = init2(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x2) {
              if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x2;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init2 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init2(payload);
                  } catch (x2) {
                    if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x2;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i2 = 0; i2 < totalChildren; i2++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i2);
            try {
              renderNode(request, task, children[i2]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x2) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x2.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x2) {
            resetHooksState();
            if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
              spawnNewSuspendedTask(request, task, x2);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x2;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error && typeof _error.message === "string") {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$1;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x2) {
            resetHooksState();
            if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
              var ping = task.ping;
              x2.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x2);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i2;
            for (i2 = 0; i2 < pingedTasks.length; i2++) {
              var task = pingedTasks[i2];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i2);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary$1(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary$1(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i2 = 0;
          for (; i2 < completedSegments.length; i2++) {
            var segment = completedSegments[i2];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i2 = 0;
          for (; i2 < completedSegments.length; i2++) {
            var segment = completedSegments[i2];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i2++;
              completedSegments.splice(0, i2);
              return false;
            }
          }
          completedSegments.splice(0, i2);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i2;
            for (i2 = 0; i2 < clientRenderedBoundaries.length; i2++) {
              var boundary = clientRenderedBoundaries[i2];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i2++;
                clientRenderedBoundaries.splice(0, i2);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i2);
            var completedBoundaries = request.completedBoundaries;
            for (i2 = 0; i2 < completedBoundaries.length; i2++) {
              var _boundary = completedBoundaries[i2];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i2++;
                completedBoundaries.splice(0, i2);
                return;
              }
            }
            completedBoundaries.splice(0, i2);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i2 = 0; i2 < partialBoundaries.length; i2++) {
              var _boundary2 = partialBoundaries[i2];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i2++;
                partialBoundaries.splice(0, i2);
                return;
              }
            }
            partialBoundaries.splice(0, i2);
            var largeBoundaries = request.completedBoundaries;
            for (i2 = 0; i2 < largeBoundaries.length; i2++) {
              var _boundary3 = largeBoundaries[i2];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i2++;
                largeBoundaries.splice(0, i2);
                return;
              }
            }
            largeBoundaries.splice(0, i2);
          } finally {
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function onError() {
        }
        function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
          var didFatal = false;
          var fatalError2 = null;
          var result = "";
          var destination = {
            push: function(chunk2) {
              if (chunk2 !== null) {
                result += chunk2;
              }
              return true;
            },
            destroy: function(error3) {
              didFatal = true;
              fatalError2 = error3;
            }
          };
          var readyToStream = false;
          function onShellReady() {
            readyToStream = true;
          }
          var request = createRequest(children, createResponseState$1(generateStaticMarkup, options ? options.identifierPrefix : void 0), createRootFormatContext(), Infinity, onError, void 0, onShellReady, void 0, void 0);
          startWork(request);
          abort(request, abortReason);
          startFlowing(request, destination);
          if (didFatal) {
            throw fatalError2;
          }
          if (!readyToStream) {
            throw new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          }
          return result;
        }
        function renderToString2(children, options) {
          return renderToStringImpl(children, options, false, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToStaticMarkup3(children, options) {
          return renderToStringImpl(children, options, true, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToNodeStream() {
          throw new Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
        }
        function renderToStaticNodeStream() {
          throw new Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
        }
        exports.renderToNodeStream = renderToNodeStream;
        exports.renderToStaticMarkup = renderToStaticMarkup3;
        exports.renderToStaticNodeStream = renderToStaticNodeStream;
        exports.renderToString = renderToString2;
        exports.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React2 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback) {
          callback();
        }
        var VIEW_SIZE = 512;
        var currentView = null;
        var writtenBytes = 0;
        function beginWriting(destination) {
          currentView = new Uint8Array(VIEW_SIZE);
          writtenBytes = 0;
        }
        function writeChunk(destination, chunk2) {
          if (chunk2.length === 0) {
            return;
          }
          if (chunk2.length > VIEW_SIZE) {
            if (writtenBytes > 0) {
              destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
              currentView = new Uint8Array(VIEW_SIZE);
              writtenBytes = 0;
            }
            destination.enqueue(chunk2);
            return;
          }
          var bytesToWrite = chunk2;
          var allowableBytes = currentView.length - writtenBytes;
          if (allowableBytes < bytesToWrite.length) {
            if (allowableBytes === 0) {
              destination.enqueue(currentView);
            } else {
              currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes);
              destination.enqueue(currentView);
              bytesToWrite = bytesToWrite.subarray(allowableBytes);
            }
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
          currentView.set(bytesToWrite, writtenBytes);
          writtenBytes += bytesToWrite.length;
        }
        function writeChunkAndReturn(destination, chunk2) {
          writeChunk(destination, chunk2);
          return true;
        }
        function completeWriting(destination) {
          if (currentView && writtenBytes > 0) {
            destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
            currentView = null;
            writtenBytes = 0;
          }
        }
        function close(destination) {
          destination.close();
        }
        var textEncoder = new TextEncoder();
        function stringToChunk(content) {
          return textEncoder.encode(content);
        }
        function stringToPrecomputedChunk(content) {
          return textEncoder.encode(content);
        }
        function closeWithError(destination, error3) {
          if (typeof destination.error === "function") {
            destination.error(error3);
          } else {
            destination.close();
          }
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid2 = validateProperty(type, key);
              if (!isValid2) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid2 = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid2) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_2, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape2;
          }
          return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === "boolean" || typeof text === "number") {
            return "" + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url3) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url3)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url3));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a2) {
          return isArrayImpl(a2);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s2, suffix) {
          return "" + prefix2 + (s2 === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i2 = 0; i2 < bootstrapScripts.length; i2++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i2])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function createRootFormatContext(namespaceURI) {
          var insertionMode = namespaceURI === "http://www.w3.org/2000/svg" ? SVG_MODE : namespaceURI === "http://www.w3.org/1998/Math/MathML" ? MATHML_MODE : ROOT_HTML_MODE;
          return createFormatContext(insertionMode, null);
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk2 = styleNameCache.get(styleName);
          if (chunk2 !== void 0) {
            return chunk2;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk("" + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React2.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i2 = 0; i2 < selectedValue.length; i2++) {
                {
                  checkAttributeStringCoercion(selectedValue[i2], "value");
                }
                var v = "" + selectedValue[i2];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (typeof html === "string" && html.length > 0 && html[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk("" + html));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i2 = 0;
          for (; i2 < bootstrapChunks.length - 1; i2++) {
            writeChunk(destination, bootstrapChunks[i2]);
          }
          if (i2 < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i2]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x2) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x2) {
                var match = x2.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x2) {
                  control = x2;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x2) {
                  control = x2;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x2) {
                control = x2;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s2 = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s2 >= 1 && c >= 0 && sampleLines[s2] !== controlLines[c]) {
                c--;
              }
              for (; s2 >= 1 && c >= 0; s2--, c--) {
                if (sampleLines[s2] !== controlLines[c]) {
                  if (s2 !== 1 || c !== 1) {
                    do {
                      s2--;
                      c--;
                      if (c < 0 || sampleLines[s2] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s2].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s2 >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x2) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue;
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var value = prevSnapshot.parentValue;
            if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue = value;
            }
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue;
          return value;
        }
        function get5(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback) {
            var internals = get5(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var internals = get5(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var internals = get5(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid2 = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid2 && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state3 = instance.state;
            if (_state3 && (typeof _state3 !== "object" || isArray(_state3))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i2 = oldReplace ? 1 : 0; i2 < oldQueue.length; i2++) {
                var partial = oldQueue[i2];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x2) {
          var asUint = x2 >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log2(asUint) / LN2 | 0) | 0;
        }
        function is(x2, y) {
          return x2 === y && (x2 !== 0 || 1 / x2 === 1 / y) || x2 !== x2 && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
            if (objectIs(nextDeps[i2], prevDeps[i2])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init2) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init2 !== void 0 ? init2(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function() {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop2() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop2,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop2,
          // Effects are not run in the server environment.
          useEffect: noop2,
          // Debugging effect
          useDebugValue: noop2,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x2) {
            return "\nError generating stack: " + x2.message + "\n" + x2.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$1() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError === void 0 ? defaultErrorHandler : onError,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render = props.children;
          {
            if (typeof render !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init2 = lazyComponent._init;
          var Component = init2(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x2) {
              if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x2;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init2 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init2(payload);
                  } catch (x2) {
                    if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x2;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i2 = 0; i2 < totalChildren; i2++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i2);
            try {
              renderNode(request, task, children[i2]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x2) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x2.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x2) {
            resetHooksState();
            if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
              spawnNewSuspendedTask(request, task, x2);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x2;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error && typeof _error.message === "string") {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$1;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x2) {
            resetHooksState();
            if (typeof x2 === "object" && x2 !== null && typeof x2.then === "function") {
              var ping = task.ping;
              x2.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x2);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i2;
            for (i2 = 0; i2 < pingedTasks.length; i2++) {
              var task = pingedTasks[i2];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i2);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i2 = 0;
          for (; i2 < completedSegments.length; i2++) {
            var segment = completedSegments[i2];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i2 = 0;
          for (; i2 < completedSegments.length; i2++) {
            var segment = completedSegments[i2];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i2++;
              completedSegments.splice(0, i2);
              return false;
            }
          }
          completedSegments.splice(0, i2);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          beginWriting();
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i2;
            for (i2 = 0; i2 < clientRenderedBoundaries.length; i2++) {
              var boundary = clientRenderedBoundaries[i2];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i2++;
                clientRenderedBoundaries.splice(0, i2);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i2);
            var completedBoundaries = request.completedBoundaries;
            for (i2 = 0; i2 < completedBoundaries.length; i2++) {
              var _boundary = completedBoundaries[i2];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i2++;
                completedBoundaries.splice(0, i2);
                return;
              }
            }
            completedBoundaries.splice(0, i2);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i2 = 0; i2 < partialBoundaries.length; i2++) {
              var _boundary2 = partialBoundaries[i2];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i2++;
                partialBoundaries.splice(0, i2);
                return;
              }
            }
            partialBoundaries.splice(0, i2);
            var largeBoundaries = request.completedBoundaries;
            for (i2 = 0; i2 < largeBoundaries.length; i2++) {
              var _boundary3 = largeBoundaries[i2];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i2++;
                largeBoundaries.splice(0, i2);
                return;
              }
            }
            largeBoundaries.splice(0, i2);
          } finally {
            completeWriting(destination);
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function renderToReadableStream2(children, options) {
          return new Promise(function(resolve, reject) {
            var onFatalError;
            var onAllReady;
            var allReady = new Promise(function(res, rej) {
              onAllReady = res;
              onFatalError = rej;
            });
            function onShellReady() {
              var stream = new ReadableStream(
                {
                  type: "bytes",
                  pull: function(controller) {
                    startFlowing(request, controller);
                  },
                  cancel: function(reason) {
                    abort(request);
                  }
                },
                // $FlowFixMe size() methods are not allowed on byte streams.
                {
                  highWaterMark: 0
                }
              );
              stream.allReady = allReady;
              resolve(stream);
            }
            function onShellError(error3) {
              allReady.catch(function() {
              });
              reject(error3);
            }
            var request = createRequest(children, createResponseState(options ? options.identifierPrefix : void 0, options ? options.nonce : void 0, options ? options.bootstrapScriptContent : void 0, options ? options.bootstrapScripts : void 0, options ? options.bootstrapModules : void 0), createRootFormatContext(options ? options.namespaceURI : void 0), options ? options.progressiveChunkSize : void 0, options ? options.onError : void 0, onAllReady, onShellReady, onShellError, onFatalError);
            if (options && options.signal) {
              var signal = options.signal;
              var listener = function() {
                abort(request, signal.reason);
                signal.removeEventListener("abort", listener);
              };
              signal.addEventListener("abort", listener);
            }
            startWork(request);
          });
        }
        exports.renderToReadableStream = renderToReadableStream2;
        exports.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "../../node_modules/react-dom/server.browser.js"(exports) {
    "use strict";
    var l;
    var s2;
    if (false) {
      l = null;
      s2 = null;
    } else {
      l = require_react_dom_server_legacy_browser_development();
      s2 = require_react_dom_server_browser_development();
    }
    exports.version = l.version;
    exports.renderToString = l.renderToString;
    exports.renderToStaticMarkup = l.renderToStaticMarkup;
    exports.renderToNodeStream = l.renderToNodeStream;
    exports.renderToStaticNodeStream = l.renderToStaticNodeStream;
    exports.renderToReadableStream = s2.renderToReadableStream;
  }
});

// ../../node_modules/ultrahtml/dist/index.js
function P(e) {
  let n = {}, a2;
  if (e)
    for (_.lastIndex = 0, e = " " + (e || "") + " "; a2 = _.exec(e); )
      a2[0] !== " " && (n[a2[1]] = a2[3]);
  return n;
}
function w(e) {
  let n = typeof e == "string" ? e : e.value, a2, r, t, o, l, d, g, h, i2, c = [];
  s.lastIndex = 0, r = a2 = { type: 0, children: [] };
  let E = 0;
  function m() {
    o = n.substring(E, s.lastIndex - t[0].length), o && r.children.push({ type: 2, value: o, parent: r });
  }
  for (; t = s.exec(n); ) {
    if (d = t[5] || t[8], g = t[6] || t[9], h = t[7] || t[10], x.has(r.name) && t[2] !== r.name) {
      l = s.lastIndex - t[0].length, r.children.length > 0 && (r.children[0].value += t[0]);
      continue;
    } else if (d === "<!--") {
      if (l = s.lastIndex - t[0].length, x.has(r.name))
        continue;
      i2 = { type: 3, value: g, parent: r, loc: [{ start: l, end: l + d.length }, { start: s.lastIndex - h.length, end: s.lastIndex }] }, c.push(i2), i2.parent.children.push(i2);
    } else if (d === "<!")
      l = s.lastIndex - t[0].length, i2 = { type: 4, value: g, parent: r, loc: [{ start: l, end: l + d.length }, { start: s.lastIndex - h.length, end: s.lastIndex }] }, c.push(i2), i2.parent.children.push(i2);
    else if (t[1] !== "/")
      if (m(), x.has(r.name)) {
        E = s.lastIndex, m();
        continue;
      } else
        i2 = { type: 1, name: t[2] + "", attributes: P(t[3]), parent: r, children: [], loc: [{ start: s.lastIndex - t[0].length, end: s.lastIndex }] }, c.push(i2), i2.parent.children.push(i2), t[4] && t[4].indexOf("/") > -1 || D.has(i2.name) ? (i2.loc[1] = i2.loc[0], i2.isSelfClosingTag = true) : r = i2;
    else
      m(), t[2] + "" === r.name ? (i2 = r, r = i2.parent, i2.loc.push({ start: s.lastIndex - t[0].length, end: s.lastIndex }), o = n.substring(i2.loc[0].end, i2.loc[1].start), i2.children.length === 0 && i2.children.push({ type: 2, value: o, parent: r })) : t[2] + "" === c[c.length - 1].name && c[c.length - 1].isSelfClosingTag === true && (i2 = c[c.length - 1], i2.loc.push({ start: s.lastIndex - t[0].length, end: s.lastIndex }));
    E = s.lastIndex;
  }
  return o = n.slice(E), r.children.push({ type: 2, value: o, parent: r }), a2;
}
function H(e, n) {
  return new O(n).visit(e);
}
var L, R, k, b, D, x, _, s, O, N, S, u;
var init_dist2 = __esm({
  "../../node_modules/ultrahtml/dist/index.js"() {
    L = 0;
    R = 1;
    k = 2;
    b = Symbol("Fragment");
    D = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
    x = /* @__PURE__ */ new Set(["script", "style"]);
    _ = /([\@\.a-z0-9_\:\-]*)\s*?=?\s*?(['"]?)([\s\S]*?)\2\s+/gim;
    s = /(?:<(\/?)([a-zA-Z][a-zA-Z0-9\:-]*)(?:\s([^>]*?))?((?:\s*\/)?)>|(<\!\-\-)([\s\S]*?)(\-\->)|(<\!)([\s\S]*?)(>))/gm;
    O = class {
      constructor(n) {
        this.callback = n;
      }
      visit(n, a2, r) {
        if (this.callback(n, a2, r), Array.isArray(n.children))
          for (let t = 0; t < n.children.length; t++) {
            let o = n.children[t];
            this.visit(o, n, t);
          }
      }
    };
    N = Symbol("HTMLString");
    S = Symbol("AttrString");
    u = Symbol("RenderFn");
  }
});

// dist/$server_build/chunks/vnode-children.5a6df93a.mjs
var vnode_children_5a6df93a_exports = {};
__export(vnode_children_5a6df93a_exports, {
  default: () => convert
});
function convert(children) {
  const nodeMap = /* @__PURE__ */ new WeakMap();
  let doc = w(children.toString().trim());
  let root = (0, import_react.createElement)(import_react.Fragment, { children: [] });
  H(doc, (node, parent, index) => {
    let newNode = {};
    if (node.type === L) {
      nodeMap.set(node, root);
    } else if (node.type === R) {
      const { class: className, ...props } = node.attributes;
      newNode = (0, import_react.createElement)(node.name, { ...props, className, children: [] });
      nodeMap.set(node, newNode);
      if (parent) {
        const newParent = nodeMap.get(parent);
        newParent.props.children[index] = newNode;
      }
    } else if (node.type === k) {
      newNode = node.value.trim();
      if (newNode.trim()) {
        if (parent) {
          const newParent = nodeMap.get(parent);
          if (parent.children.length === 1) {
            newParent.props.children[0] = newNode;
          } else {
            newParent.props.children[index] = newNode;
          }
        }
      }
    }
  });
  return root.props.children;
}
var import_react;
var init_vnode_children_5a6df93a = __esm({
  "dist/$server_build/chunks/vnode-children.5a6df93a.mjs"() {
    init_dist2();
    import_react = __toESM(require_react(), 1);
  }
});

// dist/$server_build/renderers.mjs
function getContext(rendererContextResult) {
  if (contexts.has(rendererContextResult)) {
    return contexts.get(rendererContextResult);
  }
  const ctx = {
    currentIndex: 0,
    get id() {
      return ID_PREFIX + this.currentIndex.toString();
    }
  };
  contexts.set(rendererContextResult, ctx);
  return ctx;
}
function incrementId(rendererContextResult) {
  const ctx = getContext(rendererContextResult);
  const id = ctx.id;
  ctx.currentIndex++;
  return id;
}
function errorIsComingFromPreactComponent(err) {
  return err.message && (err.message.startsWith("Cannot read property '__H'") || err.message.includes("(reading '__H')"));
}
async function check2(Component, props, children) {
  if (typeof Component === "object") {
    return Component["$$typeof"].toString().slice("Symbol(".length).startsWith("react");
  }
  if (typeof Component !== "function")
    return false;
  if (Component.prototype != null && typeof Component.prototype.render === "function") {
    return import_react2.default.Component.isPrototypeOf(Component) || import_react2.default.PureComponent.isPrototypeOf(Component);
  }
  let error2 = null;
  let isReactComponent = false;
  function Tester(...args) {
    try {
      const vnode = Component(...args);
      if (vnode && vnode["$$typeof"] === reactTypeof) {
        isReactComponent = true;
      }
    } catch (err) {
      if (!errorIsComingFromPreactComponent(err)) {
        error2 = err;
      }
    }
    return import_react2.default.createElement("div");
  }
  await renderToStaticMarkup2(Tester, props, children, {});
  if (error2) {
    throw error2;
  }
  return isReactComponent;
}
async function getNodeWritable() {
  let nodeStreamBuiltinModuleName = "stream";
  let { Writable } = await import(
    /* @vite-ignore */
    nodeStreamBuiltinModuleName
  );
  return Writable;
}
function needsHydration(metadata) {
  return metadata.astroStaticSlot ? !!metadata.hydrate : true;
}
async function renderToStaticMarkup2(Component, props, { default: children, ...slotted }, metadata) {
  let prefix;
  if (this && this.result) {
    prefix = incrementId(this.result);
  }
  const attrs = { prefix };
  delete props["class"];
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName2(key);
    slots[name] = import_react2.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value,
      name
    });
  }
  const newProps = {
    ...props,
    ...slots
  };
  const newChildren = children ?? props.children;
  if (children && opts.experimentalReactChildren) {
    const convert2 = await Promise.resolve().then(() => (init_vnode_children_5a6df93a(), vnode_children_5a6df93a_exports)).then((mod) => mod.default);
    newProps.children = convert2(children);
  } else if (newChildren != null) {
    newProps.children = import_react2.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value: newChildren
    });
  }
  const vnode = import_react2.default.createElement(Component, newProps);
  const renderOptions = {
    identifierPrefix: prefix
  };
  let html;
  if (metadata?.hydrate) {
    if ("renderToReadableStream" in import_server.default) {
      html = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html = await renderToPipeableStreamAsync(vnode, renderOptions);
    }
  } else {
    if ("renderToReadableStream" in import_server.default) {
      html = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html = await renderToStaticNodeStreamAsync(vnode, renderOptions);
    }
  }
  return { html, attrs };
}
async function renderToPipeableStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html = "";
  return new Promise((resolve, reject) => {
    let error2 = void 0;
    let stream = import_server.default.renderToPipeableStream(vnode, {
      ...options,
      onError(err) {
        error2 = err;
        reject(error2);
      },
      onAllReady() {
        stream.pipe(
          new Writable({
            write(chunk2, _encoding, callback) {
              html += chunk2.toString("utf-8");
              callback();
            },
            destroy() {
              resolve(html);
            }
          })
        );
      }
    });
  });
}
async function renderToStaticNodeStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html = "";
  return new Promise((resolve, reject) => {
    let stream = import_server.default.renderToStaticNodeStream(vnode, options);
    stream.on("error", (err) => {
      reject(err);
    });
    stream.pipe(
      new Writable({
        write(chunk2, _encoding, callback) {
          html += chunk2.toString("utf-8");
          callback();
        },
        destroy() {
          resolve(html);
        }
      })
    );
  });
}
async function readResult(stream) {
  const reader = stream.getReader();
  let result = "";
  const decoder2 = new TextDecoder("utf-8");
  while (true) {
    const { done, value } = await reader.read();
    if (done) {
      if (value) {
        result += decoder2.decode(value);
      } else {
        decoder2.decode(new Uint8Array());
      }
      return result;
    }
    result += decoder2.decode(value, { stream: true });
  }
}
async function renderToReadableStreamAsync(vnode, options) {
  return await readResult(await import_server.default.renderToReadableStream(vnode, options));
}
var import_react2, import_server, import_cookie2, import_mime2, StaticHtml, contexts, ID_PREFIX, opts, slotName2, reactTypeof, _renderer1, renderers;
var init_renderers = __esm({
  "dist/$server_build/renderers.mjs"() {
    init_astro_0fa599e7();
    import_react2 = __toESM(require_react(), 1);
    import_server = __toESM(require_server_browser(), 1);
    import_cookie2 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime2 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    StaticHtml = ({ value, name, hydrate = true }) => {
      if (!value)
        return null;
      const tagName = hydrate ? "astro-slot" : "astro-static-slot";
      return (0, import_react2.createElement)(tagName, {
        name,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: { __html: value }
      });
    };
    StaticHtml.shouldComponentUpdate = () => false;
    contexts = /* @__PURE__ */ new WeakMap();
    ID_PREFIX = "r";
    opts = {
      experimentalReactChildren: false
    };
    slotName2 = (str) => str.trim().replace(/[-_]([a-z])/g, (_2, w2) => w2.toUpperCase());
    reactTypeof = Symbol.for("react.element");
    _renderer1 = {
      check: check2,
      renderToStaticMarkup: renderToStaticMarkup2,
      supportsAstroStaticSlot: true
    };
    renderers = [Object.assign({ "name": "astro:jsx", "serverEntrypoint": "astro/jsx/server.js", "jsxImportSource": "astro" }, { ssr: server_default }), Object.assign({ "name": "@astrojs/react", "clientEntrypoint": "@astrojs/react/client.js", "serverEntrypoint": "@astrojs/react/server.js", "jsxImportSource": "react" }, { ssr: _renderer1 })];
  }
});

// dist/$server_build/middleware2.mjs
function onRequest({ locals, request }, next) {
  const userAgentHeader = request.headers.get("user-agent");
  const userAgent = userAgentHeader ? userAgentHeader : "Unknown";
  console.log("User Agent:", userAgent);
  locals.url = request.url;
  const isSupportedBrowser = userAgents.some((agent) => userAgent.includes(agent));
  if (isSupportedBrowser) {
    if (request.url.includes("www.")) {
      return new Response("", {
        status: 301,
        headers: {
          "Location": request.url.replace("www.", "")
        }
      });
    }
    return next();
  } else {
    return new Response("Method not Allowed", {
      status: 405
    });
  }
}
var userAgents;
var init_middleware2 = __esm({
  "dist/$server_build/middleware2.mjs"() {
    userAgents = [
      "Mozilla",
      // Common string for multiple browsers
      "Chrome",
      // Chrome browser
      "Firefox",
      // Firefox browser
      "Safari",
      // Safari browser
      "Edg",
      // Microsoft Edge browser
      "Opera",
      // Opera browser
      "Trident",
      // Internet Explorer browser
      "AppleWebKit",
      // WebKit-based browsers
      "Googlebot",
      "AdsBot",
      "Mediapartners",
      "Bingbot",
      // Bingbot crawler
      "Slurp",
      // Yahoo Slurp crawler
      "DuckDuckBot",
      // DuckDuckGo crawler
      "Baiduspider",
      // Baidu spider
      "YandexBot",
      // Yandex crawler // Googlebot crawler
      "facebookexternalhit",
      "Twitterbot",
      "TwitterBot"
    ];
  }
});

// dist/$server_build/chunks/pages/_...business_.astro.1d423138.mjs
var business_astro_1d423138_exports = {};
__export(business_astro_1d423138_exports, {
  $: () => $$Pagination,
  _: () => ____business_,
  a: () => $$Layout,
  b: () => $$CatButton,
  d: () => db
});
async function fetcher(query, rd) {
  const { db: db2, id, _view, _design, params, insert: insert2 } = query;
  const body = JSON.stringify(query);
  const isPost = body?.includes("_id") || insert2;
  const rdm = (rd || 100).toString();
  const buildurl = `${url}${db2 ? db2 + "/" : "db/"}${_design ? `_design/${_design}/_view/${_view}?${params}` : ""}${id ? `${id}?rd=${rdm}` : `&rd=${rdm}`}`;
  console.log(buildurl);
  const response = await fetch(buildurl, {
    method: isPost ? "POST" : "GET",
    headers: {
      "Content-Type": "application/json"
    },
    body: isPost ? body : null
  });
  const d = await response.json();
  return d;
}
async function get(id, rd) {
  const d = await fetcher({ id }, rd || 100);
  if (d.error) {
    return Promise.resolve({ error: "not found" });
  }
  d.id = d._id;
  return Promise.resolve(d);
}
async function view(id, params) {
  const split = id.split("/");
  const d = await fetcher({
    _design: split[0],
    _view: split[1],
    params: serialize2(params)
  });
  const rows = d.rows.map((x2) => {
    const val = typeof x2.value === "string" ? { value: x2.value, ...x2.doc } : { ...x2.value, ...x2.doc };
    return { ...val, id: x2.id, key: x2.key, value: x2.value };
  });
  if (rows.length === 1) {
    return Promise.resolve(rows[0]);
  }
  return Promise.resolve({ ...d, rows });
}
async function insert(obj) {
  const ins = await fetcher(obj);
  return Promise.resolve(ins);
}
async function multiple(db2, obj) {
  const response = await fetch(url + "" + db2 + "/_all_docs", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({ keys: obj })
  });
  const d = await response.json();
  return Promise.resolve(d.rows);
}
var $$Astro$6, $$Footer, $$Astro$5, $$DarkSwitchher, __freeze$1, __defProp$1, __template$1, _a$12, $$Astro$4, $$Header, __freeze, __defProp2, __template, _a2, _b, $$Astro$3, $$Layout, url, serialize2, db, $$Astro$2, $$CatButton, $$Astro$1, $$Pagination, businesses, $$Astro, prerender, $$, $$file, $$url, ____business_;
var init_business_astro_1d423138 = __esm({
  "dist/$server_build/chunks/pages/_...business_.astro.1d423138.mjs"() {
    init_astro_0fa599e7();
    $$Astro$6 = createAstro();
    $$Footer = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$6, $$props, $$slots);
      Astro2.self = $$Footer;
      return renderTemplate`${maybeRenderHead()}<footer class="relative">
    <div class="grid grid-cols-2 sm:grid-cols-5 md:grid-cols-6 pb-6 gap-3 container mx-auto px-4">
        <div class="z-10 text-sm">
            <h3 class="headingbottom">Services</h3>
            <a class="block" href="/vicove">Вицове</a>
            <a class="block" href="/news">Новини</a>
            <a class="block" href="https://eziktok.com/">ezikTok</a>
            <a class="block" href="/business">Бизнес</a>
        </div>
        <div class="z-10 text-sm text-right sm:text-left">
            <div class="headingbottom">&nbsp;</div><a class="block" href="/movies">Филми</a>
            <a class="block" href="/tw">Туитър ДБ (бета)</a><a class="block" href="https://rudixops.com/">DevOps</a>
        </div>
        <div class="z-10 text-sm text-right sm:text-left hidden sm:block"></div>
        <div class="z-10 text-sm text-right sm:text-left hidden md:block"></div>
        <div class="z-10 text-sm">
            <h3 class="headingbottom">Company</h3><a class="block" href="/other/about">За</a><a class="block" href="/other/contact">Контакт</a>
        </div>
        <div class="z-10 text-sm">
            <h3 class="headingbottom text-right">Legal</h3><a class="block text-right" href="/other/terms">Terms of use</a><a class="block text-right" href="/other/privacy">Privacy policy</a>
        </div>
    </div>
    <div class="w-full absolute z-0 bottom-0">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="w-full z-10 hidden dark:block">
            <path fill="#00b894" d="m0 224 48 10.7C96 245 192 267 288 240c96-27 192-101 288-96s192 91 288 101.3c96 10.7 192-53.3 288-90.6 96-37.7 192-47.7 240-53.4l48-5.3v224H0Z"></path>
        </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="w-full z-10 dark:hidden block">
            <path fill="#2d3748" d="m0 224 48 10.7C96 245 192 267 288 240c96-27 192-101 288-96s192 91 288 101.3c96 10.7 192-53.3 288-90.6 96-37.7 192-47.7 240-53.4l48-5.3v224H0Z"></path>
        </svg>
        <div class="flex justify-center items-center text-xs text-gray-600 z-10 absolute w-full bottom-2 drop-shadow-md dark:text-white">
            2023 kloun | All Rights Reserved ®
        </div>
    </div>
</footer>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/Footer.astro", void 0);
    $$Astro$5 = createAstro();
    $$DarkSwitchher = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
      Astro2.self = $$DarkSwitchher;
      return renderTemplate`${maybeRenderHead()}<button id="theme-toggle" type="button" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
	<svg id="theme-toggle-dark-icon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
		<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z">
		</path>
	</svg>
	<svg id="theme-toggle-light-icon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
		<path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
	</svg>
</button>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/DarkSwitchher.astro", void 0);
    __freeze$1 = Object.freeze;
    __defProp$1 = Object.defineProperty;
    __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw || cooked.slice()) }));
    $$Astro$4 = createAstro();
    $$Header = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
      Astro2.self = $$Header;
      return renderTemplate(_a$12 || (_a$12 = __template$1(["", '<header>\n    <div class="flex w-full items-center justify-center sm:justify-start md:justify-center">\n        <svg viewBox="0 0 1440 190" xmlns="http://www.w3.org/2000/svg" class="w-full block fill-gray-800 dark:fill-blue-500 absolute top-0 z-0"><path d="M0 128h48c48 0 144 0 240-16s192-48 288-42.7c96 5.7 192 47.7 288 48 96-.3 192-42.3 288-42.6 96 .3 192 42.3 240 64l48 21.3V0H0z"></path></svg><div class="w-24 sm:w-24 md:w-fit relative z-10">\n            <a href="https://kloun.lol/">\n                ', '\n                <img src="/images/logodark.png" width="140" height="181" alt="" class="absolute dark:grayscale blur-lg duration-500 dark:blur-none top-0"></a>\n        </div><ul tabindex="0" class="hidden sm:flex justify-end w-full items-center space-x-4 pr-2 -mt-12 z-10">\n            <li><a class="text-shadow font-bold" href="/">\u041D\u0430\u0447\u0430\u043B\u043E</a></li><li>\n                <a class="text-shadow font-bold" href="/vicove">\u0412\u0438\u0446\u043E\u0432\u0435</a>\n            </li><li>\n                <a class="text-shadow font-bold" href="/fb">\u041A\u044A\u0441\u043C\u0435\u0442\u0447\u0435\u0442\u0430</a>\n            </li><li>\n                ', '\n            </li>\n        </ul>\n    </div><div class="z-40 top-0 fixed">\n        <label class="cursor-pointer visible xs:visible sm:invisible backdrop-blur-sm bg-black/30 dark:bg-white/30 false"><input type="checkbox" class="hidden"><svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 m-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path></svg></label><div class="hidden">\n            <ul tabindex="0" class="mt-3 w-52 p-2 shadow bg flex flex-col fixed top-8 left-2 rounded-md border-2 border-white dark:border-black gap-4">\n                <li><a class="text-shadow font-bold" href="/">\u041D\u0430\u0447\u0430\u043B\u043E</a></li><li>\n                    <a class="text-shadow font-bold" href="/vicove">\u0412\u0438\u0446\u043E\u0432\u0435</a>\n                </li><li>\n                    <a class="text-shadow font-bold" href="/fb">\u041A\u044A\u0441\u043C\u0435\u0442\u0447\u0435\u0442\u0430</a>\n                </li><li>\n                    ', '\n                </li>\n            </ul>\n        </div>\n    </div>\n</header>\n\n<script>\nconst theme = (() => {\n    if (\n        typeof localStorage !== "undefined" &&\n        localStorage.getItem("theme")\n    ) {\n        return localStorage.getItem("theme");\n    }\n    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {\n        return "light";\n    }\n    return "dark";\n})();\n\nlocalStorage.setItem("theme", theme);\n\nvar themeToggleDarkIcon = document.getElementById("theme-toggle-dark-icon");\nvar themeToggleLightIcon = document.getElementById(\n    "theme-toggle-light-icon"\n);\n\n// Change the icons inside the button based on previous settings\nif (\n    localStorage.getItem("theme") === "dark" ||\n    (!("theme" in localStorage) &&\n        window.matchMedia("(prefers-color-scheme: dark)").matches)\n) {\n    themeToggleLightIcon.classList.remove("hidden");\n} else {\n    themeToggleDarkIcon.classList.remove("hidden");\n}\n\nvar themeToggleBtn = document.getElementById("theme-toggle");\n\nthemeToggleBtn.addEventListener("click", function () {\n    // toggle icons inside button\n    themeToggleDarkIcon.classList.toggle("hidden");\n    themeToggleLightIcon.classList.toggle("hidden");\n\n    // if set via local storage previously\n    if (localStorage.getItem("theme")) {\n        if (localStorage.getItem("theme") === "light") {\n            document.documentElement.classList.add("dark");\n            localStorage.setItem("theme", "dark");\n        } else {\n            document.documentElement.classList.remove("dark");\n            localStorage.setItem("theme", "light");\n        }\n\n        // if NOT set via local storage previously\n    } else {\n        if (document.documentElement.classList.contains("dark")) {\n            document.documentElement.classList.remove("dark");\n            localStorage.setItem("theme", "light");\n            } else {\n                document.documentElement.classList.add("dark");\n                localStorage.setItem("theme", "dark");\n            }\n        }\n    });\n<\/script>'])), maybeRenderHead(), renderComponent($$result, "amp-img", "amp-img", { "layout": "fixed", "src": "/images/logodark.png", "alt": "", "class": "dark:sepia i-amphtml-element i-amphtml-layout-fixed i-amphtml-layout-size-defined i-amphtml-built i-amphtml-layout amp-notsupported", "width": "140", "height": "181", "i-amphtml-layout": "fixed", "style": "width: 140px; height: 181px; --loader-delay-offset: 296ms !important;" }, { "default": () => renderTemplate`<img decoding="async" alt="" src="/images/logodark.png" class="i-amphtml-fill-content i-amphtml-replaced-content i-amphtml-ghost">` }), renderComponent($$result, "DarkSwitchher", $$DarkSwitchher, {}), renderComponent($$result, "DarkSwitchher", $$DarkSwitchher, {}));
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/Header.astro", void 0);
    __freeze = Object.freeze;
    __defProp2 = Object.defineProperty;
    __template = (cooked, raw) => __freeze(__defProp2(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
    $$Astro$3 = createAstro();
    $$Layout = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
      Astro2.self = $$Layout;
      const { title, description, image, noContainer, hideFooter } = Astro2.props;
      const currentPath = "https://kloun.lol" + Astro2.url.pathname;
      return renderTemplate(_b || (_b = __template(['<html lang="bg">\n	<head>\n		<meta charset="UTF-8">\n		<meta name="viewport" content="width=device-width, initial-scale=1.0">\n		<link rel="icon" type="image/svg+xml" href="/favicon.svg">\n		<title>', '</title>\n		<meta name="description"', '>\n		<link rel="canonical"', '>\n		<meta name="twitter:card" content="summary_large_image">\n		<meta name="twitter:site" content="@site">\n		<meta name="twitter:creator" content="@handle">\n		<meta property="fb:app_id" content="281985576166744">\n		<meta property="og:title"', '>\n		<meta property="og:description"', '>\n		<meta property="og:url"', '>\n		<meta property="og:type" content="article">\n		<meta property="og:image"', '>\n		<meta property="og:image:alt" content="Og Image Alt">\n		<meta property="og:image:type" content="image/jpeg">\n		<meta property="og:image:width" content="800">\n		<meta property="og:image:height" content="600">\n		<meta property="og:site_name" content="kloun.lol">\n		<meta name="theme-color" media="(prefers-color-scheme: light)" content="light">\n		', "\n	", '</head>\n	<body>\n		<div class="flex flex-col h-screen">\n			', "\n			", "\n			", `
		</div>
		<div id="fb-root"></div>
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-PDX6T8DTFR"><\/script>
		<script id="rendered-js">
			function fbshare(url) {
				window.open(
					"http://www.facebook.com/sharer.php?u=" +
						encodeURIComponent(url),
					"sharer",
					"toolbar=0,status=0,width=626,height=436"
				);
				return false;
			}
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag("js", new Date());
			gtag("config", "G-PDX6T8DTFR");
			//
			window.addEventListener('load', function() {
			  // Get all <a> elements with rel="refetch"
			  const refetchLinks = Array.from(document.querySelectorAll('a[rel="prefetch"]'));
			
			  // Extract the href values
			  const hrefs = refetchLinks.map(link => link.href);
			  console.log(hrefs)
		 
			  fetch('https://imgnews.kloun.lol/fetch-urls', {
				method: 'POST',
				headers: {
				  'Content-Type': 'application/json', 
				},
				body: JSON.stringify({urls:hrefs})
			  })
			  .then(response => {
				if (response.ok) {
				  console.log('POST request successful');
				} else {
				  console.error('Error:', response.status);
				}
			  })
			  .catch(error => {
				console.error('Error:', error);
			  });
			});
		<\/script>
	</body>
</html>`])), title, addAttribute(description || "Zero in on  social media presence by checking out their  profiles, featuring photos and engaging content", "content"), addAttribute(currentPath, "href"), addAttribute(title, "content"), addAttribute(description, "content"), addAttribute(currentPath, "content"), addAttribute(image || "https://kloun.pages.dev/images/og.jpg", "content"), !hideFooter && renderTemplate(_a2 || (_a2 = __template(['<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5476404733919333" crossorigin="anonymous"><\/script>']))), renderHead(), renderComponent($$result, "Header", $$Header, {}), noContainer ? renderTemplate`<main class="flex z-20 grow">
						${renderSlot($$result, $$slots["default"])}
					</main>` : renderTemplate`<main class="container mx-auto z-20 grow px-1">
						${renderSlot($$result, $$slots["default"])}
					</main>`, renderComponent($$result, "Footer", $$Footer, {}));
    }, "/home/runner/work/monext/monext/apps/kloun/src/layouts/Layout.astro", void 0);
    url = "https://cache.kloun.lol/";
    serialize2 = (obj) => {
      return Object.entries(obj).map(
        ([key, val]) => `${key}=${key === "key" || key === "start_key" ? `"${val}"` : val}`
      ).join("&");
    };
    db = {
      view,
      get,
      insert,
      multiple
    };
    $$Astro$2 = createAstro();
    $$CatButton = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
      Astro2.self = $$CatButton;
      const { url: url3, title, count } = Astro2.props;
      const formatcount = (count2) => {
        if (count2 > 1500) {
          return `${Math.floor(count2 / 1e3)}k`;
        }
        return count2;
      };
      return renderTemplate`${maybeRenderHead()}<a class="w-full grow sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5"${addAttribute(url3, "href")}>
    <div class="flex h-full items-center rounded border border-gray-800 bg-gray-800 p-4 dark:border-gray-500 dark:bg-slate-100">
        <div class="flex-1 justify-center align-middle text-white dark:text-gray-800">
            <span class="text-shadow font-black">${title}</span>
        </div>${count && renderTemplate`<div class="btn1-count">${formatcount(count)}</div>`}
    </div>
</a>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/CatButton.astro", void 0);
    $$Astro$1 = createAstro();
    $$Pagination = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
      Astro2.self = $$Pagination;
      const { items, pageSize, currentPage, prefix } = Astro2.props;
      function makeArray({
        pagesToShow,
        items: items2,
        pageSize: pageSize2,
        currentPage: currentPage2
      }) {
        const middle = Math.floor(pagesToShow / 2);
        const isArr = Array.isArray(items2);
        let startIndex = currentPage2 - middle;
        let endIndex = currentPage2 + middle;
        const pagesCount = Math.ceil(isArr ? items2.length : items2 / pageSize2);
        const pages = Array.from({ length: pagesCount }, (_2, i2) => i2 + 1);
        if (startIndex < 1) {
          startIndex = 1;
          endIndex = startIndex + pagesToShow;
          if (endIndex > pagesCount) {
            endIndex = pagesCount;
          }
        }
        if (endIndex > pagesCount) {
          endIndex = pagesCount;
          startIndex = endIndex - pagesToShow;
          if (startIndex < 1) {
            startIndex = 1;
          }
        }
        const pagesToRender2 = pages.slice(startIndex - 1, endIndex);
        return pagesToRender2;
      }
      const pagesToRender = makeArray({
        pagesToShow: 9,
        items,
        pageSize,
        currentPage
      });
      const pagesToRenderMobile = makeArray({
        pagesToShow: 3,
        items,
        pageSize,
        currentPage
      });
      return renderTemplate`${pagesToRender[1] && renderTemplate`${maybeRenderHead()}<div class="fixed bottom-2 left-2 right-2 z-20 flex justify-center bg-black/30 p-4 backdrop-blur-sm rounded-xl">
            <div class="btn-group hidden sm:flex">
                ${pagesToRender.map((page22) => renderTemplate`<a rel="prefetch"${addAttribute(
        page22 === currentPage ? "#" : `${prefix}${page22 === 1 ? prefix.includes("_") ? 1 : "" : page22}/`,
        "href"
      )}${addAttribute(
        page22 === currentPage ? "btn px-4 font-bold bg-gray-700 dark:bg-gray-500" : "btn px-4 font-bold",
        "class"
      )}>
                        ${page22}
                    </a>`)}
            </div>
            <div class="block xs:hidden sm:hidden">
                <div class="btn-group">
                    ${pagesToRenderMobile.map((page22) => renderTemplate`<a${addAttribute(
        page22 === currentPage ? "#" : `${prefix}${page22 === 1 ? "" : page22}/`,
        "href"
      )} rel="nofollow"${addAttribute(
        page22 === currentPage ? "btn px-4 font-bold bg-gray-700 dark:bg-gray-500" : "btn px-4 font-bold",
        "class"
      )}>
                            ${page22}
                        </a>`)}
                </div>
            </div>
        </div>`}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/Pagination.astro", void 0);
    businesses = [{ "key": "\u0410\u0431\u043B\u0430\u043D\u0438\u0446\u0430", "value": 130, "slug": "ablanica" }, { "key": "\u0410\u0431\u0440\u0438\u0442", "value": 6, "slug": "abrit" }, { "key": "\u0410\u0432\u0440\u0430\u043C\u043E\u0432\u043E", "value": 21, "slug": "avramovo" }, { "key": "\u0410\u0432\u0440\u0435\u043D", "value": 100, "slug": "avren" }, { "key": "\u0410\u0433\u0430\u0442\u043E\u0432\u043E", "value": 8, "slug": "agatovo" }, { "key": "\u0410\u0439\u0434\u0435\u043C\u0438\u0440", "value": 280, "slug": "aydemir" }, { "key": "\u0410\u0439\u0440\u043E\u0432\u043E", "value": 31, "slug": "ayrovo" }, { "key": "\u0410\u0439\u0442\u043E\u0441", "value": 1531, "slug": "aytos" }, { "key": "\u0410\u043A\u0430\u043D\u0434\u0436\u0438\u0435\u0432\u043E", "value": 9, "slug": "akandzhievo" }, { "key": "\u0410\u043A\u0430\u0446\u0438\u0435\u0432\u043E", "value": 1, "slug": "akacievo" }, { "key": "\u0410\u043A\u0441\u0430\u043A\u043E\u0432\u043E", "value": 569, "slug": "aksakovo" }, { "key": "\u0410\u043B\u0430\u043C\u043E\u0432\u0446\u0438", "value": 4, "slug": "alamovci" }, { "key": "\u0410\u043B\u0431\u0430\u043D\u0446\u0438", "value": 1, "slug": "albanci" }, { "key": "\u0410\u043B\u0432\u0430\u043D\u043E\u0432\u043E", "value": 4, "slug": "alvanovo" }, { "key": "\u0410\u043B\u0434\u043E\u043C\u0438\u0440\u043E\u0432\u0446\u0438", "value": 79, "slug": "aldomirovci" }, { "key": "\u0410\u043B\u0435\u043A\u043E \u041A\u043E\u043D\u0441\u0442\u0430\u043D\u0442\u0438\u043D\u043E\u0432\u043E", "value": 47, "slug": "aleko-konstantinovo" }, { "key": "\u0410\u043B\u0435\u043A\u043E\u0432\u043E", "value": 23, "slug": "alekovo" }, { "key": "\u0410\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440\u0438\u044F", "value": 4, "slug": "aleksandriya" }, { "key": "\u0410\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440\u043E\u0432\u043E", "value": 154, "slug": "aleksandrovo" }, { "key": "\u0410\u043B\u0435\u043D\u0434\u0430\u0440\u043E\u0432\u0430", "value": 3, "slug": "alendarova" }, { "key": "\u0410\u043B\u0438\u043D\u043E", "value": 10, "slug": "alino" }, { "key": "\u0410\u043B\u0442\u0438\u043C\u0438\u0440", "value": 29, "slug": "altimir" }, { "key": "\u0410\u043B\u0444\u0430\u0442\u0430\u0440", "value": 65, "slug": "alfatar" }, { "key": "\u0410\u043B\u0446\u0435\u043A", "value": 2, "slug": "alcek" }, { "key": "\u0410\u043D\u0433\u0435\u043B \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 12, "slug": "angel-voyvoda" }, { "key": "\u0410\u043D\u0433\u0435\u043B\u0430\u0440\u0438\u0439", "value": 1, "slug": "angelariy" }, { "key": "\u0410\u043D\u0435\u0432\u043E", "value": 21, "slug": "anevo" }, { "key": "\u0410\u043D\u0442\u0438\u043C\u043E\u0432\u043E", "value": 21, "slug": "antimovo" }, { "key": "\u0410\u043D\u0442\u043E\u043D", "value": 65, "slug": "anton" }, { "key": "\u0410\u043D\u0442\u043E\u043D\u043E\u0432\u043E", "value": 83, "slug": "antonovo" }, { "key": "\u0410\u043F\u0440\u0438\u043B\u043E\u0432\u043E", "value": 69, "slug": "aprilovo" }, { "key": "\u0410\u043F\u0440\u0438\u043B\u0446\u0438", "value": 242, "slug": "aprilci" }, { "key": "\u0410\u0440\u0431\u0430\u043D\u0430\u0441\u0438", "value": 52, "slug": "arbanasi" }, { "key": "\u0410\u0440\u0434\u0430", "value": 13, "slug": "arda" }, { "key": "\u0410\u0440\u0434\u0438\u043D\u043E", "value": 217, "slug": "ardino" }, { "key": "\u0410\u0440\u043A\u043E\u0432\u043D\u0430", "value": 2, "slug": "arkovna" }, { "key": "\u0410\u0440\u043C\u0435\u043D\u0438\u0442\u0435", "value": 5, "slug": "armenite" }, { "key": "\u0410\u0440\u043D\u0430\u0443\u0442\u0438\u0442\u043E", "value": 6, "slug": "arnautito" }, { "key": "\u0410\u0440\u0447\u0430\u0440", "value": 69, "slug": "archar" }, { "key": "\u0410\u0441\u0435\u043D", "value": 12, "slug": "asen" }, { "key": "\u0410\u0441\u0435\u043D\u043E\u0432\u0433\u0440\u0430\u0434", "value": 4690, "slug": "asenovgrad" }, { "key": "\u0410\u0441\u0435\u043D\u043E\u0432\u0435\u0446", "value": 29, "slug": "asenovec" }, { "key": "\u0410\u0441\u0435\u043D\u043E\u0432\u043E", "value": 29, "slug": "asenovo" }, { "key": "\u0410\u0441\u0435\u043D\u043E\u0432\u0446\u0438", "value": 16, "slug": "asenovci" }, { "key": "\u0410\u0441\u043F\u0430\u0440\u0443\u0445\u043E\u0432\u043E", "value": 63, "slug": "asparuhovo" }, { "key": "\u0410\u0442\u0438\u044F", "value": 47, "slug": "atiya" }, { "key": "\u0410\u0442\u043E\u043B\u043E\u0432\u043E", "value": 9, "slug": "atolovo" }, { "key": "\u0410\u0443\u0441\u0442\u0430", "value": 2, "slug": "austa" }, { "key": "\u0410\u0445\u0435\u043B\u043E\u0439", "value": 345, "slug": "aheloy" }, { "key": "\u0410\u0445\u043C\u0430\u0442\u043E\u0432\u043E", "value": 4, "slug": "ahmatovo" }, { "key": "\u0410\u0445\u0442\u043E\u043F\u043E\u043B", "value": 174, "slug": "ahtopol" }, { "key": "\u0411\u0430\u0431\u0435\u043A", "value": 3, "slug": "babek" }, { "key": "\u0411\u0430\u0431\u0438\u043D\u043E", "value": 4, "slug": "babino" }, { "key": "\u0411\u0430\u0431\u0438\u043D\u0446\u0438", "value": 6, "slug": "babinci" }, { "key": "\u0411\u0430\u0431\u043E\u0432\u043E", "value": 23, "slug": "babovo" }, { "key": "\u0411\u0430\u0431\u0443\u043A", "value": 16, "slug": "babuk" }, { "key": "\u0411\u0430\u0431\u044F\u043A", "value": 17, "slug": "babyak" }, { "key": "\u0411\u0430\u0433\u0430\u043B\u0435\u0432\u0446\u0438", "value": 2, "slug": "bagalevci" }, { "key": "\u0411\u0430\u0433\u0440\u0435\u043D\u0446\u0438", "value": 8, "slug": "bagrenci" }, { "key": "\u0411\u0430\u0433\u0440\u0438\u043B\u0446\u0438", "value": 4, "slug": "bagrilci" }, { "key": "\u0411\u0430\u0433\u0440\u044F\u043D\u043A\u0430", "value": 5, "slug": "bagryanka" }, { "key": "\u0411\u0430\u0434\u0435\u0432\u0446\u0438", "value": 1, "slug": "badevci" }, { "key": "\u0411\u0430\u0439\u043A\u0430\u043B", "value": 8, "slug": "baykal" }, { "key": "\u0411\u0430\u0439\u043A\u0430\u043B\u0441\u043A\u043E", "value": 2, "slug": "baykalsko" }, { "key": "\u0411\u0430\u0439\u043A\u043E\u0432\u043E", "value": 5, "slug": "baykovo" }, { "key": "\u0411\u0430\u0439\u043B\u043E\u0432\u043E", "value": 11, "slug": "baylovo" }, { "key": "\u0411\u0430\u043A\u0430\u043B\u0438\u0442\u0435", "value": 1, "slug": "bakalite" }, { "key": "\u0411\u0430\u043B\u0430\u0431\u0430\u043D\u043E\u0432\u043E", "value": 1, "slug": "balabanovo" }, { "key": "\u0411\u0430\u043B\u0430\u0431\u0430\u043D\u0441\u043A\u043E", "value": 5, "slug": "balabansko" }, { "key": "\u0411\u0430\u043B\u0430\u043D\u0438\u0442\u0435", "value": 3, "slug": "balanite" }, { "key": "\u0411\u0430\u043B\u0430\u043D\u043E\u0432\u043E", "value": 14, "slug": "balanovo" }, { "key": "\u0411\u0430\u043B\u0432\u0430\u043D", "value": 14, "slug": "balvan" }, { "key": "\u0411\u0430\u043B\u0434\u0435\u0432\u043E", "value": 5, "slug": "baldevo" }, { "key": "\u0411\u0430\u043B\u0435\u0439", "value": 8, "slug": "baley" }, { "key": "\u0411\u0430\u043B\u0438\u043A", "value": 5, "slug": "balik" }, { "key": "\u0411\u0430\u043B\u043A\u0430\u043D", "value": 4, "slug": "balkan" }, { "key": "\u0411\u0430\u043B\u043A\u0430\u043D\u0435\u0446", "value": 9, "slug": "balkanec" }, { "key": "\u0411\u0430\u043B\u043A\u0430\u043D\u0441\u043A\u0438", "value": 8, "slug": "balkanski" }, { "key": "\u0411\u0430\u043B\u043A\u0430\u043D\u0446\u0438", "value": 10, "slug": "balkanci" }, { "key": "\u0411\u0430\u043B\u0443\u0446\u0438", "value": 7, "slug": "baluci" }, { "key": "\u0411\u0430\u043B\u0447\u0438\u043A", "value": 1217, "slug": "balchik" }, { "key": "\u0411\u0430\u043B\u0448\u0430", "value": 18, "slug": "balsha" }, { "key": "\u0411\u0430\u043B\u044E\u0432\u0438\u0446\u0430", "value": 2, "slug": "balyuvica" }, { "key": "\u0411\u0430\u043D\u0433\u0435\u0439\u0446\u0438", "value": 2, "slug": "bangeyci" }, { "key": "\u0411\u0430\u043D\u0435\u0432\u043E", "value": 63, "slug": "banevo" }, { "key": "\u0411\u0430\u043D\u0438\u0441\u043A\u0430", "value": 29, "slug": "baniska" }, { "key": "\u0411\u0430\u043D\u0438\u0442\u0435", "value": 100, "slug": "banite" }, { "key": "\u0411\u0430\u043D\u0438\u0446\u0430", "value": 13, "slug": "banica" }, { "key": "\u0411\u0430\u043D\u0438\u0447\u0430\u043D", "value": 29, "slug": "banichan" }, { "key": "\u0411\u0430\u043D\u0438\u0449\u0435", "value": 3, "slug": "banishche" }, { "key": "\u0411\u0430\u043D\u043A\u044F", "value": 946, "slug": "bankya" }, { "key": "\u0411\u0430\u043D\u043E\u0432\u043E", "value": 23, "slug": "banovo" }, { "key": "\u0411\u0430\u043D\u0441\u043A\u043E", "value": 1352, "slug": "bansko" }, { "key": "\u0411\u0430\u043D\u044F", "value": 359, "slug": "banya" }, { "key": "\u0411\u0430\u0440\u0430\u043A\u043E\u0432\u043E", "value": 15, "slug": "barakovo" }, { "key": "\u0411\u0430\u0440\u0430\u0446\u0438", "value": 3, "slug": "baraci" }, { "key": "\u0411\u0410\u0420\u0411\u0415\u0419\u0414\u041E\u0421,", "value": 1, "slug": "barbeydos" }, { "key": "\u0411\u0430\u0440\u0443\u0442\u0438\u043D", "value": 72, "slug": "barutin" }, { "key": "\u0411\u0430\u0441\u0430\u0440\u0431\u043E\u0432\u043E", "value": 67, "slug": "basarbovo" }, { "key": "\u0411\u0430\u0442\u0430", "value": 45, "slug": "bata" }, { "key": "\u0411\u0430\u0442\u0430\u043A", "value": 248, "slug": "batak" }, { "key": "\u0411\u0430\u0442\u0430\u043D\u043E\u0432\u0446\u0438", "value": 106, "slug": "batanovci" }, { "key": "\u0411\u0430\u0442\u0438\u043D", "value": 30, "slug": "batin" }, { "key": "\u0411\u0430\u0442\u0438\u0448\u043D\u0438\u0446\u0430", "value": 22, "slug": "batishnica" }, { "key": "\u0411\u0430\u0442\u043E\u0432\u043E", "value": 30, "slug": "batovo" }, { "key": "\u0411\u0430\u0442\u043E\u0448\u0435\u0432\u043E", "value": 12, "slug": "batoshevo" }, { "key": "\u0411\u0430\u0442\u0443\u043B\u0438\u044F", "value": 5, "slug": "batuliya" }, { "key": "\u0411\u0430\u0442\u0443\u043B\u0446\u0438", "value": 7, "slug": "batulci" }, { "key": "\u0411\u0430\u0443\u0440\u0435\u043D\u0435", "value": 4, "slug": "baurene" }, { "key": "\u0411\u0430\u0445\u043E\u0432\u0438\u0446\u0430", "value": 21, "slug": "bahovica" }, { "key": "\u0411\u0430\u0446\u043E\u0432\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 1, "slug": "bacova-mahala" }, { "key": "\u0411\u0430\u0447\u0435\u0432\u043E", "value": 111, "slug": "bachevo" }, { "key": "\u0411\u0430\u0447\u043A\u043E\u0432\u043E", "value": 26, "slug": "bachkovo" }, { "key": "\u0411\u0430\u0448\u0435\u0432\u043E", "value": 12, "slug": "bashevo" }, { "key": "\u0411\u0430\u0449\u0438\u043D\u043E", "value": 9, "slug": "bashchino" }, { "key": "\u0411\u0430\u044F\u0447\u0435\u0432\u043E", "value": 22, "slug": "bayachevo" }, { "key": "\u0411\u0434\u0438\u043D\u0446\u0438", "value": 4, "slug": "bdinci" }, { "key": "\u0411\u0435\u0431\u0440\u043E\u0432\u043E", "value": 8, "slug": "bebrovo" }, { "key": "\u0411\u0435\u0433\u043B\u0435\u0436", "value": 10, "slug": "beglezh" }, { "key": "\u0411\u0435\u0433\u043E\u0432\u043E", "value": 11, "slug": "begovo" }, { "key": "\u0411\u0435\u0433\u0443\u043D\u043E\u0432\u0446\u0438", "value": 5, "slug": "begunovci" }, { "key": "\u0411\u0435\u0433\u0443\u043D\u0446\u0438", "value": 20, "slug": "begunci" }, { "key": "\u0411\u0435\u0434\u0435\u043D", "value": 6, "slug": "beden" }, { "key": "\u0411\u0435\u0434\u0436\u0435\u043D\u0435", "value": 1, "slug": "bedzhene" }, { "key": "\u0411\u0435\u0436\u0430\u043D\u043E\u0432\u043E", "value": 34, "slug": "bezhanovo" }, { "key": "\u0411\u0435\u0437\u0432\u043E\u0434\u0438\u0446\u0430", "value": 16, "slug": "bezvodica" }, { "key": "\u0411\u0435\u0437\u0434\u0435\u043D", "value": 22, "slug": "bezden" }, { "key": "\u0411\u0435\u0437\u0434\u0435\u043D\u0438\u0446\u0430", "value": 5, "slug": "bezdenica" }, { "key": "\u0411\u0435\u0437\u043C\u0435\u0440", "value": 64, "slug": "bezmer" }, { "key": "\u0411\u0435\u043B \u043A\u0430\u043C\u0435\u043D", "value": 7, "slug": "bel-kamen" }, { "key": "\u0411\u0435\u043B\u0430", "value": 1, "slug": "bela" }, { "key": "\u0411\u0435\u043B\u0430 \u0420\u0430\u0434\u0430", "value": 14, "slug": "bela-rada" }, { "key": "\u0411\u0435\u043B\u0430\u0441\u0438\u0446\u0430", "value": 59, "slug": "belasica" }, { "key": "\u0411\u0435\u043B\u0430\u0449\u0438\u0446\u0430", "value": 192, "slug": "belashchica" }, { "key": "\u0411\u0435\u043B\u0433\u0443\u043D", "value": 6, "slug": "belgun" }, { "key": "\u0411\u0435\u043B\u0435\u0432 \u0434\u043E\u043B", "value": 2, "slug": "belev-dol" }, { "key": "\u0411\u0435\u043B\u0435\u0432\u0440\u0435\u043D", "value": 2, "slug": "belevren" }, { "key": "\u0411\u0435\u043B\u0435\u043D\u0435", "value": 346, "slug": "belene" }, { "key": "\u0411\u0435\u043B\u0435\u043D\u0446\u0438", "value": 6, "slug": "belenci" }, { "key": "\u0411\u0435\u043B\u0438 \u0431\u0440\u0435\u0433", "value": 1, "slug": "beli-breg" }, { "key": "\u0411\u0435\u043B\u0438 \u0431\u0440\u043E\u0434", "value": 3, "slug": "beli-brod" }, { "key": "\u0411\u0435\u043B\u0438 \u0431\u0440\u044F\u0433", "value": 4, "slug": "beli-bryag" }, { "key": "\u0411\u0435\u043B\u0438 \u0432\u0438\u0440", "value": 10, "slug": "beli-vir" }, { "key": "\u0411\u0435\u043B\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 36, "slug": "beli-izvor" }, { "key": "\u0411\u0435\u043B\u0438 \u0418\u0441\u043A\u044A\u0440", "value": 44, "slug": "beli-iskr" }, { "key": "\u0411\u0435\u043B\u0438 \u041B\u043E\u043C", "value": 30, "slug": "beli-lom" }, { "key": "\u0411\u0435\u043B\u0438 \u041E\u0441\u044A\u043C", "value": 38, "slug": "beli-osm" }, { "key": "\u0411\u0435\u043B\u0438 \u043F\u043B\u0430\u0441\u0442", "value": 7, "slug": "beli-plast" }, { "key": "\u0411\u0435\u043B\u0438\u043B\u0430", "value": 1, "slug": "belila" }, { "key": "\u0411\u0435\u043B\u0438\u043C\u0435\u043B", "value": 11, "slug": "belimel" }, { "key": "\u0411\u0435\u043B\u0438\u043D\u0446\u0438", "value": 14, "slug": "belinci" }, { "key": "\u0411\u0435\u043B\u0438\u0446\u0430", "value": 228, "slug": "belica" }, { "key": "\u0411\u0435\u043B\u0438\u0448", "value": 5, "slug": "belish" }, { "key": "\u0411\u0435\u043B\u043E \u043F\u043E\u043B\u0435", "value": 98, "slug": "belo-pole" }, { "key": "\u0411\u0435\u043B\u043E\u0432\u0435\u0446", "value": 49, "slug": "belovec" }, { "key": "\u0411\u0435\u043B\u043E\u0432\u0438\u0446\u0430", "value": 16, "slug": "belovica" }, { "key": "\u0411\u0435\u043B\u043E\u0432\u043E", "value": 184, "slug": "belovo" }, { "key": "\u0411\u0435\u043B\u043E\u0433\u0440\u0430\u0434\u0435\u0446", "value": 32, "slug": "belogradec" }, { "key": "\u0411\u0435\u043B\u043E\u0433\u0440\u0430\u0434\u0447\u0438\u043A", "value": 291, "slug": "belogradchik" }, { "key": "\u0411\u0435\u043B\u043E\u0434\u043E\u043B", "value": 13, "slug": "belodol" }, { "key": "\u0411\u0435\u043B\u043E\u0437\u0435\u043C", "value": 149, "slug": "belozem" }, { "key": "\u0411\u0435\u043B\u043E\u043A\u043E\u043F\u0438\u0442\u043E\u0432\u043E", "value": 9, "slug": "belokopitovo" }, { "key": "\u0411\u0435\u043B\u043E\u043C\u043E\u0440\u0446\u0438", "value": 39, "slug": "belomorci" }, { "key": "\u0411\u0435\u043B\u043E\u043F\u043E\u043B\u0446\u0438", "value": 4, "slug": "belopolci" }, { "key": "\u0411\u0435\u043B\u043E\u043F\u043E\u043B\u044F\u043D\u0435", "value": 4, "slug": "belopolyane" }, { "key": "\u0411\u0435\u043B\u043E\u043F\u043E\u043F\u0446\u0438", "value": 14, "slug": "belopopci" }, { "key": "\u0411\u0435\u043B\u043E\u0441\u043B\u0430\u0432", "value": 444, "slug": "beloslav" }, { "key": "\u0411\u0435\u043B\u043E\u0442\u0438\u043D\u0446\u0438", "value": 11, "slug": "belotinci" }, { "key": "\u0411\u0435\u043B\u0446\u043E\u0432", "value": 20, "slug": "belcov" }, { "key": "\u0411\u0435\u043B\u0447\u0438\u043D", "value": 17, "slug": "belchin" }, { "key": "\u0411\u0435\u043B\u0447\u0438\u043D\u0441\u043A\u0438 \u0431\u0430\u043D\u0438", "value": 2, "slug": "belchinski-bani" }, { "key": "\u0411\u0435\u043B\u044F\u043A\u043E\u0432\u0435\u0446", "value": 57, "slug": "belyakovec" }, { "key": "\u0411\u0435\u043B\u044F\u043D\u043E\u0432\u043E", "value": 1, "slug": "belyanovo" }, { "key": "\u0411\u0435\u043D\u043A\u043E\u0432\u0441\u043A\u0438", "value": 229, "slug": "benkovski" }, { "key": "\u0411\u0435\u0440\u0435\u043D\u0434\u0435", "value": 2, "slug": "berende" }, { "key": "\u0411\u0435\u0440\u0435\u043D\u0434\u0435 \u0438\u0437\u0432\u043E\u0440", "value": 1, "slug": "berende-izvor" }, { "key": "\u0411\u0435\u0440\u0438\u0435\u0432\u043E", "value": 2, "slug": "berievo" }, { "key": "\u0411\u0435\u0440\u043A\u043E\u0432\u0438\u0446\u0430", "value": 745, "slug": "berkovica" }, { "key": "\u0411\u0435\u0440\u043A\u043E\u0432\u0441\u043A\u0438", "value": 1, "slug": "berkovski" }, { "key": "\u0411\u0415\u0420\u041C\u0423\u0414\u0421\u041A\u0418 \u041E\u0421\u0422\u0420\u041E\u0412\u0418,", "value": 6, "slug": "bermudski-ostrovi" }, { "key": "\u0411\u0435\u0440\u043E\u043D\u043E\u0432\u043E", "value": 13, "slug": "beronovo" }, { "key": "\u0411\u0435\u0440\u0441\u0438\u043D", "value": 4, "slug": "bersin" }, { "key": "\u0411\u0435\u0441\u043B\u0435\u043D", "value": 5, "slug": "beslen" }, { "key": "\u0411\u0438\u0432\u043E\u043B\u0430\u0440\u0435", "value": 7, "slug": "bivolare" }, { "key": "\u0411\u0438\u0436\u043E\u0432\u0446\u0438", "value": 2, "slug": "bizhovci" }, { "key": "\u0411\u0438\u043A\u043E\u0432\u043E", "value": 9, "slug": "bikovo" }, { "key": "\u0411\u0438\u043B\u043A\u0430", "value": 14, "slug": "bilka" }, { "key": "\u0411\u0438\u043B\u043E", "value": 1, "slug": "bilo" }, { "key": "\u0411\u0438\u043D\u043A\u043E\u0441", "value": 6, "slug": "binkos" }, { "key": "\u0411\u0438\u0440\u043A\u043E\u0432\u0430", "value": 6, "slug": "birkova" }, { "key": "\u0411\u0438\u0441\u0435\u0440", "value": 26, "slug": "biser" }, { "key": "\u0411\u0438\u0441\u0435\u0440\u0446\u0438", "value": 29, "slug": "biserci" }, { "key": "\u0411\u0438\u0441\u0442\u0440\u0430", "value": 44, "slug": "bistra" }, { "key": "\u0411\u0438\u0441\u0442\u0440\u0435\u043D\u0446\u0438", "value": 10, "slug": "bistrenci" }, { "key": "\u0411\u0438\u0441\u0442\u0440\u0435\u0446", "value": 5, "slug": "bistrec" }, { "key": "\u0411\u0438\u0441\u0442\u0440\u0438\u043B\u0438\u0446\u0430", "value": 2, "slug": "bistrilica" }, { "key": "\u0411\u0438\u0441\u0442\u0440\u0438\u0446\u0430", "value": 423, "slug": "bistrica" }, { "key": "\u0411\u043B\u0430\u0433\u043E\u0432\u043E", "value": 19, "slug": "blagovo" }, { "key": "\u0411\u043B\u0430\u0433\u043E\u0435\u0432\u0433\u0440\u0430\u0434", "value": 10020, "slug": "blagoevgrad" }, { "key": "\u0411\u043B\u0430\u0433\u043E\u0435\u0432\u043E", "value": 16, "slug": "blagoevo" }, { "key": "\u0411\u043B\u0430\u0436\u0438\u0435\u0432\u043E", "value": 11, "slug": "blazhievo" }, { "key": "\u0411\u043B\u0430\u0442\u0435\u0446", "value": 20, "slug": "blatec" }, { "key": "\u0411\u043B\u0430\u0442\u043D\u0438\u0446\u0430", "value": 9, "slug": "blatnica" }, { "key": "\u0411\u043B\u0430\u0442\u043E", "value": 1, "slug": "blato" }, { "key": "\u0411\u043B\u0430\u0442\u0441\u043A\u0430", "value": 17, "slug": "blatska" }, { "key": "\u0411\u043B\u0435\u043D\u0438\u043A\u0430", "value": 8, "slug": "blenika" }, { "key": "\u0411\u043B\u0438\u0437\u043D\u0430\u043A", "value": 10, "slug": "bliznak" }, { "key": "\u0411\u043B\u0438\u0437\u043D\u0430\u0446\u0438", "value": 126, "slug": "bliznaci" }, { "key": "\u0411\u043B\u0438\u0437\u043D\u0435\u0446", "value": 2, "slug": "bliznec" }, { "key": "\u0411\u043B\u044A\u0441\u043A\u043E\u0432\u043E", "value": 39, "slug": "blskovo" }, { "key": "\u0411\u043B\u044A\u0441\u043A\u043E\u0432\u0446\u0438", "value": 6, "slug": "blskovci" }, { "key": "\u0411\u043E\u0431\u043E\u0432 \u0434\u043E\u043B", "value": 219, "slug": "bobov-dol" }, { "key": "\u0411\u043E\u0431\u043E\u0440\u0430\u0446\u0438", "value": 2, "slug": "boboraci" }, { "key": "\u0411\u043E\u0431\u043E\u0448\u0435\u0432\u043E", "value": 68, "slug": "boboshevo" }, { "key": "\u0411\u043E\u0432", "value": 29, "slug": "bov" }, { "key": "\u0411\u043E\u0433\u0430\u0442\u0438\u043D\u043E", "value": 3, "slug": "bogatino" }, { "key": "\u0411\u043E\u0433\u0430\u0442\u043E\u0432\u043E", "value": 11, "slug": "bogatovo" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D", "value": 27, "slug": "bogdan" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D\u0438\u0446\u0430", "value": 7, "slug": "bogdanica" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D\u043B\u0438\u044F", "value": 4, "slug": "bogdanliya" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D\u043E\u0432 \u0434\u043E\u043B", "value": 14, "slug": "bogdanov-dol" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D\u043E\u0432\u043E", "value": 16, "slug": "bogdanovo" }, { "key": "\u0411\u043E\u0433\u0434\u0430\u043D\u0446\u0438", "value": 20, "slug": "bogdanci" }, { "key": "\u0411\u043E\u0433\u043E\u043B\u0438\u043D", "value": 16, "slug": "bogolin" }, { "key": "\u0411\u043E\u0433\u043E\u043C\u0438\u043B\u043E\u0432\u043E", "value": 101, "slug": "bogomilovo" }, { "key": "\u0411\u043E\u0433\u043E\u043C\u0438\u043B\u0446\u0438", "value": 15, "slug": "bogomilci" }, { "key": "\u0411\u043E\u0433\u043E\u0440\u043E\u0432\u043E", "value": 12, "slug": "bogorovo" }, { "key": "\u0411\u043E\u0433\u043E\u0441\u043B\u043E\u0432", "value": 22, "slug": "bogoslov" }, { "key": "\u0411\u043E\u0433\u0443\u0442\u0435\u0432\u043E", "value": 15, "slug": "bogutevo" }, { "key": "\u0411\u043E\u0433\u044C\u043E\u0432\u0446\u0438", "value": 12, "slug": "bogovci" }, { "key": "\u0411\u043E\u0434\u0435\u043D\u0435\u0446", "value": 9, "slug": "bodenec" }, { "key": "\u0411\u043E\u0434\u0440\u043E\u0432\u043E", "value": 3, "slug": "bodrovo" }, { "key": "\u0411\u043E\u0435\u0440\u0438\u0446\u0430", "value": 2, "slug": "boerica" }, { "key": "\u0411\u043E\u0436\u0430\u043D", "value": 11, "slug": "bozhan" }, { "key": "\u0411\u043E\u0436\u0435\u0432\u0446\u0438", "value": 4, "slug": "bozhevci" }, { "key": "\u0411\u043E\u0436\u0435\u043D\u0438\u0446\u0430", "value": 6, "slug": "bozhenica" }, { "key": "\u0411\u043E\u0436\u0435\u043D\u0446\u0438\u0442\u0435", "value": 8, "slug": "bozhencite" }, { "key": "\u0411\u043E\u0436\u0438\u0447\u0435\u043D", "value": 13, "slug": "bozhichen" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u0435\u0446", "value": 54, "slug": "bozhurec" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u0438\u0446\u0430", "value": 22, "slug": "bozhurica" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u0438\u0449\u0435", "value": 478, "slug": "bozhurishche" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u043A\u0430", "value": 4, "slug": "bozhurka" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u043B\u0443\u043A", "value": 1, "slug": "bozhurluk" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u043E\u0432\u043E", "value": 25, "slug": "bozhurovo" }, { "key": "\u0411\u043E\u0436\u0443\u0440\u0446\u0438", "value": 2, "slug": "bozhurci" }, { "key": "\u0411\u043E\u0437\u0430\u0434\u0436\u0438\u0438", "value": 1, "slug": "bozadzhii" }, { "key": "\u0411\u043E\u0437\u0432\u0435\u043B\u0438\u0439\u0441\u043A\u043E", "value": 36, "slug": "bozveliysko" }, { "key": "\u0411\u043E\u0437\u0434\u0443\u0433\u0430\u043D\u043E\u0432\u043E", "value": 14, "slug": "bozduganovo" }, { "key": "\u0411\u043E\u0438\u043B", "value": 30, "slug": "boil" }, { "key": "\u0411\u043E\u0439\u043A\u043E\u0432\u0435\u0446", "value": 9, "slug": "boykovec" }, { "key": "\u0411\u043E\u0439\u043A\u043E\u0432\u043E", "value": 13, "slug": "boykovo" }, { "key": "\u0411\u043E\u0439\u043D\u0438\u0446\u0430", "value": 4, "slug": "boynica" }, { "key": "\u0411\u043E\u0439\u043D\u043E", "value": 16, "slug": "boyno" }, { "key": "\u0411\u043E\u0439\u043D\u043E\u0432\u0446\u0438", "value": 2, "slug": "boynovci" }, { "key": "\u0411\u043E\u0439\u0447\u0438\u043D\u043E\u0432\u0446\u0438", "value": 45, "slug": "boychinovci" }, { "key": "\u0411\u043E\u043A\u0438\u043B\u043E\u0432\u0446\u0438", "value": 4, "slug": "bokilovci" }, { "key": "\u0411\u043E\u043B\u044F\u0440\u0438\u043D\u043E", "value": 5, "slug": "bolyarino" }, { "key": "\u0411\u043E\u043B\u044F\u0440\u043E\u0432\u043E", "value": 118, "slug": "bolyarovo" }, { "key": "\u0411\u043E\u043B\u044F\u0440\u0441\u043A\u043E", "value": 14, "slug": "bolyarsko" }, { "key": "\u0411\u043E\u043B\u044F\u0440\u0446\u0438", "value": 112, "slug": "bolyarci" }, { "key": "\u0411\u043E\u0440\u0435\u0446", "value": 16, "slug": "borec" }, { "key": "\u0411\u043E\u0440\u0438\u0435", "value": 7, "slug": "borie" }, { "key": "\u0411\u043E\u0440\u0438\u043A\u0430", "value": 8, "slug": "borika" }, { "key": "\u0411\u043E\u0440\u0438\u043A\u0438", "value": 8, "slug": "boriki" }, { "key": "\u0411\u043E\u0440\u0438\u043B\u043E\u0432\u0435\u0446", "value": 2, "slug": "borilovec" }, { "key": "\u0411\u043E\u0440\u0438\u043B\u043E\u0432\u043E", "value": 9, "slug": "borilovo" }, { "key": "\u0411\u043E\u0440\u0438\u043C\u0430", "value": 54, "slug": "borima" }, { "key": "\u0411\u043E\u0440\u0438\u043C\u0435\u0447\u043A\u043E\u0432\u043E", "value": 9, "slug": "borimechkovo" }, { "key": "\u0411\u043E\u0440\u0438\u043D\u043E", "value": 123, "slug": "borino" }, { "key": "\u0411\u043E\u0440\u0438\u043D\u043E\u0432\u043E", "value": 14, "slug": "borinovo" }, { "key": "\u0411\u043E\u0440\u0438\u043D\u0446\u0438", "value": 7, "slug": "borinci" }, { "key": "\u0411\u043E\u0440\u0438\u0441\u043B\u0430\u0432", "value": 4, "slug": "borislav" }, { "key": "\u0411\u043E\u0440\u0438\u0441\u043B\u0430\u0432\u0446\u0438", "value": 11, "slug": "borislavci" }, { "key": "\u0411\u043E\u0440\u0438\u0441\u043E\u0432\u043E", "value": 30, "slug": "borisovo" }, { "key": "\u0411\u043E\u0440\u043D\u0430\u0440\u0435\u0432\u043E", "value": 1, "slug": "bornarevo" }, { "key": "\u0411\u043E\u0440\u043E\u0432 \u0434\u043E\u043B", "value": 16, "slug": "borov-dol" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u0430\u043D", "value": 53, "slug": "borovan" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u0435\u0446", "value": 2, "slug": "borovec" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u0438\u043D\u0430", "value": 10, "slug": "borovina" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u0438\u0446\u0430", "value": 21, "slug": "borovica" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u043E", "value": 164, "slug": "borovo" }, { "key": "\u0411\u043E\u0440\u043E\u0432\u0446\u0438", "value": 18, "slug": "borovci" }, { "key": "\u0411\u043E\u0440\u0443\u0449\u0438\u0446\u0430", "value": 5, "slug": "borushchica" }, { "key": "\u0411\u043E\u0440\u0446\u0438", "value": 20, "slug": "borci" }, { "key": "\u0411\u043E\u0440\u044F\u043D\u0430", "value": 16, "slug": "boryana" }, { "key": "\u0411\u043E\u0441\u0438\u043B\u043A\u043E\u0432\u043E", "value": 3, "slug": "bosilkovo" }, { "key": "\u0411\u043E\u0441\u0438\u043B\u043A\u043E\u0432\u0446\u0438", "value": 17, "slug": "bosilkovci" }, { "key": "\u0411\u043E\u0441\u043D\u0430", "value": 4, "slug": "bosna" }, { "key": "\u0411\u043E\u0441\u043D\u0435\u043A", "value": 4, "slug": "bosnek" }, { "key": "\u0411\u043E\u0441\u0442\u0430\u043D\u0446\u0438", "value": 1, "slug": "bostanci" }, { "key": "\u0411\u043E\u0441\u0442\u0438\u043D\u0430", "value": 9, "slug": "bostina" }, { "key": "\u0411\u043E\u0442\u0435\u0432\u0433\u0440\u0430\u0434", "value": 1740, "slug": "botevgrad" }, { "key": "\u0411\u043E\u0442\u0435\u0432\u043E", "value": 39, "slug": "botevo" }, { "key": "\u0411\u043E\u0442\u0440\u043E\u0432", "value": 4, "slug": "botrov" }, { "key": "\u0411\u043E\u0442\u0443\u043D\u044F", "value": 5, "slug": "botunya" }, { "key": "\u0411\u043E\u0445\u043E\u0442", "value": 15, "slug": "bohot" }, { "key": "\u0411\u043E\u0448\u0443\u043B\u044F", "value": 17, "slug": "boshulya" }, { "key": "\u0411\u043E\u044F\u0434\u0436\u0438\u043A", "value": 40, "slug": "boyadzhik" }, { "key": "\u0411\u043E\u044F\u043D", "value": 8, "slug": "boyan" }, { "key": "\u0411\u043E\u044F\u043D \u0411\u043E\u0442\u0435\u0432\u043E", "value": 30, "slug": "boyan-botevo" }, { "key": "\u0411\u043E\u044F\u043D\u0430", "value": 8, "slug": "boyana" }, { "key": "\u0411\u043E\u044F\u043D\u043E\u0432\u043E", "value": 49, "slug": "boyanovo" }, { "key": "\u0411\u043E\u044F\u043D\u0446\u0438", "value": 34, "slug": "boyanci" }, { "key": "\u0411\u0440\u0430\u0434\u0432\u0430\u0440\u0438", "value": 32, "slug": "bradvari" }, { "key": "\u0411\u0440\u0430\u043A\u043D\u0438\u0446\u0430", "value": 5, "slug": "braknica" }, { "key": "\u0411\u0440\u0430\u043D\u0438\u043F\u043E\u043B\u0435", "value": 230, "slug": "branipole" }, { "key": "\u0411\u0440\u0430\u043D\u0438\u0446\u0430", "value": 3, "slug": "branica" }, { "key": "\u0411\u0440\u0430\u043D\u0438\u0447\u0435\u0432\u043E", "value": 37, "slug": "branichevo" }, { "key": "\u0411\u0440\u0430\u043D\u0438\u0449\u0435", "value": 36, "slug": "branishche" }, { "key": "\u0411\u0440\u0430\u043D\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "brankovci" }, { "key": "\u0411\u0440\u0430\u0442\u0430\u043D", "value": 2, "slug": "bratan" }, { "key": "\u0411\u0440\u0430\u0442\u0430\u043D\u0438\u0446\u0430", "value": 58, "slug": "bratanica" }, { "key": "\u0411\u0440\u0430\u0442\u043E\u0432\u043E", "value": 3, "slug": "bratovo" }, { "key": "\u0411\u0440\u0430\u0442\u0443\u0448\u043A\u043E\u0432\u043E", "value": 7, "slug": "bratushkovo" }, { "key": "\u0411\u0440\u0430\u0442\u044F \u0414\u0430\u0441\u043A\u0430\u043B\u043E\u0432\u0438", "value": 40, "slug": "bratya-daskalovi" }, { "key": "\u0411\u0440\u0430\u0442\u044F \u041A\u0443\u043D\u0447\u0435\u0432\u0438", "value": 17, "slug": "bratya-kunchevi" }, { "key": "\u0411\u0440\u0430\u0446\u0438\u0433\u043E\u0432\u043E", "value": 267, "slug": "bracigovo" }, { "key": "\u0411\u0440\u0435\u0433\u0430\u0440\u0435", "value": 18, "slug": "bregare" }, { "key": "\u0411\u0440\u0435\u0433\u043E\u0432\u043E", "value": 73, "slug": "bregovo" }, { "key": "\u0411\u0440\u0435\u0436\u0430\u043D\u0438", "value": 40, "slug": "brezhani" }, { "key": "\u0411\u0440\u0435\u0437\u0435", "value": 29, "slug": "breze" }, { "key": "\u0411\u0440\u0435\u0437\u0435\u043D", "value": 9, "slug": "brezen" }, { "key": "\u0411\u0440\u0435\u0437\u043D\u0438\u043A", "value": 216, "slug": "breznik" }, { "key": "\u0411\u0440\u0435\u0437\u043D\u0438\u0446\u0430", "value": 171, "slug": "breznica" }, { "key": "\u0411\u0440\u0435\u0437\u043E\u0432\u043E", "value": 125, "slug": "brezovo" }, { "key": "\u0411\u0440\u0435\u043D\u0438\u0446\u0430", "value": 48, "slug": "brenica" }, { "key": "\u0411\u0440\u0435\u0441\u0442", "value": 52, "slug": "brest" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u0430\u043A", "value": 37, "slug": "brestak" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u0435", "value": 17, "slug": "breste" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043D\u0438\u043A", "value": 147, "slug": "brestnik" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043D\u0438\u0446\u0430", "value": 23, "slug": "brestnica" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043E\u0432\u0435\u043D\u0435", "value": 77, "slug": "brestovene" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043E\u0432\u0435\u0446", "value": 39, "slug": "brestovec" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043E\u0432\u0438\u0446\u0430", "value": 166, "slug": "brestovica" }, { "key": "\u0411\u0440\u0435\u0441\u0442\u043E\u0432\u043E", "value": 9, "slug": "brestovo" }, { "key": "\u0411\u0440\u043E\u0434", "value": 46, "slug": "brod" }, { "key": "\u0411\u0440\u043E\u0434\u0438\u043B\u043E\u0432\u043E", "value": 14, "slug": "brodilovo" }, { "key": "\u0411\u0440\u043E\u0448", "value": 12, "slug": "brosh" }, { "key": "\u0411\u0440\u0443\u0441\u0430\u0440\u0446\u0438", "value": 33, "slug": "brusarci" }, { "key": "\u0411\u0440\u0443\u0441\u0435\u043D", "value": 19, "slug": "brusen" }, { "key": "\u0411\u0440\u0443\u0441\u043D\u0438\u043A", "value": 1, "slug": "brusnik" }, { "key": "\u0411\u0440\u044A\u043D\u0435\u0446\u0438\u0442\u0435", "value": 1, "slug": "brnecite" }, { "key": "\u0411\u0440\u044A\u0448\u043B\u0435\u043D", "value": 28, "slug": "brshlen" }, { "key": "\u0411\u0440\u044A\u0448\u043B\u044F\u043D", "value": 5, "slug": "brshlyan" }, { "key": "\u0411\u0440\u044A\u0448\u043B\u044F\u043D\u0438\u0446\u0430", "value": 8, "slug": "brshlyanica" }, { "key": "\u0411\u0440\u044A\u0449\u0435\u043D", "value": 19, "slug": "brshchen" }, { "key": "\u0411\u0440\u044F\u0433\u043E\u0432\u0438\u0446\u0430", "value": 8, "slug": "bryagovica" }, { "key": "\u0411\u0440\u044F\u0433\u043E\u0432\u043E", "value": 28, "slug": "bryagovo" }, { "key": "\u0411\u0440\u044F\u0441\u0442", "value": 5, "slug": "bryast" }, { "key": "\u0411\u0440\u044F\u0441\u0442\u043E\u0432\u0435\u0446", "value": 31, "slug": "bryastovec" }, { "key": "\u0411\u0440\u044F\u0441\u0442\u043E\u0432\u043E", "value": 26, "slug": "bryastovo" }, { "key": "\u0411\u0443\u0437\u043E\u0432\u0433\u0440\u0430\u0434", "value": 84, "slug": "buzovgrad" }, { "key": "\u0411\u0443\u0437\u044F\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "buzyakovci" }, { "key": "\u0411\u0443\u0439\u043D\u043E\u0432\u0438\u0446\u0430", "value": 3, "slug": "buynovica" }, { "key": "\u0411\u0443\u0439\u043D\u043E\u0432\u043E", "value": 43, "slug": "buynovo" }, { "key": "\u0411\u0443\u0439\u043D\u043E\u0432\u0446\u0438", "value": 3, "slug": "buynovci" }, { "key": "\u0411\u0443\u043A", "value": 6, "slug": "buk" }, { "key": "\u0411\u0443\u043A\u0430\u0442\u0430", "value": 6, "slug": "bukata" }, { "key": "\u0411\u0443\u043A\u043E\u0432\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 7, "slug": "bukova-polyana" }, { "key": "\u0411\u0443\u043A\u043E\u0432\u0435\u0446", "value": 33, "slug": "bukovec" }, { "key": "\u0411\u0443\u043A\u043E\u0432\u043B\u044A\u043A", "value": 104, "slug": "bukovlk" }, { "key": "\u0411\u0443\u043A\u043E\u0432\u043E", "value": 56, "slug": "bukovo" }, { "key": "\u0411\u0443\u043A\u043E\u0440\u043E\u0432\u0446\u0438", "value": 1, "slug": "bukorovci" }, { "key": "\u0411\u0443\u043B\u0430\u0438\u0440", "value": 2, "slug": "bulair" }, { "key": "\u0411\u0443\u043D\u043E\u0432\u043E", "value": 11, "slug": "bunovo" }, { "key": "\u0411\u0443\u043D\u0446\u0435\u0432\u043E", "value": 11, "slug": "buncevo" }, { "key": "\u0411\u0443\u0440\u0433\u0430\u0441", "value": 28269, "slug": "burgas" }, { "key": "\u0411\u0443\u0440\u0435\u0432\u043E", "value": 1, "slug": "burevo" }, { "key": "\u0411\u0443\u0440\u044F", "value": 13, "slug": "burya" }, { "key": "\u0411\u0443\u0441\u0438\u043D\u0446\u0438", "value": 1, "slug": "businci" }, { "key": "\u0411\u0443\u0441\u043C\u0430\u043D\u0446\u0438", "value": 100, "slug": "busmanci" }, { "key": "\u0411\u0443\u0442\u0430\u043D", "value": 104, "slug": "butan" }, { "key": "\u0411\u0443\u0442\u043E\u0432\u043E", "value": 29, "slug": "butovo" }, { "key": "\u0411\u0443\u0445\u043E\u0432\u043E", "value": 90, "slug": "buhovo" }, { "key": "\u0411\u0443\u0445\u043E\u0432\u0446\u0438", "value": 13, "slug": "buhovci" }, { "key": "\u0411\u0443\u0447\u0438\u043D \u043F\u0440\u043E\u0445\u043E\u0434", "value": 9, "slug": "buchin-prohod" }, { "key": "\u0411\u0443\u0447\u0438\u043D\u043E", "value": 1, "slug": "buchino" }, { "key": "\u0411\u044A\u0434\u0435\u0449\u0435", "value": 6, "slug": "bdeshche" }, { "key": "\u0411\u044A\u0437\u043E\u0432\u0435\u0446", "value": 28, "slug": "bzovec" }, { "key": "\u0411\u044A\u0437\u044A\u043D", "value": 60, "slug": "bzn" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0430\u043D\u043E\u0432\u043E", "value": 8, "slug": "blgaranovo" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0435\u0432\u043E", "value": 71, "slug": "blgarevo" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0435\u043D\u0435", "value": 43, "slug": "blgarene" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0438", "value": 8, "slug": "blgari" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u043D", "value": 11, "slug": "blgarin" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u043A\u0430", "value": 4, "slug": "blgarka" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u043E\u0432\u043E", "value": 101, "slug": "blgarovo" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 3, "slug": "blgarska-polyana" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 67, "slug": "blgarski-izvor" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u043E \u0421\u043B\u0438\u0432\u043E\u0432\u043E", "value": 46, "slug": "blgarsko-slivovo" }, { "key": "\u0411\u044A\u043B\u0433\u0430\u0440\u0447\u0435\u0432\u043E", "value": 20, "slug": "blgarchevo" }, { "key": "\u0411\u044A\u0440\u0434\u0430\u0440\u0435\u0432\u043E", "value": 1, "slug": "brdarevo" }, { "key": "\u0411\u044A\u0440\u0434\u0430\u0440\u0441\u043A\u0438 \u0433\u0435\u0440\u0430\u043D", "value": 15, "slug": "brdarski-geran" }, { "key": "\u0411\u044A\u0440\u0434\u043E\u043A\u0432\u0430", "value": 9, "slug": "brdokva" }, { "key": "\u0411\u044A\u0440\u0437\u0430 \u0440\u0435\u043A\u0430", "value": 1, "slug": "brza-reka" }, { "key": "\u0411\u044A\u0440\u0437\u0438\u043D\u0430", "value": 7, "slug": "brzina" }, { "key": "\u0411\u044A\u0440\u0437\u0438\u0446\u0430", "value": 10, "slug": "brzica" }, { "key": "\u0411\u044A\u0440\u0437\u0438\u044F", "value": 38, "slug": "brziya" }, { "key": "\u0411\u044A\u0440\u043A\u0430\u0447", "value": 28, "slug": "brkach" }, { "key": "\u0411\u044A\u0440\u043A\u0430\u0447\u0435\u0432\u043E", "value": 22, "slug": "brkachevo" }, { "key": "\u0411\u044A\u0440\u043B\u043E\u0436\u043D\u0438\u0446\u0430", "value": 12, "slug": "brlozhnica" }, { "key": "\u0411\u044A\u0440\u0447\u0435\u0432\u043E", "value": 4, "slug": "brchevo" }, { "key": "\u0411\u044A\u0442\u0430", "value": 28, "slug": "bta" }, { "key": "\u0411\u044F\u0433\u0430", "value": 41, "slug": "byaga" }, { "key": "\u0411\u044F\u043B \u0431\u0440\u044F\u0433", "value": 14, "slug": "byal-bryag" }, { "key": "\u0411\u044F\u043B \u0438\u0437\u0432\u043E\u0440", "value": 91, "slug": "byal-izvor" }, { "key": "\u0411\u044F\u043B \u043A\u043B\u0430\u0434\u0435\u043D\u0435\u0446", "value": 9, "slug": "byal-kladenec" }, { "key": "\u0411\u044F\u043B\u0430", "value": 1016, "slug": "byala" }, { "key": "\u0411\u044F\u043B\u0430 \u0432\u043E\u0434\u0430", "value": 15, "slug": "byala-voda" }, { "key": "\u0411\u044F\u043B\u0430 \u043F\u0430\u043B\u0430\u043D\u043A\u0430", "value": 17, "slug": "byala-palanka" }, { "key": "\u0411\u044F\u043B\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 6, "slug": "byala-polyana" }, { "key": "\u0411\u044F\u043B\u0430 \u0440\u0435\u043A\u0430", "value": 82, "slug": "byala-reka" }, { "key": "\u0411\u044F\u043B\u0430 \u0421\u043B\u0430\u0442\u0438\u043D\u0430", "value": 739, "slug": "byala-slatina" }, { "key": "\u0411\u044F\u043B\u0430 \u0447\u0435\u0440\u043A\u0432\u0430", "value": 88, "slug": "byala-cherkva" }, { "key": "\u0411\u044F\u043B\u043E \u043F\u043E\u043B\u0435", "value": 6, "slug": "byalo-pole" }, { "key": "\u0412\u0430\u0437\u043E\u0432\u043E", "value": 26, "slug": "vazovo" }, { "key": "\u0412\u0430\u043A\u0430\u0440\u0435\u043B", "value": 119, "slug": "vakarel" }, { "key": "\u0412\u0430\u043A\u043B\u0438\u043D\u043E", "value": 6, "slug": "vaklino" }, { "key": "\u0412\u0430\u043A\u043B\u0438\u043D\u043E\u0432\u043E", "value": 16, "slug": "vaklinovo" }, { "key": "\u0412\u0430\u043A\u0441\u0435\u0432\u043E", "value": 12, "slug": "vaksevo" }, { "key": "\u0412\u0430\u043B\u0435\u0432\u0446\u0438", "value": 3, "slug": "valevci" }, { "key": "\u0412\u0430\u0440\u0430\u043D\u0430", "value": 1, "slug": "varana" }, { "key": "\u0412\u0430\u0440\u0432\u0430\u0440\u0430", "value": 117, "slug": "varvara" }, { "key": "\u0412\u0430\u0440\u0434\u0438\u043C", "value": 32, "slug": "vardim" }, { "key": "\u0412\u0430\u0440\u0434\u0443\u043D", "value": 51, "slug": "vardun" }, { "key": "\u0412\u0430\u0440\u043D\u0430", "value": 48410, "slug": "varna" }, { "key": "\u0412\u0430\u0440\u043D\u0435\u043D\u0446\u0438", "value": 10, "slug": "varnenci" }, { "key": "\u0412\u0430\u0441\u0438\u043B \u0414\u0440\u0443\u043C\u0435\u0432", "value": 11, "slug": "vasil-drumev" }, { "key": "\u0412\u0430\u0441\u0438\u043B \u041B\u0435\u0432\u0441\u043A\u0438", "value": 70, "slug": "vasil-levski" }, { "key": "\u0412\u0430\u0441\u0438\u043B\u0435\u0432\u043E", "value": 20, "slug": "vasilevo" }, { "key": "\u0412\u0430\u0441\u0438\u043B\u043E\u0432\u0446\u0438", "value": 59, "slug": "vasilovci" }, { "key": "\u0412\u0430\u0441\u0438\u043B\u044C\u043E\u0432\u043E", "value": 7, "slug": "vasilovo" }, { "key": "\u0412\u0430\u0441\u043A\u043E\u0432\u043E", "value": 6, "slug": "vaskovo" }, { "key": "\u0412\u0435\u0434\u0440\u0430\u0440\u0435", "value": 50, "slug": "vedrare" }, { "key": "\u0412\u0435\u0434\u0440\u0438\u043D\u0430", "value": 22, "slug": "vedrina" }, { "key": "\u0412\u0435\u0434\u0440\u043E\u0432\u043E", "value": 6, "slug": "vedrovo" }, { "key": "\u0412\u0435\u0437\u0435\u043D\u043A\u043E\u0432\u043E", "value": 13, "slug": "vezenkovo" }, { "key": "\u0412\u0435\u043A\u0438\u043B\u0441\u043A\u0438", "value": 2, "slug": "vekilski" }, { "key": "\u0412\u0435\u043B\u0435\u0448\u0430\u043D\u0438", "value": 3, "slug": "veleshani" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u0430", "value": 10, "slug": "velika" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u0430\u043D", "value": 3, "slug": "velikan" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u0434\u0435\u043D\u0447\u0435", "value": 5, "slug": "velikdenche" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u0438 \u041F\u0440\u0435\u0441\u043B\u0430\u0432", "value": 509, "slug": "veliki-preslav" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u043E \u0422\u044A\u0440\u043D\u043E\u0432\u043E", "value": 7996, "slug": "veliko-trnovo" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u043E\u0432\u043E", "value": 2, "slug": "velikovo" }, { "key": "\u0412\u0435\u043B\u0438\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "velikovci" }, { "key": "\u0412\u0435\u043B\u0438\u043D\u0433\u0440\u0430\u0434", "value": 1816, "slug": "velingrad" }, { "key": "\u0412\u0435\u043B\u0438\u043D\u043E", "value": 14, "slug": "velino" }, { "key": "\u0412\u0435\u043B\u0438\u0441\u043B\u0430\u0432", "value": 10, "slug": "velislav" }, { "key": "\u0412\u0435\u043B\u0438\u0447\u043A\u0430", "value": 4, "slug": "velichka" }, { "key": "\u0412\u0435\u043B\u0438\u0447\u043A\u043E\u0432\u043E", "value": 45, "slug": "velichkovo" }, { "key": "\u0412\u0435\u043B\u043A\u043E\u0432\u0446\u0438", "value": 14, "slug": "velkovci" }, { "key": "\u0412\u0435\u043B\u0447\u0435\u0432\u043E", "value": 16, "slug": "velchevo" }, { "key": "\u0412\u0435\u043D\u0435\u043B\u0438\u043D", "value": 41, "slug": "venelin" }, { "key": "\u0412\u0435\u043D\u0435\u0446", "value": 62, "slug": "venec" }, { "key": "\u0412\u0435\u043D\u043A\u043E\u0432\u0435\u0446", "value": 2, "slug": "venkovec" }, { "key": "\u0412\u0435\u043D\u0447\u0430\u043D", "value": 2, "slug": "venchan" }, { "key": "\u0412\u0435\u0440\u0435\u043D", "value": 8, "slug": "veren" }, { "key": "\u0412\u0435\u0440\u0435\u043D\u0446\u0438", "value": 10, "slug": "verenci" }, { "key": "\u0412\u0435\u0440\u0438\u043D\u0441\u043A\u043E", "value": 16, "slug": "verinsko" }, { "key": "\u0412\u0435\u0440\u0441\u043A\u043E", "value": 3, "slug": "versko" }, { "key": "\u0412\u0435\u0441\u0435\u043B\u0435\u0446", "value": 20, "slug": "veselec" }, { "key": "\u0412\u0435\u0441\u0435\u043B\u0438\u0435", "value": 34, "slug": "veselie" }, { "key": "\u0412\u0435\u0441\u0435\u043B\u0438\u043D\u0430", "value": 38, "slug": "veselina" }, { "key": "\u0412\u0435\u0441\u0435\u043B\u0438\u043D\u043E\u0432\u043E", "value": 67, "slug": "veselinovo" }, { "key": "\u0412\u0435\u0441\u043B\u0435\u0446", "value": 6, "slug": "veslec" }, { "key": "\u0412\u0435\u0442\u043E\u0432\u043E", "value": 231, "slug": "vetovo" }, { "key": "\u0412\u0435\u0442\u0440\u0435\u043D", "value": 229, "slug": "vetren" }, { "key": "\u0412\u0435\u0442\u0440\u0435\u043D \u0434\u043E\u043B", "value": 50, "slug": "vetren-dol" }, { "key": "\u0412\u0435\u0442\u0440\u0438\u043D\u043E", "value": 109, "slug": "vetrino" }, { "key": "\u0412\u0435\u0442\u0440\u0438\u043D\u0446\u0438", "value": 16, "slug": "vetrinci" }, { "key": "\u0412\u0435\u0442\u0440\u0438\u0449\u0435", "value": 9, "slug": "vetrishche" }, { "key": "\u0412\u0435\u0445\u0442\u043E\u0432\u043E", "value": 11, "slug": "vehtovo" }, { "key": "\u0412\u0435\u0449\u0438\u0446\u0430", "value": 4, "slug": "veshchica" }, { "key": "\u0412\u0438\u0434\u0438\u043D", "value": 3680, "slug": "vidin" }, { "key": "\u0412\u0438\u0434\u043B\u0438\u0446\u0430", "value": 3, "slug": "vidlica" }, { "key": "\u0412\u0438\u0434\u043D\u043E", "value": 16, "slug": "vidno" }, { "key": "\u0412\u0438\u0434\u0440\u0430\u0440", "value": 1, "slug": "vidrar" }, { "key": "\u0412\u0438\u0434\u0440\u0430\u0440\u0435", "value": 10, "slug": "vidrare" }, { "key": "\u0412\u0438\u0435\u0432\u043E", "value": 12, "slug": "vievo" }, { "key": "\u0412\u0438\u0437\u0438\u0446\u0430", "value": 1, "slug": "vizica" }, { "key": "\u0412\u0438\u043D\u0430\u0440\u043E\u0432\u043E", "value": 25, "slug": "vinarovo" }, { "key": "\u0412\u0438\u043D\u0430\u0440\u0441\u043A\u043E", "value": 20, "slug": "vinarsko" }, { "key": "\u0412\u0438\u043D\u0435\u0432\u043E", "value": 5, "slug": "vinevo" }, { "key": "\u0412\u0438\u043D\u0438\u0446\u0430", "value": 32, "slug": "vinica" }, { "key": "\u0412\u0438\u043D\u0438\u0449\u0435", "value": 2, "slug": "vinishche" }, { "key": "\u0412\u0438\u043D\u043E\u0433\u0440\u0430\u0434", "value": 6, "slug": "vinograd" }, { "key": "\u0412\u0438\u043D\u043E\u0433\u0440\u0430\u0434\u0435\u0446", "value": 33, "slug": "vinogradec" }, { "key": "\u0412\u0438\u043D\u043E\u0433\u0440\u0430\u0434\u0438", "value": 5, "slug": "vinogradi" }, { "key": "\u0412\u0438\u0440\u043E\u0432\u0435", "value": 7, "slug": "virove" }, { "key": "\u0412\u0438\u0440\u043E\u0432\u0441\u043A\u043E", "value": 7, "slug": "virovsko" }, { "key": "\u0412\u0438\u0441\u043A\u044F\u0440", "value": 4, "slug": "viskyar" }, { "key": "\u0412\u0438\u0441\u043E\u043A", "value": 4, "slug": "visok" }, { "key": "\u0412\u0438\u0441\u043E\u043A\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 2, "slug": "visoka-mogila" }, { "key": "\u0412\u0438\u0441\u043E\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 13, "slug": "visoka-polyana" }, { "key": "\u0412\u0438\u0441\u043E\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "visokovci" }, { "key": "\u0412\u0438\u0442\u0430\u043D\u043E\u0432\u0446\u0438", "value": 9, "slug": "vitanovci" }, { "key": "\u0412\u0438\u0442\u0438\u043D\u0430", "value": 10, "slug": "vitina" }, { "key": "\u0412\u0438\u0447\u043E\u0432\u043E", "value": 5, "slug": "vichovo" }, { "key": "\u0412\u0438\u0448\u0430\u043D", "value": 1, "slug": "vishan" }, { "key": "\u0412\u0438\u0448\u043D\u0430", "value": 4, "slug": "vishna" }, { "key": "\u0412\u0438\u0448\u043D\u0435\u0432\u043E", "value": 4, "slug": "vishnevo" }, { "key": "\u0412\u0438\u0448\u043E\u0432\u0433\u0440\u0430\u0434", "value": 23, "slug": "vishovgrad" }, { "key": "\u0412\u043B\u0430\u0434\u0430\u044F", "value": 172, "slug": "vladaya" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440", "value": 2, "slug": "vladimir" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440\u043E\u0432\u043E", "value": 37, "slug": "vladimirovo" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440\u043E\u0432\u0446\u0438", "value": 31, "slug": "vladimirovci" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u043D\u044F", "value": 13, "slug": "vladinya" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u0441\u043B\u0430\u0432", "value": 4, "slug": "vladislav" }, { "key": "\u0412\u043B\u0430\u0434\u0438\u0441\u043B\u0430\u0432\u0446\u0438", "value": 1, "slug": "vladislavci" }, { "key": "\u0412\u043B\u0430\u0434\u043E \u0422\u0440\u0438\u0447\u043A\u043E\u0432", "value": 90, "slug": "vlado-trichkov" }, { "key": "\u0412\u043B\u0430\u0441\u0430\u0442\u0438\u0446\u0430", "value": 10, "slug": "vlasatica" }, { "key": "\u0412\u043B\u0430\u0445\u043E\u0432\u043E", "value": 13, "slug": "vlahovo" }, { "key": "\u0412\u043E\u0434\u0430\u0447", "value": 8, "slug": "vodach" }, { "key": "\u0412\u043E\u0434\u0435\u043D", "value": 41, "slug": "voden" }, { "key": "\u0412\u043E\u0434\u0435\u043D\u0438\u0447\u0430\u043D\u0435", "value": 8, "slug": "vodenichane" }, { "key": "\u0412\u043E\u0434\u0435\u043D\u0438\u0447\u0430\u0440\u0441\u043A\u043E", "value": 4, "slug": "vodenicharsko" }, { "key": "\u0412\u043E\u0434\u0438\u0446\u0430", "value": 35, "slug": "vodica" }, { "key": "\u0412\u043E\u0434\u043D\u0430", "value": 1, "slug": "vodna" }, { "key": "\u0412\u043E\u0434\u043D\u0438 \u043F\u0430\u0434", "value": 7, "slug": "vodni-pad" }, { "key": "\u0412\u043E\u0434\u043D\u043E", "value": 17, "slug": "vodno" }, { "key": "\u0412\u043E\u0434\u043D\u044F\u043D\u0446\u0438", "value": 12, "slug": "vodnyanci" }, { "key": "\u0412\u043E\u0434\u043E\u043B\u0435\u0439", "value": 14, "slug": "vodoley" }, { "key": "\u0412\u043E\u0436\u0434\u043E\u0432\u043E", "value": 2, "slug": "vozhdovo" }, { "key": "\u0412\u043E\u0439\u0432\u043E\u0434\u0430", "value": 15, "slug": "voyvoda" }, { "key": "\u0412\u043E\u0439\u0432\u043E\u0434\u0435\u043D\u0435\u0446", "value": 1, "slug": "voyvodenec" }, { "key": "\u0412\u043E\u0439\u0432\u043E\u0434\u0438\u043D\u043E", "value": 21, "slug": "voyvodino" }, { "key": "\u0412\u043E\u0439\u0432\u043E\u0434\u0438\u043D\u043E\u0432\u043E", "value": 210, "slug": "voyvodinovo" }, { "key": "\u0412\u043E\u0439\u0432\u043E\u0434\u043E\u0432\u043E", "value": 38, "slug": "voyvodovo" }, { "key": "\u0412\u043E\u0439\u043A\u043E\u0432\u0430 \u043B\u044A\u043A\u0430", "value": 18, "slug": "voykova-lka" }, { "key": "\u0412\u043E\u0439\u043D\u0435\u0433\u043E\u0432\u0446\u0438", "value": 34, "slug": "voynegovci" }, { "key": "\u0412\u043E\u0439\u043D\u0435\u0436\u0430", "value": 1, "slug": "voynezha" }, { "key": "\u0412\u043E\u0439\u043D\u0438\u043A\u0430", "value": 15, "slug": "voynika" }, { "key": "\u0412\u043E\u0439\u043D\u0438\u0446\u0430", "value": 2, "slug": "voynica" }, { "key": "\u0412\u043E\u0439\u043D\u043E\u0432\u043E", "value": 9, "slug": "voynovo" }, { "key": "\u0412\u043E\u0439\u043D\u044F\u0433\u043E\u0432\u043E", "value": 32, "slug": "voynyagovo" }, { "key": "\u0412\u043E\u0439\u0441\u0438\u043B", "value": 48, "slug": "voysil" }, { "key": "\u0412\u043E\u043A\u0438\u043B", "value": 25, "slug": "vokil" }, { "key": "\u0412\u043E\u043B\u043E\u0432\u043E", "value": 6, "slug": "volovo" }, { "key": "\u0412\u043E\u043B\u0443\u044F\u043A", "value": 192, "slug": "voluyak" }, { "key": "\u0412\u043E\u043D\u0435\u0449\u0430 \u0432\u043E\u0434\u0430", "value": 20, "slug": "voneshcha-voda" }, { "key": "\u0412\u0440\u0430\u0431\u0435\u0432\u043E", "value": 22, "slug": "vrabevo" }, { "key": "\u0412\u0440\u0430\u0431\u0446\u0438\u0442\u0435", "value": 1, "slug": "vrabcite" }, { "key": "\u0412\u0440\u0430\u043D\u0435\u043D\u0446\u0438", "value": 1, "slug": "vranenci" }, { "key": "\u0412\u0440\u0430\u043D\u0438 \u043A\u043E\u043D", "value": 12, "slug": "vrani-kon" }, { "key": "\u0412\u0440\u0430\u043D\u0438\u043B\u043E\u0432\u0446\u0438", "value": 13, "slug": "vranilovci" }, { "key": "\u0412\u0440\u0430\u043D\u0438\u043D\u043E", "value": 18, "slug": "vranino" }, { "key": "\u0412\u0440\u0430\u043D\u0441\u043A\u043E", "value": 27, "slug": "vransko" }, { "key": "\u0412\u0440\u0430\u043D\u044F", "value": 4, "slug": "vranya" }, { "key": "\u0412\u0440\u0430\u043D\u044F\u043A", "value": 10, "slug": "vranyak" }, { "key": "\u0412\u0440\u0430\u0442\u0430\u0440\u0438\u0442\u0435", "value": 2, "slug": "vratarite" }, { "key": "\u0412\u0440\u0430\u0442\u0438\u0446\u0430", "value": 8, "slug": "vratica" }, { "key": "\u0412\u0440\u0430\u0442\u0446\u0430", "value": 3, "slug": "vratca" }, { "key": "\u0412\u0440\u0430\u0446\u0430", "value": 5700, "slug": "vraca" }, { "key": "\u0412\u0440\u0430\u0447\u0435\u0448", "value": 141, "slug": "vrachesh" }, { "key": "\u0412\u0440\u0435\u043B\u043E", "value": 1, "slug": "vrelo" }, { "key": "\u0412\u0440\u0435\u0441\u043E\u0432\u043E", "value": 36, "slug": "vresovo" }, { "key": "\u0412\u0440\u044A\u0432", "value": 22, "slug": "vrv" }, { "key": "\u0412\u0441\u0435\u043C\u0438\u0440\u0446\u0438", "value": 2, "slug": "vsemirci" }, { "key": "\u0412\u044A\u0431\u0435\u043B", "value": 25, "slug": "vbel" }, { "key": "\u0412\u044A\u0433\u043B\u0430\u0440\u043E\u0432\u043E", "value": 20, "slug": "vglarovo" }, { "key": "\u0412\u044A\u0433\u043B\u0435\u0432\u0446\u0438", "value": 6, "slug": "vglevci" }, { "key": "\u0412\u044A\u0433\u043B\u0435\u043D", "value": 17, "slug": "vglen" }, { "key": "\u0412\u044A\u0437\u0435\u043B", "value": 2, "slug": "vzel" }, { "key": "\u0412\u044A\u043B\u043A\u0430\u043D", "value": 19, "slug": "vlkan" }, { "key": "\u0412\u044A\u043B\u043A\u043E\u0432\u0438\u0447", "value": 6, "slug": "vlkovich" }, { "key": "\u0412\u044A\u043B\u043A\u043E\u0432\u043E", "value": 20, "slug": "vlkovo" }, { "key": "\u0412\u044A\u043B\u043A\u043E\u0441\u0435\u043B", "value": 78, "slug": "vlkosel" }, { "key": "\u0412\u044A\u043B\u043D\u0430\u0440\u0438", "value": 38, "slug": "vlnari" }, { "key": "\u0412\u044A\u043B\u0447\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 8, "slug": "vlcha-polyana" }, { "key": "\u0412\u044A\u043B\u0447\u0430\u043D", "value": 2, "slug": "vlchan" }, { "key": "\u0412\u044A\u043B\u0447\u0430\u043D \u0434\u043E\u043B", "value": 5, "slug": "vlchan-dol" }, { "key": "\u0412\u044A\u043B\u0447\u0430\u043D\u043E\u0432\u043E", "value": 6, "slug": "vlchanovo" }, { "key": "\u0412\u044A\u043B\u0447\u0435 \u043F\u043E\u043B\u0435", "value": 5, "slug": "vlche-pole" }, { "key": "\u0412\u044A\u043B\u0447\u0435\u0434\u0440\u044A\u043C", "value": 99, "slug": "vlchedrm" }, { "key": "\u0412\u044A\u043B\u0447\u0435\u043A", "value": 5, "slug": "vlchek" }, { "key": "\u0412\u044A\u043B\u0447\u0438 \u0434\u043E\u043B", "value": 176, "slug": "vlchi-dol" }, { "key": "\u0412\u044A\u043B\u0447\u0438\u043D", "value": 6, "slug": "vlchin" }, { "key": "\u0412\u044A\u043B\u0447\u0438\u0442\u0440\u044A\u043D", "value": 32, "slug": "vlchitrn" }, { "key": "\u0412\u044A\u0440\u0431\u0430", "value": 1, "slug": "vrba" }, { "key": "\u0412\u044A\u0440\u0431\u0430\u043A", "value": 5, "slug": "vrbak" }, { "key": "\u0412\u044A\u0440\u0431\u0435\u043D", "value": 20, "slug": "vrben" }, { "key": "\u0412\u044A\u0440\u0431\u0435\u0448\u043D\u0438\u0446\u0430", "value": 7, "slug": "vrbeshnica" }, { "key": "\u0412\u044A\u0440\u0431\u0438\u043D\u0430", "value": 32, "slug": "vrbina" }, { "key": "\u0412\u044A\u0440\u0431\u0438\u043D\u043E", "value": 4, "slug": "vrbino" }, { "key": "\u0412\u044A\u0440\u0431\u0438\u0446\u0430", "value": 181, "slug": "vrbica" }, { "key": "\u0412\u044A\u0440\u0431\u043D\u0438\u0446\u0430", "value": 2, "slug": "vrbnica" }, { "key": "\u0412\u044A\u0440\u0431\u043E\u0432\u043A\u0430", "value": 31, "slug": "vrbovka" }, { "key": "\u0412\u044A\u0440\u0431\u043E\u0432\u043E", "value": 16, "slug": "vrbovo" }, { "key": "\u0412\u044A\u0440\u0431\u043E\u0432\u0447\u0435\u0446", "value": 2, "slug": "vrbovchec" }, { "key": "\u0412\u044A\u0440\u0431\u044F\u043D\u0435", "value": 10, "slug": "vrbyane" }, { "key": "\u0412\u044A\u0440\u0433\u043E\u0432 \u0434\u043E\u043B", "value": 1, "slug": "vrgov-dol" }, { "key": "\u0412\u044A\u0440\u0437\u0438\u043B\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "vrzilkovci" }, { "key": "\u0412\u044A\u0440\u0437\u0443\u043B\u0438\u0446\u0430", "value": 5, "slug": "vrzulica" }, { "key": "\u0412\u044A\u0440\u043B\u0438 \u0434\u043E\u043B", "value": 1, "slug": "vrli-dol" }, { "key": "\u0412\u044A\u0440\u043B\u0438\u043D\u043E", "value": 3, "slug": "vrlino" }, { "key": "\u0412\u044A\u0440\u0442\u043E\u043F", "value": 1, "slug": "vrtop" }, { "key": "\u0412\u044A\u0440\u0448\u0435\u0446", "value": 251, "slug": "vrshec" }, { "key": "\u0412\u044A\u0440\u0448\u0438\u043B\u043E", "value": 4, "slug": "vrshilo" }, { "key": "\u0413\u0430\u0431\u0430\u0440\u0435", "value": 38, "slug": "gabare" }, { "key": "\u0413\u0430\u0431\u0430\u0440\u0435\u0432\u043E", "value": 64, "slug": "gabarevo" }, { "key": "\u0413\u0430\u0431\u0435\u0440", "value": 27, "slug": "gaber" }, { "key": "\u0413\u0430\u0431\u0435\u0440\u043E\u0432\u043E", "value": 14, "slug": "gaberovo" }, { "key": "\u0413\u0430\u0431\u0440\u0430", "value": 28, "slug": "gabra" }, { "key": "\u0413\u0430\u0431\u0440\u0435\u043D\u0435", "value": 26, "slug": "gabrene" }, { "key": "\u0413\u0430\u0431\u0440\u0435\u0448\u0435\u0432\u0446\u0438", "value": 2, "slug": "gabreshevci" }, { "key": "\u0413\u0430\u0431\u0440\u0438\u0446\u0430", "value": 7, "slug": "gabrica" }, { "key": "\u0413\u0430\u0431\u0440\u043E\u0432\u0434\u043E\u043B", "value": 4, "slug": "gabrovdol" }, { "key": "\u0413\u0430\u0431\u0440\u043E\u0432\u0438\u0446\u0430", "value": 17, "slug": "gabrovica" }, { "key": "\u0413\u0430\u0431\u0440\u043E\u0432\u043D\u0438\u0446\u0430", "value": 29, "slug": "gabrovnica" }, { "key": "\u0413\u0430\u0431\u0440\u043E\u0432\u043E", "value": 6205, "slug": "gabrovo" }, { "key": "\u0413\u0430\u0431\u0440\u043E\u0432\u0446\u0438", "value": 3, "slug": "gabrovci" }, { "key": "\u0413\u0430\u0431\u044A\u0440", "value": 4, "slug": "gabr" }, { "key": "\u0413\u0430\u0431\u044A\u0440\u043D\u0438\u0446\u0430", "value": 33, "slug": "gabrnica" }, { "key": "\u0413\u0430\u0432\u0440\u0430\u0438\u043B\u043E\u0432\u043E", "value": 44, "slug": "gavrailovo" }, { "key": "\u0413\u0430\u0432\u0440\u0438\u043B \u0413\u0435\u043D\u043E\u0432\u043E", "value": 9, "slug": "gavril-genovo" }, { "key": "\u0413\u0430\u0433\u0430\u043D\u0438\u0446\u0430", "value": 7, "slug": "gaganica" }, { "key": "\u0413\u0430\u0433\u043E\u0432\u043E", "value": 5, "slug": "gagovo" }, { "key": "\u0413\u0430\u0439\u0442\u0430\u043D\u0435\u0432\u043E", "value": 5, "slug": "gaytanevo" }, { "key": "\u0413\u0430\u0439\u0442\u0430\u043D\u0438\u043D\u043E\u0432\u043E", "value": 9, "slug": "gaytaninovo" }, { "key": "\u0413\u0430\u0439\u0442\u0430\u043D\u0438\u0442\u0435", "value": 6, "slug": "gaytanite" }, { "key": "\u0413\u0430\u0439\u0442\u0430\u043D\u0446\u0438", "value": 2, "slug": "gaytanci" }, { "key": "\u0413\u0430\u043B\u0430\u0442\u0430", "value": 78, "slug": "galata" }, { "key": "\u0413\u0430\u043B\u0430\u0442\u0438\u043D", "value": 21, "slug": "galatin" }, { "key": "\u0413\u0430\u043B\u0438\u0447\u0435", "value": 57, "slug": "galiche" }, { "key": "\u0413\u0430\u043B\u043E\u0432\u043E", "value": 6, "slug": "galovo" }, { "key": "\u0413\u0430\u043D\u0447\u043E\u0432\u0435\u0446", "value": 11, "slug": "ganchovec" }, { "key": "\u0413\u0430\u0440\u0432\u0430\u043D", "value": 22, "slug": "garvan" }, { "key": "\u0413\u0430\u0440\u0432\u0430\u043D\u043E\u0432\u043E", "value": 10, "slug": "garvanovo" }, { "key": "\u0413\u0435\u0433\u0430", "value": 4, "slug": "gega" }, { "key": "\u0413\u0435\u043B\u0430", "value": 5, "slug": "gela" }, { "key": "\u0413\u0435\u043B\u0435\u043C\u0435\u043D\u043E\u0432\u043E", "value": 15, "slug": "gelemenovo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u0418\u043D\u0437\u043E\u0432\u043E", "value": 52, "slug": "general-inzovo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u041A\u0430\u043D\u0442\u0430\u0440\u0434\u0436\u0438\u0435\u0432\u043E", "value": 49, "slug": "general-kantardzhievo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u041A\u0438\u0441\u0435\u043B\u043E\u0432\u043E", "value": 20, "slug": "general-kiselovo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u041A\u043E\u043B\u0435\u0432\u043E", "value": 18, "slug": "general-kolevo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u041C\u0430\u0440\u0438\u043D\u043E\u0432\u043E", "value": 1, "slug": "general-marinovo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u0422\u043E\u0434\u043E\u0440\u043E\u0432", "value": 23, "slug": "general-todorov" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B \u0422\u043E\u0448\u0435\u0432\u043E", "value": 566, "slug": "general-toshevo" }, { "key": "\u0413\u0435\u043D\u0435\u0440\u0430\u043B\u043E\u0432\u043E", "value": 4, "slug": "generalovo" }, { "key": "\u0413\u0435\u043E\u0440\u0433\u0438 \u0414\u0430\u043C\u044F\u043D\u043E\u0432\u043E", "value": 24, "slug": "georgi-damyanovo" }, { "key": "\u0413\u0435\u043E\u0440\u0433\u0438 \u0414\u043E\u0431\u0440\u0435\u0432\u043E", "value": 8, "slug": "georgi-dobrevo" }, { "key": "\u0413\u0435\u0440\u0433\u0435\u0432\u0435\u0446", "value": 23, "slug": "gergevec" }, { "key": "\u0413\u0435\u0440\u043C\u0430\u043D", "value": 189, "slug": "german" }, { "key": "\u0413\u0435\u0446\u043E\u0432\u043E", "value": 90, "slug": "gecovo" }, { "key": "\u0413\u0435\u0448\u0430", "value": 1, "slug": "gesha" }, { "key": "\u0413\u0435\u0448\u0430\u043D\u043E\u0432\u043E", "value": 12, "slug": "geshanovo" }, { "key": "\u0413\u0438\u0433\u0435\u043D", "value": 22, "slug": "gigen" }, { "key": "\u0413\u0438\u0433\u0438\u043D\u0446\u0438", "value": 7, "slug": "giginci" }, { "key": "\u0413\u0438\u043D\u0446\u0438", "value": 21, "slug": "ginci" }, { "key": "\u0413\u0438\u0440\u0447\u0435\u0432\u0446\u0438", "value": 5, "slug": "girchevci" }, { "key": "\u0413\u0438\u0442\u0430", "value": 16, "slug": "gita" }, { "key": "\u0413\u043B\u0430\u0432\u0430", "value": 23, "slug": "glava" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u043D", "value": 43, "slug": "glavan" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u043D\u043E\u0432\u0446\u0438", "value": 8, "slug": "glavanovci" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u043D\u0446\u0438", "value": 2, "slug": "glavanci" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u0442\u0430\u0440", "value": 7, "slug": "glavatar" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u0442\u0430\u0440\u0446\u0438", "value": 4, "slug": "glavatarci" }, { "key": "\u0413\u043B\u0430\u0432\u0430\u0446\u0438", "value": 10, "slug": "glavaci" }, { "key": "\u0413\u043B\u0430\u0432\u0438\u043D\u0438\u0446\u0430", "value": 175, "slug": "glavinica" }, { "key": "\u0413\u043B\u0430\u0432\u043D\u0438\u043A", "value": 5, "slug": "glavnik" }, { "key": "\u0413\u043B\u0430\u0448\u0430\u0442\u0430\u0439", "value": 1, "slug": "glashatay" }, { "key": "\u0413\u043B\u0435\u0434\u0430\u0446\u0438", "value": 2, "slug": "gledaci" }, { "key": "\u0413\u043B\u0435\u0434\u043A\u0430", "value": 20, "slug": "gledka" }, { "key": "\u0413\u043B\u043E\u0433\u0438\u043D\u043A\u0430", "value": 13, "slug": "gloginka" }, { "key": "\u0413\u043B\u043E\u0433\u0438\u043D\u043E", "value": 4, "slug": "glogino" }, { "key": "\u0413\u043B\u043E\u0433\u043E\u0432\u0438\u0446\u0430", "value": 3, "slug": "glogovica" }, { "key": "\u0413\u043B\u043E\u0433\u043E\u0432\u043E", "value": 48, "slug": "glogovo" }, { "key": "\u0413\u043B\u043E\u0434\u0436\u0435\u0432\u043E", "value": 98, "slug": "glodzhevo" }, { "key": "\u0413\u043B\u043E\u0436\u0435\u043D\u0435", "value": 131, "slug": "glozhene" }, { "key": "\u0413\u043B\u0443\u043C\u043E\u0432\u043E", "value": 1, "slug": "glumovo" }, { "key": "\u0413\u043B\u0443\u043C\u0447\u0435", "value": 1, "slug": "glumche" }, { "key": "\u0413\u043B\u0443\u0444\u0438\u0448\u0435\u0432\u043E", "value": 21, "slug": "glufishevo" }, { "key": "\u0413\u043B\u0443\u0445\u0430\u0440", "value": 39, "slug": "gluhar" }, { "key": "\u0413\u043B\u0443\u0448\u043D\u0438\u043A", "value": 10, "slug": "glushnik" }, { "key": "\u0413\u043D\u044F\u0437\u0434\u043E\u0432\u043E", "value": 4, "slug": "gnyazdovo" }, { "key": "\u0413\u043E\u0432\u0435\u0434\u0430\u0440\u0435", "value": 43, "slug": "govedare" }, { "key": "\u0413\u043E\u0432\u0435\u0434\u0430\u0440\u0446\u0438", "value": 93, "slug": "govedarci" }, { "key": "\u0413\u043E\u0432\u0435\u0436\u0434\u0430", "value": 17, "slug": "govezhda" }, { "key": "\u0413\u043E\u0434\u0435\u0447", "value": 264, "slug": "godech" }, { "key": "\u0413\u043E\u0434\u0435\u0448\u0435\u0432\u043E", "value": 14, "slug": "godeshevo" }, { "key": "\u0413\u043E\u0434\u043B\u0435\u0432\u043E", "value": 43, "slug": "godlevo" }, { "key": "\u0413\u043E\u0437\u0434\u0435\u0439\u043A\u0430", "value": 2, "slug": "gozdeyka" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u0430 \u0420\u0430\u043A\u043E\u0432\u0438\u0446\u0430", "value": 9, "slug": "golema-rakovica" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u0430\u043D\u0438\u0442\u0435", "value": 2, "slug": "golemanite" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u0430\u043D\u043E\u0432\u043E", "value": 7, "slug": "golemanovo" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u0430\u043D\u0446\u0438", "value": 11, "slug": "golemanci" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u0438 \u0421\u0442\u0430\u043D\u0447\u043E\u0432\u0446\u0438", "value": 6, "slug": "golemi-stanchovci" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u043E \u0411\u0430\u0431\u0438\u043D\u043E", "value": 16, "slug": "golemo-babino" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u043E \u0411\u0443\u0447\u0438\u043D\u043E", "value": 28, "slug": "golemo-buchino" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u043E \u041C\u0430\u043B\u043E\u0432\u043E", "value": 6, "slug": "golemo-malovo" }, { "key": "\u0413\u043E\u043B\u0435\u043C\u043E \u0441\u0435\u043B\u043E", "value": 30, "slug": "golemo-selo" }, { "key": "\u0413\u043E\u043B\u0435\u0446", "value": 18, "slug": "golec" }, { "key": "\u0413\u043E\u043B\u0435\u0448", "value": 28, "slug": "golesh" }, { "key": "\u0413\u043E\u043B\u0438\u0446\u0430", "value": 7, "slug": "golica" }, { "key": "\u0413\u043E\u043B\u043E\u0431\u0440\u0430\u0434\u043E\u0432\u043E", "value": 1, "slug": "golobradovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0412\u044A\u0440\u0431\u043E\u0432\u043D\u0438\u043A", "value": 4, "slug": "golyam-vrbovnik" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0414\u0435\u0432\u0435\u0441\u0438\u043B", "value": 2, "slug": "golyam-devesil" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0414\u0435\u0440\u0432\u0435\u043D\u0442", "value": 3, "slug": "golyam-dervent" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0434\u043E\u043B", "value": 4, "slug": "golyam-dol" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0438\u0437\u0432\u043E\u0440", "value": 30, "slug": "golyam-izvor" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u043C\u0430\u043D\u0430\u0441\u0442\u0438\u0440", "value": 8, "slug": "golyam-manastir" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u041F\u043E\u0440\u043E\u0432\u0435\u0446", "value": 17, "slug": "golyam-porovec" }, { "key": "\u0413\u043E\u043B\u044F\u043C \u0447\u0430\u0440\u0434\u0430\u043A", "value": 22, "slug": "golyam-chardak" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u0430 \u0411\u0440\u0435\u0441\u0442\u043D\u0438\u0446\u0430", "value": 7, "slug": "golyama-brestnica" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u0430 \u0432\u043E\u0434\u0430", "value": 12, "slug": "golyama-voda" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u0430 \u0416\u0435\u043B\u044F\u0437\u043D\u0430", "value": 30, "slug": "golyama-zhelyazna" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u0430 \u0427\u0438\u043D\u043A\u0430", "value": 8, "slug": "golyama-chinka" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0410\u0441\u0435\u043D\u043E\u0432\u043E", "value": 1, "slug": "golyamo-asenovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0411\u0435\u043B\u043E\u0432\u043E", "value": 17, "slug": "golyamo-belovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0411\u0443\u043A\u043E\u0432\u043E", "value": 5, "slug": "golyamo-bukovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0412\u0440\u0430\u043D\u043E\u0432\u043E", "value": 58, "slug": "golyamo-vranovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 19, "slug": "golyamo-gradishche" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0414\u0440\u044F\u043D\u043E\u0432\u043E", "value": 4, "slug": "golyamo-dryanovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u041A\u0430\u043C\u0435\u043D\u044F\u043D\u0435", "value": 6, "slug": "golyamo-kamenyane" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u041A\u0440\u0443\u0448\u0435\u0432\u043E", "value": 9, "slug": "golyamo-krushevo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u043D\u043E\u0432\u043E", "value": 11, "slug": "golyamo-novo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u041F\u0435\u0449\u0435\u043D\u0435", "value": 4, "slug": "golyamo-peshchene" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0421\u043E\u043A\u043E\u043B\u043E\u0432\u043E", "value": 7, "slug": "golyamo-sokolovo" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0446\u044A\u0440\u043A\u0432\u0438\u0449\u0435", "value": 7, "slug": "golyamo-crkvishche" }, { "key": "\u0413\u043E\u043B\u044F\u043C\u043E \u0427\u043E\u0447\u043E\u0432\u0435\u043D\u0438", "value": 11, "slug": "golyamo-chochoveni" }, { "key": "\u0413\u043E\u043B\u044F\u043D\u043E\u0432\u0446\u0438", "value": 31, "slug": "golyanovci" }, { "key": "\u0413\u043E\u043C\u043E\u0442\u0430\u0440\u0446\u0438", "value": 38, "slug": "gomotarci" }, { "key": "\u0413\u043E\u0440\u0430\u043D", "value": 5, "slug": "goran" }, { "key": "\u0413\u043E\u0440\u0430\u043D\u043E\u0432\u0446\u0438", "value": 2, "slug": "goranovci" }, { "key": "\u0413\u043E\u0440\u0435\u043C\u0435", "value": 1, "slug": "goreme" }, { "key": "\u0413\u043E\u0440\u0435\u043D \u0415\u043D\u0435\u0432\u0435\u0446", "value": 1, "slug": "goren-enevec" }, { "key": "\u0413\u043E\u0440\u0435\u043D \u0447\u0438\u0444\u043B\u0438\u043A", "value": 63, "slug": "goren-chiflik" }, { "key": "\u0413\u043E\u0440\u0438\u0446\u0430", "value": 79, "slug": "gorica" }, { "key": "\u0413\u043E\u0440\u0438\u0447\u0430\u043D\u0435", "value": 4, "slug": "gorichane" }, { "key": "\u0413\u043E\u0440\u0438\u0447\u0435\u0432\u043E", "value": 3, "slug": "gorichevo" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0410\u0440\u0434\u0430", "value": 3, "slug": "gorna-arda" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0411\u0435\u043B\u0430 \u0440\u0435\u0447\u043A\u0430", "value": 2, "slug": "gorna-bela-rechka" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0411\u0435\u0448\u043E\u0432\u0438\u0446\u0430", "value": 5, "slug": "gorna-beshovica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0411\u0438\u0440\u043A\u043E\u0432\u0430", "value": 6, "slug": "gorna-birkova" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0411\u0440\u0435\u0437\u043D\u0438\u0446\u0430", "value": 38, "slug": "gorna-breznica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0411\u0440\u0435\u0441\u0442\u043D\u0438\u0446\u0430", "value": 2, "slug": "gorna-brestnica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0412\u0430\u0441\u0438\u043B\u0438\u0446\u0430", "value": 5, "slug": "gorna-vasilica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0412\u0435\u0440\u0435\u043D\u0438\u0446\u0430", "value": 2, "slug": "gorna-verenica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0412\u0440\u0430\u0431\u0447\u0430", "value": 1, "slug": "gorna-vrabcha" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0413\u0440\u0430\u0449\u0438\u0446\u0430", "value": 18, "slug": "gorna-grashchica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0414\u0438\u043A\u0430\u043D\u044F", "value": 6, "slug": "gorna-dikanya" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0414\u044A\u0431\u0435\u0432\u0430", "value": 2, "slug": "gorna-dbeva" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041A\u043E\u0432\u0430\u0447\u0438\u0446\u0430", "value": 7, "slug": "gorna-kovachica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041A\u043E\u0437\u043D\u0438\u0446\u0430", "value": 9, "slug": "gorna-koznica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041A\u0440\u0435\u043C\u0435\u043D\u0430", "value": 14, "slug": "gorna-kremena" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u043A\u0440\u0435\u043F\u043E\u0441\u0442", "value": 1, "slug": "gorna-krepost" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041A\u0440\u0443\u0448\u0438\u0446\u0430", "value": 3, "slug": "gorna-krushica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u043A\u0443\u043B\u0430", "value": 11, "slug": "gorna-kula" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041B\u0438\u043F\u043D\u0438\u0446\u0430", "value": 15, "slug": "gorna-lipnica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041B\u0443\u043A\u0430", "value": 21, "slug": "gorna-luka" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041C\u0430\u043B\u0438\u043D\u0430", "value": 89, "slug": "gorna-malina" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 5, "slug": "gorna-mahala" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041C\u0438\u0442\u0440\u043E\u043F\u043E\u043B\u0438\u044F", "value": 53, "slug": "gorna-mitropoliya" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u041E\u0440\u044F\u0445\u043E\u0432\u0438\u0446\u0430", "value": 2362, "slug": "gorna-oryahovica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0420\u043E\u0441\u0438\u0446\u0430", "value": 25, "slug": "gorna-rosica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0421\u0442\u0443\u0434\u0435\u043D\u0430", "value": 19, "slug": "gorna-studena" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0421\u0443\u0448\u0438\u0446\u0430", "value": 3, "slug": "gorna-sushica" }, { "key": "\u0413\u043E\u0440\u043D\u0430 \u0425\u0443\u0431\u0430\u0432\u043A\u0430", "value": 1, "slug": "gorna-hubavka" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0411\u043E\u0433\u0440\u043E\u0432", "value": 86, "slug": "gorni-bogrov" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0412\u0430\u0434\u0438\u043D", "value": 5, "slug": "gorni-vadin" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0412\u044A\u0440\u043F\u0438\u0449\u0430", "value": 1, "slug": "gorni-vrpishcha" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0413\u043B\u0430\u0432\u0430\u043D\u0430\u043A", "value": 6, "slug": "gorni-glavanak" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0414\u043E\u043C\u043B\u044F\u043D", "value": 12, "slug": "gorni-domlyan" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0414\u044A\u0431\u043D\u0438\u043A", "value": 56, "slug": "gorni-dbnik" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u041B\u043E\u043C", "value": 27, "slug": "gorni-lom" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u041E\u043A\u043E\u043B", "value": 3, "slug": "gorni-okol" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0420\u043E\u043C\u0430\u043D\u0446\u0438", "value": 1, "slug": "gorni-romanci" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u0426\u0438\u0431\u044A\u0440", "value": 4, "slug": "gorni-cibr" }, { "key": "\u0413\u043E\u0440\u043D\u0438 \u042E\u0440\u0443\u0446\u0438", "value": 3, "slug": "gorni-yuruci" }, { "key": "\u0413\u043E\u0440\u043D\u0438\u043A", "value": 28, "slug": "gornik" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0410\u0431\u043B\u0430\u043D\u043E\u0432\u043E", "value": 18, "slug": "gorno-ablanovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0410\u043B\u0435\u043A\u0441\u0430\u043D\u0434\u0440\u043E\u0432\u043E", "value": 13, "slug": "gorno-aleksandrovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0411\u0435\u043B\u0435\u0432\u043E", "value": 13, "slug": "gorno-belevo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0411\u043E\u0442\u0435\u0432\u043E", "value": 31, "slug": "gorno-botevo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0412\u043E\u0439\u0432\u043E\u0434\u0438\u043D\u043E", "value": 4, "slug": "gorno-voyvodino" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0414\u0440\u0430\u0433\u043B\u0438\u0449\u0435", "value": 38, "slug": "gorno-draglishche" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0414\u0440\u044F\u043D\u043E\u0432\u043E", "value": 59, "slug": "gorno-dryanovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0418\u0437\u0432\u043E\u0440\u043E\u0432\u043E", "value": 11, "slug": "gorno-izvorovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041A\u0430\u043C\u0430\u0440\u0446\u0438", "value": 15, "slug": "gorno-kamarci" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041A\u0438\u0440\u043A\u043E\u0432\u043E", "value": 23, "slug": "gorno-kirkovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041A\u043E\u0437\u0430\u0440\u0435\u0432\u043E", "value": 6, "slug": "gorno-kozarevo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041A\u0440\u0430\u0438\u0449\u0435", "value": 27, "slug": "gorno-kraishche" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041D\u043E\u0432\u043A\u043E\u0432\u043E", "value": 3, "slug": "gorno-novkovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041E\u0437\u0438\u0440\u043E\u0432\u043E", "value": 5, "slug": "gorno-ozirovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041F\u0430\u0432\u043B\u0438\u043A\u0435\u043D\u0435", "value": 4, "slug": "gorno-pavlikene" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041F\u0435\u0449\u0435\u043D\u0435", "value": 6, "slug": "gorno-peshchene" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u043F\u043E\u043B\u0435", "value": 4, "slug": "gorno-pole" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u041F\u0440\u0430\u0445\u043E\u0432\u043E", "value": 17, "slug": "gorno-prahovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0421\u0430\u0445\u0440\u0430\u043D\u0435", "value": 59, "slug": "gorno-sahrane" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0421\u043F\u0430\u043D\u0447\u0435\u0432\u043E", "value": 1, "slug": "gorno-spanchevo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0442\u0440\u0430\u043F\u0435", "value": 10, "slug": "gorno-trape" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0425\u044A\u0440\u0441\u043E\u0432\u043E", "value": 1, "slug": "gorno-hrsovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0426\u0435\u0440\u043E\u0432\u0435\u043D\u0435", "value": 6, "slug": "gorno-cerovene" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u0427\u0435\u0440\u043A\u043E\u0432\u0438\u0449\u0435", "value": 30, "slug": "gorno-cherkovishche" }, { "key": "\u0413\u043E\u0440\u043D\u043E \u042F\u0431\u044A\u043B\u043A\u043E\u0432\u043E", "value": 1, "slug": "gorno-yablkovo" }, { "key": "\u0413\u043E\u0440\u043D\u043E\u0441\u043B\u0430\u0432", "value": 3, "slug": "gornoslav" }, { "key": "\u0413\u043E\u0440\u043E\u0446\u0432\u0435\u0442", "value": 11, "slug": "gorocvet" }, { "key": "\u0413\u043E\u0440\u043E\u0447\u0435\u0432\u0446\u0438", "value": 2, "slug": "gorochevci" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 6, "slug": "gorska-polyana" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u0438 \u0433\u043E\u0440\u0435\u043D \u0422\u0440\u044A\u043C\u0431\u0435\u0448", "value": 4, "slug": "gorski-goren-trmbesh" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u0438 \u0434\u043E\u043B\u0435\u043D \u0422\u0440\u044A\u043C\u0431\u0435\u0448", "value": 3, "slug": "gorski-dolen-trmbesh" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 65, "slug": "gorski-izvor" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u0438 \u0421\u0435\u043D\u043E\u0432\u0435\u0446", "value": 9, "slug": "gorski-senovec" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u0410\u0431\u043B\u0430\u043D\u043E\u0432\u043E", "value": 3, "slug": "gorsko-ablanovo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u0414\u044E\u043B\u0435\u0432\u043E", "value": 1, "slug": "gorsko-dyulevo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u041A\u0430\u043B\u0443\u0433\u0435\u0440\u043E\u0432\u043E", "value": 6, "slug": "gorsko-kalugerovo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u041A\u043E\u0441\u043E\u0432\u043E", "value": 5, "slug": "gorsko-kosovo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u043D\u043E\u0432\u043E \u0441\u0435\u043B\u043E", "value": 30, "slug": "gorsko-novo-selo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u0441\u0435\u043B\u043E", "value": 2, "slug": "gorsko-selo" }, { "key": "\u0413\u043E\u0440\u0441\u043A\u043E \u0421\u043B\u0438\u0432\u043E\u0432\u043E", "value": 22, "slug": "gorsko-slivovo" }, { "key": "\u0413\u043E\u0440\u0442\u0430\u043B\u043E\u0432\u043E", "value": 3, "slug": "gortalovo" }, { "key": "\u0413\u043E\u0440\u0443\u043D", "value": 7, "slug": "gorun" }, { "key": "\u0413\u043E\u0441\u043F\u043E\u0434\u0438\u043D\u043E\u0432\u043E", "value": 12, "slug": "gospodinovo" }, { "key": "\u0413\u043E\u0441\u043F\u043E\u0434\u0438\u043D\u0446\u0438", "value": 16, "slug": "gospodinci" }, { "key": "\u0413\u043E\u0441\u0442\u0438\u043B\u0438\u0446\u0430", "value": 31, "slug": "gostilica" }, { "key": "\u0413\u043E\u0441\u0442\u0438\u043B\u044F", "value": 6, "slug": "gostilya" }, { "key": "\u0413\u043E\u0441\u0442\u0438\u043D\u044F", "value": 6, "slug": "gostinya" }, { "key": "\u0413\u043E\u0446\u0435 \u0414\u0435\u043B\u0447\u0435\u0432", "value": 2391, "slug": "goce-delchev" }, { "key": "\u0413\u0440\u0430\u0434\u0435\u0432\u043E", "value": 10, "slug": "gradevo" }, { "key": "\u0413\u0440\u0430\u0434\u0435\u0436\u043D\u0438\u0446\u0430", "value": 46, "slug": "gradezhnica" }, { "key": "\u0413\u0440\u0430\u0434\u0435\u0446", "value": 125, "slug": "gradec" }, { "key": "\u0413\u0440\u0430\u0434\u0435\u0448\u043D\u0438\u0446\u0430", "value": 12, "slug": "gradeshnica" }, { "key": "\u0413\u0440\u0430\u0434\u0438\u043D\u0430", "value": 125, "slug": "gradina" }, { "key": "\u0413\u0440\u0430\u0434\u0438\u043D\u0430\u0440\u043E\u0432\u043E", "value": 17, "slug": "gradinarovo" }, { "key": "\u0413\u0440\u0430\u0434\u0438\u043D\u0438", "value": 4, "slug": "gradini" }, { "key": "\u0413\u0440\u0430\u0434\u0438\u0449\u0435", "value": 37, "slug": "gradishche" }, { "key": "\u0413\u0440\u0430\u0434\u043D\u0438\u0446\u0430", "value": 28, "slug": "gradnica" }, { "key": "\u0413\u0440\u0430\u0434\u0441\u043A\u043E", "value": 9, "slug": "gradsko" }, { "key": "\u0413\u0440\u0430\u0434\u044A\u0442", "value": 4, "slug": "gradt" }, { "key": "\u0413\u0440\u0430\u043C\u0430\u0434\u0430", "value": 48, "slug": "gramada" }, { "key": "\u0413\u0440\u0430\u043C\u0430\u0434\u0435", "value": 3, "slug": "gramade" }, { "key": "\u0413\u0440\u0430\u043C\u0430\u0436\u0434\u0430\u043D\u043E", "value": 14, "slug": "gramazhdano" }, { "key": "\u0413\u0440\u0430\u043C\u0430\u0442\u0438\u043A\u043E\u0432\u043E", "value": 40, "slug": "gramatikovo" }, { "key": "\u0413\u0440\u0430\u043D\u0438\u0442", "value": 7, "slug": "granit" }, { "key": "\u0413\u0440\u0430\u043D\u0438\u0442\u043E\u0432\u043E", "value": 38, "slug": "granitovo" }, { "key": "\u0413\u0440\u0430\u043D\u0438\u0446\u0430", "value": 18, "slug": "granica" }, { "key": "\u0413\u0440\u0430\u043D\u0438\u0447\u0430\u0440", "value": 8, "slug": "granichar" }, { "key": "\u0413\u0440\u0430\u0444 \u0418\u0433\u043D\u0430\u0442\u0438\u0435\u0432\u043E", "value": 112, "slug": "graf-ignatievo" }, { "key": "\u0413\u0440\u0430\u0448\u0435\u0432\u043E", "value": 23, "slug": "grashevo" }, { "key": "\u0413\u0440\u0438\u0432\u0438\u0446\u0430", "value": 54, "slug": "grivica" }, { "key": "\u0413\u0440\u0438\u0432\u043A\u0430", "value": 1, "slug": "grivka" }, { "key": "\u0413\u0440\u0438\u0433\u043E\u0440\u0435\u0432\u043E", "value": 17, "slug": "grigorevo" }, { "key": "\u0413\u0440\u043E\u0437\u0434\u0435\u043D", "value": 29, "slug": "grozden" }, { "key": "\u0413\u0440\u043E\u0437\u0434\u044C\u043E\u0432\u043E", "value": 76, "slug": "grozdovo" }, { "key": "\u0413\u0440\u043E\u043C\u0448\u0438\u043D", "value": 11, "slug": "gromshin" }, { "key": "\u0413\u0440\u043E\u0445\u043E\u0442\u043D\u043E", "value": 22, "slug": "grohotno" }, { "key": "\u0413\u0440\u0443\u0435\u0432\u043E", "value": 14, "slug": "gruevo" }, { "key": "\u0413\u0440\u044A\u0431\u043B\u0435\u0432\u0446\u0438", "value": 2, "slug": "grblevci" }, { "key": "\u0413\u0440\u044A\u043D\u0447\u0430\u0440\u043E\u0432\u043E", "value": 11, "slug": "grncharovo" }, { "key": "\u0413\u0443\u0431\u0435\u0448", "value": 2, "slug": "gubesh" }, { "key": "\u0413\u0443\u043B\u0438\u0439\u043A\u0430", "value": 4, "slug": "guliyka" }, { "key": "\u0413\u0443\u043B\u044F\u043D\u0446\u0438", "value": 105, "slug": "gulyanci" }, { "key": "\u0413\u0443\u043C\u043E\u0449\u043D\u0438\u043A", "value": 3, "slug": "gumoshchnik" }, { "key": "\u0413\u0443\u0440\u043A\u043E\u0432\u043E", "value": 178, "slug": "gurkovo" }, { "key": "\u0413\u0443\u0440\u043C\u0430\u0437\u043E\u0432\u043E", "value": 42, "slug": "gurmazovo" }, { "key": "\u0413\u0443\u0441\u043B\u0430", "value": 15, "slug": "gusla" }, { "key": "\u0413\u0443\u0446\u0430\u043B", "value": 8, "slug": "gucal" }, { "key": "\u0413\u044A\u0431\u0435\u043D\u0435", "value": 12, "slug": "gbene" }, { "key": "\u0413\u044A\u043B\u044A\u0431\u0435\u0446", "value": 77, "slug": "glbec" }, { "key": "\u0413\u044A\u043B\u044A\u0431\u0438\u043D\u0446\u0438", "value": 10, "slug": "glbinci" }, { "key": "\u0413\u044A\u043B\u044A\u0431\u043D\u0438\u043A", "value": 3, "slug": "glbnik" }, { "key": "\u0413\u044A\u043B\u044A\u0431\u043E\u0432\u043E", "value": 598, "slug": "glbovo" }, { "key": "\u0413\u044A\u043B\u044A\u0431\u043E\u0432\u0446\u0438", "value": 17, "slug": "glbovci" }, { "key": "\u0413\u044A\u043C\u0437\u043E\u0432\u043E", "value": 19, "slug": "gmzovo" }, { "key": "\u0413\u044A\u0440\u0431\u0438\u0449\u0435", "value": 3, "slug": "grbishche" }, { "key": "\u0413\u044A\u0440\u0434\u0435\u0432\u0446\u0438", "value": 2, "slug": "grdevci" }, { "key": "\u0413\u044A\u0440\u043B\u043E", "value": 4, "slug": "grlo" }, { "key": "\u0413\u044A\u0440\u043B\u044F\u043D\u043E", "value": 11, "slug": "grlyano" }, { "key": "\u0413\u044A\u0440\u043C\u0435\u043D", "value": 135, "slug": "grmen" }, { "key": "\u0413\u044A\u0440\u043D\u0430\u0442\u0438", "value": 1, "slug": "grnati" }, { "key": "\u0413\u044A\u0440\u0447\u0438\u043D\u043E\u0432\u043E", "value": 16, "slug": "grchinovo" }, { "key": "\u0413\u044A\u0441\u043A\u043E\u0432\u043E", "value": 4, "slug": "gskovo" }, { "key": "\u0413\u044C\u043E\u0432\u0440\u0435\u043D", "value": 26, "slug": "govren" }, { "key": "\u0413\u044E\u0435\u0448\u0435\u0432\u043E", "value": 5, "slug": "gyueshevo" }, { "key": "\u0413\u044E\u043B\u044C\u043E\u0432\u0446\u0430", "value": 64, "slug": "gyulovca" }, { "key": "\u0413\u044E\u0440\u0433\u0438\u0447", "value": 4, "slug": "gyurgich" }, { "key": "\u0414\u0430\u0432\u0435\u0440\u0438", "value": 2, "slug": "daveri" }, { "key": "\u0414\u0430\u0432\u0438\u0434\u043A\u043E\u0432\u043E", "value": 30, "slug": "davidkovo" }, { "key": "\u0414\u0430\u0432\u0438\u0434\u043E\u0432\u043E", "value": 17, "slug": "davidovo" }, { "key": "\u0414\u0430\u0433\u043E\u043D\u043E\u0432\u043E", "value": 17, "slug": "dagonovo" }, { "key": "\u0414\u0430\u043C\u044F\u043D\u0438\u0446\u0430", "value": 58, "slug": "damyanica" }, { "key": "\u0414\u0430\u043C\u044F\u043D\u043E\u0432\u043E", "value": 16, "slug": "damyanovo" }, { "key": "\u0414\u0430\u0441\u043A\u0430\u043B-\u0410\u0442\u0430\u043D\u0430\u0441\u043E\u0432\u043E", "value": 11, "slug": "daskal-atanasovo" }, { "key": "\u0414\u0430\u0441\u043A\u0430\u043B\u043E\u0432\u043E", "value": 7, "slug": "daskalovo" }, { "key": "\u0414\u0432\u0435 \u043C\u043E\u0433\u0438\u043B\u0438", "value": 196, "slug": "dve-mogili" }, { "key": "\u0414\u0432\u043E\u0440\u0438\u0449\u0435", "value": 2, "slug": "dvorishche" }, { "key": "\u0414\u0435\u0431\u0435\u043B \u0434\u044F\u043B", "value": 1, "slug": "debel-dyal" }, { "key": "\u0414\u0435\u0431\u0435\u043B\u0435\u0446", "value": 198, "slug": "debelec" }, { "key": "\u0414\u0435\u0431\u0435\u043B\u0438 \u043B\u0430\u0433", "value": 4, "slug": "debeli-lag" }, { "key": "\u0414\u0435\u0431\u0435\u043B\u0442", "value": 85, "slug": "debelt" }, { "key": "\u0414\u0435\u0431\u0435\u043B\u0446\u043E\u0432\u043E", "value": 3, "slug": "debelcovo" }, { "key": "\u0414\u0435\u0431\u0435\u043B\u044F\u043D\u043E\u0432\u043E", "value": 3, "slug": "debelyanovo" }, { "key": "\u0414\u0435\u0431\u043D\u0435\u0432\u043E", "value": 25, "slug": "debnevo" }, { "key": "\u0414\u0435\u0431\u043E\u0432\u043E", "value": 7, "slug": "debovo" }, { "key": "\u0414\u0435\u0431\u0440\u0435\u043D", "value": 109, "slug": "debren" }, { "key": "\u0414\u0435\u0431\u0440\u0435\u043D\u0435", "value": 2, "slug": "debrene" }, { "key": "\u0414\u0435\u0431\u0440\u044A\u0449\u0438\u0446\u0430", "value": 35, "slug": "debrshchica" }, { "key": "\u0414\u0435\u0432\u0435\u043D\u0435", "value": 20, "slug": "devene" }, { "key": "\u0414\u0435\u0432\u0435\u043D\u0446\u0438", "value": 16, "slug": "devenci" }, { "key": "\u0414\u0435\u0432\u0435\u0441\u0438\u043B\u0438\u0446\u0430", "value": 2, "slug": "devesilica" }, { "key": "\u0414\u0435\u0432\u0435\u0441\u0438\u043B\u043E\u0432\u043E", "value": 2, "slug": "devesilovo" }, { "key": "\u0414\u0435\u0432\u0435\u0442\u0430\u043A", "value": 7, "slug": "devetak" }, { "key": "\u0414\u0435\u0432\u0435\u0442\u0430\u043A\u0438", "value": 7, "slug": "devetaki" }, { "key": "\u0414\u0435\u0432\u0435\u0442\u0438\u043D\u0446\u0438", "value": 5, "slug": "devetinci" }, { "key": "\u0414\u0435\u0432\u0438\u043D", "value": 495, "slug": "devin" }, { "key": "\u0414\u0435\u0432\u0438\u043D\u0446\u0438", "value": 2, "slug": "devinci" }, { "key": "\u0414\u0435\u0432\u043D\u044F", "value": 543, "slug": "devnya" }, { "key": "\u0414\u0435\u0434\u0435\u0446", "value": 1, "slug": "dedec" }, { "key": "\u0414\u0435\u0434\u0438\u043D\u0430", "value": 2, "slug": "dedina" }, { "key": "\u0414\u0435\u0434\u0438\u043D\u043E", "value": 3, "slug": "dedino" }, { "key": "\u0414\u0435\u0434\u0438\u043D\u0446\u0438", "value": 2, "slug": "dedinci" }, { "key": "\u0414\u0435\u0434\u043E\u0432\u043E", "value": 7, "slug": "dedovo" }, { "key": "\u0414\u0435\u043A\u043E\u0432", "value": 24, "slug": "dekov" }, { "key": "\u0414\u0435\u043B\u0432\u0438\u043D\u043E", "value": 1, "slug": "delvino" }, { "key": "\u0414\u0435\u043B\u0435\u0439\u043D\u0430", "value": 5, "slug": "deleyna" }, { "key": "\u0414\u0435\u043B\u0447\u0435\u0432\u043E", "value": 20, "slug": "delchevo" }, { "key": "\u0414\u0435\u043B\u044F\u043D", "value": 4, "slug": "delyan" }, { "key": "\u0414\u0435\u043B\u044F\u043D\u043E\u0432\u0446\u0438", "value": 3, "slug": "delyanovci" }, { "key": "\u0414\u0435\u043D\u043D\u0438\u0446\u0430", "value": 4, "slug": "dennica" }, { "key": "\u0414\u0435\u043D\u0447\u0435\u0432\u0446\u0438", "value": 4, "slug": "denchevci" }, { "key": "\u0414\u0435\u0440\u043C\u0430\u043D\u0446\u0438", "value": 75, "slug": "dermanci" }, { "key": "\u0414\u0435\u0442\u0435\u043B\u0438\u043D\u0430", "value": 14, "slug": "detelina" }, { "key": "\u0414\u0436\u0435\u0431\u0435\u043B", "value": 196, "slug": "dzhebel" }, { "key": "\u0414\u0436\u0435\u043B\u0435\u043F\u0441\u043A\u043E", "value": 6, "slug": "dzhelepsko" }, { "key": "\u0414\u0436\u0435\u0440\u043C\u0430\u043D", "value": 60, "slug": "dzherman" }, { "key": "\u0414\u0436\u0435\u0440\u043E\u0432\u043E", "value": 8, "slug": "dzherovo" }, { "key": "\u0414\u0436\u0438\u0433\u0443\u0440\u043E\u0432\u043E", "value": 28, "slug": "dzhigurovo" }, { "key": "\u0414\u0436\u0438\u043D\u043E\u0442", "value": 7, "slug": "dzhinot" }, { "key": "\u0414\u0436\u0438\u043D\u0447\u043E\u0432\u0446\u0438", "value": 1, "slug": "dzhinchovci" }, { "key": "\u0414\u0436\u0443\u043B\u044E\u043D\u0438\u0446\u0430", "value": 63, "slug": "dzhulyunica" }, { "key": "\u0414\u0436\u0443\u043C\u0440\u0438\u0438\u0442\u0435", "value": 1, "slug": "dzhumriite" }, { "key": "\u0414\u0436\u0443\u0440\u043A\u043E\u0432\u043E", "value": 7, "slug": "dzhurkovo" }, { "key": "\u0414\u0436\u0443\u0440\u043E\u0432\u043E", "value": 28, "slug": "dzhurovo" }, { "key": "\u0414\u0438\u0430\u043C\u0430\u043D\u0434\u043E\u0432\u043E", "value": 4, "slug": "diamandovo" }, { "key": "\u0414\u0438\u0431\u0438\u0447", "value": 24, "slug": "dibich" }, { "key": "\u0414\u0438\u0432\u0430 \u0421\u043B\u0430\u0442\u0438\u043D\u0430", "value": 3, "slug": "diva-slatina" }, { "key": "\u0414\u0438\u0432\u0435\u0446\u0438", "value": 1, "slug": "diveci" }, { "key": "\u0414\u0438\u0432\u043B\u044F", "value": 5, "slug": "divlya" }, { "key": "\u0414\u0438\u0432\u043E\u0442\u0438\u043D\u043E", "value": 107, "slug": "divotino" }, { "key": "\u0414\u0438\u0432\u0447\u043E\u0432\u043E\u0442\u043E", "value": 2, "slug": "divchovoto" }, { "key": "\u0414\u0438\u043C\u0430\u043D\u043E\u0432\u043E", "value": 3, "slug": "dimanovo" }, { "key": "\u0414\u0438\u043C\u0438\u0435\u0432\u0446\u0438", "value": 1, "slug": "dimievci" }, { "key": "\u0414\u0438\u043C\u0438\u0442\u0440\u0438\u0435\u0432\u043E", "value": 3, "slug": "dimitrievo" }, { "key": "\u0414\u0438\u043C\u0438\u0442\u0440\u043E\u0432\u0433\u0440\u0430\u0434", "value": 3669, "slug": "dimitrovgrad" }, { "key": "\u0414\u0438\u043C\u0438\u0442\u0440\u043E\u0432\u0447\u0435", "value": 22, "slug": "dimitrovche" }, { "key": "\u0414\u0438\u043C\u043E\u0432\u043E", "value": 36, "slug": "dimovo" }, { "key": "\u0414\u0438\u043C\u043E\u0432\u0446\u0438", "value": 3, "slug": "dimovci" }, { "key": "\u0414\u0438\u043C\u0447\u0430", "value": 8, "slug": "dimcha" }, { "key": "\u0414\u0438\u043C\u0447\u0435\u0432\u043E", "value": 12, "slug": "dimchevo" }, { "key": "\u0414\u0438\u043D\u0435\u0432\u043E", "value": 11, "slug": "dinevo" }, { "key": "\u0414\u0438\u043D\u043A", "value": 10, "slug": "dink" }, { "key": "\u0414\u0438\u043D\u043A\u0430\u0442\u0430", "value": 25, "slug": "dinkata" }, { "key": "\u0414\u0438\u043D\u043A\u043E\u0432\u043E", "value": 3, "slug": "dinkovo" }, { "key": "\u0414\u0438\u043D\u044F", "value": 6, "slug": "dinya" }, { "key": "\u0414\u0438\u0440\u0430\u043B\u043E", "value": 1, "slug": "diralo" }, { "key": "\u0414\u0438\u0441\u0435\u0432\u0438\u0446\u0430", "value": 9, "slug": "disevica" }, { "key": "\u0414\u0438\u0447\u0435\u0432\u043E", "value": 8, "slug": "dichevo" }, { "key": "\u0414\u0438\u0447\u0438\u043D", "value": 15, "slug": "dichin" }, { "key": "\u0414\u043B\u044A\u0433\u043D\u0435\u0432\u043E", "value": 4, "slug": "dlgnevo" }, { "key": "\u0414\u043B\u044A\u0433\u043D\u044F", "value": 6, "slug": "dlgnya" }, { "key": "\u0414\u043B\u044A\u0436\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 5, "slug": "dlzhka-polyana" }, { "key": "\u0414\u043B\u044A\u0436\u043A\u043E", "value": 4, "slug": "dlzhko" }, { "key": "\u0414\u043E\u0431\u043E\u0440\u0441\u043A\u043E", "value": 2, "slug": "doborsko" }, { "key": "\u0414\u043E\u0431\u0440\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 17, "slug": "dobra-polyana" }, { "key": "\u0414\u043E\u0431\u0440\u0430\u043B\u044A\u043A", "value": 4, "slug": "dobralk" }, { "key": "\u0414\u043E\u0431\u0440\u0435\u0432\u043E", "value": 5, "slug": "dobrevo" }, { "key": "\u0414\u043E\u0431\u0440\u0435\u0432\u0446\u0438", "value": 10, "slug": "dobrevci" }, { "key": "\u0414\u043E\u0431\u0440\u0438 \u0412\u043E\u0439\u043D\u0438\u043A\u043E\u0432\u043E", "value": 6, "slug": "dobri-voynikovo" }, { "key": "\u0414\u043E\u0431\u0440\u0438 \u0434\u043E\u043B", "value": 7, "slug": "dobri-dol" }, { "key": "\u0414\u043E\u0431\u0440\u0438 \u0434\u044F\u043B", "value": 23, "slug": "dobri-dyal" }, { "key": "\u0414\u043E\u0431\u0440\u0438 \u043B\u0430\u043A\u0438", "value": 5, "slug": "dobri-laki" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u043D", "value": 12, "slug": "dobrin" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u043D\u0430", "value": 22, "slug": "dobrina" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u043D\u0438\u0449\u0435", "value": 212, "slug": "dobrinishche" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u043D\u043E\u0432\u043E", "value": 10, "slug": "dobrinovo" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u043D\u0446\u0438", "value": 8, "slug": "dobrinci" }, { "key": "\u0414\u043E\u0431\u0440\u0438\u0447", "value": 9162, "slug": "dobrich" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0432\u043D\u0438\u0446\u0430", "value": 55, "slug": "dobrovnica" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0433\u043B\u0435\u0434", "value": 16, "slug": "dobrogled" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0434\u0430\u043D", "value": 14, "slug": "dobrodan" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u043B\u0435\u0432\u043E", "value": 22, "slug": "dobrolevo" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u043C\u0438\u0440", "value": 34, "slug": "dobromir" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u043C\u0438\u0440\u043A\u0430", "value": 20, "slug": "dobromirka" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u043C\u0438\u0440\u0446\u0438", "value": 31, "slug": "dobromirci" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u043F\u043B\u043E\u0434\u043D\u043E", "value": 17, "slug": "dobroplodno" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0441\u043B\u0430\u0432\u0446\u0438", "value": 78, "slug": "dobroslavci" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0442\u0438\u0446\u0430", "value": 14, "slug": "dobrotica" }, { "key": "\u0414\u043E\u0431\u0440\u043E\u0442\u0438\u0447", "value": 17, "slug": "dobrotich" }, { "key": "\u0414\u043E\u0431\u0440\u0443\u0434\u0436\u0430\u043D\u043A\u0430", "value": 1, "slug": "dobrudzhanka" }, { "key": "\u0414\u043E\u0431\u0440\u0443\u0448\u0430", "value": 4, "slug": "dobrusha" }, { "key": "\u0414\u043E\u0431\u044A\u0440\u0441\u043A\u043E", "value": 18, "slug": "dobrsko" }, { "key": "\u0414\u043E\u0431\u044A\u0440\u0447\u0438\u043D", "value": 1, "slug": "dobrchin" }, { "key": "\u0414\u043E\u0433\u0430\u043D\u043E\u0432\u043E", "value": 26, "slug": "doganovo" }, { "key": "\u0414\u043E\u0439\u0440\u0430\u043D\u0446\u0438", "value": 14, "slug": "doyranci" }, { "key": "\u0414\u043E\u0439\u0440\u0435\u043D\u0446\u0438", "value": 32, "slug": "doyrenci" }, { "key": "\u0414\u043E\u043A\u0442\u043E\u0440 \u0419\u043E\u0441\u0438\u0444\u043E\u0432\u043E", "value": 17, "slug": "doktor-yosifovo" }, { "key": "\u0414\u043E\u043B\u0435\u043D", "value": 44, "slug": "dolen" }, { "key": "\u0414\u043E\u043B\u0435\u0446", "value": 10, "slug": "dolec" }, { "key": "\u0414\u043E\u043B\u0438\u0435", "value": 3, "slug": "dolie" }, { "key": "\u0414\u043E\u043B\u0438\u043D\u0430", "value": 28, "slug": "dolina" }, { "key": "\u0414\u043E\u043B\u0438\u0441\u0442\u043E\u0432\u043E", "value": 11, "slug": "dolistovo" }, { "key": "\u0414\u043E\u043B\u0438\u0449\u0435", "value": 42, "slug": "dolishche" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0431\u0430\u043D\u044F", "value": 194, "slug": "dolna-banya" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0411\u0435\u043B\u0430 \u0440\u0435\u0447\u043A\u0430", "value": 1, "slug": "dolna-bela-rechka" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0411\u0435\u0448\u043E\u0432\u0438\u0446\u0430", "value": 11, "slug": "dolna-beshovica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0412\u0435\u0440\u0435\u043D\u0438\u0446\u0430", "value": 5, "slug": "dolna-verenica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0413\u0440\u0430\u0434\u0435\u0448\u043D\u0438\u0446\u0430", "value": 51, "slug": "dolna-gradeshnica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0413\u0440\u0430\u0449\u0438\u0446\u0430", "value": 1, "slug": "dolna-grashchica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0414\u0438\u043A\u0430\u043D\u044F", "value": 25, "slug": "dolna-dikanya" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0414\u044A\u0431\u0435\u0432\u0430", "value": 4, "slug": "dolna-dbeva" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041A\u0430\u0431\u0434\u0430", "value": 10, "slug": "dolna-kabda" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041A\u0440\u0435\u043C\u0435\u043D\u0430", "value": 16, "slug": "dolna-kremena" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u043A\u0440\u0435\u043F\u043E\u0441\u0442", "value": 1, "slug": "dolna-krepost" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041A\u0440\u0443\u0448\u0438\u0446\u0430", "value": 5, "slug": "dolna-krushica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041B\u0438\u043F\u043D\u0438\u0446\u0430", "value": 17, "slug": "dolna-lipnica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041C\u0430\u043B\u0438\u043D\u0430", "value": 6, "slug": "dolna-malina" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 15, "slug": "dolna-mahala" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041C\u0438\u0442\u0440\u043E\u043F\u043E\u043B\u0438\u044F", "value": 155, "slug": "dolna-mitropoliya" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041D\u0435\u0432\u043B\u044F", "value": 3, "slug": "dolna-nevlya" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u041E\u0440\u044F\u0445\u043E\u0432\u0438\u0446\u0430", "value": 129, "slug": "dolna-oryahovica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0420\u0438\u0431\u043D\u0438\u0446\u0430", "value": 12, "slug": "dolna-ribnica" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0420\u0438\u043A\u0441\u0430", "value": 2, "slug": "dolna-riksa" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0421\u0435\u043A\u0438\u0440\u043D\u0430", "value": 5, "slug": "dolna-sekirna" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0421\u0442\u0443\u0434\u0435\u043D\u0430", "value": 36, "slug": "dolna-studena" }, { "key": "\u0414\u043E\u043B\u043D\u0430 \u0425\u0443\u0431\u0430\u0432\u043A\u0430", "value": 8, "slug": "dolna-hubavka" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0411\u043E\u0433\u0440\u043E\u0432", "value": 47, "slug": "dolni-bogrov" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0411\u043E\u0448\u043D\u044F\u043A", "value": 1, "slug": "dolni-boshnyak" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0412\u0430\u0434\u0438\u043D", "value": 12, "slug": "dolni-vadin" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0412\u0438\u0442", "value": 18, "slug": "dolni-vit" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0413\u043B\u0430\u0432\u0430\u043D\u0430\u043A", "value": 7, "slug": "dolni-glavanak" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0414\u044A\u0431\u043D\u0438\u043A", "value": 222, "slug": "dolni-dbnik" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u041B\u043E\u043C", "value": 17, "slug": "dolni-lom" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u041B\u0443\u043A\u043E\u0432\u0438\u0442", "value": 37, "slug": "dolni-lukovit" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u041C\u0430\u0440\u044F\u043D", "value": 1, "slug": "dolni-maryan" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u041E\u043A\u043E\u043B", "value": 1, "slug": "dolni-okol" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u041F\u0430\u0441\u0430\u0440\u0435\u043B", "value": 44, "slug": "dolni-pasarel" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0420\u0430\u043A\u043E\u0432\u0435\u0446", "value": 12, "slug": "dolni-rakovec" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0426\u0438\u0431\u044A\u0440", "value": 38, "slug": "dolni-cibr" }, { "key": "\u0414\u043E\u043B\u043D\u0438 \u0447\u0438\u0444\u043B\u0438\u043A", "value": 403, "slug": "dolni-chiflik" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0410\u0431\u043B\u0430\u043D\u043E\u0432\u043E", "value": 7, "slug": "dolno-ablanovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0411\u0435\u043B\u0435\u0432\u043E", "value": 12, "slug": "dolno-belevo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0411\u0435\u043B\u043E\u0442\u0438\u043D\u0446\u0438", "value": 11, "slug": "dolno-belotinci" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0411\u043E\u0442\u0435\u0432\u043E", "value": 13, "slug": "dolno-botevo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0412\u043E\u0439\u0432\u043E\u0434\u0438\u043D\u043E", "value": 3, "slug": "dolno-voyvodino" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0413\u043E\u043B\u0435\u043C\u0430\u043D\u0446\u0438", "value": 10, "slug": "dolno-golemanci" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0414\u0440\u0430\u0433\u043B\u0438\u0449\u0435", "value": 34, "slug": "dolno-draglishche" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0414\u0440\u044F\u043D\u043E\u0432\u043E", "value": 30, "slug": "dolno-dryanovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0438\u0437\u0432\u043E\u0440\u043E\u0432\u043E", "value": 22, "slug": "dolno-izvorovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041A\u0430\u043C\u0430\u0440\u0446\u0438", "value": 9, "slug": "dolno-kamarci" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041A\u043E\u0431\u0438\u043B\u0435", "value": 1, "slug": "dolno-kobile" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041A\u043E\u0437\u0430\u0440\u0435\u0432\u043E", "value": 6, "slug": "dolno-kozarevo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041A\u044A\u043F\u0438\u043D\u043E\u0432\u043E", "value": 5, "slug": "dolno-kpinovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041B\u0438\u043D\u0435\u0432\u043E", "value": 4, "slug": "dolno-linevo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041B\u0443\u043A\u043E\u0432\u043E", "value": 2, "slug": "dolno-lukovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041D\u043E\u0432\u043A\u043E\u0432\u043E", "value": 1, "slug": "dolno-novkovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u043D\u043E\u0432\u043E \u0441\u0435\u043B\u043E", "value": 4, "slug": "dolno-novo-selo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041E\u0437\u0438\u0440\u043E\u0432\u043E", "value": 14, "slug": "dolno-ozirovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041E\u0441\u0435\u043D\u043E\u0432\u043E", "value": 23, "slug": "dolno-osenovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u041F\u0440\u0430\u0445\u043E\u0432\u043E", "value": 1, "slug": "dolno-prahovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0420\u044F\u0445\u043E\u0432\u043E", "value": 8, "slug": "dolno-ryahovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0421\u0430\u0445\u0440\u0430\u043D\u0435", "value": 37, "slug": "dolno-sahrane" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0441\u0435\u043B\u043E", "value": 3, "slug": "dolno-selo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0421\u043F\u0430\u043D\u0447\u0435\u0432\u043E", "value": 11, "slug": "dolno-spanchevo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0421\u044A\u0434\u0438\u0435\u0432\u043E", "value": 2, "slug": "dolno-sdievo" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0423\u0439\u043D\u043E", "value": 6, "slug": "dolno-uyno" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0426\u0435\u0440\u043E\u0432\u0435\u043D\u0435", "value": 10, "slug": "dolno-cerovene" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u0427\u0435\u0440\u043A\u043E\u0432\u0438\u0449\u0435", "value": 9, "slug": "dolno-cherkovishche" }, { "key": "\u0414\u043E\u043B\u043D\u043E \u042F\u0431\u044A\u043B\u043A\u043E\u0432\u043E", "value": 1, "slug": "dolno-yablkovo" }, { "key": "\u0414\u043E\u043B\u043D\u043E\u0441\u043B\u0430\u0432", "value": 11, "slug": "dolnoslav" }, { "key": "\u0414\u043E\u043C\u0438\u0449\u0435", "value": 4, "slug": "domishche" }, { "key": "\u0414\u043E\u043C\u043B\u044F\u043D", "value": 7, "slug": "domlyan" }, { "key": "\u0414\u043E\u043D\u0434\u0443\u043A\u043E\u0432\u043E", "value": 11, "slug": "dondukovo" }, { "key": "\u0414\u043E\u043D\u0438\u043D\u043E", "value": 3, "slug": "donino" }, { "key": "\u0414\u043E\u043D\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "donkovci" }, { "key": "\u0414\u043E\u043D\u0447\u0435\u0432\u043E", "value": 36, "slug": "donchevo" }, { "key": "\u0414\u043E\u0440\u043A\u043E\u0432\u043E", "value": 89, "slug": "dorkovo" }, { "key": "\u0414\u043E\u0441\u0438\u0442\u0435\u0435\u0432\u043E", "value": 9, "slug": "dositeevo" }, { "key": "\u0414\u043E\u0441\u043F\u0430\u0442", "value": 216, "slug": "dospat" }, { "key": "\u0414\u043E\u0441\u043F\u0435\u0439", "value": 51, "slug": "dospey" }, { "key": "\u0414\u0440\u0430\u0431\u0438\u0448\u043D\u0430", "value": 2, "slug": "drabishna" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u0430", "value": 6, "slug": "dragana" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u0438\u0446\u0430", "value": 3, "slug": "draganica" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u043E\u0432\u0435\u0446", "value": 4, "slug": "draganovec" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u043E\u0432\u043E", "value": 89, "slug": "draganovo" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u043E\u0432\u0446\u0438", "value": 14, "slug": "draganovci" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u0446\u0438", "value": 7, "slug": "draganci" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u043D\u0447\u0435\u0442\u0430\u0442\u0430", "value": 4, "slug": "draganchetata" }, { "key": "\u0414\u0440\u0430\u0433\u0430\u0448 \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 13, "slug": "dragash-voyvoda" }, { "key": "\u0414\u0440\u0430\u0433\u0438\u0435\u0432\u0446\u0438", "value": 11, "slug": "dragievci" }, { "key": "\u0414\u0440\u0430\u0433\u0438\u0436\u0435\u0432\u043E", "value": 49, "slug": "dragizhevo" }, { "key": "\u0414\u0440\u0430\u0433\u0438\u043D\u043E\u0432\u043E", "value": 100, "slug": "draginovo" }, { "key": "\u0414\u0440\u0430\u0433\u0438\u0447\u0435\u0432\u043E", "value": 118, "slug": "dragichevo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0432\u0438\u0449\u0438\u0446\u0430", "value": 78, "slug": "dragovishchica" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0432\u043E", "value": 3, "slug": "dragovo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0434\u0430\u043D\u043E\u0432\u043E", "value": 12, "slug": "dragodanovo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0435\u0432\u043E", "value": 30, "slug": "dragoevo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0438\u043B", "value": 2, "slug": "dragoil" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0439\u043D\u043E\u0432\u043E", "value": 15, "slug": "dragoynovo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u043C\u0430\u043D", "value": 240, "slug": "dragoman" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u043C\u0438\u0440", "value": 13, "slug": "dragomir" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u043C\u0438\u0440\u043E\u0432\u043E", "value": 9, "slug": "dragomirovo" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u043C\u044A\u0436", "value": 12, "slug": "dragomzh" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0440", "value": 75, "slug": "dragor" }, { "key": "\u0414\u0440\u0430\u0433\u043E\u0442\u0438\u043D\u0446\u0438", "value": 1, "slug": "dragotinci" }, { "key": "\u0414\u0440\u0430\u0433\u0443\u0448\u0438\u043D\u043E\u0432\u043E", "value": 42, "slug": "dragushinovo" }, { "key": "\u0414\u0440\u0430\u0436\u0435\u0432\u043E", "value": 25, "slug": "drazhevo" }, { "key": "\u0414\u0440\u0430\u0436\u0438\u043D\u0446\u0438", "value": 1, "slug": "drazhinci" }, { "key": "\u0414\u0440\u0430\u043A\u0430", "value": 10, "slug": "draka" }, { "key": "\u0414\u0440\u0430\u043A\u0430\u0442\u0430", "value": 10, "slug": "drakata" }, { "key": "\u0414\u0440\u0430\u043B\u0444\u0430", "value": 7, "slug": "dralfa" }, { "key": "\u0414\u0440\u0430\u043C\u0430", "value": 4, "slug": "drama" }, { "key": "\u0414\u0440\u0430\u043D\u0433\u043E\u0432\u043E", "value": 45, "slug": "drangovo" }, { "key": "\u0414\u0440\u0430\u0447\u0435\u0432\u043E", "value": 20, "slug": "drachevo" }, { "key": "\u0414\u0440\u0430\u0448\u0430\u043D", "value": 1, "slug": "drashan" }, { "key": "\u0414\u0440\u0430\u0448\u043A\u043E\u0432\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 10, "slug": "drashkova-polyana" }, { "key": "\u0414\u0440\u0435\u043D", "value": 35, "slug": "dren" }, { "key": "\u0414\u0440\u0435\u043D\u043E\u0432", "value": 14, "slug": "drenov" }, { "key": "\u0414\u0440\u0435\u043D\u043E\u0432\u0435\u0446", "value": 29, "slug": "drenovec" }, { "key": "\u0414\u0440\u0435\u043D\u043E\u0432\u043E", "value": 3, "slug": "drenovo" }, { "key": "\u0414\u0440\u0435\u043D\u0442\u0430", "value": 3, "slug": "drenta" }, { "key": "\u0414\u0440\u0435\u043D\u0446\u0438", "value": 6, "slug": "drenci" }, { "key": "\u0414\u0440\u0438\u043D\u043E\u0432\u043E", "value": 12, "slug": "drinovo" }, { "key": "\u0414\u0440\u0438\u043F\u0447\u0435\u0432\u043E", "value": 3, "slug": "dripchevo" }, { "key": "\u0414\u0440\u043E\u043F\u043B\u0430", "value": 26, "slug": "dropla" }, { "key": "\u0414\u0440\u0443\u0433\u0430\u043D", "value": 18, "slug": "drugan" }, { "key": "\u0414\u0440\u0443\u0436\u0431\u0430", "value": 2, "slug": "druzhba" }, { "key": "\u0414\u0440\u0443\u0436\u0438\u043D\u0446\u0438", "value": 3, "slug": "druzhinci" }, { "key": "\u0414\u0440\u0443\u043C\u0435\u0432\u043E", "value": 23, "slug": "drumevo" }, { "key": "\u0414\u0440\u0443\u043C\u043E\u0445\u0430\u0440", "value": 8, "slug": "drumohar" }, { "key": "\u0414\u0440\u044A\u043C\u0448\u0430", "value": 14, "slug": "drmsha" }, { "key": "\u0414\u0440\u044A\u043D\u0434\u0430\u0440", "value": 3, "slug": "drndar" }, { "key": "\u0414\u0440\u044F\u043D\u043A\u0430", "value": 10, "slug": "dryanka" }, { "key": "\u0414\u0440\u044F\u043D\u043A\u043E\u0432\u0435\u0446", "value": 5, "slug": "dryankovec" }, { "key": "\u0414\u0440\u044F\u043D\u043E\u0432\u0435\u0446", "value": 55, "slug": "dryanovec" }, { "key": "\u0414\u0440\u044F\u043D\u043E\u0432\u043E", "value": 582, "slug": "dryanovo" }, { "key": "\u0414\u0440\u044F\u043D\u044A\u0442", "value": 1, "slug": "dryant" }, { "key": "\u0414\u0443\u0432\u0430\u043D\u043B\u0438\u0438", "value": 7, "slug": "duvanlii" }, { "key": "\u0414\u0443\u043B\u043E\u0432\u043E", "value": 566, "slug": "dulovo" }, { "key": "\u0414\u0443\u043C\u043D\u0438\u0446\u0438", "value": 6, "slug": "dumnici" }, { "key": "\u0414\u0443\u043D\u0430\u0432\u0446\u0438", "value": 118, "slug": "dunavci" }, { "key": "\u0414\u0443\u043D\u0435\u0432\u043E", "value": 7, "slug": "dunevo" }, { "key": "\u0414\u0443\u043F\u043D\u0438\u0446\u0430", "value": 2733, "slug": "dupnica" }, { "key": "\u0414\u0443\u0440\u0430\u043D\u043A\u0443\u043B\u0430\u043A", "value": 53, "slug": "durankulak" }, { "key": "\u0414\u0443\u0445\u043E\u0432\u0435\u0446", "value": 9, "slug": "duhovec" }, { "key": "\u0414\u0443\u0448\u0430\u043D\u0446\u0438", "value": 27, "slug": "dushanci" }, { "key": "\u0414\u0443\u0448\u0435\u0432\u043E", "value": 39, "slug": "dushevo" }, { "key": "\u0414\u044A\u0431\u0435\u043D", "value": 8, "slug": "dben" }, { "key": "\u0414\u044A\u0431\u0435\u043D\u0435", "value": 76, "slug": "dbene" }, { "key": "\u0414\u044A\u0431\u043D\u0438\u043A", "value": 38, "slug": "dbnik" }, { "key": "\u0414\u044A\u0431\u043D\u0438\u0446\u0430", "value": 77, "slug": "dbnica" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u0430", "value": 1, "slug": "dbova" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u0430\u043D", "value": 17, "slug": "dbovan" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u0435\u0446", "value": 4, "slug": "dbovec" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u0438\u043A", "value": 7, "slug": "dbovik" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u0438\u0446\u0430", "value": 2, "slug": "dbovica" }, { "key": "\u0414\u044A\u0431\u043E\u0432\u043E", "value": 49, "slug": "dbovo" }, { "key": "\u0414\u044A\u0431\u0440\u0430\u0432\u0430", "value": 14, "slug": "dbrava" }, { "key": "\u0414\u044A\u0431\u0440\u0430\u0432\u0430\u0442\u0430", "value": 2, "slug": "dbravata" }, { "key": "\u0414\u044A\u0431\u0440\u0430\u0432\u0438\u043D\u043E", "value": 44, "slug": "dbravino" }, { "key": "\u0414\u044A\u0431\u0440\u0430\u0432\u0438\u0442\u0435", "value": 17, "slug": "dbravite" }, { "key": "\u0414\u044A\u0431\u0440\u0430\u0432\u043A\u0430", "value": 1, "slug": "dbravka" }, { "key": "\u0414\u044A\u0436\u0434\u0438\u043D\u043E", "value": 11, "slug": "dzhdino" }, { "key": "\u0414\u044A\u0436\u0434\u043E\u0432\u043D\u0438\u0446\u0430", "value": 1, "slug": "dzhdovnica" }, { "key": "\u0414\u044A\u043B\u0431\u043E\u043A \u0434\u043E\u043B", "value": 14, "slug": "dlbok-dol" }, { "key": "\u0414\u044A\u043B\u0431\u043E\u043A \u0438\u0437\u0432\u043E\u0440", "value": 43, "slug": "dlbok-izvor" }, { "key": "\u0414\u044A\u043B\u0431\u043E\u043A\u0438", "value": 47, "slug": "dlboki" }, { "key": "\u0414\u044A\u043B\u0433\u0430\u0447", "value": 16, "slug": "dlgach" }, { "key": "\u0414\u044A\u043B\u0433\u0438 \u0434\u0435\u043B", "value": 12, "slug": "dlgi-del" }, { "key": "\u0414\u044A\u043B\u0433\u043E \u043F\u043E\u043B\u0435", "value": 54, "slug": "dlgo-pole" }, { "key": "\u0414\u044A\u043B\u0433\u043E\u0434\u0435\u043B\u0446\u0438", "value": 8, "slug": "dlgodelci" }, { "key": "\u0414\u044A\u043B\u0433\u043E\u043F\u043E\u043B", "value": 216, "slug": "dlgopol" }, { "key": "\u0414\u044A\u0440\u0436\u0430\u0432\u0430", "value": 4, "slug": "drzhava" }, { "key": "\u0414\u044A\u0440\u0436\u0430\u043D\u0438\u0446\u0430", "value": 12, "slug": "drzhanica" }, { "key": "\u0414\u044A\u0440\u043C\u0430\u043D\u0446\u0438", "value": 8, "slug": "drmanci" }, { "key": "\u0414\u044A\u0441\u043A\u043E\u0442", "value": 22, "slug": "dskot" }, { "key": "\u0414\u044A\u0441\u043A\u043E\u0442\u043D\u0430", "value": 43, "slug": "dskotna" }, { "key": "\u0414\u044E\u043B\u0435\u0432\u043E", "value": 53, "slug": "dyulevo" }, { "key": "\u0414\u044E\u043B\u0438\u043D\u043E", "value": 20, "slug": "dyulino" }, { "key": "\u0414\u044E\u043B\u0438\u0446\u0430", "value": 12, "slug": "dyulica" }, { "key": "\u0414\u044F\u0434\u043E\u0432\u043E", "value": 12, "slug": "dyadovo" }, { "key": "\u0414\u044F\u0434\u043E\u0432\u0441\u043A\u043E", "value": 6, "slug": "dyadovsko" }, { "key": "\u0414\u044F\u0434\u043E\u0432\u0446\u0438", "value": 3, "slug": "dyadovci" }, { "key": "\u0414\u044F\u043A\u043E\u0432\u043E", "value": 1, "slug": "dyakovo" }, { "key": "\u0414\u044F\u043D\u043A\u043E\u0432\u043E", "value": 77, "slug": "dyankovo" }, { "key": "\u0415\u0432\u0440\u0435\u043D\u043E\u0437\u043E\u0432\u043E", "value": 2, "slug": "evrenozovo" }, { "key": "\u0415\u0433\u0440\u0435\u043A", "value": 4, "slug": "egrek" }, { "key": "\u0415\u0433\u044A\u043B\u043D\u0438\u0446\u0430", "value": 4, "slug": "eglnica" }, { "key": "\u0415\u0434\u0438\u043D\u0430\u043A\u043E\u0432\u0446\u0438", "value": 5, "slug": "edinakovci" }, { "key": "\u0415\u0434\u0440\u0435\u0432\u043E", "value": 16, "slug": "edrevo" }, { "key": "\u0415\u0434\u0440\u0438\u043D\u043E", "value": 6, "slug": "edrino" }, { "key": "\u0415\u0437\u0434\u0438\u043C\u0438\u0440\u0446\u0438", "value": 6, "slug": "ezdimirci" }, { "key": "\u0415\u0437\u0435\u0440\u0435\u0446", "value": 1, "slug": "ezerec" }, { "key": "\u0415\u0437\u0435\u0440\u043E", "value": 12, "slug": "ezero" }, { "key": "\u0415\u0437\u0435\u0440\u043E\u0432\u043E", "value": 143, "slug": "ezerovo" }, { "key": "\u0415\u0437\u0435\u0440\u0447\u0435", "value": 59, "slug": "ezerche" }, { "key": "\u0415\u043A\u0437\u0430\u0440\u0445 \u0410\u043D\u0442\u0438\u043C\u043E\u0432\u043E", "value": 31, "slug": "ekzarh-antimovo" }, { "key": "\u0415\u043A\u0437\u0430\u0440\u0445 \u0419\u043E\u0441\u0438\u0444", "value": 14, "slug": "ekzarh-yosif" }, { "key": "\u0415\u043B\u0435\u043D\u0430", "value": 390, "slug": "elena" }, { "key": "\u0415\u043B\u0435\u043D\u0438\u043D\u043E", "value": 33, "slug": "elenino" }, { "key": "\u0415\u043B\u0435\u043D\u043A\u0430", "value": 4, "slug": "elenka" }, { "key": "\u0415\u043B\u0435\u043D\u043E\u0432\u043E", "value": 47, "slug": "elenovo" }, { "key": "\u0415\u043B\u0435\u0448\u043D\u0438\u0446\u0430", "value": 68, "slug": "eleshnica" }, { "key": "\u0415\u043B\u0438\u043D \u041F\u0435\u043B\u0438\u043D", "value": 786, "slug": "elin-pelin" }, { "key": "\u0415\u043B\u0438\u0441\u0435\u0439\u043D\u0430", "value": 7, "slug": "eliseyna" }, { "key": "\u0415\u043B\u043E\u0432\u0434\u043E\u043B", "value": 6, "slug": "elovdol" }, { "key": "\u0415\u043B\u0445\u043E\u0432\u0435\u0446", "value": 44, "slug": "elhovec" }, { "key": "\u0415\u043B\u0445\u043E\u0432\u043E", "value": 1167, "slug": "elhovo" }, { "key": "\u0415\u043B\u0448\u0438\u0446\u0430", "value": 17, "slug": "elshica" }, { "key": "\u0415\u043C\u0435\u043D", "value": 7, "slug": "emen" }, { "key": "\u0415\u043C\u043E\u043D\u0430", "value": 12, "slug": "emona" }, { "key": "\u0415\u043D\u0435\u0432 \u0440\u044A\u0442", "value": 1, "slug": "enev-rt" }, { "key": "\u0415\u043D\u0435\u0432\u043E", "value": 15, "slug": "enevo" }, { "key": "\u0415\u043D\u0438\u043D\u0430", "value": 154, "slug": "enina" }, { "key": "\u0415\u043D\u0438\u0446\u0430", "value": 18, "slug": "enica" }, { "key": "\u0415\u043D\u0447\u0435\u0446", "value": 20, "slug": "enchec" }, { "key": "\u0415\u043D\u0447\u043E\u0432\u0446\u0438", "value": 1, "slug": "enchovci" }, { "key": "\u0415\u043D\u044C\u043E\u0432\u0447\u0435", "value": 2, "slug": "enovche" }, { "key": "\u0415\u0440\u0434\u0435\u043D", "value": 15, "slug": "erden" }, { "key": "\u0415\u0440\u0435\u043C\u0438\u044F", "value": 1, "slug": "eremiya" }, { "key": "\u0415\u0440\u043C\u0430 \u0440\u0435\u043A\u0430", "value": 29, "slug": "erma-reka" }, { "key": "\u0415\u0440\u043E\u0432\u0435\u0442\u0435", "value": 2, "slug": "erovete" }, { "key": "\u0415\u0441\u0435\u043D", "value": 1, "slug": "esen" }, { "key": "\u0415\u0441\u0435\u043D\u0438\u0446\u0430", "value": 12, "slug": "esenica" }, { "key": "\u0415\u0442\u0440\u043E\u043F\u043E\u043B\u0435", "value": 598, "slug": "etropole" }, { "key": "\u0415\u0444\u0440\u0435\u0439\u0442\u043E\u0440 \u0411\u0430\u043A\u0430\u043B\u043E\u0432\u043E", "value": 2, "slug": "efreytor-bakalovo" }, { "key": "\u0415\u0444\u0440\u0435\u043C", "value": 3, "slug": "efrem" }, { "key": "\u0416\u0430\u0431\u043B\u044F\u043D\u043E", "value": 4, "slug": "zhablyano" }, { "key": "\u0416\u0430\u0431\u043E\u043A\u0440\u044A\u0442", "value": 37, "slug": "zhabokrt" }, { "key": "\u0416\u0435\u0433\u043B\u0430\u0440\u0446\u0438", "value": 15, "slug": "zheglarci" }, { "key": "\u0416\u0435\u0433\u043B\u0438\u0446\u0430", "value": 5, "slug": "zheglica" }, { "key": "\u0416\u0435\u0434\u043D\u0430", "value": 4, "slug": "zhedna" }, { "key": "\u0416\u0435\u043B\u0435\u0437\u0430\u0440\u0438", "value": 3, "slug": "zhelezari" }, { "key": "\u0416\u0435\u043B\u0435\u0437\u0438\u043D\u043E", "value": 7, "slug": "zhelezino" }, { "key": "\u0416\u0435\u043B\u0435\u0437\u043D\u0430", "value": 14, "slug": "zhelezna" }, { "key": "\u0416\u0435\u043B\u0435\u0437\u043D\u0438\u043A", "value": 12, "slug": "zheleznik" }, { "key": "\u0416\u0435\u043B\u0435\u0437\u043D\u0438\u0446\u0430", "value": 92, "slug": "zheleznica" }, { "key": "\u0416\u0435\u043B\u0435\u043D", "value": 6, "slug": "zhelen" }, { "key": "\u0416\u0435\u043B\u044A\u0434", "value": 1, "slug": "zheld" }, { "key": "\u0416\u0435\u043B\u044A\u0434\u043E\u0432\u043E", "value": 1, "slug": "zheldovo" }, { "key": "\u0416\u0435\u043B\u044E \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 76, "slug": "zhelyu-voyvoda" }, { "key": "\u0416\u0435\u043B\u044F\u0432\u0430", "value": 39, "slug": "zhelyava" }, { "key": "\u0416\u0435\u043B\u044F\u0437\u043A\u043E\u0432\u0435\u0446", "value": 15, "slug": "zhelyazkovec" }, { "key": "\u0416\u0435\u043B\u044F\u0437\u043D\u043E", "value": 23, "slug": "zhelyazno" }, { "key": "\u0416\u0435\u043B\u044F\u0437\u043E\u0432\u043E", "value": 9, "slug": "zhelyazovo" }, { "key": "\u0416\u0435\u043D\u0434\u0430", "value": 1, "slug": "zhenda" }, { "key": "\u0416\u0435\u0440\u0430\u0432\u043D\u0430", "value": 21, "slug": "zheravna" }, { "key": "\u0416\u0435\u0440\u043D\u043E\u0432", "value": 2, "slug": "zhernov" }, { "key": "\u0416\u0438\u0432\u043A\u043E", "value": 2, "slug": "zhivko" }, { "key": "\u0416\u0438\u0432\u043A\u043E\u0432\u043E", "value": 41, "slug": "zhivkovo" }, { "key": "\u0416\u0438\u0436\u0435\u0432\u043E", "value": 5, "slug": "zhizhevo" }, { "key": "\u0416\u0438\u043B\u0435\u043D\u0446\u0438", "value": 60, "slug": "zhilenci" }, { "key": "\u0416\u0438\u043B\u0438\u043D\u043E", "value": 4, "slug": "zhilino" }, { "key": "\u0416\u0438\u043D\u0437\u0438\u0444\u043E\u0432\u043E", "value": 7, "slug": "zhinzifovo" }, { "key": "\u0416\u0438\u0442\u0435\u043D", "value": 53, "slug": "zhiten" }, { "key": "\u0416\u0438\u0442\u043D\u0438\u0446\u0430", "value": 174, "slug": "zhitnica" }, { "key": "\u0416\u0438\u0442\u043E\u0441\u0432\u044F\u0442", "value": 10, "slug": "zhitosvyat" }, { "key": "\u0416\u0438\u0442\u0443\u0448\u0430", "value": 1, "slug": "zhitusha" }, { "key": "\u0416\u0440\u0435\u0431\u0435\u0432\u043E", "value": 2, "slug": "zhrebevo" }, { "key": "\u0416\u0440\u0435\u0431\u0438\u0447\u043A\u043E", "value": 1, "slug": "zhrebichko" }, { "key": "\u0416\u044A\u043B\u0442 \u0431\u0440\u044F\u0433", "value": 9, "slug": "zhlt-bryag" }, { "key": "\u0416\u044A\u043B\u0442 \u043A\u0430\u043C\u044A\u043A", "value": 3, "slug": "zhlt-kamk" }, { "key": "\u0416\u044A\u043B\u0442\u0435\u0448", "value": 13, "slug": "zhltesh" }, { "key": "\u0416\u044A\u043B\u0442\u0438 \u0431\u0440\u044F\u0433", "value": 13, "slug": "zhlti-bryag" }, { "key": "\u0416\u044A\u043B\u0442\u0438 \u0440\u0438\u0434", "value": 4, "slug": "zhlti-rid" }, { "key": "\u0416\u044A\u043B\u0442\u0443\u0448\u0430", "value": 22, "slug": "zhltusha" }, { "key": "\u0417\u0430\u0431\u0435\u0440\u043D\u043E\u0432\u043E", "value": 5, "slug": "zabernovo" }, { "key": "\u0417\u0430\u0431\u044A\u0440\u0434\u043E", "value": 11, "slug": "zabrdo" }, { "key": "\u0417\u0430\u0432\u0435\u0442", "value": 145, "slug": "zavet" }, { "key": "\u0417\u0430\u0432\u043E\u0439", "value": 25, "slug": "zavoy" }, { "key": "\u0417\u0430\u0432\u043E\u044F", "value": 10, "slug": "zavoya" }, { "key": "\u0417\u0430\u0433\u043E\u0440\u0435", "value": 28, "slug": "zagore" }, { "key": "\u0417\u0430\u0433\u043E\u0440\u0438\u0447\u0435", "value": 18, "slug": "zagoriche" }, { "key": "\u0417\u0430\u0433\u043E\u0440\u0441\u043A\u043E", "value": 2, "slug": "zagorsko" }, { "key": "\u0417\u0430\u0433\u043E\u0440\u0446\u0438", "value": 38, "slug": "zagorci" }, { "key": "\u0417\u0430\u0433\u0440\u0430\u0436\u0434\u0435\u043D", "value": 24, "slug": "zagrazhden" }, { "key": "\u0417\u0430\u0434\u0440\u0443\u0433\u0430", "value": 9, "slug": "zadruga" }, { "key": "\u0417\u0430\u0438\u043C\u0447\u0435\u0432\u043E", "value": 7, "slug": "zaimchevo" }, { "key": "\u0417\u0430\u0439\u0447\u0430\u0440", "value": 28, "slug": "zaychar" }, { "key": "\u0417\u0430\u0439\u0447\u0438\u043D\u043E", "value": 2, "slug": "zaychino" }, { "key": "\u0417\u0430\u0439\u0447\u0438\u043D\u043E \u043E\u0440\u0435\u0448\u0435", "value": 14, "slug": "zaychino-oreshe" }, { "key": "\u0417\u0430\u043C\u0444\u0438\u0440", "value": 22, "slug": "zamfir" }, { "key": "\u0417\u0430\u043C\u0444\u0438\u0440\u043E\u0432\u043E", "value": 50, "slug": "zamfirovo" }, { "key": "\u0417\u0430\u043D\u043E\u0433\u0435", "value": 1, "slug": "zanoge" }, { "key": "\u0417\u0430\u0440\u0430\u0435\u0432\u043E", "value": 15, "slug": "zaraevo" }, { "key": "\u0417\u0430\u0440\u0438\u0446\u0430", "value": 6, "slug": "zarica" }, { "key": "\u0417\u0430\u0440\u043D\u0438\u043A", "value": 6, "slug": "zarnik" }, { "key": "\u0417\u0430\u0441\u0435\u043B\u0435", "value": 8, "slug": "zasele" }, { "key": "\u0417\u0430\u0441\u043C\u044F\u043D\u043E", "value": 8, "slug": "zasmyano" }, { "key": "\u0417\u0430\u0444\u0438\u0440\u043E\u0432\u043E", "value": 48, "slug": "zafirovo" }, { "key": "\u0417\u0430\u0445\u0430\u0440\u0438 \u0421\u0442\u043E\u044F\u043D\u043E\u0432\u043E", "value": 13, "slug": "zahari-stoyanovo" }, { "key": "\u0417\u0430\u044F", "value": 8, "slug": "zaya" }, { "key": "\u0417\u0432\u0435\u0433\u043E\u0440", "value": 6, "slug": "zvegor" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0430", "value": 3, "slug": "zvezda" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0435\u043B", "value": 23, "slug": "zvezdel" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0435\u043B\u0438\u043D\u0430", "value": 14, "slug": "zvezdelina" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0435\u043D", "value": 5, "slug": "zvezden" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0435\u0446", "value": 16, "slug": "zvezdec" }, { "key": "\u0417\u0432\u0435\u0437\u0434\u0438\u0446\u0430", "value": 101, "slug": "zvezdica" }, { "key": "\u0417\u0432\u0435\u043D\u0438\u043C\u0438\u0440", "value": 8, "slug": "zvenimir" }, { "key": "\u0417\u0432\u0435\u0440\u0438\u043D\u043E", "value": 54, "slug": "zverino" }, { "key": "\u0417\u0432\u0438\u043D\u0438\u0446\u0430", "value": 7, "slug": "zvinica" }, { "key": "\u0417\u0432\u044A\u043D\u0430\u0440\u043A\u0430", "value": 16, "slug": "zvnarka" }, { "key": "\u0417\u0432\u044A\u043D\u0430\u0440\u0446\u0438", "value": 14, "slug": "zvnarci" }, { "key": "\u0417\u0432\u044A\u043D\u0435\u0446", "value": 4, "slug": "zvnec" }, { "key": "\u0417\u0432\u044A\u043D\u0438\u0447\u0435\u0432\u043E", "value": 83, "slug": "zvnichevo" }, { "key": "\u0417\u0433\u0430\u043B\u0435\u0432\u043E", "value": 20, "slug": "zgalevo" }, { "key": "\u0417\u0433\u043E\u0440\u0438\u0433\u0440\u0430\u0434", "value": 84, "slug": "zgorigrad" }, { "key": "\u0417\u0433\u0443\u0440\u043E\u0432\u043E", "value": 2, "slug": "zgurovo" }, { "key": "\u0417\u0434\u0440\u0430\u0432\u0435\u0446", "value": 66, "slug": "zdravec" }, { "key": "\u0417\u0434\u0440\u0430\u0432\u043A\u043E\u0432\u0435\u0446", "value": 2, "slug": "zdravkovec" }, { "key": "\u0417\u0434\u0440\u0430\u0432\u0447\u0435\u0446", "value": 1, "slug": "zdravchec" }, { "key": "\u0417\u0435\u0431\u0438\u043B", "value": 14, "slug": "zebil" }, { "key": "\u0417\u0435\u043B\u0435\u043D\u0430 \u043C\u043E\u0440\u0430\u0432\u0430", "value": 10, "slug": "zelena-morava" }, { "key": "\u0417\u0435\u043B\u0435\u043D\u0434\u043E\u043B", "value": 19, "slug": "zelendol" }, { "key": "\u0417\u0435\u043B\u0435\u043D\u0438\u0433\u0440\u0430\u0434", "value": 1, "slug": "zelenigrad" }, { "key": "\u0417\u0435\u043B\u0435\u043D\u0438\u043A\u0430", "value": 1, "slug": "zelenika" }, { "key": "\u0417\u0435\u043B\u0435\u043D\u0438\u043A\u043E\u0432\u043E", "value": 19, "slug": "zelenikovo" }, { "key": "\u0417\u0435\u043C\u0435\u043D", "value": 91, "slug": "zemen" }, { "key": "\u0417\u0435\u043C\u0435\u043D\u0446\u0438", "value": 2, "slug": "zemenci" }, { "key": "\u0417\u0435\u043C\u043B\u0435\u043D", "value": 11, "slug": "zemlen" }, { "key": "\u0417\u0435\u0442\u044C\u043E\u0432\u043E", "value": 41, "slug": "zetovo" }, { "key": "\u0417\u0438\u0434\u0430\u0440\u043E\u0432\u043E", "value": 32, "slug": "zidarovo" }, { "key": "\u0417\u0438\u0434\u0430\u0440\u0446\u0438", "value": 2, "slug": "zidarci" }, { "key": "\u0417\u0438\u043C\u0435\u043D", "value": 3, "slug": "zimen" }, { "key": "\u0417\u0438\u043C\u043D\u0438\u0446\u0430", "value": 95, "slug": "zimnica" }, { "key": "\u0417\u0438\u043C\u043E\u0432\u0438\u043D\u0430", "value": 14, "slug": "zimovina" }, { "key": "\u0417\u043B\u0430\u0442\u0430\u0440", "value": 14, "slug": "zlatar" }, { "key": "\u0417\u043B\u0430\u0442\u0430\u0440\u0438", "value": 6, "slug": "zlatari" }, { "key": "\u0417\u043B\u0430\u0442\u0430\u0440\u0438\u0446\u0430", "value": 92, "slug": "zlatarica" }, { "key": "\u0417\u043B\u0430\u0442\u0435\u0432\u0446\u0438", "value": 11, "slug": "zlatevci" }, { "key": "\u0417\u043B\u0430\u0442\u0438 \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 21, "slug": "zlati-voyvoda" }, { "key": "\u0417\u043B\u0430\u0442\u0438\u043D\u0430", "value": 10, "slug": "zlatina" }, { "key": "\u0417\u043B\u0430\u0442\u0438\u0442\u0440\u0430\u043F", "value": 120, "slug": "zlatitrap" }, { "key": "\u0417\u043B\u0430\u0442\u0438\u0446\u0430", "value": 308, "slug": "zlatica" }, { "key": "\u0417\u043B\u0430\u0442\u0438\u044F", "value": 24, "slug": "zlatiya" }, { "key": "\u0417\u043B\u0430\u0442\u043D\u0430 \u043B\u0438\u0432\u0430\u0434\u0430", "value": 5, "slug": "zlatna-livada" }, { "key": "\u0417\u043B\u0430\u0442\u043D\u0430 \u043D\u0438\u0432\u0430", "value": 8, "slug": "zlatna-niva" }, { "key": "\u0417\u043B\u0430\u0442\u043D\u0430 \u041F\u0430\u043D\u0435\u0433\u0430", "value": 42, "slug": "zlatna-panega" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u0432\u0440\u044A\u0445", "value": 26, "slug": "zlatovrh" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u0433\u0440\u0430\u0434", "value": 513, "slug": "zlatograd" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u043A\u043B\u0430\u0441", "value": 11, "slug": "zlatoklas" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u043B\u0438\u0441\u0442", "value": 5, "slug": "zlatolist" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u043F\u043E\u043B\u0435", "value": 10, "slug": "zlatopole" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u0441\u0435\u043B", "value": 9, "slug": "zlatosel" }, { "key": "\u0417\u043B\u0430\u0442\u043E\u0443\u0441\u0442\u043E\u0432\u043E", "value": 2, "slug": "zlatoustovo" }, { "key": "\u0417\u043B\u0430\u0442\u0443\u0448\u0430", "value": 10, "slug": "zlatusha" }, { "key": "\u0417\u043B\u043E\u0433\u043E\u0448", "value": 3, "slug": "zlogosh" }, { "key": "\u0417\u043B\u043E\u043A\u0443\u0447\u0435\u043D\u0435", "value": 38, "slug": "zlokuchene" }, { "key": "\u0417\u043C\u0435\u0435\u0432\u043E", "value": 20, "slug": "zmeevo" }, { "key": "\u0417\u043C\u0435\u0438\u0446\u0430", "value": 50, "slug": "zmeica" }, { "key": "\u0417\u043C\u0435\u0439\u043D\u043E", "value": 5, "slug": "zmeyno" }, { "key": "\u0417\u043C\u0435\u0439\u043E\u0432\u043E", "value": 30, "slug": "zmeyovo" }, { "key": "\u0417\u043D\u0430\u043C\u0435\u043D\u043E\u0441\u0435\u0446", "value": 26, "slug": "znamenosec" }, { "key": "\u0417\u043E\u0433\u0440\u0430\u0444", "value": 1, "slug": "zograf" }, { "key": "\u0417\u043E\u0440\u043D\u0438\u0446\u0430", "value": 35, "slug": "zornica" }, { "key": "\u0417\u044A\u0440\u043D\u0435\u0432\u043E", "value": 21, "slug": "zrnevo" }, { "key": "\u0418\u0432\u0430\u0439\u043B\u043E", "value": 123, "slug": "ivaylo" }, { "key": "\u0418\u0432\u0430\u0439\u043B\u043E\u0432\u0433\u0440\u0430\u0434", "value": 183, "slug": "ivaylovgrad" }, { "key": "\u0418\u0432\u0430\u043D \u0412\u0430\u0437\u043E\u0432\u043E", "value": 15, "slug": "ivan-vazovo" }, { "key": "\u0418\u0432\u0430\u043D \u0428\u0438\u0448\u043C\u0430\u043D\u043E\u0432\u043E", "value": 9, "slug": "ivan-shishmanovo" }, { "key": "\u0418\u0432\u0430\u043D\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "ivankovci" }, { "key": "\u0418\u0432\u0430\u043D\u043E\u0432\u043E", "value": 71, "slug": "ivanovo" }, { "key": "\u0418\u0432\u0430\u043D\u043E\u0432\u0446\u0438", "value": 1, "slug": "ivanovci" }, { "key": "\u0418\u0432\u0430\u043D\u0441\u043A\u0438", "value": 28, "slug": "ivanski" }, { "key": "\u0418\u0432\u0430\u043D\u0446\u0438", "value": 4, "slug": "ivanci" }, { "key": "\u0418\u0432\u0430\u043D\u0447\u0430", "value": 5, "slug": "ivancha" }, { "key": "\u0418\u0432\u0430\u043D\u044F\u043D\u0435", "value": 43, "slug": "ivanyane" }, { "key": "\u0418\u0433\u0430\u043D\u043E\u0432\u043E", "value": 10, "slug": "iganovo" }, { "key": "\u0418\u0433\u043B\u0438\u043A\u0430", "value": 1, "slug": "iglika" }, { "key": "\u0418\u0433\u043D\u0430\u0442\u0438\u0435\u0432\u043E", "value": 172, "slug": "ignatievo" }, { "key": "\u0418\u0433\u043D\u0430\u0442\u0438\u0446\u0430", "value": 20, "slug": "ignatica" }, { "key": "\u0418\u0433\u043D\u0430\u0442\u043E\u0432\u043E", "value": 3, "slug": "ignatovo" }, { "key": "\u0418\u0433\u043D\u0430\u0442\u043E\u0432\u0446\u0438", "value": 1, "slug": "ignatovci" }, { "key": "\u0418\u0433\u0440\u0430\u043B\u0438\u0449\u0435", "value": 8, "slug": "igralishche" }, { "key": "\u0418\u0434\u0438\u043B\u0435\u0432\u043E", "value": 1, "slug": "idilevo" }, { "key": "\u0418\u0437\u0431\u0435\u0433\u043B\u0438\u0438", "value": 27, "slug": "izbeglii" }, { "key": "\u0418\u0437\u0431\u0443\u043B", "value": 4, "slug": "izbul" }, { "key": "\u0418\u0437\u0432\u043E\u0440", "value": 75, "slug": "izvor" }, { "key": "\u0418\u0437\u0432\u043E\u0440\u0438\u0449\u0435", "value": 38, "slug": "izvorishche" }, { "key": "\u0418\u0437\u0432\u043E\u0440\u043D\u0438\u043A", "value": 6, "slug": "izvornik" }, { "key": "\u0418\u0437\u0432\u043E\u0440\u043E\u0432\u043E", "value": 54, "slug": "izvorovo" }, { "key": "\u0418\u0437\u0432\u043E\u0440\u0441\u043A\u043E", "value": 22, "slug": "izvorsko" }, { "key": "\u0418\u0437\u0433\u0440\u0435\u0432", "value": 110, "slug": "izgrev" }, { "key": "\u0418\u043B\u0430\u043A\u043E\u0432 \u0440\u044A\u0442", "value": 3, "slug": "ilakov-rt" }, { "key": "\u0418\u043B\u0438\u0439\u043D\u043E", "value": 3, "slug": "iliyno" }, { "key": "\u0418\u043B\u0438\u0439\u0441\u043A\u043E", "value": 1, "slug": "iliysko" }, { "key": "\u0418\u043B\u0438\u043D\u0434\u0435\u043D", "value": 4, "slug": "ilinden" }, { "key": "\u0418\u043B\u0438\u043D\u0434\u0435\u043D\u0446\u0438", "value": 42, "slug": "ilindenci" }, { "key": "\u0418\u043B\u0438\u044F \u0411\u043B\u044A\u0441\u043A\u043E\u0432\u043E", "value": 3, "slug": "iliya-blskovo" }, { "key": "\u0418\u043C\u0440\u0435\u043D\u0447\u0435\u0432\u043E", "value": 15, "slug": "imrenchevo" }, { "key": "\u0418\u043D\u0434\u0436\u0435 \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 8, "slug": "indzhe-voyvoda" }, { "key": "\u0418\u043D\u043E\u0432\u043E", "value": 15, "slug": "inovo" }, { "key": "\u0418\u0440\u0435\u0447\u0435\u043A\u043E\u0432\u043E", "value": 15, "slug": "irechekovo" }, { "key": "\u0418\u0440\u043D\u0438\u043A", "value": 3, "slug": "irnik" }, { "key": "\u0418\u0441\u043A\u0440\u0430", "value": 100, "slug": "iskra" }, { "key": "\u0418\u0441\u043A\u0440\u0435\u0446", "value": 68, "slug": "iskrec" }, { "key": "\u0418\u0441\u043A\u0440\u0438\u0446\u0430", "value": 8, "slug": "iskrica" }, { "key": "\u0418\u0441\u043A\u044A\u0440", "value": 116, "slug": "iskr" }, { "key": "\u0418\u0441\u043F\u0435\u0440\u0438\u0445", "value": 612, "slug": "isperih" }, { "key": "\u0418\u0441\u043F\u0435\u0440\u0438\u0445\u043E\u0432\u043E", "value": 38, "slug": "isperihovo" }, { "key": "\u0418\u0445\u0442\u0438\u043C\u0430\u043D", "value": 736, "slug": "ihtiman" }, { "key": "\u0418\u0447\u0435\u0440\u0430", "value": 8, "slug": "ichera" }, { "key": "\u0419\u0435\u0440\u0443\u0441\u0430\u043B\u0438\u043C\u043E\u0432\u043E", "value": 7, "slug": "yerusalimovo" }, { "key": "\u0419\u043E\u0430\u043A\u0438\u043C \u0413\u0440\u0443\u0435\u0432\u043E", "value": 127, "slug": "yoakim-gruevo" }, { "key": "\u0419\u043E\u0432\u043A\u043E\u0432\u043E", "value": 8, "slug": "yovkovo" }, { "key": "\u0419\u043E\u0433\u043B\u0430\u0432", "value": 3, "slug": "yoglav" }, { "key": "\u0419\u043E\u043D\u043A\u043E\u0432\u043E", "value": 32, "slug": "yonkovo" }, { "key": "\u0419\u043E\u043D\u0447\u043E\u0432\u043E", "value": 1, "slug": "yonchovo" }, { "key": "\u0419\u043E\u0440\u0434\u0430\u043D\u043E\u0432\u043E", "value": 10, "slug": "yordanovo" }, { "key": "\u041A\u0430\u0431\u0438\u043B\u0435", "value": 74, "slug": "kabile" }, { "key": "\u041A\u0430\u0431\u043B\u0435\u0448\u043A\u043E\u0432\u043E", "value": 303, "slug": "kableshkovo" }, { "key": "\u041A\u0430\u0432\u0430\u0440\u043D\u0430", "value": 867, "slug": "kavarna" }, { "key": "\u041A\u0430\u0432\u0440\u0430\u043A\u0438\u0440\u043E\u0432\u043E", "value": 40, "slug": "kavrakirovo" }, { "key": "\u041A\u0430\u0434\u0438\u0435\u0432\u043E", "value": 47, "slug": "kadievo" }, { "key": "\u041A\u0430\u0437\u0430\u043D\u043A\u0430", "value": 3, "slug": "kazanka" }, { "key": "\u041A\u0430\u0437\u0430\u043D\u043B\u044A\u043A", "value": 4337, "slug": "kazanlk" }, { "key": "\u041A\u0430\u0437\u0430\u0446\u0438\u0442\u0435", "value": 1, "slug": "kazacite" }, { "key": "\u041A\u0430\u0437\u0430\u0447\u0435\u0432\u043E", "value": 8, "slug": "kazachevo" }, { "key": "\u041A\u0430\u0437\u0430\u0448\u043A\u0430 \u0440\u0435\u043A\u0430", "value": 7, "slug": "kazashka-reka" }, { "key": "\u041A\u0430\u0437\u0430\u0448\u043A\u043E", "value": 21, "slug": "kazashko" }, { "key": "\u041A\u0430\u0437\u0438\u043C\u0438\u0440", "value": 5, "slug": "kazimir" }, { "key": "\u041A\u0430\u0437\u0438\u0447\u0435\u043D\u0435", "value": 397, "slug": "kazichene" }, { "key": "\u041A\u0410\u0419\u041C\u0410\u041D\u041E\u0412\u0418 \u041E\u0421\u0422\u0420\u041E\u0412\u0418,", "value": 9, "slug": "kaymanovi-ostrovi" }, { "key": "\u041A\u0430\u0439\u043D\u0430\u0440\u0434\u0436\u0430", "value": 23, "slug": "kaynardzha" }, { "key": "\u041A\u0430\u043B\u0430\u0439\u0434\u0436\u0438\u0438", "value": 7, "slug": "kalaydzhii" }, { "key": "\u041A\u0430\u043B\u0435\u0439\u0446\u0430", "value": 33, "slug": "kaleyca" }, { "key": "\u041A\u0430\u043B\u0435\u043A\u043E\u0432\u0435\u0446", "value": 152, "slug": "kalekovec" }, { "key": "\u041A\u0430\u043B\u0435\u043D", "value": 2, "slug": "kalen" }, { "key": "\u041A\u0430\u043B\u0435\u043D\u0438\u043A", "value": 8, "slug": "kalenik" }, { "key": "\u041A\u0430\u043B\u0435\u043D\u043E\u0432\u0446\u0438", "value": 5, "slug": "kalenovci" }, { "key": "\u041A\u0430\u043B\u0438\u043C\u0430\u043D\u0446\u0438", "value": 36, "slug": "kalimanci" }, { "key": "\u041A\u0430\u043B\u0438\u043D\u0430", "value": 8, "slug": "kalina" }, { "key": "\u041A\u0430\u043B\u0438\u043D\u043A\u0430", "value": 8, "slug": "kalinka" }, { "key": "\u041A\u0430\u043B\u0438\u043D\u043E", "value": 5, "slug": "kalino" }, { "key": "\u041A\u0430\u043B\u0438\u043F\u0435\u0442\u0440\u043E\u0432\u043E", "value": 173, "slug": "kalipetrovo" }, { "key": "\u041A\u0430\u043B\u0438\u0442\u0438\u043D\u043E\u0432\u043E", "value": 33, "slug": "kalitinovo" }, { "key": "\u041A\u0430\u043B\u0438\u0449\u0435", "value": 9, "slug": "kalishche" }, { "key": "\u041A\u0430\u043B\u043E\u043C\u0435\u043D", "value": 1, "slug": "kalomen" }, { "key": "\u041A\u0430\u043B\u043E\u0442\u0438\u043D\u0430", "value": 17, "slug": "kalotina" }, { "key": "\u041A\u0430\u043B\u043E\u0442\u0438\u043D\u0446\u0438", "value": 2, "slug": "kalotinci" }, { "key": "\u041A\u0430\u043B\u043E\u0444\u0435\u0440", "value": 131, "slug": "kalofer" }, { "key": "\u041A\u0430\u043B\u043E\u044F\u043D", "value": 8, "slug": "kaloyan" }, { "key": "\u041A\u0430\u043B\u043E\u044F\u043D\u043E\u0432\u0435\u0446", "value": 23, "slug": "kaloyanovec" }, { "key": "\u041A\u0430\u043B\u043E\u044F\u043D\u043E\u0432\u043E", "value": 150, "slug": "kaloyanovo" }, { "key": "\u041A\u0430\u043B\u043E\u044F\u043D\u0446\u0438", "value": 9, "slug": "kaloyanci" }, { "key": "\u041A\u0430\u043B\u0443\u0433\u0435\u0440\u0435\u043D\u0435", "value": 16, "slug": "kalugerene" }, { "key": "\u041A\u0430\u043B\u0443\u0433\u0435\u0440\u043E\u0432\u043E", "value": 69, "slug": "kalugerovo" }, { "key": "\u041A\u0430\u043B\u0447\u0435\u0432\u043E", "value": 32, "slug": "kalchevo" }, { "key": "\u041A\u0430\u043C\u0431\u0435\u043B\u0435\u0432\u0446\u0438", "value": 1, "slug": "kambelevci" }, { "key": "\u041A\u0430\u043C\u0431\u0443\u0440\u043E\u0432\u043E", "value": 22, "slug": "kamburovo" }, { "key": "\u041A\u0430\u043C\u0435\u043D", "value": 89, "slug": "kamen" }, { "key": "\u041A\u0430\u043C\u0435\u043D \u0431\u0440\u044F\u0433", "value": 5, "slug": "kamen-bryag" }, { "key": "\u041A\u0430\u043C\u0435\u043D \u0432\u0440\u044A\u0445", "value": 1, "slug": "kamen-vrh" }, { "key": "\u041A\u0430\u043C\u0435\u043D \u0434\u044F\u043B", "value": 2, "slug": "kamen-dyal" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0430", "value": 12, "slug": "kamena" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0430\u0440", "value": 120, "slug": "kamenar" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0430\u0440\u0438", "value": 9, "slug": "kamenari" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0430\u0440\u0446\u0438", "value": 1, "slug": "kamenarci" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0435\u0446", "value": 43, "slug": "kamenec" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0438\u0446\u0430", "value": 6, "slug": "kamenica" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u0438\u0447\u043A\u0430 \u0421\u043A\u0430\u043A\u0430\u0432\u0438\u0446\u0430", "value": 1, "slug": "kamenichka-skakavica" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u043A\u0430", "value": 1, "slug": "kamenka" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u043D\u0430 \u0420\u0438\u043A\u0441\u0430", "value": 10, "slug": "kamenna-riksa" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u043E", "value": 283, "slug": "kameno" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u043E \u043F\u043E\u043B\u0435", "value": 14, "slug": "kameno-pole" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u043E\u0432\u043E", "value": 24, "slug": "kamenovo" }, { "key": "\u041A\u0430\u043C\u0435\u043D\u044F\u043A", "value": 12, "slug": "kamenyak" }, { "key": "\u041A\u0430\u043C\u0435\u0449\u0438\u0446\u0430", "value": 2, "slug": "kameshchica" }, { "key": "\u041A\u0430\u043C\u0447\u0438\u044F", "value": 5, "slug": "kamchiya" }, { "key": "\u041A\u0430\u043D\u0434\u0438\u043B\u043A\u0430", "value": 12, "slug": "kandilka" }, { "key": "\u041A\u0430\u043D\u0434\u043E\u0432\u0438", "value": 1, "slug": "kandovi" }, { "key": "\u041A\u0430\u043D\u044F\u043A", "value": 1, "slug": "kanyak" }, { "key": "\u041A\u0430\u043E\u043B\u0438\u043D\u043E\u0432\u043E", "value": 56, "slug": "kaolinovo" }, { "key": "\u041A\u0430\u043F\u0430\u0442\u043E\u0432\u043E", "value": 5, "slug": "kapatovo" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D \u0410\u043D\u0434\u0440\u0435\u0435\u0432\u043E", "value": 43, "slug": "kapitan-andreevo" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D \u0414\u0438\u043C\u0438\u0442\u0440\u0438\u0435\u0432\u043E", "value": 32, "slug": "kapitan-dimitrievo" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D \u0414\u0438\u043C\u0438\u0442\u0440\u043E\u0432\u043E", "value": 1, "slug": "kapitan-dimitrovo" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D \u041F\u0435\u0442\u043A\u043E", "value": 19, "slug": "kapitan-petko" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D \u041F\u0435\u0442\u043A\u043E \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 6, "slug": "kapitan-petko-voyvoda" }, { "key": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D\u043E\u0432\u0446\u0438", "value": 39, "slug": "kapitanovci" }, { "key": "\u041A\u0430\u0440\u0430 \u041C\u0438\u0445\u0430\u043B", "value": 1, "slug": "kara-mihal" }, { "key": "\u041A\u0430\u0440\u0430\u0431\u0443\u043D\u0430\u0440", "value": 32, "slug": "karabunar" }, { "key": "\u041A\u0430\u0440\u0430\u0432\u0435\u043B\u043E\u0432\u043E", "value": 70, "slug": "karavelovo" }, { "key": "\u041A\u0430\u0440\u0430\u0432\u0435\u043B\u044C\u043E\u0432\u043E", "value": 9, "slug": "karavelovo" }, { "key": "\u041A\u0430\u0440\u0430\u0433\u0435\u043E\u0440\u0433\u0438\u0435\u0432\u043E", "value": 43, "slug": "karageorgievo" }, { "key": "\u041A\u0430\u0440\u0430\u0434\u0436\u0430\u043B\u043E\u0432\u043E", "value": 18, "slug": "karadzhalovo" }, { "key": "\u041A\u0430\u0440\u0430\u0434\u0436\u043E\u0432\u043E", "value": 28, "slug": "karadzhovo" }, { "key": "\u041A\u0430\u0440\u0430\u0438\u0432\u0430\u043D\u0446\u0430", "value": 3, "slug": "karaivanca" }, { "key": "\u041A\u0430\u0440\u0430\u0438\u0441\u0435\u043D", "value": 31, "slug": "karaisen" }, { "key": "\u041A\u0430\u0440\u0430\u043C\u0430\u043D\u0438\u0442\u0435", "value": 9, "slug": "karamanite" }, { "key": "\u041A\u0430\u0440\u0430\u043C\u0430\u043D\u043E\u0432\u043E", "value": 12, "slug": "karamanovo" }, { "key": "\u041A\u0430\u0440\u0430\u043C\u0430\u043D\u0446\u0438", "value": 47, "slug": "karamanci" }, { "key": "\u041A\u0430\u0440\u0430\u043C\u0444\u0438\u043B", "value": 4, "slug": "karamfil" }, { "key": "\u041A\u0430\u0440\u0430\u043D \u0412\u044A\u0440\u0431\u043E\u0432\u043A\u0430", "value": 16, "slug": "karan-vrbovka" }, { "key": "\u041A\u0430\u0440\u0430\u043D\u043E\u0432\u043E", "value": 25, "slug": "karanovo" }, { "key": "\u041A\u0430\u0440\u0430\u043D\u0446\u0438", "value": 10, "slug": "karanci" }, { "key": "\u041A\u0430\u0440\u0430\u043F\u0435\u043B\u0438\u0442", "value": 38, "slug": "karapelit" }, { "key": "\u041A\u0430\u0440\u0430\u043F\u043E\u043B\u0446\u0438", "value": 8, "slug": "karapolci" }, { "key": "\u041A\u0430\u0440\u0430\u0448", "value": 2, "slug": "karash" }, { "key": "\u041A\u0430\u0440\u0434\u0430\u043C", "value": 79, "slug": "kardam" }, { "key": "\u041A\u0430\u0440\u043B\u0438\u0435\u0432\u043E", "value": 5, "slug": "karlievo" }, { "key": "\u041A\u0430\u0440\u043B\u043E\u0432\u043E", "value": 1800, "slug": "karlovo" }, { "key": "\u041A\u0430\u0440\u043B\u0443\u043A\u043E\u0432\u043E", "value": 14, "slug": "karlukovo" }, { "key": "\u041A\u0430\u0440\u043D\u043E\u0431\u0430\u0442", "value": 1256, "slug": "karnobat" }, { "key": "\u041A\u0430\u0441\u0438\u043B\u0430\u0433", "value": 4, "slug": "kasilag" }, { "key": "\u041A\u0430\u0441\u043D\u0430\u043A\u043E\u0432\u043E", "value": 15, "slug": "kasnakovo" }, { "key": "\u041A\u0430\u0441\u043F\u0438\u0447\u0430\u043D", "value": 262, "slug": "kaspichan" }, { "key": "\u041A\u0430\u0442\u0435\u0440\u0438\u0446\u0430", "value": 1, "slug": "katerica" }, { "key": "\u041A\u0430\u0442\u0440\u0430\u043D\u0434\u0436\u0438\u0438", "value": 3, "slug": "katrandzhii" }, { "key": "\u041A\u0430\u0442\u0440\u0430\u043D\u0438\u0446\u0430", "value": 11, "slug": "katranica" }, { "key": "\u041A\u0430\u0442\u0440\u0438\u0449\u0435", "value": 5, "slug": "katrishche" }, { "key": "\u041A\u0430\u0442\u0443\u043D\u0435\u0446", "value": 8, "slug": "katunec" }, { "key": "\u041A\u0430\u0442\u0443\u043D\u0438\u0446\u0430", "value": 134, "slug": "katunica" }, { "key": "\u041A\u0430\u0442\u0443\u043D\u0438\u0449\u0435", "value": 4, "slug": "katunishche" }, { "key": "\u041A\u0430\u0442\u0443\u043D\u0446\u0438", "value": 82, "slug": "katunci" }, { "key": "\u041A\u0430\u0446\u0435\u043B\u043E\u0432\u043E", "value": 23, "slug": "kacelovo" }, { "key": "\u041A\u0430\u0448\u0438\u043D\u0430", "value": 1, "slug": "kashina" }, { "key": "\u041A\u0430\u044F\u043B\u043E\u0431\u0430", "value": 2, "slug": "kayaloba" }, { "key": "\u041A\u0435\u0440\u0435\u043A\u0430", "value": 7, "slug": "kereka" }, { "key": "\u041A\u0435\u0440\u0435\u043D\u0438\u0442\u0435", "value": 1, "slug": "kerenite" }, { "key": "\u041A\u0435\u0440\u043C\u0435\u043D", "value": 79, "slug": "kermen" }, { "key": "\u041A\u0435\u0441\u0430\u0440\u0435\u0432\u043E", "value": 49, "slug": "kesarevo" }, { "key": "\u041A\u0435\u0441\u0442\u0435\u043D", "value": 6, "slug": "kesten" }, { "key": "\u041A\u0435\u0441\u0442\u0435\u043D\u043E\u0432\u043E", "value": 4, "slug": "kestenovo" }, { "key": "\u041A\u0438\u0435\u0432\u0446\u0438", "value": 7, "slug": "kievci" }, { "key": "\u041A\u0438\u043B\u0438\u0444\u0430\u0440\u0435\u0432\u043E", "value": 149, "slug": "kilifarevo" }, { "key": "\u041A\u0438\u043F\u0438\u043B\u043E\u0432\u043E", "value": 19, "slug": "kipilovo" }, { "key": "\u041A\u0438\u043F\u0440\u0430", "value": 33, "slug": "kipra" }, { "key": "\u041A\u0438\u0440\u0435\u0435\u0432\u043E", "value": 5, "slug": "kireevo" }, { "key": "\u041A\u0438\u0440\u0438\u043B\u043E\u0432\u043E", "value": 30, "slug": "kirilovo" }, { "key": "\u041A\u0438\u0440\u043A\u043E\u0432\u043E", "value": 91, "slug": "kirkovo" }, { "key": "\u041A\u0438\u0440\u043E\u0432\u043E", "value": 2, "slug": "kirovo" }, { "key": "\u041A\u0438\u0440\u0447\u0435\u0432\u043E", "value": 22, "slug": "kirchevo" }, { "key": "\u041A\u0438\u0441\u0435\u043B\u0435\u0432\u043E", "value": 4, "slug": "kiselevo" }, { "key": "\u041A\u0438\u0441\u0435\u043B\u0447\u043E\u0432\u043E", "value": 14, "slug": "kiselchovo" }, { "key": "\u041A\u0438\u0442\u0430\u043D\u0447\u0435\u0432\u043E", "value": 41, "slug": "kitanchevo" }, { "key": "\u041A\u0438\u0442\u0435\u043D", "value": 228, "slug": "kiten" }, { "key": "\u041A\u0438\u0442\u0438\u043D\u043E", "value": 5, "slug": "kitino" }, { "key": "\u041A\u0438\u0442\u043A\u0430", "value": 22, "slug": "kitka" }, { "key": "\u041A\u0438\u0442\u043D\u0430", "value": 5, "slug": "kitna" }, { "key": "\u041A\u0438\u0442\u043D\u0438\u0446\u0430", "value": 2, "slug": "kitnica" }, { "key": "\u041A\u0438\u0447\u0435\u0432\u043E", "value": 89, "slug": "kichevo" }, { "key": "\u041A\u0438\u0447\u0435\u043D\u0438\u0446\u0430", "value": 25, "slug": "kichenica" }, { "key": "\u041A\u043B\u0430\u0434\u0435\u043D\u0435\u0446", "value": 6, "slug": "kladenec" }, { "key": "\u041A\u043B\u0430\u0434\u0435\u043D\u0446\u0438", "value": 2, "slug": "kladenci" }, { "key": "\u041A\u043B\u0430\u0434\u043D\u0438 \u0434\u044F\u043B", "value": 2, "slug": "kladni-dyal" }, { "key": "\u041A\u043B\u0430\u0434\u043D\u0438\u0446\u0430", "value": 59, "slug": "kladnica" }, { "key": "\u041A\u043B\u0435\u043D\u043E\u0432\u0438\u043A", "value": 11, "slug": "klenovik" }, { "key": "\u041A\u043B\u0438\u043A\u0430\u0447", "value": 25, "slug": "klikach" }, { "key": "\u041A\u043B\u0438\u043C\u0430\u0448", "value": 9, "slug": "klimash" }, { "key": "\u041A\u043B\u0438\u043C\u0435\u043D\u0442", "value": 102, "slug": "kliment" }, { "key": "\u041A\u043B\u0438\u043C\u0435\u043D\u0442\u043E\u0432\u043E", "value": 42, "slug": "klimentovo" }, { "key": "\u041A\u043B\u0438\u0441\u0443\u0440\u0430", "value": 44, "slug": "klisura" }, { "key": "\u041A\u043B\u0438\u0441\u0443\u0440\u0438\u0446\u0430", "value": 4, "slug": "klisurica" }, { "key": "\u041A\u043B\u043E\u043A\u043E\u0442\u043D\u0438\u0446\u0430", "value": 39, "slug": "klokotnica" }, { "key": "\u041A\u043B\u044E\u0447", "value": 42, "slug": "klyuch" }, { "key": "\u041A\u043C\u0435\u0442\u043E\u0432\u0446\u0438", "value": 2, "slug": "kmetovci" }, { "key": "\u041A\u043D\u0435\u0436\u0430", "value": 505, "slug": "knezha" }, { "key": "\u041A\u043D\u0438\u0436\u043E\u0432\u043D\u0438\u043A", "value": 9, "slug": "knizhovnik" }, { "key": "\u041A\u043D\u044F\u0436\u0435\u0432\u043E", "value": 16, "slug": "knyazhevo" }, { "key": "\u041A\u043D\u044F\u0436\u0435\u0432\u0441\u043A\u043E", "value": 8, "slug": "knyazhevsko" }, { "key": "\u041A\u043E\u0431\u0438\u043B\u044F\u043A", "value": 2, "slug": "kobilyak" }, { "key": "\u041A\u043E\u0431\u0438\u043B\u044F\u043D\u0435", "value": 16, "slug": "kobilyane" }, { "key": "\u041A\u043E\u0432\u0430\u0447", "value": 2, "slug": "kovach" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0435\u0432\u0435\u0446", "value": 21, "slug": "kovachevec" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0435\u0432\u0438\u0446\u0430", "value": 13, "slug": "kovachevica" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0435\u0432\u043E", "value": 92, "slug": "kovachevo" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0435\u0432\u0446\u0438", "value": 44, "slug": "kovachevci" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0438\u0442\u0435", "value": 29, "slug": "kovachite" }, { "key": "\u041A\u043E\u0432\u0430\u0447\u0438\u0446\u0430", "value": 29, "slug": "kovachica" }, { "key": "\u041A\u043E\u0435\u0432\u0446\u0438", "value": 4, "slug": "koevci" }, { "key": "\u041A\u043E\u0436\u0430\u0440\u0438", "value": 3, "slug": "kozhari" }, { "key": "\u041A\u043E\u0436\u0438\u043D\u0446\u0438", "value": 1, "slug": "kozhinci" }, { "key": "\u041A\u043E\u0436\u043B\u044E\u0432\u0446\u0438", "value": 1, "slug": "kozhlyuvci" }, { "key": "\u041A\u043E\u0437\u0430\u043D\u043E\u0432\u043E", "value": 22, "slug": "kozanovo" }, { "key": "\u041A\u043E\u0437\u0430\u0440 \u0411\u0435\u043B\u0435\u043D\u0435", "value": 27, "slug": "kozar-belene" }, { "key": "\u041A\u043E\u0437\u0430\u0440\u0435", "value": 3, "slug": "kozare" }, { "key": "\u041A\u043E\u0437\u0430\u0440\u0435\u0432\u0435\u0446", "value": 37, "slug": "kozarevec" }, { "key": "\u041A\u043E\u0437\u0430\u0440\u0435\u0432\u043E", "value": 6, "slug": "kozarevo" }, { "key": "\u041A\u043E\u0437\u0430\u0440\u043A\u0430", "value": 12, "slug": "kozarka" }, { "key": "\u041A\u043E\u0437\u0430\u0440\u0441\u043A\u043E", "value": 36, "slug": "kozarsko" }, { "key": "\u041A\u043E\u0437\u0438\u0446\u0430", "value": 4, "slug": "kozica" }, { "key": "\u041A\u043E\u0437\u0438\u0447\u0438\u043D\u043E", "value": 7, "slug": "kozichino" }, { "key": "\u041A\u043E\u0437\u043B\u0435\u0432\u043E", "value": 1, "slug": "kozlevo" }, { "key": "\u041A\u043E\u0437\u043B\u0435\u0446", "value": 25, "slug": "kozlec" }, { "key": "\u041A\u043E\u0437\u043B\u043E\u0432\u0435\u0446", "value": 36, "slug": "kozlovec" }, { "key": "\u041A\u043E\u0437\u043B\u043E\u0434\u0443\u0439", "value": 587, "slug": "kozloduy" }, { "key": "\u041A\u043E\u0437\u043B\u043E\u0434\u0443\u0439\u0446\u0438", "value": 15, "slug": "kozloduyci" }, { "key": "\u041A\u043E\u0437\u043C\u0430 \u043F\u0440\u0435\u0437\u0432\u0438\u0442\u0435\u0440", "value": 13, "slug": "kozma-prezviter" }, { "key": "\u041A\u043E\u0437\u044F\u043A", "value": 7, "slug": "kozyak" }, { "key": "\u041A\u043E\u0438\u043B\u043E\u0432\u0446\u0438", "value": 28, "slug": "koilovci" }, { "key": "\u041A\u043E\u0439\u043D\u0430\u0440\u0435", "value": 131, "slug": "koynare" }, { "key": "\u041A\u043E\u043A\u0430\u043B\u044F\u043D\u0435", "value": 153, "slug": "kokalyane" }, { "key": "\u041A\u043E\u043A\u0438\u0447\u0435", "value": 2, "slug": "kokiche" }, { "key": "\u041A\u043E\u043A\u043E\u0440\u0446\u0438", "value": 1, "slug": "kokorci" }, { "key": "\u041A\u043E\u043A\u043E\u0448\u0430\u043D\u0435", "value": 2, "slug": "kokoshane" }, { "key": "\u041A\u043E\u043B\u0430\u0440\u043E\u0432\u043E", "value": 169, "slug": "kolarovo" }, { "key": "\u041A\u043E\u043B\u0430\u0440\u0446\u0438", "value": 9, "slug": "kolarci" }, { "key": "\u041A\u043E\u043B\u0435\u043D\u0430", "value": 6, "slug": "kolena" }, { "key": "\u041A\u043E\u043B\u0435\u0446", "value": 6, "slug": "kolec" }, { "key": "\u041A\u043E\u043B\u043E\u0431\u044A\u0440", "value": 9, "slug": "kolobr" }, { "key": "\u041A\u043E\u043B\u044E \u041C\u0430\u0440\u0438\u043D\u043E\u0432\u043E", "value": 7, "slug": "kolyu-marinovo" }, { "key": "\u041A\u043E\u043C\u0430\u0440\u0435\u0432\u043E", "value": 69, "slug": "komarevo" }, { "key": "\u041A\u043E\u043C\u043E\u0449\u0438\u0446\u0430", "value": 21, "slug": "komoshchica" }, { "key": "\u041A\u043E\u043C\u0443\u043D\u0430\u0440\u0438", "value": 3, "slug": "komunari" }, { "key": "\u041A\u043E\u043C\u0443\u043D\u0438\u0433\u0430", "value": 41, "slug": "komuniga" }, { "key": "\u041A\u043E\u043C\u0449\u0438\u0446\u0430", "value": 1, "slug": "komshchica" }, { "key": "\u041A\u043E\u043D\u0430\u043A", "value": 6, "slug": "konak" }, { "key": "\u041A\u043E\u043D\u0430\u0440\u0435", "value": 20, "slug": "konare" }, { "key": "\u041A\u043E\u043D\u0430\u0440\u0441\u043A\u043E", "value": 15, "slug": "konarsko" }, { "key": "\u041A\u043E\u043D\u0430\u0440\u0441\u043A\u043E\u0442\u043E", "value": 3, "slug": "konarskoto" }, { "key": "\u041A\u043E\u043D\u0434\u043E\u0444\u0440\u0435\u0439", "value": 14, "slug": "kondofrey" }, { "key": "\u041A\u043E\u043D\u0435\u0432\u0435\u0446", "value": 5, "slug": "konevec" }, { "key": "\u041A\u043E\u043D\u0435\u0432\u043E", "value": 19, "slug": "konevo" }, { "key": "\u041A\u043E\u043D\u043E\u043F", "value": 2, "slug": "konop" }, { "key": "\u041A\u043E\u043D\u0441\u043A\u0430", "value": 4, "slug": "konska" }, { "key": "\u041A\u043E\u043D\u0441\u0442\u0430\u043D\u0442\u0438\u043D", "value": 30, "slug": "konstantin" }, { "key": "\u041A\u043E\u043D\u0441\u0442\u0430\u043D\u0442\u0438\u043D\u043E\u0432\u043E", "value": 106, "slug": "konstantinovo" }, { "key": "\u041A\u043E\u043D\u0443\u0448", "value": 28, "slug": "konush" }, { "key": "\u041A\u043E\u043D\u0447\u0435", "value": 4, "slug": "konche" }, { "key": "\u041A\u043E\u043D\u044C\u043E\u0432\u0435\u0446", "value": 6, "slug": "konovec" }, { "key": "\u041A\u043E\u043D\u044C\u043E\u0432\u043E", "value": 21, "slug": "konovo" }, { "key": "\u041A\u043E\u043D\u044F\u0432\u043E", "value": 43, "slug": "konyavo" }, { "key": "\u041A\u043E\u043F\u0430\u043D\u0438\u0446\u0430", "value": 6, "slug": "kopanica" }, { "key": "\u041A\u043E\u043F\u0438\u043B\u043E\u0432\u0446\u0438", "value": 40, "slug": "kopilovci" }, { "key": "\u041A\u043E\u043F\u0440\u0435\u0446", "value": 1, "slug": "koprec" }, { "key": "\u041A\u043E\u043F\u0440\u0438\u0432\u0435\u0446", "value": 29, "slug": "koprivec" }, { "key": "\u041A\u043E\u043F\u0440\u0438\u0432\u043B\u0435\u043D", "value": 83, "slug": "koprivlen" }, { "key": "\u041A\u043E\u043F\u0440\u0438\u0432\u0449\u0438\u0446\u0430", "value": 139, "slug": "koprivshchica" }, { "key": "\u041A\u043E\u043F\u0440\u0438\u043D\u043A\u0430", "value": 114, "slug": "koprinka" }, { "key": "\u041A\u043E\u043F\u0447\u0435\u043B\u0438\u0438\u0442\u0435", "value": 4, "slug": "kopcheliite" }, { "key": "\u041A\u043E\u0440\u0435\u043D", "value": 10, "slug": "koren" }, { "key": "\u041A\u043E\u0440\u0438\u0442\u0430\u0442\u0430", "value": 5, "slug": "koritata" }, { "key": "\u041A\u043E\u0440\u0438\u0442\u0435\u043D", "value": 3, "slug": "koriten" }, { "key": "\u041A\u043E\u0440\u043A\u0438\u043D\u0430", "value": 5, "slug": "korkina" }, { "key": "\u041A\u043E\u0440\u043C\u044F\u043D\u0441\u043A\u043E", "value": 24, "slug": "kormyansko" }, { "key": "\u041A\u043E\u0440\u043D\u0438\u0446\u0430", "value": 58, "slug": "kornica" }, { "key": "\u041A\u043E\u0440\u0442\u0435\u043D", "value": 78, "slug": "korten" }, { "key": "\u041A\u043E\u0441", "value": 1, "slug": "kos" }, { "key": "\u041A\u043E\u0441\u0430\u0440\u0430", "value": 2, "slug": "kosara" }, { "key": "\u041A\u043E\u0441\u0430\u0440\u043A\u0430", "value": 2, "slug": "kosarka" }, { "key": "\u041A\u043E\u0441\u0430\u0447\u0430", "value": 19, "slug": "kosacha" }, { "key": "\u041A\u043E\u0441\u043E\u0432\u0435\u0446", "value": 12, "slug": "kosovec" }, { "key": "\u041A\u043E\u0441\u043E\u0432\u043E", "value": 27, "slug": "kosovo" }, { "key": "\u041A\u043E\u0441\u0442\u0430 \u041F\u0435\u0440\u0447\u0435\u0432\u043E", "value": 4, "slug": "kosta-perchevo" }, { "key": "\u041A\u043E\u0441\u0442\u0430\u0434\u0438\u043D\u043A\u0438\u043D\u043E", "value": 3, "slug": "kostadinkino" }, { "key": "\u041A\u043E\u0441\u0442\u0430\u043D\u0434\u0435\u043D\u0435\u0446", "value": 23, "slug": "kostandenec" }, { "key": "\u041A\u043E\u0441\u0442\u0430\u043D\u0434\u043E\u0432\u043E", "value": 119, "slug": "kostandovo" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043B", "value": 3, "slug": "kostel" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043B\u0435\u0432\u043E", "value": 26, "slug": "kostelevo" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043D", "value": 10, "slug": "kosten" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043D\u0430 \u0440\u0435\u043A\u0430", "value": 7, "slug": "kostena-reka" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043D\u0435\u0446", "value": 696, "slug": "kostenec" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043D\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "kostenkovci" }, { "key": "\u041A\u043E\u0441\u0442\u0435\u043D\u0446\u0438", "value": 2, "slug": "kostenci" }, { "key": "\u041A\u043E\u0441\u0442\u0438", "value": 8, "slug": "kosti" }, { "key": "\u041A\u043E\u0441\u0442\u0438\u0435\u0432\u043E", "value": 78, "slug": "kostievo" }, { "key": "\u041A\u043E\u0441\u0442\u0438\u043B\u043A\u043E\u0432\u043E", "value": 1, "slug": "kostilkovo" }, { "key": "\u041A\u043E\u0441\u0442\u0438\u043D\u0431\u0440\u043E\u0434", "value": 1016, "slug": "kostinbrod" }, { "key": "\u041A\u043E\u0441\u0442\u0438\u043D\u043E", "value": 5, "slug": "kostino" }, { "key": "\u041A\u043E\u0441\u0442\u0443\u0440", "value": 1, "slug": "kostur" }, { "key": "\u041A\u043E\u0441\u0442\u0443\u0440\u0438\u043D\u0446\u0438", "value": 1, "slug": "kosturinci" }, { "key": "\u041A\u043E\u0442\u0435\u043B", "value": 329, "slug": "kotel" }, { "key": "\u041A\u043E\u0442\u0435\u043D\u043E\u0432\u0446\u0438", "value": 2, "slug": "kotenovci" }, { "key": "\u041A\u043E\u0442\u043B\u0430\u0440\u0438", "value": 1, "slug": "kotlari" }, { "key": "\u041A\u043E\u0442\u043B\u0435\u043D\u0446\u0438", "value": 4, "slug": "kotlenci" }, { "key": "\u041A\u043E\u0447\u0430\u043D", "value": 108, "slug": "kochan" }, { "key": "\u041A\u043E\u0447\u0430\u043D\u0438", "value": 6, "slug": "kochani" }, { "key": "\u041A\u043E\u0447\u0435\u0432\u043E", "value": 33, "slug": "kochevo" }, { "key": "\u041A\u043E\u0447\u0435\u0440\u0438\u043D\u043E\u0432\u043E", "value": 50, "slug": "kocherinovo" }, { "key": "\u041A\u043E\u0447\u043C\u0430\u0440", "value": 36, "slug": "kochmar" }, { "key": "\u041A\u043E\u0447\u043E\u0432\u043E", "value": 15, "slug": "kochovo" }, { "key": "\u041A\u043E\u0448\u0430\u0432\u0430", "value": 12, "slug": "koshava" }, { "key": "\u041A\u043E\u0448\u0430\u0440\u0435\u0432\u043E", "value": 15, "slug": "kosharevo" }, { "key": "\u041A\u043E\u0448\u0430\u0440\u0438\u0442\u0435", "value": 2, "slug": "kosharite" }, { "key": "\u041A\u043E\u0448\u0430\u0440\u0438\u0446\u0430", "value": 212, "slug": "kosharica" }, { "key": "\u041A\u043E\u0448\u0430\u0440\u043D\u0430", "value": 22, "slug": "kosharna" }, { "key": "\u041A\u043E\u0448\u043D\u0438\u0446\u0430", "value": 4, "slug": "koshnica" }, { "key": "\u041A\u043E\u0448\u043D\u0438\u0447\u0430\u0440\u0438", "value": 4, "slug": "koshnichari" }, { "key": "\u041A\u043E\u0448\u043E\u0432", "value": 12, "slug": "koshov" }, { "key": "\u041A\u0440\u0430\u0432\u0438\u043D\u043E", "value": 4, "slug": "kravino" }, { "key": "\u041A\u0440\u0430\u0432\u043E\u0434\u0435\u0440", "value": 26, "slug": "kravoder" }, { "key": "\u041A\u0440\u0430\u0435\u0432\u043E", "value": 4, "slug": "kraevo" }, { "key": "\u041A\u0440\u0430\u0438\u0449\u0435", "value": 65, "slug": "kraishche" }, { "key": "\u041A\u0440\u0430\u0439\u0433\u043E\u0440\u0446\u0438", "value": 6, "slug": "kraygorci" }, { "key": "\u041A\u0440\u0430\u0439\u043D\u0438\u0446\u0438", "value": 93, "slug": "kraynici" }, { "key": "\u041A\u0440\u0430\u0439\u043D\u043E \u0441\u0435\u043B\u043E", "value": 10, "slug": "krayno-selo" }, { "key": "\u041A\u0440\u0430\u0439\u043D\u043E\u0432\u043E", "value": 2, "slug": "kraynovo" }, { "key": "\u041A\u0440\u0430\u043A\u0440\u0430", "value": 2, "slug": "krakra" }, { "key": "\u041A\u0440\u0430\u043B\u0435\u0432 \u0434\u043E\u043B", "value": 27, "slug": "kralev-dol" }, { "key": "\u041A\u0440\u0430\u043B\u0435\u0432\u043E", "value": 35, "slug": "kralevo" }, { "key": "\u041A\u0440\u0430\u043B\u0438 \u041C\u0430\u0440\u043A\u043E", "value": 13, "slug": "krali-marko" }, { "key": "\u041A\u0440\u0430\u043C\u043E\u043B\u0438\u043D", "value": 7, "slug": "kramolin" }, { "key": "\u041A\u0440\u0430\u043D\u0435\u0432\u043E", "value": 182, "slug": "kranevo" }, { "key": "\u041A\u0440\u0430\u043F\u0435\u0446", "value": 21, "slug": "krapec" }, { "key": "\u041A\u0440\u0430\u043F\u0447\u0435\u043D\u0435", "value": 5, "slug": "krapchene" }, { "key": "\u041A\u0440\u0430\u0441\u0435\u043D", "value": 58, "slug": "krasen" }, { "key": "\u041A\u0440\u0430\u0441\u0435\u043D \u0434\u043E\u043B", "value": 5, "slug": "krasen-dol" }, { "key": "\u041A\u0440\u0430\u0441\u0438\u043C\u0438\u0440", "value": 9, "slug": "krasimir" }, { "key": "\u041A\u0440\u0430\u0441\u043D\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 2, "slug": "krasno-gradishche" }, { "key": "\u041A\u0440\u0430\u0441\u043D\u043E\u0432\u043E", "value": 15, "slug": "krasnovo" }, { "key": "\u041A\u0440\u0430\u0441\u043D\u043E\u0441\u0435\u043B\u0446\u0438", "value": 6, "slug": "krasnoselci" }, { "key": "\u041A\u0440\u0430\u0447\u0438\u043C\u0438\u0440", "value": 5, "slug": "krachimir" }, { "key": "\u041A\u0440\u0435\u043C\u0435\u043D", "value": 5, "slug": "kremen" }, { "key": "\u041A\u0440\u0435\u043C\u0435\u043D\u0430", "value": 3, "slug": "kremena" }, { "key": "\u041A\u0440\u0435\u043C\u0435\u043D\u0435", "value": 1, "slug": "kremene" }, { "key": "\u041A\u0440\u0435\u043F\u043E\u0441\u0442", "value": 74, "slug": "krepost" }, { "key": "\u041A\u0440\u0435\u043F\u0447\u0430", "value": 31, "slug": "krepcha" }, { "key": "\u041A\u0440\u0435\u0441\u043D\u0430", "value": 292, "slug": "kresna" }, { "key": "\u041A\u0440\u0435\u0442\u0430", "value": 19, "slug": "kreta" }, { "key": "\u041A\u0440\u0438\u0431\u0443\u043B", "value": 10, "slug": "kribul" }, { "key": "\u041A\u0440\u0438\u0432\u0430 \u0431\u0430\u0440\u0430", "value": 27, "slug": "kriva-bara" }, { "key": "\u041A\u0440\u0438\u0432\u0430 \u0440\u0435\u043A\u0430", "value": 11, "slug": "kriva-reka" }, { "key": "\u041A\u0440\u0438\u0432\u0438\u043D\u0430", "value": 91, "slug": "krivina" }, { "key": "\u041A\u0440\u0438\u0432\u0438\u043D\u0438", "value": 8, "slug": "krivini" }, { "key": "\u041A\u0440\u0438\u0432\u0438\u0446\u0430", "value": 8, "slug": "krivica" }, { "key": "\u041A\u0440\u0438\u0432\u043D\u044F", "value": 32, "slug": "krivnya" }, { "key": "\u041A\u0440\u0438\u0432\u043E \u043F\u043E\u043B\u0435", "value": 15, "slug": "krivo-pole" }, { "key": "\u041A\u0440\u0438\u0432\u043E\u0434\u043E\u043B", "value": 178, "slug": "krivodol" }, { "key": "\u041A\u0440\u0438\u043B\u0430\u0442\u0438\u0446\u0430", "value": 8, "slug": "krilatica" }, { "key": "\u041A\u0440\u0438\u043D", "value": 9, "slug": "krin" }, { "key": "\u041A\u0440\u0438\u0441\u043B\u043E\u0432\u043E", "value": 18, "slug": "krislovo" }, { "key": "\u041A\u0440\u0438\u0447\u0438\u043C", "value": 424, "slug": "krichim" }, { "key": "\u041A\u0440\u043E\u043C\u0438\u0434\u043E\u0432\u043E", "value": 2, "slug": "kromidovo" }, { "key": "\u041A\u0440\u043E\u044F\u0447", "value": 5, "slug": "kroyach" }, { "key": "\u041A\u0440\u0443\u043C", "value": 6, "slug": "krum" }, { "key": "\u041A\u0440\u0443\u043C\u043E\u0432\u0433\u0440\u0430\u0434", "value": 348, "slug": "krumovgrad" }, { "key": "\u041A\u0440\u0443\u043C\u043E\u0432\u043E", "value": 243, "slug": "krumovo" }, { "key": "\u041A\u0440\u0443\u043C\u043E\u0432\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 16, "slug": "krumovo-gradishche" }, { "key": "\u041A\u0440\u0443\u043F\u0435\u043D", "value": 1, "slug": "krupen" }, { "key": "\u041A\u0440\u0443\u043F\u043D\u0438\u043A", "value": 78, "slug": "krupnik" }, { "key": "\u041A\u0440\u0443\u0448\u0430", "value": 11, "slug": "krusha" }, { "key": "\u041A\u0440\u0443\u0448\u0430\u0440\u0435", "value": 53, "slug": "krushare" }, { "key": "\u041A\u0440\u0443\u0448\u0430\u0440\u0438", "value": 41, "slug": "krushari" }, { "key": "\u041A\u0440\u0443\u0448\u0435\u0432\u0435\u0446", "value": 33, "slug": "krushevec" }, { "key": "\u041A\u0440\u0443\u0448\u0435\u0432\u043E", "value": 54, "slug": "krushevo" }, { "key": "\u041A\u0440\u0443\u0448\u0435\u0432\u0441\u043A\u0430", "value": 3, "slug": "krushevska" }, { "key": "\u041A\u0440\u0443\u0448\u0435\u0442\u043E", "value": 14, "slug": "krusheto" }, { "key": "\u041A\u0440\u0443\u0448\u043A\u0430", "value": 1, "slug": "krushka" }, { "key": "\u041A\u0440\u0443\u0448\u043E\u0432\u0435\u043D\u0435", "value": 25, "slug": "krushovene" }, { "key": "\u041A\u0440\u0443\u0448\u043E\u0432\u0438\u0446\u0430", "value": 93, "slug": "krushovica" }, { "key": "\u041A\u0440\u0443\u0448\u043E\u0432\u043E", "value": 7, "slug": "krushovo" }, { "key": "\u041A\u0440\u0443\u0448\u043E\u043B\u0430\u043A", "value": 2, "slug": "krusholak" }, { "key": "\u041A\u0440\u0443\u0448\u0443\u043D\u0430", "value": 9, "slug": "krushuna" }, { "key": "\u041A\u0440\u044A\u0432\u0435\u043D\u0438\u043A", "value": 13, "slug": "krvenik" }, { "key": "\u041A\u0440\u044A\u043D", "value": 215, "slug": "krn" }, { "key": "\u041A\u0440\u044A\u0441\u0442\u0430\u0432\u0430", "value": 34, "slug": "krstava" }, { "key": "\u041A\u0440\u044A\u0441\u0442\u0435\u0432\u0438\u0447", "value": 11, "slug": "krstevich" }, { "key": "\u041A\u0440\u044A\u0441\u0442\u0435\u0446", "value": 5, "slug": "krstec" }, { "key": "\u041A\u0440\u044A\u0441\u0442\u0438\u043D\u0430", "value": 20, "slug": "krstina" }, { "key": "\u041A\u0440\u044A\u0448\u043D\u043E", "value": 7, "slug": "krshno" }, { "key": "\u041A\u0443\u0431\u0430\u0434\u0438\u043D", "value": 5, "slug": "kubadin" }, { "key": "\u041A\u0443\u0431\u0440\u0430\u0442", "value": 519, "slug": "kubrat" }, { "key": "\u041A\u0443\u0431\u0440\u0430\u0442\u043E\u0432\u043E", "value": 41, "slug": "kubratovo" }, { "key": "\u041A\u0443\u0434\u0435\u043B\u0438\u043D", "value": 5, "slug": "kudelin" }, { "key": "\u041A\u0443\u0437\u044C\u043E\u0432\u043E", "value": 6, "slug": "kuzovo" }, { "key": "\u041A\u0443\u043A\u043B\u0435\u043D", "value": 430, "slug": "kuklen" }, { "key": "\u041A\u0443\u043A\u043E\u0440\u0435\u0432\u043E", "value": 80, "slug": "kukorevo" }, { "key": "\u041A\u0443\u043A\u0443\u0440\u044F\u043A", "value": 7, "slug": "kukuryak" }, { "key": "\u041A\u0443\u043B\u0430", "value": 152, "slug": "kula" }, { "key": "\u041A\u0443\u043B\u0430\u0442\u0430", "value": 98, "slug": "kulata" }, { "key": "\u041A\u0443\u043C\u0430\u043D\u0438\u0442\u0435", "value": 6, "slug": "kumanite" }, { "key": "\u041A\u0443\u043C\u0430\u043D\u043E\u0432\u043E", "value": 31, "slug": "kumanovo" }, { "key": "\u041A\u0443\u043D\u0434\u0435\u0432\u043E", "value": 7, "slug": "kundevo" }, { "key": "\u041A\u0443\u043D\u0438\u043D\u043E", "value": 16, "slug": "kunino" }, { "key": "\u041A\u0443\u043F\u0435\u043D", "value": 2, "slug": "kupen" }, { "key": "\u041A\u0443\u0440\u043D\u043E\u0432\u043E", "value": 4, "slug": "kurnovo" }, { "key": "\u041A\u0443\u0440\u0442\u043E\u0432\u043E", "value": 9, "slug": "kurtovo" }, { "key": "\u041A\u0443\u0440\u0442\u043E\u0432\u043E \u041A\u043E\u043D\u0430\u0440\u0435", "value": 94, "slug": "kurtovo-konare" }, { "key": "\u041A\u0443\u0442\u0435\u043B\u0430", "value": 25, "slug": "kutela" }, { "key": "\u041A\u0443\u0442\u043B\u043E\u0432\u0438\u0446\u0430", "value": 3, "slug": "kutlovica" }, { "key": "\u041A\u0443\u0442\u043E\u0432\u043E", "value": 24, "slug": "kutovo" }, { "key": "\u041A\u0443\u0446\u0438\u043D\u0430", "value": 19, "slug": "kucina" }, { "key": "\u041A\u044A\u043A\u0440\u0438\u043D\u0430", "value": 10, "slug": "kkrina" }, { "key": "\u041A\u044A\u043B\u043D\u043E\u0432\u043E", "value": 11, "slug": "klnovo" }, { "key": "\u041A\u044A\u043D\u0447\u0435\u0432\u043E", "value": 31, "slug": "knchevo" }, { "key": "\u041A\u044A\u043F\u0438\u043D\u043E\u0432\u043E", "value": 18, "slug": "kpinovo" }, { "key": "\u041A\u044A\u043F\u0438\u043D\u043E\u0432\u0446\u0438", "value": 4, "slug": "kpinovci" }, { "key": "\u041A\u044A\u0440\u0434\u0436\u0430\u043B\u0438", "value": 4275, "slug": "krdzhali" }, { "key": "\u041A\u044A\u0440\u043B\u0430\u043D\u043E\u0432\u043E", "value": 1, "slug": "krlanovo" }, { "key": "\u041A\u044A\u0440\u043D\u0430\u043B\u043E\u0432\u043E", "value": 71, "slug": "krnalovo" }, { "key": "\u041A\u044A\u0440\u043D\u0430\u0440\u0435", "value": 28, "slug": "krnare" }, { "key": "\u041A\u044A\u0440\u043F\u0430\u0447\u0435\u0432\u043E", "value": 3, "slug": "krpachevo" }, { "key": "\u041A\u044A\u0440\u0442\u043E\u0436\u0430\u0431\u0435\u043D\u0435", "value": 4, "slug": "krtozhabene" }, { "key": "\u041A\u044A\u0440\u0447\u043E\u0432\u0441\u043A\u043E", "value": 3, "slug": "krchovsko" }, { "key": "\u041A\u044A\u0441\u0430\u043A", "value": 27, "slug": "ksak" }, { "key": "\u041A\u044A\u0442\u0438\u043D\u0430", "value": 49, "slug": "ktina" }, { "key": "\u041A\u044A\u0448\u0438\u043D", "value": 10, "slug": "kshin" }, { "key": "\u041A\u044C\u043E\u043B\u043C\u0435\u043D", "value": 1, "slug": "kolmen" }, { "key": "\u041A\u044C\u043E\u0441\u0435\u0432\u043E", "value": 7, "slug": "kosevo" }, { "key": "\u041A\u044C\u043E\u0441\u0435\u0432\u0446\u0438", "value": 4, "slug": "kosevci" }, { "key": "\u041A\u044E\u043B\u0435\u0432\u0447\u0430", "value": 30, "slug": "kyulevcha" }, { "key": "\u041A\u044E\u0441\u0442\u0435\u043D\u0434\u0438\u043B", "value": 4764, "slug": "kyustendil" }, { "key": "\u041B\u0430\u0433\u043E\u0448\u0435\u0432\u0446\u0438", "value": 4, "slug": "lagoshevci" }, { "key": "\u041B\u0430\u0434\u0430\u0440\u0435\u0432\u043E", "value": 2, "slug": "ladarevo" }, { "key": "\u041B\u0430\u0437\u0430\u0440\u043E\u0432\u043E", "value": 11, "slug": "lazarovo" }, { "key": "\u041B\u0430\u0437\u0430\u0440\u0446\u0438", "value": 8, "slug": "lazarci" }, { "key": "\u041B\u0430\u043A\u0430\u0442\u043D\u0438\u043A", "value": 61, "slug": "lakatnik" }, { "key": "\u041B\u0430\u043B\u0435", "value": 5, "slug": "lale" }, { "key": "\u041B\u0430\u043B\u043A\u043E\u0432\u043E", "value": 10, "slug": "lalkovo" }, { "key": "\u041B\u0430\u0441\u043A\u0430\u0440", "value": 3, "slug": "laskar" }, { "key": "\u041B\u0430\u0441\u043A\u0430\u0440\u0435\u0432\u043E", "value": 16, "slug": "laskarevo" }, { "key": "\u041B\u0430\u0442\u0438\u043D\u043A\u0430", "value": 1, "slug": "latinka" }, { "key": "\u041B\u0435\u0431\u0435\u0434", "value": 1, "slug": "lebed" }, { "key": "\u041B\u0435\u0431\u043D\u0438\u0446\u0430", "value": 23, "slug": "lebnica" }, { "key": "\u041B\u0435\u0432\u0430 \u0440\u0435\u043A\u0430", "value": 1, "slug": "leva-reka" }, { "key": "\u041B\u0435\u0432\u043A\u0430", "value": 16, "slug": "levka" }, { "key": "\u041B\u0435\u0432\u043E\u0447\u0435\u0432\u043E", "value": 9, "slug": "levochevo" }, { "key": "\u041B\u0435\u0432\u0441\u043A\u0438", "value": 588, "slug": "levski" }, { "key": "\u041B\u0435\u0432\u0443\u043D\u043E\u0432\u043E", "value": 33, "slug": "levunovo" }, { "key": "\u041B\u0435\u0434\u0435\u043D\u0438\u043A", "value": 45, "slug": "ledenik" }, { "key": "\u041B\u0435\u043D\u0438\u0449\u0435", "value": 4, "slug": "lenishche" }, { "key": "\u041B\u0435\u043D\u043A\u043E\u0432\u043E", "value": 7, "slug": "lenkovo" }, { "key": "\u041B\u0435\u043D\u043E\u0432\u043E", "value": 12, "slug": "lenovo" }, { "key": "\u041B\u0435\u043D\u0441\u043A\u043E", "value": 1, "slug": "lensko" }, { "key": "\u041B\u0435\u043F\u0438\u0446\u0430", "value": 9, "slug": "lepica" }, { "key": "\u041B\u0435\u0441\u0438\u0434\u0440\u0435\u043D", "value": 57, "slug": "lesidren" }, { "key": "\u041B\u0435\u0441\u0438\u0447\u0430\u0440\u043A\u0430", "value": 7, "slug": "lesicharka" }, { "key": "\u041B\u0435\u0441\u0438\u0447\u0435\u0440\u0438", "value": 14, "slug": "lesicheri" }, { "key": "\u041B\u0435\u0441\u0438\u0447\u043E\u0432\u043E", "value": 33, "slug": "lesichovo" }, { "key": "\u041B\u0435\u0441\u043A\u0430", "value": 9, "slug": "leska" }, { "key": "\u041B\u0435\u0441\u043A\u043E\u0432\u0434\u043E\u043B", "value": 1, "slug": "leskovdol" }, { "key": "\u041B\u0435\u0441\u043A\u043E\u0432\u0435\u0446", "value": 13, "slug": "leskovec" }, { "key": "\u041B\u0435\u0441\u043D\u043E\u0432\u043E", "value": 72, "slug": "lesnovo" }, { "key": "\u041B\u0435\u0441\u043E\u0432\u043E", "value": 28, "slug": "lesovo" }, { "key": "\u041B\u0435\u0441\u0443\u0440\u0430", "value": 28, "slug": "lesura" }, { "key": "\u041B\u0435\u0442\u043D\u0438\u0446\u0430", "value": 122, "slug": "letnica" }, { "key": "\u041B\u0435\u0442\u043E\u0432\u043D\u0438\u043A", "value": 1, "slug": "letovnik" }, { "key": "\u041B\u0435\u0445\u0447\u0435\u0432\u043E", "value": 39, "slug": "lehchevo" }, { "key": "\u041B\u0435\u0448\u043A\u043E", "value": 2, "slug": "leshko" }, { "key": "\u041B\u0435\u0448\u043D\u0438\u043A\u043E\u0432\u043E", "value": 1, "slug": "leshnikovo" }, { "key": "\u041B\u0435\u0448\u043D\u0438\u043A\u043E\u0432\u0446\u0438", "value": 4, "slug": "leshnikovci" }, { "key": "\u041B\u0435\u0448\u043D\u0438\u0446\u0430", "value": 38, "slug": "leshnica" }, { "key": "\u041B\u0435\u0449\u0430\u043A", "value": 5, "slug": "leshchak" }, { "key": "\u041B\u0435\u0449\u0430\u0440\u043A\u0430", "value": 2, "slug": "leshcharka" }, { "key": "\u041B\u0435\u0449\u0435\u043D", "value": 22, "slug": "leshchen" }, { "key": "\u041B\u0438\u0432\u0430\u0434\u0430", "value": 19, "slug": "livada" }, { "key": "\u041B\u0438\u043A", "value": 8, "slug": "lik" }, { "key": "\u041B\u0438\u043B\u0435\u043A\u043E\u0432\u043E", "value": 5, "slug": "lilekovo" }, { "key": "\u041B\u0438\u043B\u043A\u043E\u0432\u043E", "value": 4, "slug": "lilkovo" }, { "key": "\u041B\u0438\u043B\u044F\u043A", "value": 18, "slug": "lilyak" }, { "key": "\u041B\u0438\u043B\u044F\u043D\u043E\u0432\u043E", "value": 10, "slug": "lilyanovo" }, { "key": "\u041B\u0438\u043B\u044F\u0447", "value": 13, "slug": "lilyach" }, { "key": "\u041B\u0438\u043B\u044F\u0447\u0435", "value": 22, "slug": "lilyache" }, { "key": "\u041B\u0438\u043F\u0435\u043D", "value": 5, "slug": "lipen" }, { "key": "\u041B\u0438\u043F\u043D\u0438\u043A", "value": 25, "slug": "lipnik" }, { "key": "\u041B\u0438\u043F\u043D\u0438\u0446\u0430", "value": 31, "slug": "lipnica" }, { "key": "\u041B\u0438\u0441\u0435\u0446", "value": 20, "slug": "lisec" }, { "key": "\u041B\u0438\u0441\u0438 \u0432\u0440\u044A\u0445", "value": 1, "slug": "lisi-vrh" }, { "key": "\u041B\u0438\u0441\u0442\u0435\u0446", "value": 17, "slug": "listec" }, { "key": "\u041B\u0438\u0442\u0430\u043A\u043E\u0432\u043E", "value": 50, "slug": "litakovo" }, { "key": "\u041B\u043E\u0431\u043E\u0448", "value": 8, "slug": "lobosh" }, { "key": "\u041B\u043E\u0432\u0435\u0446", "value": 32, "slug": "lovec" }, { "key": "\u041B\u043E\u0432\u0435\u0447", "value": 3025, "slug": "lovech" }, { "key": "\u041B\u043E\u0432\u043D\u0438\u0434\u043E\u043B", "value": 3, "slug": "lovnidol" }, { "key": "\u041B\u043E\u0432\u0441\u043A\u043E", "value": 18, "slug": "lovsko" }, { "key": "\u041B\u043E\u0432\u0446\u0438", "value": 8, "slug": "lovci" }, { "key": "\u041B\u043E\u0432\u0447\u0430\u043D\u0446\u0438", "value": 16, "slug": "lovchanci" }, { "key": "\u041B\u043E\u0433\u043E\u0434\u0430\u0436", "value": 10, "slug": "logodazh" }, { "key": "\u041B\u043E\u0437\u0430", "value": 1, "slug": "loza" }, { "key": "\u041B\u043E\u0437\u0430\u0440\u0435\u0432\u043E", "value": 39, "slug": "lozarevo" }, { "key": "\u041B\u043E\u0437\u0435\u0432\u043E", "value": 15, "slug": "lozevo" }, { "key": "\u041B\u043E\u0437\u0435\u043D", "value": 520, "slug": "lozen" }, { "key": "\u041B\u043E\u0437\u0435\u043D\u0433\u0440\u0430\u0434\u0446\u0438", "value": 2, "slug": "lozengradci" }, { "key": "\u041B\u043E\u0437\u0435\u043D\u0435\u0446", "value": 149, "slug": "lozenec" }, { "key": "\u041B\u043E\u0437\u0435\u043D\u0438\u0446\u0430", "value": 7, "slug": "lozenica" }, { "key": "\u041B\u043E\u0437\u0438\u0446\u0430", "value": 10, "slug": "lozica" }, { "key": "\u041B\u043E\u0437\u043D\u0438\u0446\u0430", "value": 169, "slug": "loznica" }, { "key": "\u041B\u043E\u0437\u043D\u043E", "value": 30, "slug": "lozno" }, { "key": "\u041B\u043E\u043A\u0432\u0430\u0442\u0430", "value": 1, "slug": "lokvata" }, { "key": "\u041B\u043E\u043A\u043E\u0440\u0441\u043A\u043E", "value": 41, "slug": "lokorsko" }, { "key": "\u041B\u043E\u043C", "value": 1207, "slug": "lom" }, { "key": "\u041B\u043E\u043C \u0427\u0435\u0440\u043A\u043E\u0432\u043D\u0430", "value": 7, "slug": "lom-cherkovna" }, { "key": "\u041B\u043E\u043C\u0435\u0446", "value": 29, "slug": "lomec" }, { "key": "\u041B\u043E\u043C\u043D\u0438\u0446\u0430", "value": 1, "slug": "lomnica" }, { "key": "\u041B\u043E\u043C\u0446\u0438", "value": 15, "slug": "lomci" }, { "key": "\u041B\u043E\u043F\u0443\u0448\u043D\u0430", "value": 24, "slug": "lopushna" }, { "key": "\u041B\u043E\u043F\u044F\u043D", "value": 14, "slug": "lopyan" }, { "key": "\u041B\u0443\u0434\u043E\u0433\u043E\u0440\u0446\u0438", "value": 28, "slug": "ludogorci" }, { "key": "\u041B\u0443\u043A\u043E\u0432\u0438\u0442", "value": 554, "slug": "lukovit" }, { "key": "\u041B\u0443\u043A\u043E\u0432\u043E", "value": 15, "slug": "lukovo" }, { "key": "\u041B\u0443\u043B\u0438\u0447\u043A\u0430", "value": 1, "slug": "lulichka" }, { "key": "\u041B\u044A\u0432\u0438\u043D\u043E", "value": 20, "slug": "lvino" }, { "key": "\u041B\u044A\u0433\u0430", "value": 5, "slug": "lga" }, { "key": "\u041B\u044A\u0436\u043D\u0438\u0446\u0430", "value": 63, "slug": "lzhnica" }, { "key": "\u041B\u044A\u043A\u0430", "value": 31, "slug": "lka" }, { "key": "\u041B\u044A\u043A\u0438", "value": 137, "slug": "lki" }, { "key": "\u041B\u044E\u0431\u0435\u043D", "value": 14, "slug": "lyuben" }, { "key": "\u041B\u044E\u0431\u0435\u043D \u041A\u0430\u0440\u0430\u0432\u0435\u043B\u043E\u0432\u043E", "value": 30, "slug": "lyuben-karavelovo" }, { "key": "\u041B\u044E\u0431\u0435\u043D\u0435\u0446", "value": 7, "slug": "lyubenec" }, { "key": "\u041B\u044E\u0431\u0435\u043D\u043E\u0432\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 28, "slug": "lyubenova-mahala" }, { "key": "\u041B\u044E\u0431\u0435\u043D\u043E\u0432\u043E", "value": 29, "slug": "lyubenovo" }, { "key": "\u041B\u044E\u0431\u0438\u043C\u0435\u0446", "value": 433, "slug": "lyubimec" }, { "key": "\u041B\u044E\u0431\u0438\u043D\u043E", "value": 1, "slug": "lyubino" }, { "key": "\u041B\u044E\u0431\u0438\u0447\u0435\u0432\u043E", "value": 8, "slug": "lyubichevo" }, { "key": "\u041B\u044E\u0431\u043B\u0435\u043D", "value": 19, "slug": "lyublen" }, { "key": "\u041B\u044E\u0431\u043E\u0432\u043A\u0430", "value": 2, "slug": "lyubovka" }, { "key": "\u041B\u044E\u0431\u0447\u0430", "value": 22, "slug": "lyubcha" }, { "key": "\u041B\u044E\u043B\u0438\u043D", "value": 55, "slug": "lyulin" }, { "key": "\u041B\u044E\u043B\u043A\u0430", "value": 1, "slug": "lyulka" }, { "key": "\u041B\u044E\u043B\u044F\u043A", "value": 1, "slug": "lyulyak" }, { "key": "\u041B\u044E\u043B\u044F\u043A\u043E\u0432\u043E", "value": 123, "slug": "lyulyakovo" }, { "key": "\u041B\u044E\u0442\u0430\u0434\u0436\u0438\u043A", "value": 7, "slug": "lyutadzhik" }, { "key": "\u041B\u044E\u0442\u0438\u0431\u0440\u043E\u0434", "value": 13, "slug": "lyutibrod" }, { "key": "\u041B\u044E\u0442\u0438\u0434\u043E\u043B", "value": 5, "slug": "lyutidol" }, { "key": "\u041B\u044E\u0442\u043E\u0432\u043E", "value": 5, "slug": "lyutovo" }, { "key": "\u041B\u044F\u0432\u0430 \u0440\u0435\u043A\u0430", "value": 1, "slug": "lyava-reka" }, { "key": "\u041B\u044F\u0441\u043A\u043E\u0432\u0435\u0446", "value": 515, "slug": "lyaskovec" }, { "key": "\u041B\u044F\u0441\u043A\u043E\u0432\u043E", "value": 72, "slug": "lyaskovo" }, { "key": "\u041B\u044F\u0442\u043D\u043E", "value": 12, "slug": "lyatno" }, { "key": "\u041B\u044F\u0445\u043E\u0432\u043E", "value": 11, "slug": "lyahovo" }, { "key": "\u041C\u0430\u0434\u0430\u043D", "value": 465, "slug": "madan" }, { "key": "\u041C\u0430\u0434\u0430\u0440\u0430", "value": 36, "slug": "madara" }, { "key": "\u041C\u0430\u0434\u0436\u0430\u0440\u0435", "value": 18, "slug": "madzhare" }, { "key": "\u041C\u0430\u0434\u0436\u0430\u0440\u0438", "value": 3, "slug": "madzhari" }, { "key": "\u041C\u0430\u0434\u0436\u0430\u0440\u043E\u0432\u043E", "value": 29, "slug": "madzharovo" }, { "key": "\u041C\u0430\u0434\u0436\u0435\u0440\u0438\u0442\u043E", "value": 44, "slug": "madzherito" }, { "key": "\u041C\u0430\u0437\u0430\u0440\u0430\u0447\u0435\u0432\u043E", "value": 4, "slug": "mazarachevo" }, { "key": "\u041C\u0430\u0439\u043E\u0440 \u0423\u0437\u0443\u043D\u043E\u0432\u043E", "value": 5, "slug": "mayor-uzunovo" }, { "key": "\u041C\u0430\u0439\u0441\u043A\u043E", "value": 16, "slug": "maysko" }, { "key": "\u041C\u0430\u043A\u0430\u0440\u0438\u043E\u043F\u043E\u043B\u0441\u043A\u043E", "value": 25, "slug": "makariopolsko" }, { "key": "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0446\u0438", "value": 5, "slug": "makedonci" }, { "key": "\u041C\u0430\u043A\u043E\u0432\u043E", "value": 2, "slug": "makovo" }, { "key": "\u041C\u0430\u043A\u043E\u0446\u0435\u0432\u043E", "value": 10, "slug": "makocevo" }, { "key": "\u041C\u0430\u043A\u0440\u0435\u0448", "value": 19, "slug": "makresh" }, { "key": "\u041C\u0430\u043B\u0430 \u0420\u0430\u043A\u043E\u0432\u0438\u0446\u0430", "value": 4, "slug": "mala-rakovica" }, { "key": "\u041C\u0430\u043B\u0430 \u0424\u0443\u0447\u0430", "value": 5, "slug": "mala-fucha" }, { "key": "\u041C\u0430\u043B\u0430 \u0446\u044A\u0440\u043A\u0432\u0430", "value": 30, "slug": "mala-crkva" }, { "key": "\u041C\u0430\u043B\u0435\u0432\u043E", "value": 35, "slug": "malevo" }, { "key": "\u041C\u0430\u043B\u0435\u043D\u043E\u0432\u043E", "value": 6, "slug": "malenovo" }, { "key": "\u041C\u0430\u043B\u0438 \u0414\u0440\u0435\u043D\u043E\u0432\u0435\u0446", "value": 1, "slug": "mali-drenovec" }, { "key": "\u041C\u0430\u043B\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 7, "slug": "mali-izvor" }, { "key": "\u041C\u0430\u043B\u0438\u043D\u0430", "value": 13, "slug": "malina" }, { "key": "\u041C\u0430\u043B\u0438\u043D\u043E\u0432\u043E", "value": 29, "slug": "malinovo" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0410\u0440\u0434\u0430", "value": 6, "slug": "malka-arda" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0412\u0435\u0440\u0435\u044F", "value": 42, "slug": "malka-vereya" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0416\u0435\u043B\u044F\u0437\u043D\u0430", "value": 3, "slug": "malka-zhelyazna" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 16, "slug": "malka-polyana" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0421\u043C\u043E\u043B\u043D\u0438\u0446\u0430", "value": 2, "slug": "malka-smolnica" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0427\u0435\u0440\u043A\u043E\u0432\u043D\u0430", "value": 2, "slug": "malka-cherkovna" }, { "key": "\u041C\u0430\u043B\u043A\u0430 \u0427\u0438\u043D\u043A\u0430", "value": 3, "slug": "malka-chinka" }, { "key": "\u041C\u0430\u043B\u043A\u0438 \u0412\u043E\u0434\u0435\u043D", "value": 1, "slug": "malki-voden" }, { "key": "\u041C\u0430\u043B\u043A\u0438 \u0412\u044A\u0440\u0448\u0435\u0446", "value": 5, "slug": "malki-vrshec" }, { "key": "\u041C\u0430\u043B\u043A\u0438 \u0418\u0441\u043A\u044A\u0440", "value": 10, "slug": "malki-iskr" }, { "key": "\u041C\u0430\u043B\u043A\u0438 \u0447\u0438\u0444\u043B\u0438\u043A", "value": 6, "slug": "malki-chiflik" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0412\u0440\u0430\u043D\u043E\u0432\u043E", "value": 30, "slug": "malko-vranovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 21, "slug": "malko-gradishche" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0414\u0440\u044F\u043D\u043E\u0432\u043E", "value": 7, "slug": "malko-dryanovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0419\u043E\u043D\u043A\u043E\u0432\u043E", "value": 9, "slug": "malko-yonkovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u041A\u0430\u0434\u0438\u0435\u0432\u043E", "value": 10, "slug": "malko-kadievo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u041A\u0438\u0440\u0438\u043B\u043E\u0432\u043E", "value": 1, "slug": "malko-kirilovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0441\u0435\u043B\u043E", "value": 4, "slug": "malko-selo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0422\u0440\u044A\u043D\u043E\u0432\u043E", "value": 8, "slug": "malko-trnovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0422\u044A\u0440\u043D\u043E\u0432\u043E", "value": 181, "slug": "malko-trnovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0427\u043E\u0447\u043E\u0432\u0435\u043D\u0438", "value": 16, "slug": "malko-chochoveni" }, { "key": "\u041C\u0430\u043B\u043A\u043E \u0428\u0430\u0440\u043A\u043E\u0432\u043E", "value": 7, "slug": "malko-sharkovo" }, { "key": "\u041C\u0430\u043B\u043A\u043E\u0447", "value": 3, "slug": "malkoch" }, { "key": "\u041C\u0430\u043B\u043E \u0411\u0443\u0447\u0438\u043D\u043E", "value": 41, "slug": "malo-buchino" }, { "key": "\u041C\u0430\u043B\u043E \u041A\u043E\u043D\u0430\u0440\u0435", "value": 127, "slug": "malo-konare" }, { "key": "\u041C\u0430\u043B\u043E \u041A\u0440\u0443\u0448\u0435\u0432\u043E", "value": 1, "slug": "malo-krushevo" }, { "key": "\u041C\u0430\u043B\u043E \u041F\u0435\u0449\u0435\u043D\u0435", "value": 1, "slug": "malo-peshchene" }, { "key": "\u041C\u0430\u043B\u043E \u0441\u0435\u043B\u043E", "value": 16, "slug": "malo-selo" }, { "key": "\u041C\u0430\u043B\u043E\u0433\u0440\u0430\u0434\u0435\u0446", "value": 1, "slug": "malogradec" }, { "key": "\u041C\u0430\u043B\u043E\u043C\u0438\u0440", "value": 41, "slug": "malomir" }, { "key": "\u041C\u0430\u043B\u043E\u043C\u0438\u0440\u043E\u0432\u043E", "value": 20, "slug": "malomirovo" }, { "key": "\u041C\u0430\u043B\u043E\u0440\u0430\u0434", "value": 23, "slug": "malorad" }, { "key": "\u041C\u0430\u043B\u0447\u0438\u043A\u0430", "value": 48, "slug": "malchika" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u0414\u0435\u0432\u0435\u0441\u0438\u043B", "value": 6, "slug": "malk-devesil" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u0434\u043E\u043B", "value": 1, "slug": "malk-dol" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u0438\u0437\u0432\u043E\u0440", "value": 37, "slug": "malk-izvor" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u043C\u0430\u043D\u0430\u0441\u0442\u0438\u0440", "value": 23, "slug": "malk-manastir" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u041F\u043E\u0440\u043E\u0432\u0435\u0446", "value": 12, "slug": "malk-porovec" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u041F\u0440\u0435\u0441\u043B\u0430\u0432\u0435\u0446", "value": 15, "slug": "malk-preslavec" }, { "key": "\u041C\u0430\u043B\u044A\u043A \u0447\u0430\u0440\u0434\u0430\u043A", "value": 20, "slug": "malk-chardak" }, { "key": "\u041C\u0430\u043C\u0430\u0440\u0447\u0435\u0432\u043E", "value": 17, "slug": "mamarchevo" }, { "key": "\u043C\u0430\u043D. \u0420\u0438\u043B\u0441\u043A\u0438 \u043C\u0430\u043D\u0430\u0441\u0442\u0438\u0440", "value": 2, "slug": "man.-rilski-manastir" }, { "key": "\u041C\u0430\u043D\u0430\u0441\u0442\u0438\u0440", "value": 23, "slug": "manastir" }, { "key": "\u041C\u0430\u043D\u0430\u0441\u0442\u0438\u0440\u0438\u0449\u0435", "value": 18, "slug": "manastirishche" }, { "key": "\u041C\u0430\u043D\u0430\u0441\u0442\u0438\u0440\u0441\u043A\u043E", "value": 7, "slug": "manastirsko" }, { "key": "\u041C\u0430\u043D\u0430\u0441\u0442\u0438\u0440\u0446\u0438", "value": 14, "slug": "manastirci" }, { "key": "\u041C\u0430\u043D\u0434\u0440\u0430", "value": 6, "slug": "mandra" }, { "key": "\u041C\u0430\u043D\u0434\u0440\u0438\u0446\u0430", "value": 3, "slug": "mandrica" }, { "key": "\u041C\u0430\u043D\u043E\u043B\u0435", "value": 105, "slug": "manole" }, { "key": "\u041C\u0430\u043D\u043E\u043B\u0438\u0447", "value": 38, "slug": "manolich" }, { "key": "\u041C\u0430\u043D\u043E\u043B\u043E\u0432\u043E", "value": 23, "slug": "manolovo" }, { "key": "\u041C\u0430\u043D\u043E\u043B\u0441\u043A\u043E \u041A\u043E\u043D\u0430\u0440\u0435", "value": 31, "slug": "manolsko-konare" }, { "key": "\u041C\u0430\u043D\u043E\u044F", "value": 1, "slug": "manoya" }, { "key": "\u041C\u0430\u0440\u0430\u0448", "value": 41, "slug": "marash" }, { "key": "\u041C\u0430\u0440\u0438\u043A\u043E\u0441\u0442\u0438\u043D\u043E\u0432\u043E", "value": 108, "slug": "marikostinovo" }, { "key": "\u041C\u0430\u0440\u0438\u043D\u043A\u0430", "value": 108, "slug": "marinka" }, { "key": "\u041C\u0430\u0440\u0438\u043D\u043E \u043F\u043E\u043B\u0435", "value": 24, "slug": "marino-pole" }, { "key": "\u041C\u0430\u0440\u0438\u0446\u0430", "value": 29, "slug": "marica" }, { "key": "\u041C\u0430\u0440\u043A\u043E\u0432\u043E", "value": 327, "slug": "markovo" }, { "key": "\u041C\u0430\u0440\u043A\u043E\u0432\u043E \u0440\u0430\u0432\u043D\u0438\u0449\u0435", "value": 1, "slug": "markovo-ravnishche" }, { "key": "\u041C\u0430\u0440\u0442\u0435\u043D", "value": 267, "slug": "marten" }, { "key": "\u041C\u0430\u0440\u0442\u0438\u043D\u043E\u0432\u043E", "value": 2, "slug": "martinovo" }, { "key": "\u041C\u0430\u0440\u0443\u043B\u0435\u0432\u043E", "value": 1, "slug": "marulevo" }, { "key": "\u041C\u0430\u0440\u0447\u0435\u0432\u043E", "value": 19, "slug": "marchevo" }, { "key": "\u041C\u0430\u0440\u0447\u0438\u043D\u043E", "value": 4, "slug": "marchino" }, { "key": "\u041C\u0430\u0440\u044F\u043D", "value": 6, "slug": "maryan" }, { "key": "\u041C\u0430\u0441\u043B\u0430\u0440\u0435\u0432\u043E", "value": 32, "slug": "maslarevo" }, { "key": "\u041C\u0430\u0441\u043B\u0438\u043D\u043E\u0432\u043E", "value": 9, "slug": "maslinovo" }, { "key": "\u041C\u0430\u0445\u0430\u043B\u0430\u0442\u0430", "value": 2, "slug": "mahalata" }, { "key": "\u041C\u0430\u0446\u0430", "value": 3, "slug": "maca" }, { "key": "\u041C\u0435\u0434\u0432\u0435\u043D", "value": 23, "slug": "medven" }, { "key": "\u041C\u0435\u0434\u0435\u0432\u0446\u0438", "value": 1, "slug": "medevci" }, { "key": "\u041C\u0435\u0434\u0435\u043D \u043A\u043B\u0430\u0434\u0435\u043D\u0435\u0446", "value": 11, "slug": "meden-kladenec" }, { "key": "\u041C\u0435\u0434\u0435\u043D\u0438 \u043F\u043E\u043B\u044F\u043D\u0438", "value": 20, "slug": "medeni-polyani" }, { "key": "\u041C\u0435\u0434\u0435\u0448\u0435\u0432\u0446\u0438", "value": 1, "slug": "medeshevci" }, { "key": "\u041C\u0435\u0434\u043A\u043E\u0432\u0435\u0446", "value": 60, "slug": "medkovec" }, { "key": "\u041C\u0435\u0434\u043D\u0438\u043A\u0430\u0440\u043E\u0432\u043E", "value": 11, "slug": "mednikarovo" }, { "key": "\u041C\u0435\u0434\u043E\u0432\u0435\u043D\u0435", "value": 8, "slug": "medovene" }, { "key": "\u041C\u0435\u0434\u043E\u0432\u0435\u0446", "value": 53, "slug": "medovec" }, { "key": "\u041C\u0435\u0434\u043E\u0432\u0438\u043D\u0430", "value": 14, "slug": "medovina" }, { "key": "\u041C\u0435\u0434\u043E\u0432\u043D\u0438\u0446\u0430", "value": 4, "slug": "medovnica" }, { "key": "\u041C\u0435\u0434\u043E\u0432\u043E", "value": 50, "slug": "medovo" }, { "key": "\u041C\u0435\u0436\u0434\u0430", "value": 4, "slug": "mezhda" }, { "key": "\u041C\u0435\u0436\u0434\u0435\u043D", "value": 4, "slug": "mezhden" }, { "key": "\u041C\u0435\u0436\u0434\u0435\u043D\u0438", "value": 1, "slug": "mezhdeni" }, { "key": "\u041C\u0435\u0437\u0434\u0440\u0430", "value": 717, "slug": "mezdra" }, { "key": "\u041C\u0435\u0437\u0434\u0440\u0435\u044F", "value": 10, "slug": "mezdreya" }, { "key": "\u041C\u0435\u0437\u0435\u043A", "value": 23, "slug": "mezek" }, { "key": "\u041C\u0435\u043B\u043D\u0438\u043A", "value": 37, "slug": "melnik" }, { "key": "\u041C\u0435\u043B\u043D\u0438\u0446\u0430", "value": 23, "slug": "melnica" }, { "key": "\u041C\u0435\u043B\u044F\u043D\u0435", "value": 11, "slug": "melyane" }, { "key": "\u041C\u0435\u043D\u0433\u0438\u0448\u0435\u0432\u043E", "value": 16, "slug": "mengishevo" }, { "key": "\u041C\u0435\u043D\u0434\u043E\u0432\u043E", "value": 2, "slug": "mendovo" }, { "key": "\u041C\u0435\u043D\u0435\u043D\u043A\u044C\u043E\u0432\u043E", "value": 25, "slug": "menenkovo" }, { "key": "\u041C\u0435\u0440\u0434\u0430\u043D\u044F", "value": 33, "slug": "merdanya" }, { "key": "\u041C\u0435\u0440\u0438\u0447\u043B\u0435\u0440\u0438", "value": 56, "slug": "merichleri" }, { "key": "\u041C\u0435\u0441\u0442\u0430", "value": 5, "slug": "mesta" }, { "key": "\u041C\u0435\u0442\u043B\u0438\u0447\u0438\u043D\u0430", "value": 17, "slug": "metlichina" }, { "key": "\u041C\u0435\u0442\u043E\u0434\u0438\u0435\u0432\u043E", "value": 27, "slug": "metodievo" }, { "key": "\u041C\u0435\u0447\u043A\u0430", "value": 37, "slug": "mechka" }, { "key": "\u041C\u0435\u0447\u043A\u0430\u0440\u0435\u0432\u043E", "value": 22, "slug": "mechkarevo" }, { "key": "\u041C\u0435\u0449\u0438\u0446\u0430", "value": 46, "slug": "meshchica" }, { "key": "\u041C\u0438\u0437\u0438\u044F", "value": 119, "slug": "miziya" }, { "key": "\u041C\u0438\u0439\u043A\u043E\u0432\u0446\u0438", "value": 5, "slug": "miykovci" }, { "key": "\u041C\u0438\u043A\u0440\u0435", "value": 12, "slug": "mikre" }, { "key": "\u041C\u0438\u043A\u0440\u0435\u0432\u043E", "value": 89, "slug": "mikrevo" }, { "key": "\u041C\u0438\u043B\u0430\u0434\u0438\u043D\u043E\u0432\u043E", "value": 2, "slug": "miladinovo" }, { "key": "\u041C\u0438\u043B\u0430\u0434\u0438\u043D\u043E\u0432\u0446\u0438", "value": 40, "slug": "miladinovci" }, { "key": "\u041C\u0438\u043B\u0430\u043D\u043E\u0432\u043E", "value": 16, "slug": "milanovo" }, { "key": "\u041C\u0438\u043B\u0435\u0432\u043E", "value": 25, "slug": "milevo" }, { "key": "\u041C\u0438\u043B\u0435\u0432\u0446\u0438", "value": 2, "slug": "milevci" }, { "key": "\u041C\u0438\u043B\u043A\u043E\u0432\u0438\u0446\u0430", "value": 49, "slug": "milkovica" }, { "key": "\u041C\u0438\u043B\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "milkovci" }, { "key": "\u041C\u0438\u043B\u043E\u0441\u043B\u0430\u0432\u0446\u0438", "value": 2, "slug": "miloslavci" }, { "key": "\u041C\u0438\u043D\u0434\u044F", "value": 16, "slug": "mindya" }, { "key": "\u041C\u0438\u043D\u0435\u0432\u0446\u0438", "value": 1, "slug": "minevci" }, { "key": "\u041C\u0438\u043D\u0435\u0440\u0430\u043B\u043D\u0438 \u0431\u0430\u043D\u0438", "value": 145, "slug": "mineralni-bani" }, { "key": "\u041C\u0438\u043D\u0437\u0443\u0445\u0430\u0440", "value": 15, "slug": "minzuhar" }, { "key": "\u041C\u0438\u0440\u043A\u043E\u0432\u043E", "value": 60, "slug": "mirkovo" }, { "key": "\u041C\u0438\u0440\u043E\u0432\u0435\u0446", "value": 8, "slug": "mirovec" }, { "key": "\u041C\u0438\u0440\u043E\u0432\u043E", "value": 44, "slug": "mirovo" }, { "key": "\u041C\u0438\u0440\u043E\u0432\u0446\u0438", "value": 9, "slug": "mirovci" }, { "key": "\u041C\u0438\u0440\u043E\u0432\u044F\u043D\u0435", "value": 129, "slug": "mirovyane" }, { "key": "\u041C\u0438\u0440\u043E\u043B\u044E\u0431\u043E\u0432\u043E", "value": 10, "slug": "mirolyubovo" }, { "key": "\u041C\u0438\u0440\u044F\u043D\u0446\u0438", "value": 24, "slug": "miryanci" }, { "key": "\u041C\u0438\u0442\u0438\u043D\u043E", "value": 10, "slug": "mitino" }, { "key": "\u041C\u0438\u0442\u043E\u0432\u0441\u043A\u0430", "value": 7, "slug": "mitovska" }, { "key": "\u041C\u0438\u0442\u0440\u043E\u0432\u0446\u0438", "value": 5, "slug": "mitrovci" }, { "key": "\u041C\u0438\u0445\u0430\u0439\u043B\u043E\u0432\u043E", "value": 30, "slug": "mihaylovo" }, { "key": "\u041C\u0438\u0445\u0430\u043B\u0438\u0447", "value": 13, "slug": "mihalich" }, { "key": "\u041C\u0438\u0445\u0430\u043B\u043A\u043E\u0432\u043E", "value": 28, "slug": "mihalkovo" }, { "key": "\u041C\u0438\u0445\u0430\u043B\u0446\u0438", "value": 33, "slug": "mihalci" }, { "key": "\u041C\u0438\u0445\u0438\u043B\u0446\u0438", "value": 9, "slug": "mihilci" }, { "key": "\u041C\u0438\u0445\u043D\u0435\u0432\u043E", "value": 35, "slug": "mihnevo" }, { "key": "\u041C\u0438\u0447\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "michkovci" }, { "key": "\u041C\u0438\u0448\u0435\u0432\u0441\u043A\u043E", "value": 4, "slug": "mishevsko" }, { "key": "\u041C\u043B\u0430\u0434\u0430 \u0433\u0432\u0430\u0440\u0434\u0438\u044F", "value": 11, "slug": "mlada-gvardiya" }, { "key": "\u041C\u043B\u0430\u0434\u0435\u0436\u043A\u043E", "value": 8, "slug": "mladezhko" }, { "key": "\u041C\u043B\u0430\u0434\u0435\u043D", "value": 7, "slug": "mladen" }, { "key": "\u041C\u043B\u0430\u0434\u0438\u043D\u043E\u0432\u043E", "value": 7, "slug": "mladinovo" }, { "key": "\u041C\u043B\u0430\u0434\u043E\u0432\u043E", "value": 14, "slug": "mladovo" }, { "key": "\u041C\u043B\u0430\u043C\u043E\u043B\u043E\u0432\u043E", "value": 26, "slug": "mlamolovo" }, { "key": "\u041C\u043B\u0435\u043A\u0430\u0440\u0435\u0432\u043E", "value": 26, "slug": "mlekarevo" }, { "key": "\u041C\u043B\u0435\u0447\u0435\u0432\u043E", "value": 4, "slug": "mlechevo" }, { "key": "\u041C\u043B\u0435\u0447\u0438\u043D\u043E", "value": 15, "slug": "mlechino" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u0430", "value": 57, "slug": "mogila" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u0435\u0446", "value": 12, "slug": "mogilec" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u0438\u043D\u043E", "value": 13, "slug": "mogilino" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u0438\u0446\u0430", "value": 30, "slug": "mogilica" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u0438\u0449\u0435", "value": 6, "slug": "mogilishche" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u043E\u0432\u043E", "value": 11, "slug": "mogilovo" }, { "key": "\u041C\u043E\u0433\u0438\u043B\u044F\u043D\u0435", "value": 5, "slug": "mogilyane" }, { "key": "\u041C\u043E\u043A\u0440\u0435\u043D", "value": 27, "slug": "mokren" }, { "key": "\u041C\u043E\u043A\u0440\u0435\u0448", "value": 37, "slug": "mokresh" }, { "key": "\u041C\u043E\u043A\u0440\u0438\u0449\u0435", "value": 60, "slug": "mokrishche" }, { "key": "\u041C\u043E\u043C\u0438\u043D \u043F\u0440\u043E\u0445\u043E\u0434", "value": 57, "slug": "momin-prohod" }, { "key": "\u041C\u043E\u043C\u0438\u043D \u0441\u0431\u043E\u0440", "value": 9, "slug": "momin-sbor" }, { "key": "\u041C\u043E\u043C\u0438\u043D\u0430 \u043A\u043B\u0438\u0441\u0443\u0440\u0430", "value": 52, "slug": "momina-klisura" }, { "key": "\u041C\u043E\u043C\u0438\u043D\u0430 \u0446\u044A\u0440\u043A\u0432\u0430", "value": 10, "slug": "momina-crkva" }, { "key": "\u041C\u043E\u043C\u0438\u043D\u043E", "value": 11, "slug": "momino" }, { "key": "\u041C\u043E\u043C\u0438\u043D\u043E \u0441\u0435\u043B\u043E", "value": 24, "slug": "momino-selo" }, { "key": "\u041C\u043E\u043C\u0438\u043D\u0441\u043A\u043E", "value": 13, "slug": "mominsko" }, { "key": "\u041C\u043E\u043C\u043A\u043E\u0432\u043E", "value": 30, "slug": "momkovo" }, { "key": "\u041C\u043E\u043C\u0447\u0438\u043B\u0433\u0440\u0430\u0434", "value": 713, "slug": "momchilgrad" }, { "key": "\u041C\u043E\u043C\u0447\u0438\u043B\u043E\u0432\u043E", "value": 12, "slug": "momchilovo" }, { "key": "\u041C\u043E\u043C\u0447\u0438\u043B\u043E\u0432\u0446\u0438", "value": 77, "slug": "momchilovci" }, { "key": "\u041C\u041E\u041D\u0410\u041A\u041E,", "value": 1, "slug": "monako" }, { "key": "\u041C\u043E\u043D\u0442\u0430\u043D\u0430", "value": 3769, "slug": "montana" }, { "key": "\u041C\u043E\u0440\u0430\u0432\u0430", "value": 16, "slug": "morava" }, { "key": "\u041C\u043E\u0440\u0430\u0432\u0438\u0446\u0430", "value": 32, "slug": "moravica" }, { "key": "\u041C\u043E\u0440\u0430\u0432\u043A\u0430", "value": 5, "slug": "moravka" }, { "key": "\u041C\u043E\u0440\u0442\u0430\u0433\u043E\u043D\u043E\u0432\u043E", "value": 18, "slug": "mortagonovo" }, { "key": "\u041C\u043E\u0441\u043A\u043E\u0432\u0435\u0446", "value": 2, "slug": "moskovec" }, { "key": "\u041C\u043E\u0441\u043E\u043C\u0438\u0449\u0435", "value": 10, "slug": "mosomishche" }, { "key": "\u041C\u043E\u0441\u0442", "value": 25, "slug": "most" }, { "key": "\u041C\u043E\u0441\u0442\u0438\u0447", "value": 7, "slug": "mostich" }, { "key": "\u041C\u043E\u0441\u0442\u043E\u0432\u043E", "value": 1, "slug": "mostovo" }, { "key": "\u041C\u043E\u0449\u0430\u043D\u0435\u0446", "value": 3, "slug": "moshchanec" }, { "key": "\u041C\u0440\u0430\u043A\u0435\u0442\u0438\u043D\u0446\u0438", "value": 1, "slug": "mraketinci" }, { "key": "\u041C\u0440\u0430\u043C\u043E\u0440", "value": 187, "slug": "mramor" }, { "key": "\u041C\u0440\u0430\u043C\u043E\u0440\u0435\u043D", "value": 31, "slug": "mramoren" }, { "key": "\u041C\u0440\u0430\u0447\u0435\u043D\u0438\u043A", "value": 4, "slug": "mrachenik" }, { "key": "\u041C\u0440\u0435\u0436\u0438\u0447\u043A\u043E", "value": 20, "slug": "mrezhichko" }, { "key": "\u041C\u0443\u0433\u043B\u0430", "value": 9, "slug": "mugla" }, { "key": "\u041C\u0443\u0437\u0433\u0430", "value": 4, "slug": "muzga" }, { "key": "\u041C\u0443\u043B\u0434\u0430\u0432\u0430", "value": 57, "slug": "muldava" }, { "key": "\u041C\u0443\u0440\u0433\u043E\u0432\u043E", "value": 15, "slug": "murgovo" }, { "key": "\u041C\u0443\u0440\u0435\u043D\u043E", "value": 3, "slug": "mureno" }, { "key": "\u041C\u0443\u0440\u0441\u0430\u043B\u0435\u0432\u043E", "value": 15, "slug": "mursalevo" }, { "key": "\u041C\u0443\u0440\u0442\u0438\u043D\u0446\u0438", "value": 1, "slug": "murtinci" }, { "key": "\u041C\u0443\u0441\u0430\u0447\u0435\u0432\u043E", "value": 97, "slug": "musachevo" }, { "key": "\u041C\u0443\u0441\u0435\u043B\u0438\u0435\u0432\u043E", "value": 30, "slug": "muselievo" }, { "key": "\u041C\u0443\u0441\u0438\u043D\u0430", "value": 5, "slug": "musina" }, { "key": "\u041C\u0443\u0441\u043E\u043C\u0438\u0449\u0430", "value": 112, "slug": "musomishcha" }, { "key": "\u041C\u0443\u0441\u0442\u0440\u0430\u043A", "value": 10, "slug": "mustrak" }, { "key": "\u041C\u0443\u0445\u043E\u0432\u043E", "value": 1, "slug": "muhovo" }, { "key": "\u041C\u0443\u0446\u044F", "value": 2, "slug": "mucya" }, { "key": "\u041C\u044A\u0433\u043B\u0435\u043D", "value": 26, "slug": "mglen" }, { "key": "\u041C\u044A\u0433\u043B\u0435\u043D\u0435", "value": 1, "slug": "mglene" }, { "key": "\u041C\u044A\u0433\u043B\u0438\u0436", "value": 208, "slug": "mglizh" }, { "key": "\u041C\u044A\u0433\u043B\u0438\u0449\u0430", "value": 11, "slug": "mglishcha" }, { "key": "\u041C\u044A\u0434\u0440\u0435\u0432\u043E", "value": 25, "slug": "mdrevo" }, { "key": "\u041C\u044A\u0434\u0440\u0435\u0446", "value": 44, "slug": "mdrec" }, { "key": "\u041C\u044A\u0434\u0440\u0438\u043D\u043E", "value": 1, "slug": "mdrino" }, { "key": "\u041C\u044A\u0440\u0447\u0430\u0435\u0432\u043E", "value": 76, "slug": "mrchaevo" }, { "key": "\u041C\u044A\u0440\u0447\u0435\u0432\u043E", "value": 16, "slug": "mrchevo" }, { "key": "\u041C\u044A\u0442\u0435\u043D\u0438\u0446\u0430", "value": 5, "slug": "mtenica" }, { "key": "\u041D\u0430\u0432\u044A\u0441\u0435\u043D", "value": 5, "slug": "navsen" }, { "key": "\u041D\u0430\u0434\u0430\u0440\u0435\u0432\u043E", "value": 18, "slug": "nadarevo" }, { "key": "\u041D\u0430\u0434\u0435\u0436\u0434\u0435\u043D", "value": 11, "slug": "nadezhden" }, { "key": "\u041D\u0430\u0439\u0434\u0435\u043D \u0413\u0435\u0440\u043E\u0432\u043E", "value": 24, "slug": "nayden-gerovo" }, { "key": "\u041D\u0430\u0439\u0434\u0435\u043D\u043E\u0432\u043E", "value": 8, "slug": "naydenovo" }, { "key": "\u041D\u0430\u043D\u043E\u0432\u0438\u0446\u0430", "value": 22, "slug": "nanovica" }, { "key": "\u041D\u0430\u0440\u0435\u0447\u0435\u043D\u0441\u043A\u0438 \u0431\u0430\u043D\u0438", "value": 27, "slug": "narechenski-bani" }, { "key": "\u041D\u0430\u0441\u0430\u043B\u0435\u0432\u0446\u0438", "value": 2, "slug": "nasalevci" }, { "key": "\u041D\u0430\u0443\u043C", "value": 8, "slug": "naum" }, { "key": "\u041D\u0430\u0443\u0447\u0435\u043D\u0435", "value": 4, "slug": "nauchene" }, { "key": "\u041D\u0430\u0446\u043E\u0432\u0446\u0438", "value": 3, "slug": "nacovci" }, { "key": "\u041D\u0435\u0432\u0435\u0441\u0442\u0438\u043D\u043E", "value": 47, "slug": "nevestino" }, { "key": "\u041D\u0435\u0432\u0448\u0430", "value": 19, "slug": "nevsha" }, { "key": "\u041D\u0435\u0433\u043E\u0432\u0430\u043D", "value": 96, "slug": "negovan" }, { "key": "\u041D\u0435\u0433\u043E\u0432\u0430\u043D\u043E\u0432\u0446\u0438", "value": 14, "slug": "negovanovci" }, { "key": "\u041D\u0435\u0433\u043E\u0432\u0430\u043D\u0446\u0438", "value": 30, "slug": "negovanci" }, { "key": "\u041D\u0435\u0433\u0443\u0448\u0435\u0432\u043E", "value": 6, "slug": "negushevo" }, { "key": "\u041D\u0435\u0434\u0430\u043D", "value": 22, "slug": "nedan" }, { "key": "\u041D\u0435\u0434\u0435\u043B\u0435\u0432\u043E", "value": 10, "slug": "nedelevo" }, { "key": "\u041D\u0435\u0434\u0435\u043B\u0438\u043D\u043E", "value": 237, "slug": "nedelino" }, { "key": "\u041D\u0435\u0434\u0435\u043B\u043A\u043E\u0432\u0430 \u0413\u0440\u0430\u0449\u0438\u0446\u0430", "value": 1, "slug": "nedelkova-grashchica" }, { "key": "\u041D\u0435\u0434\u043E\u043A\u043B\u0430\u043D", "value": 6, "slug": "nedoklan" }, { "key": "\u041D\u0435\u0434\u044F\u043B\u0441\u043A\u043E", "value": 15, "slug": "nedyalsko" }, { "key": "\u041D\u0435\u0439\u043A\u043E\u0432\u043E", "value": 12, "slug": "neykovo" }, { "key": "\u041D\u0435\u043D\u043A\u043E\u0432\u043E", "value": 2, "slug": "nenkovo" }, { "key": "\u041D\u0435\u043D\u043E\u0432\u043E", "value": 4, "slug": "nenovo" }, { "key": "\u041D\u0435\u043E\u0444\u0438\u0442 \u0411\u043E\u0437\u0432\u0435\u043B\u0438\u0435\u0432\u043E", "value": 13, "slug": "neofit-bozvelievo" }, { "key": "\u041D\u0435\u043E\u0444\u0438\u0442 \u0420\u0438\u043B\u0441\u043A\u0438", "value": 42, "slug": "neofit-rilski" }, { "key": "\u041D\u0435\u0441\u0435\u0431\u044A\u0440", "value": 4250, "slug": "nesebr" }, { "key": "\u041D\u0435\u0441\u043B\u0430", "value": 3, "slug": "nesla" }, { "key": "\u041D\u0435\u0444\u0435\u043B\u0430", "value": 22, "slug": "nefela" }, { "key": "\u041D\u0435\u0448\u0435\u0432\u0446\u0438", "value": 1, "slug": "neshevci" }, { "key": "\u041D\u0438\u0432\u044F\u043D\u0438\u043D", "value": 3, "slug": "nivyanin" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u0430 \u041A\u043E\u0437\u043B\u0435\u0432\u043E", "value": 20, "slug": "nikola-kozlevo" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u0430\u0435\u0432\u043A\u0430", "value": 30, "slug": "nikolaevka" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u0430\u0435\u0432\u043E", "value": 121, "slug": "nikolaevo" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u0438\u0447\u0435\u0432\u0446\u0438", "value": 11, "slug": "nikolichevci" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u043E\u0432\u043E", "value": 154, "slug": "nikolovo" }, { "key": "\u041D\u0438\u043A\u043E\u043B\u043E\u0432\u0446\u0438", "value": 1, "slug": "nikolovci" }, { "key": "\u041D\u0438\u043A\u043E\u043F\u043E\u043B", "value": 130, "slug": "nikopol" }, { "key": "\u041D\u0438\u043A\u0443\u0434\u0438\u043D", "value": 1, "slug": "nikudin" }, { "key": "\u041D\u0438\u043A\u044E\u043F", "value": 21, "slug": "nikyup" }, { "key": "\u041D\u0438\u0441\u043E\u0432\u043E", "value": 14, "slug": "nisovo" }, { "key": "\u041D\u043E\u0432\u0430 \u0431\u044F\u043B\u0430 \u0440\u0435\u043A\u0430", "value": 14, "slug": "nova-byala-reka" }, { "key": "\u041D\u043E\u0432\u0430 \u0412\u044A\u0440\u0431\u043E\u0432\u043A\u0430", "value": 40, "slug": "nova-vrbovka" }, { "key": "\u041D\u043E\u0432\u0430 \u0417\u0430\u0433\u043E\u0440\u0430", "value": 1392, "slug": "nova-zagora" }, { "key": "\u041D\u043E\u0432\u0430 \u041A\u0430\u043C\u0435\u043D\u0430", "value": 17, "slug": "nova-kamena" }, { "key": "\u041D\u043E\u0432\u0430 \u043B\u0438\u0432\u0430\u0434\u0430", "value": 1, "slug": "nova-livada" }, { "key": "\u041D\u043E\u0432\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 146, "slug": "nova-mahala" }, { "key": "\u041D\u043E\u0432\u0430 \u041D\u0430\u0434\u0435\u0436\u0434\u0430", "value": 6, "slug": "nova-nadezhda" }, { "key": "\u041D\u043E\u0432\u0430 \u041F\u043E\u043F\u0438\u043D\u0430", "value": 3, "slug": "nova-popina" }, { "key": "\u041D\u043E\u0432\u0430 \u0427\u0435\u0440\u043D\u0430", "value": 48, "slug": "nova-cherna" }, { "key": "\u041D\u043E\u0432\u0430 \u0428\u0438\u043F\u043A\u0430", "value": 6, "slug": "nova-shipka" }, { "key": "\u041D\u043E\u0432\u0430\u043A\u043E\u0432\u043E", "value": 17, "slug": "novakovo" }, { "key": "\u041D\u043E\u0432\u0430\u043A\u043E\u0432\u0446\u0438", "value": 10, "slug": "novakovci" }, { "key": "\u041D\u043E\u0432\u0430\u0447\u0435\u0432\u043E", "value": 20, "slug": "novachevo" }, { "key": "\u041D\u043E\u0432\u0430\u0447\u0435\u043D\u0435", "value": 58, "slug": "novachene" }, { "key": "\u041D\u043E\u0432\u0433\u0440\u0430\u0434", "value": 23, "slug": "novgrad" }, { "key": "\u041D\u043E\u0432\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 4, "slug": "novi-izvor" }, { "key": "\u041D\u043E\u0432\u0438 \u0418\u0441\u043A\u044A\u0440", "value": 848, "slug": "novi-iskr" }, { "key": "\u041D\u043E\u0432\u0438 \u043F\u0430\u0437\u0430\u0440", "value": 838, "slug": "novi-pazar" }, { "key": "\u041D\u043E\u0432\u0438 \u0445\u0430\u043D", "value": 182, "slug": "novi-han" }, { "key": "\u041D\u043E\u0432\u0438 \u0447\u0438\u0444\u043B\u0438\u043A", "value": 4, "slug": "novi-chiflik" }, { "key": "\u041D\u043E\u0432\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 9, "slug": "novo-gradishche" }, { "key": "\u041D\u043E\u0432\u043E \u0414\u0435\u043B\u0447\u0435\u0432\u043E", "value": 60, "slug": "novo-delchevo" }, { "key": "\u041D\u043E\u0432\u043E \u0416\u0435\u043B\u0435\u0437\u0430\u0440\u0435", "value": 3, "slug": "novo-zhelezare" }, { "key": "\u041D\u043E\u0432\u043E \u041A\u043E\u043D\u043E\u043C\u043B\u0430\u0434\u0438", "value": 2, "slug": "novo-konomladi" }, { "key": "\u041D\u043E\u0432\u043E \u041B\u0435\u0441\u043A\u0438", "value": 31, "slug": "novo-leski" }, { "key": "\u041D\u043E\u0432\u043E \u041E\u0440\u044F\u0445\u043E\u0432\u043E", "value": 16, "slug": "novo-oryahovo" }, { "key": "\u041D\u043E\u0432\u043E \u041F\u0430\u043D\u0438\u0447\u0430\u0440\u0435\u0432\u043E", "value": 32, "slug": "novo-panicharevo" }, { "key": "\u041D\u043E\u0432\u043E \u0441\u0435\u043B\u043E", "value": 183, "slug": "novo-selo" }, { "key": "\u041D\u043E\u0432\u043E \u0425\u043E\u0434\u0436\u043E\u0432\u043E", "value": 2, "slug": "novo-hodzhovo" }, { "key": "\u041D\u043E\u0432\u043E \u042F\u043D\u043A\u043E\u0432\u043E", "value": 1, "slug": "novo-yankovo" }, { "key": "\u041D\u043E\u0432\u043E\u0441\u0435\u043B", "value": 20, "slug": "novosel" }, { "key": "\u041D\u043E\u0432\u043E\u0441\u0435\u043B\u0435\u0446", "value": 31, "slug": "novoselec" }, { "key": "\u041D\u043E\u0432\u043E\u0441\u0435\u043B\u0446\u0438", "value": 27, "slug": "novoselci" }, { "key": "\u041D\u043E\u0435\u0432\u0446\u0438", "value": 11, "slug": "noevci" }, { "key": "\u041D\u043E\u0436\u0430\u0440\u0435\u0432\u043E", "value": 14, "slug": "nozharevo" }, { "key": "\u041D\u043E\u0436\u0430\u0440\u043E\u0432\u043E", "value": 5, "slug": "nozharovo" }, { "key": "\u041E\u0431\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0435", "value": 23, "slug": "obedinenie" }, { "key": "\u041E\u0431\u0437\u043E\u0440", "value": 336, "slug": "obzor" }, { "key": "\u041E\u0431\u0438\u0434\u0438\u043C", "value": 1, "slug": "obidim" }, { "key": "\u041E\u0431\u0438\u0442\u0435\u043B", "value": 14, "slug": "obitel" }, { "key": "\u041E\u0431\u043D\u043E\u0432\u0430", "value": 62, "slug": "obnova" }, { "key": "\u041E\u0431\u043E\u0440\u0438\u0449\u0435", "value": 27, "slug": "oborishche" }, { "key": "\u041E\u0431\u0440\u0435\u0442\u0435\u043D\u0438\u043A", "value": 44, "slug": "obretenik" }, { "key": "\u041E\u0431\u0440\u043E\u0447\u0438\u0449\u0435", "value": 183, "slug": "obrochishche" }, { "key": "\u041E\u0431\u0440\u0443\u0447\u0438\u0449\u0435", "value": 74, "slug": "obruchishche" }, { "key": "\u041E\u0432\u0435\u043D", "value": 25, "slug": "oven" }, { "key": "\u041E\u0432\u043E\u0449\u0430\u0440\u0446\u0438", "value": 2, "slug": "ovoshcharci" }, { "key": "\u041E\u0432\u043E\u0449\u043D\u0438\u043A", "value": 87, "slug": "ovoshchnik" }, { "key": "\u041E\u0432\u0447\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 35, "slug": "ovcha-mogila" }, { "key": "\u041E\u0432\u0447\u0430\u0433\u0430", "value": 6, "slug": "ovchaga" }, { "key": "\u041E\u0432\u0447\u0430\u0440\u0438", "value": 4, "slug": "ovchari" }, { "key": "\u041E\u0432\u0447\u0430\u0440\u043E\u0432\u043E", "value": 46, "slug": "ovcharovo" }, { "key": "\u041E\u0432\u0447\u0430\u0440\u0446\u0438", "value": 42, "slug": "ovcharci" }, { "key": "\u041E\u0432\u0447\u0435\u043F\u043E\u043B\u0446\u0438", "value": 17, "slug": "ovchepolci" }, { "key": "\u041E\u0432\u0447\u0438 \u043A\u043B\u0430\u0434\u0435\u043D\u0435\u0446", "value": 12, "slug": "ovchi-kladenec" }, { "key": "\u041E\u0433\u043B\u0435\u0434", "value": 3, "slug": "ogled" }, { "key": "\u041E\u0433\u043D\u0435\u043D", "value": 3, "slug": "ognen" }, { "key": "\u041E\u0433\u043D\u044F\u043D\u043E\u0432\u043E", "value": 185, "slug": "ognyanovo" }, { "key": "\u041E\u0433\u0440\u0430\u0434\u043D\u0430", "value": 1, "slug": "ogradna" }, { "key": "\u041E\u0434\u0440\u0430\u043D\u0438\u0446\u0430", "value": 2, "slug": "odranica" }, { "key": "\u041E\u0434\u0440\u0438\u043D\u0446\u0438", "value": 14, "slug": "odrinci" }, { "key": "\u041E\u0434\u044A\u0440\u043D\u0435", "value": 28, "slug": "odrne" }, { "key": "\u041E\u0434\u044A\u0440\u0446\u0438", "value": 11, "slug": "odrci" }, { "key": "\u041E\u043A\u043E\u043F", "value": 16, "slug": "okop" }, { "key": "\u041E\u043A\u043E\u0440\u0448", "value": 27, "slug": "okorsh" }, { "key": "\u041E\u043C\u0430\u043D", "value": 5, "slug": "oman" }, { "key": "\u041E\u043C\u0430\u0440\u0447\u0435\u0432\u043E", "value": 18, "slug": "omarchevo" }, { "key": "\u041E\u043C\u0443\u0440\u0442\u0430\u0433", "value": 552, "slug": "omurtag" }, { "key": "\u041E\u043D\u043E\u0433\u0443\u0440", "value": 4, "slug": "onogur" }, { "key": "\u041E\u043F\u0430\u043A\u0430", "value": 69, "slug": "opaka" }, { "key": "\u041E\u043F\u0430\u043D", "value": 16, "slug": "opan" }, { "key": "\u041E\u043F\u0430\u043D\u0435\u0446", "value": 57, "slug": "opanec" }, { "key": "\u041E\u043F\u0438\u0446\u0432\u0435\u0442", "value": 26, "slug": "opicvet" }, { "key": "\u041E\u043F\u043B\u0435\u0442\u043D\u044F", "value": 1, "slug": "opletnya" }, { "key": "\u041E\u043F\u044A\u043B\u0447\u0435\u043D\u0435\u0446", "value": 13, "slug": "oplchenec" }, { "key": "\u041E\u043F\u044A\u043B\u0447\u0435\u043D\u0441\u043A\u043E", "value": 36, "slug": "oplchensko" }, { "key": "\u041E\u0440\u0435\u0445", "value": 1, "slug": "oreh" }, { "key": "\u041E\u0440\u0435\u0445\u043E\u0432\u0438\u0446\u0430", "value": 46, "slug": "orehovica" }, { "key": "\u041E\u0440\u0435\u0445\u043E\u0432\u043E", "value": 8, "slug": "orehovo" }, { "key": "\u041E\u0440\u0435\u0448", "value": 35, "slug": "oresh" }, { "key": "\u041E\u0440\u0435\u0448\u0430\u043A", "value": 163, "slug": "oreshak" }, { "key": "\u041E\u0440\u0435\u0448\u0435", "value": 9, "slug": "oreshe" }, { "key": "\u041E\u0440\u0435\u0448\u0435\u043D\u0435", "value": 18, "slug": "oreshene" }, { "key": "\u041E\u0440\u0435\u0448\u0435\u0446", "value": 33, "slug": "oreshec" }, { "key": "\u041E\u0440\u0435\u0448\u043D\u0438\u043A", "value": 15, "slug": "oreshnik" }, { "key": "\u041E\u0440\u0435\u0448\u043D\u0438\u0446\u0430", "value": 2, "slug": "oreshnica" }, { "key": "\u041E\u0440\u0438\u0437\u0430\u0440\u0435", "value": 92, "slug": "orizare" }, { "key": "\u041E\u0440\u0438\u0437\u0430\u0440\u0438", "value": 80, "slug": "orizari" }, { "key": "\u041E\u0440\u0438\u0437\u043E\u0432\u043E", "value": 25, "slug": "orizovo" }, { "key": "\u041E\u0440\u043B\u0438\u043D\u0446\u0438", "value": 9, "slug": "orlinci" }, { "key": "\u041E\u0440\u043B\u0438\u0446\u0430", "value": 2, "slug": "orlica" }, { "key": "\u041E\u0440\u043B\u043E\u0432 \u0434\u043E\u043B", "value": 5, "slug": "orlov-dol" }, { "key": "\u041E\u0440\u043B\u043E\u0432\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 11, "slug": "orlova-mogila" }, { "key": "\u041E\u0440\u043B\u043E\u0432\u0435\u0446", "value": 18, "slug": "orlovec" }, { "key": "\u041E\u0440\u043B\u043E\u0432\u043E", "value": 25, "slug": "orlovo" }, { "key": "\u041E\u0440\u043B\u043E\u0432\u0446\u0438", "value": 3, "slug": "orlovci" }, { "key": "\u041E\u0440\u043B\u044F\u043A", "value": 27, "slug": "orlyak" }, { "key": "\u041E\u0440\u043B\u044F\u043D\u0435", "value": 1, "slug": "orlyane" }, { "key": "\u041E\u0440\u0446\u0435\u0432\u043E", "value": 6, "slug": "orcevo" }, { "key": "\u041E\u0440\u044F\u0445\u043E\u0432\u0435\u0446", "value": 24, "slug": "oryahovec" }, { "key": "\u041E\u0440\u044F\u0445\u043E\u0432\u0438\u0446\u0430", "value": 18, "slug": "oryahovica" }, { "key": "\u041E\u0440\u044F\u0445\u043E\u0432\u043E", "value": 182, "slug": "oryahovo" }, { "key": "\u041E\u0441\u0435\u043B\u043D\u0430", "value": 13, "slug": "oselna" }, { "key": "\u041E\u0441\u0435\u043D", "value": 11, "slug": "osen" }, { "key": "\u041E\u0441\u0435\u043D\u0435\u0446", "value": 17, "slug": "osenec" }, { "key": "\u041E\u0441\u0435\u043D\u043E\u0432\u0435\u0446", "value": 4, "slug": "osenovec" }, { "key": "\u041E\u0441\u0435\u043D\u043E\u0432\u043B\u0430\u0433", "value": 6, "slug": "osenovlag" }, { "key": "\u041E\u0441\u0435\u043D\u043E\u0432\u043E", "value": 55, "slug": "osenovo" }, { "key": "\u041E\u0441\u0435\u0442\u0435\u043D\u043E\u0432\u043E", "value": 28, "slug": "osetenovo" }, { "key": "\u041E\u0441\u0438\u043A\u043E\u0432\u0438\u0446\u0430", "value": 17, "slug": "osikovica" }, { "key": "\u041E\u0441\u0438\u043A\u043E\u0432\u043E", "value": 31, "slug": "osikovo" }, { "key": "\u041E\u0441\u0438\u043A\u043E\u0432\u0441\u043A\u0430 \u041B\u0430\u043A\u0430\u0432\u0438\u0446\u0430", "value": 7, "slug": "osikovska-lakavica" }, { "key": "\u041E\u0441\u0438\u043D\u0430", "value": 14, "slug": "osina" }, { "key": "\u041E\u0441\u043B\u0435\u043D \u041A\u0440\u0438\u0432\u043E\u0434\u043E\u043B", "value": 1, "slug": "oslen-krivodol" }, { "key": "\u041E\u0441\u043C\u0430\u0440", "value": 22, "slug": "osmar" }, { "key": "\u041E\u0441\u043E\u0438\u0446\u0430", "value": 21, "slug": "osoica" }, { "key": "\u041E\u0441\u0442\u0440\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 7, "slug": "ostra-mogila" }, { "key": "\u041E\u0441\u0442\u0440\u0435\u0446", "value": 8, "slug": "ostrec" }, { "key": "\u041E\u0441\u0442\u0440\u0438\u0446\u0430", "value": 22, "slug": "ostrica" }, { "key": "\u041E\u0441\u0442\u0440\u043E\u0432", "value": 17, "slug": "ostrov" }, { "key": "\u041E\u0441\u0442\u0440\u043E\u0432\u0435\u0446", "value": 2, "slug": "ostrovec" }, { "key": "\u041E\u0441\u0442\u0440\u043E\u0432\u0438\u0446\u0430", "value": 5, "slug": "ostrovica" }, { "key": "\u041E\u0441\u0442\u0440\u043E\u0432\u043E", "value": 67, "slug": "ostrovo" }, { "key": "\u041E\u0441\u0442\u0440\u043E\u0432\u0447\u0435", "value": 5, "slug": "ostrovche" }, { "key": "\u041E\u0441\u0442\u044A\u0440 \u043A\u0430\u043C\u044A\u043A", "value": 3, "slug": "ostr-kamk" }, { "key": "\u041E\u0442\u0435\u0446 \u041A\u0438\u0440\u0438\u043B\u043E\u0432\u043E", "value": 9, "slug": "otec-kirilovo" }, { "key": "\u041E\u0442\u0435\u0446 \u041F\u0430\u0438\u0441\u0438\u0435\u0432\u043E", "value": 4, "slug": "otec-paisievo" }, { "key": "\u041E\u0445\u043B\u044E\u0432\u0435\u0446", "value": 6, "slug": "ohlyuvec" }, { "key": "\u041E\u0445\u043E\u0434\u0435\u043D", "value": 9, "slug": "ohoden" }, { "key": "\u041E\u0445\u0440\u0438\u0434", "value": 12, "slug": "ohrid" }, { "key": "\u041E\u0447\u0438\u043D\u0434\u043E\u043B", "value": 1, "slug": "ochindol" }, { "key": "\u041E\u0447\u0443\u0448\u0430", "value": 1, "slug": "ochusha" }, { "key": "\u041E\u0448\u0430\u043D\u0438\u0442\u0435", "value": 1, "slug": "oshanite" }, { "key": "\u041E\u0449\u0430\u0432\u0430", "value": 2, "slug": "oshchava" }, { "key": "\u041F\u0430\u0432\u0435\u043B", "value": 20, "slug": "pavel" }, { "key": "\u041F\u0430\u0432\u0435\u043B \u0431\u0430\u043D\u044F", "value": 151, "slug": "pavel-banya" }, { "key": "\u041F\u0430\u0432\u0435\u043B\u0441\u043A\u043E", "value": 32, "slug": "pavelsko" }, { "key": "\u041F\u0430\u0432\u043B\u0438\u043A\u0435\u043D\u0438", "value": 839, "slug": "pavlikeni" }, { "key": "\u041F\u0430\u0432\u043E\u043B\u0447\u0435", "value": 12, "slug": "pavolche" }, { "key": "\u041F\u0430\u0434\u0435\u0448", "value": 13, "slug": "padesh" }, { "key": "\u041F\u0430\u0434\u0438\u043D\u0430", "value": 60, "slug": "padina" }, { "key": "\u041F\u0430\u0437\u0430\u0440\u0434\u0436\u0438\u043A", "value": 6976, "slug": "pazardzhik" }, { "key": "\u041F\u0430\u0437\u0430\u0440\u0446\u0438", "value": 3, "slug": "pazarci" }, { "key": "\u041F\u0430\u0438\u0441\u0438\u0435\u0432\u043E", "value": 34, "slug": "paisievo" }, { "key": "\u041F\u0430\u0438\u0441\u0438\u0439", "value": 11, "slug": "paisiy" }, { "key": "\u041F\u0430\u0439\u0434\u0443\u0448\u043A\u043E", "value": 5, "slug": "paydushko" }, { "key": "\u041F\u0430\u043B\u0430\u043C\u0430\u0440\u0446\u0430", "value": 55, "slug": "palamarca" }, { "key": "\u041F\u0430\u043B\u0430\u0442\u043E\u0432\u043E", "value": 3, "slug": "palatovo" }, { "key": "\u041F\u0430\u043B\u0430\u0443\u0437\u043E\u0432\u043E", "value": 7, "slug": "palauzovo" }, { "key": "\u041F\u0430\u043B\u0438\u043B\u0443\u043B\u0430", "value": 2, "slug": "palilula" }, { "key": "\u041F\u0430\u043B\u0438\u0446\u0438", "value": 8, "slug": "palici" }, { "key": "\u041F\u0430\u043C\u0438\u0434\u043E\u0432\u043E", "value": 17, "slug": "pamidovo" }, { "key": "\u041F\u0430\u043C\u0443\u043A\u0447\u0438\u0438", "value": 27, "slug": "pamukchii" }, { "key": "\u041F\u0430\u043D\u0430\u0433\u044E\u0440\u0438\u0449\u0435", "value": 1126, "slug": "panagyurishche" }, { "key": "\u041F\u0430\u043D\u0430\u0433\u044E\u0440\u0441\u043A\u0438 \u043A\u043E\u043B\u043E\u043D\u0438\u0438", "value": 4, "slug": "panagyurski-kolonii" }, { "key": "\u041F\u0430\u043D\u0430\u0439\u043E\u0442 \u0412\u043E\u043B\u043E\u0432\u043E", "value": 13, "slug": "panayot-volovo" }, { "key": "\u041F\u0430\u043D\u0430\u0439\u043E\u0442 \u0425\u0438\u0442\u043E\u0432\u043E", "value": 4, "slug": "panayot-hitovo" }, { "key": "\u041F\u0430\u043D\u0430\u0440\u0435\u0442\u043E\u0432\u0446\u0438", "value": 16, "slug": "panaretovci" }, { "key": "\u041F\u0430\u043D\u0438\u0446\u043E\u0432\u043E", "value": 11, "slug": "panicovo" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u0430\u0440\u0435\u0432\u043E", "value": 1, "slug": "panicharevo" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u0435\u0440\u0435\u0432\u043E", "value": 40, "slug": "panicherevo" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u0435\u0440\u0438", "value": 25, "slug": "panicheri" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u0438\u043D\u043E", "value": 1, "slug": "panichino" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u0438\u0449\u0435", "value": 4, "slug": "panichishche" }, { "key": "\u041F\u0430\u043D\u0438\u0447\u043A\u043E\u0432\u043E", "value": 13, "slug": "panichkovo" }, { "key": "\u041F\u0430\u043D\u0447\u0430\u0440\u0435\u0432\u043E", "value": 215, "slug": "pancharevo" }, { "key": "\u041F\u0430\u043D\u0447\u0435\u0432\u043E", "value": 2, "slug": "panchevo" }, { "key": "\u041F\u0430\u043F\u0440\u0430\u0442", "value": 6, "slug": "paprat" }, { "key": "\u041F\u0430\u0440\u0430\u043C\u0443\u043D", "value": 10, "slug": "paramun" }, { "key": "\u041F\u0430\u0440\u0438\u043B", "value": 1, "slug": "paril" }, { "key": "\u041F\u0430\u0440\u0442\u0438\u0437\u0430\u043D\u0438", "value": 28, "slug": "partizani" }, { "key": "\u041F\u0430\u0440\u0442\u0438\u0437\u0430\u043D\u0438\u043D", "value": 10, "slug": "partizanin" }, { "key": "\u041F\u0430\u0440\u0447\u043E\u0432\u0446\u0438", "value": 1, "slug": "parchovci" }, { "key": "\u041F\u0430\u0441\u043A\u0430\u043B\u0435\u0432\u0435\u0446", "value": 17, "slug": "paskalevec" }, { "key": "\u041F\u0430\u0441\u043A\u0430\u043B\u0435\u0432\u043E", "value": 26, "slug": "paskalevo" }, { "key": "\u041F\u0430\u0441\u0442\u0440\u0430", "value": 8, "slug": "pastra" }, { "key": "\u041F\u0430\u0441\u0442\u0443\u0445", "value": 1, "slug": "pastuh" }, { "key": "\u041F\u0430\u0442\u0430\u043B\u0435\u043D\u0438\u0446\u0430", "value": 64, "slug": "patalenica" }, { "key": "\u041F\u0430\u0442\u0438\u0446\u0430", "value": 6, "slug": "patica" }, { "key": "\u041F\u0430\u0442\u0440\u0435\u0448", "value": 10, "slug": "patresh" }, { "key": "\u041F\u0430\u0442\u0440\u0438\u0430\u0440\u0445 \u0415\u0432\u0442\u0438\u043C\u043E\u0432\u043E", "value": 8, "slug": "patriarh-evtimovo" }, { "key": "\u041F\u0430\u0443\u043D\u043E\u0432\u043E", "value": 2, "slug": "paunovo" }, { "key": "\u041F\u0430\u0448\u0438\u043D\u0446\u0438", "value": 4, "slug": "pashinci" }, { "key": "\u041F\u0430\u0448\u043E\u0432\u0438", "value": 10, "slug": "pashovi" }, { "key": "\u041F\u0435\u0432\u0435\u0446", "value": 4, "slug": "pevec" }, { "key": "\u041F\u0435\u0432\u0446\u0438\u0442\u0435", "value": 3, "slug": "pevcite" }, { "key": "\u041F\u0435\u0439\u043D\u0430", "value": 1, "slug": "peyna" }, { "key": "\u041F\u0435\u0439\u0447\u0438\u043D\u043E\u0432\u043E", "value": 14, "slug": "peychinovo" }, { "key": "\u041F\u0435\u043B\u0430\u0442\u0438\u043A\u043E\u0432\u043E", "value": 1, "slug": "pelatikovo" }, { "key": "\u041F\u0435\u043B\u0438\u043D", "value": 5, "slug": "pelin" }, { "key": "\u041F\u0435\u043B\u0438\u0448\u0430\u0442", "value": 13, "slug": "pelishat" }, { "key": "\u041F\u0435\u043D\u044C\u043E\u0432\u043E", "value": 5, "slug": "penovo" }, { "key": "\u041F\u0435\u043F\u0435\u043B\u0438\u043D\u0430", "value": 3, "slug": "pepelina" }, { "key": "\u041F\u0435\u043F\u0435\u043B\u0438\u0449\u0435", "value": 8, "slug": "pepelishche" }, { "key": "\u041F\u0435\u0440\u0438\u043B\u043E\u0432\u0435\u0446", "value": 1, "slug": "perilovec" }, { "key": "\u041F\u0435\u0440\u043D\u0438\u043A", "value": 6704, "slug": "pernik" }, { "key": "\u041F\u0435\u0440\u043F\u0435\u0440\u0435\u043A", "value": 28, "slug": "perperek" }, { "key": "\u041F\u0435\u0440\u0443\u0449\u0438\u0446\u0430", "value": 246, "slug": "perushchica" }, { "key": "\u041F\u0435\u0441\u043D\u043E\u043F\u043E\u0439", "value": 11, "slug": "pesnopoy" }, { "key": "\u041F\u0435\u0442 \u043A\u043B\u0430\u0434\u0435\u043D\u0446\u0438", "value": 7, "slug": "pet-kladenci" }, { "key": "\u041F\u0435\u0442 \u043C\u043E\u0433\u0438\u043B\u0438", "value": 48, "slug": "pet-mogili" }, { "key": "\u041F\u0435\u0442\u0435\u043B\u043E\u0432\u043E", "value": 4, "slug": "petelovo" }, { "key": "\u041F\u0435\u0442\u043A\u043E \u041A\u0430\u0440\u0430\u0432\u0435\u043B\u043E\u0432\u043E", "value": 47, "slug": "petko-karavelovo" }, { "key": "\u041F\u0435\u0442\u043A\u043E \u0421\u043B\u0430\u0432\u0435\u0439\u043A\u043E\u0432", "value": 31, "slug": "petko-slaveykov" }, { "key": "\u041F\u0435\u0442\u043A\u043E\u0432\u043E", "value": 37, "slug": "petkovo" }, { "key": "\u041F\u0435\u0442\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "petkovci" }, { "key": "\u041F\u0435\u0442\u043B\u0435\u0448\u043A\u043E\u0432\u043E", "value": 7, "slug": "petleshkovo" }, { "key": "\u041F\u0435\u0442\u043B\u0438\u043D\u043E", "value": 10, "slug": "petlino" }, { "key": "\u041F\u0435\u0442\u043E\u043A\u043B\u0430\u0434\u0435\u043D\u0446\u0438", "value": 7, "slug": "petokladenci" }, { "key": "\u041F\u0435\u0442\u0440\u0435\u0432\u0435\u043D\u0435", "value": 11, "slug": "petrevene" }, { "key": "\u041F\u0435\u0442\u0440\u0435\u043B\u0438\u043A", "value": 8, "slug": "petrelik" }, { "key": "\u041F\u0435\u0442\u0440\u0438\u043D\u043E", "value": 5, "slug": "petrino" }, { "key": "\u041F\u0435\u0442\u0440\u0438\u0447", "value": 7119, "slug": "petrich" }, { "key": "\u041F\u0435\u0442\u0440\u043E\u0432 \u0434\u043E\u043B", "value": 25, "slug": "petrov-dol" }, { "key": "\u041F\u0435\u0442\u0440\u043E\u0432\u043E", "value": 16, "slug": "petrovo" }, { "key": "\u041F\u0435\u0442\u044A\u0440\u043D\u0438\u0446\u0430", "value": 25, "slug": "petrnica" }, { "key": "\u041F\u0435\u0442\u044A\u0440\u0447", "value": 142, "slug": "petrch" }, { "key": "\u041F\u0435\u0447\u0435\u043D\u0438\u0446\u0430", "value": 10, "slug": "pechenica" }, { "key": "\u041F\u0435\u0447\u0438\u043D\u0441\u043A\u0430", "value": 2, "slug": "pechinska" }, { "key": "\u041F\u0435\u0448\u0430\u043A\u043E\u0432\u043E", "value": 1, "slug": "peshakovo" }, { "key": "\u041F\u0435\u0449\u0435\u0440\u0430", "value": 1070, "slug": "peshchera" }, { "key": "\u041F\u0435\u0449\u0435\u0440\u043D\u0430", "value": 6, "slug": "peshcherna" }, { "key": "\u041F\u0435\u0449\u0435\u0440\u0441\u043A\u043E", "value": 20, "slug": "peshchersko" }, { "key": "\u041F\u0438\u043F\u0435\u0440\u0435\u0432\u043E", "value": 12, "slug": "piperevo" }, { "key": "\u041F\u0438\u043F\u0435\u0440\u0438\u0446\u0430", "value": 1, "slug": "piperica" }, { "key": "\u041F\u0438\u043F\u0435\u0440\u043A\u043E\u0432 \u0447\u0438\u0444\u043B\u0438\u043A", "value": 51, "slug": "piperkov-chiflik" }, { "key": "\u041F\u0438\u043F\u0435\u0440\u043A\u043E\u0432\u043E", "value": 9, "slug": "piperkovo" }, { "key": "\u041F\u0438\u0440\u0433\u043E\u0432\u043E", "value": 90, "slug": "pirgovo" }, { "key": "\u041F\u0438\u0440\u0434\u043E\u043F", "value": 489, "slug": "pirdop" }, { "key": "\u041F\u0438\u0440\u0438\u043D", "value": 20, "slug": "pirin" }, { "key": "\u041F\u0438\u0440\u0438\u043D\u0435\u0446", "value": 2, "slug": "pirinec" }, { "key": "\u041F\u0438\u0440\u043D\u0435", "value": 17, "slug": "pirne" }, { "key": "\u041F\u0438\u0441\u0430\u043D\u0435\u0446", "value": 9, "slug": "pisanec" }, { "key": "\u041F\u0438\u0441\u0430\u0440\u0435\u0432\u043E", "value": 18, "slug": "pisarevo" }, { "key": "\u041F\u0438\u0441\u0430\u0440\u043E\u0432\u043E", "value": 26, "slug": "pisarovo" }, { "key": "\u041F\u0438\u0441\u043C\u0435\u043D\u043E\u0432\u043E", "value": 17, "slug": "pismenovo" }, { "key": "\u041F\u0438\u0442\u043E\u0432\u043E", "value": 8, "slug": "pitovo" }, { "key": "\u041F\u0438\u0448\u0443\u0440\u043A\u0430", "value": 2, "slug": "pishurka" }, { "key": "\u041F\u0438\u0449\u0438\u0433\u043E\u0432\u043E", "value": 29, "slug": "pishchigovo" }, { "key": "\u041F\u043B\u0430\u0437\u0438\u0449\u0435", "value": 1, "slug": "plazishche" }, { "key": "\u041F\u043B\u0430\u043A\u043E\u0432\u043E", "value": 13, "slug": "plakovo" }, { "key": "\u041F\u043B\u0430\u043D\u0430", "value": 6, "slug": "plana" }, { "key": "\u041F\u043B\u0430\u043D\u0438\u043D\u0438\u0446\u0430", "value": 50, "slug": "planinica" }, { "key": "\u041F\u043B\u0430\u043D\u0438\u043D\u043E\u0432\u043E", "value": 23, "slug": "planinovo" }, { "key": "\u041F\u043B\u0430\u0447\u0438\u0434\u043E\u043B", "value": 31, "slug": "plachidol" }, { "key": "\u041F\u043B\u0430\u0447\u043A\u043E\u0432\u0446\u0438", "value": 71, "slug": "plachkovci" }, { "key": "\u041F\u043B\u0435\u0432\u0435\u043D", "value": 9580, "slug": "pleven" }, { "key": "\u041F\u043B\u0435\u0432\u0443\u043D", "value": 7, "slug": "plevun" }, { "key": "\u041F\u043B\u0435\u043D\u0438\u043C\u0438\u0440", "value": 11, "slug": "plenimir" }, { "key": "\u041F\u043B\u0435\u0442\u0435\u043D\u0430", "value": 67, "slug": "pletena" }, { "key": "\u041F\u043B\u0435\u0448\u0438\u0432\u0435\u0446", "value": 5, "slug": "pleshivec" }, { "key": "\u041F\u043B\u0438\u0441\u043A\u0430", "value": 43, "slug": "pliska" }, { "key": "\u041F\u043B\u043E\u0432\u0434\u0438\u0432", "value": 43312, "slug": "plovdiv" }, { "key": "\u041F\u043B\u043E\u0432\u0434\u0438\u0432\u0446\u0438", "value": 5, "slug": "plovdivci" }, { "key": "\u041F\u043B\u043E\u0434\u043E\u0432\u0438\u0442\u043E\u0432\u043E", "value": 16, "slug": "plodovitovo" }, { "key": "\u041F\u043B\u043E\u0441\u043A\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 9, "slug": "ploska-mogila" }, { "key": "\u041F\u043B\u043E\u0441\u043A\u0438", "value": 13, "slug": "ploski" }, { "key": "\u041F\u043B\u044A\u0441\u0442\u0438\u043D\u0430", "value": 11, "slug": "plstina" }, { "key": "\u041F\u043E\u0431\u0435\u0434\u0430", "value": 92, "slug": "pobeda" }, { "key": "\u041F\u043E\u0431\u0438\u0442 \u043A\u0430\u043C\u044A\u043A", "value": 18, "slug": "pobit-kamk" }, { "key": "\u041F\u043E\u0432\u0435\u0442", "value": 5, "slug": "povet" }, { "key": "\u041F\u043E\u0434\u0430\u0439\u0432\u0430", "value": 44, "slug": "podayva" }, { "key": "\u041F\u043E\u0434\u0432\u0438\u0441", "value": 94, "slug": "podvis" }, { "key": "\u041F\u043E\u0434\u0432\u0440\u044A\u0445", "value": 3, "slug": "podvrh" }, { "key": "\u041F\u043E\u0434\u0433\u043E\u0440\u0435", "value": 3, "slug": "podgore" }, { "key": "\u041F\u043E\u0434\u0433\u043E\u0440\u0435\u0446", "value": 7, "slug": "podgorec" }, { "key": "\u041F\u043E\u0434\u0433\u043E\u0440\u0438\u0435", "value": 1, "slug": "podgorie" }, { "key": "\u041F\u043E\u0434\u0433\u043E\u0440\u0438\u0446\u0430", "value": 15, "slug": "podgorica" }, { "key": "\u041F\u043E\u0434\u0433\u0443\u043C\u0435\u0440", "value": 36, "slug": "podgumer" }, { "key": "\u041F\u043E\u0434\u0435\u043C", "value": 33, "slug": "podem" }, { "key": "\u041F\u043E\u0434\u043A\u043E\u0432\u0430", "value": 21, "slug": "podkova" }, { "key": "\u041F\u043E\u0434\u043A\u0440\u0435\u043F\u0430", "value": 7, "slug": "podkrepa" }, { "key": "\u041F\u043E\u0434\u043B\u0435\u0441", "value": 10, "slug": "podles" }, { "key": "\u041F\u043E\u0434\u0440\u0443\u043C\u0447\u0435", "value": 2, "slug": "podrumche" }, { "key": "\u041F\u043E\u0434\u0441\u043B\u043E\u043D", "value": 29, "slug": "podslon" }, { "key": "\u041F\u043E\u0436\u0430\u0440\u0435\u0432\u043E", "value": 13, "slug": "pozharevo" }, { "key": "\u041F\u043E\u0438\u0431\u0440\u0435\u043D\u0435", "value": 2, "slug": "poibrene" }, { "key": "\u041F\u043E\u043A\u0440\u0430\u0439\u043D\u0430", "value": 41, "slug": "pokrayna" }, { "key": "\u041F\u043E\u043A\u0440\u043E\u0432\u043D\u0438\u043A", "value": 80, "slug": "pokrovnik" }, { "key": "\u041F\u043E\u043B\u0435\u043D\u0430", "value": 28, "slug": "polena" }, { "key": "\u041F\u043E\u043B\u0435\u043D\u0438\u0446\u0430", "value": 125, "slug": "polenica" }, { "key": "\u041F\u043E\u043B\u0435\u0442\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "poletkovci" }, { "key": "\u041F\u043E\u043B\u0435\u0442\u043E", "value": 24, "slug": "poleto" }, { "key": "\u041F\u043E\u043B\u0438\u043A\u0440\u0430\u0438\u0449\u0435", "value": 105, "slug": "polikraishche" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0414\u044F\u043A\u043E\u0432\u043E", "value": 5, "slug": "polkovnik-dyakovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0416\u0435\u043B\u044F\u0437\u043E\u0432\u043E", "value": 17, "slug": "polkovnik-zhelyazovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0418\u0432\u0430\u043D\u043E\u0432\u043E", "value": 20, "slug": "polkovnik-ivanovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u041B\u0430\u043C\u0431\u0440\u0438\u043D\u043E\u0432\u043E", "value": 1, "slug": "polkovnik-lambrinovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u041C\u0438\u043D\u043A\u043E\u0432\u043E", "value": 11, "slug": "polkovnik-minkovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0421\u0430\u0432\u043E\u0432\u043E", "value": 2, "slug": "polkovnik-savovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0421\u0432\u0435\u0449\u0430\u0440\u043E\u0432\u043E", "value": 13, "slug": "polkovnik-sveshcharovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0421\u0435\u0440\u0430\u0444\u0438\u043C\u043E\u0432\u043E", "value": 20, "slug": "polkovnik-serafimovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0422\u0430\u0441\u043B\u0430\u043A\u043E\u0432\u043E", "value": 4, "slug": "polkovnik-taslakovo" }, { "key": "\u041F\u043E\u043B\u043A\u043E\u0432\u043D\u0438\u043A \u0427\u043E\u043B\u0430\u043A\u043E\u0432\u043E", "value": 1, "slug": "polkovnik-cholakovo" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u0438 \u0413\u0440\u0430\u0434\u0435\u0446", "value": 14, "slug": "polski-gradec" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 23, "slug": "polski-izvor" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u0438 \u0421\u0435\u043D\u043E\u0432\u0435\u0446", "value": 30, "slug": "polski-senovec" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u0438 \u0422\u0440\u044A\u043C\u0431\u0435\u0448", "value": 332, "slug": "polski-trmbesh" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u043E \u041A\u043E\u0441\u043E\u0432\u043E", "value": 24, "slug": "polsko-kosovo" }, { "key": "\u041F\u043E\u043B\u0441\u043A\u043E \u041F\u044A\u0434\u0430\u0440\u0435\u0432\u043E", "value": 2, "slug": "polsko-pdarevo" }, { "key": "\u041F\u043E\u043B\u044F\u043D\u0430", "value": 17, "slug": "polyana" }, { "key": "\u041F\u043E\u043B\u044F\u043D\u0435\u0446", "value": 3, "slug": "polyanec" }, { "key": "\u041F\u043E\u043B\u044F\u043D\u043E\u0432\u043E", "value": 22, "slug": "polyanovo" }, { "key": "\u041F\u043E\u043B\u044F\u043D\u0446\u0438", "value": 6, "slug": "polyanci" }, { "key": "\u041F\u043E\u043B\u044F\u0446\u0438\u0442\u0435", "value": 11, "slug": "polyacite" }, { "key": "\u041F\u043E\u043C\u0435\u0436\u0434\u0438\u043D", "value": 1, "slug": "pomezhdin" }, { "key": "\u041F\u043E\u043C\u0435\u043D", "value": 5, "slug": "pomen" }, { "key": "\u041F\u043E\u043C\u043E\u0440\u0438\u0435", "value": 2299, "slug": "pomorie" }, { "key": "\u041F\u043E\u043C\u043E\u0449\u0438\u0446\u0430", "value": 6, "slug": "pomoshchica" }, { "key": "\u041F\u043E\u043C\u043E\u0449\u043D\u0438\u043A", "value": 6, "slug": "pomoshchnik" }, { "key": "\u041F\u043E\u043F\u0433\u0440\u0438\u0433\u043E\u0440\u043E\u0432\u043E", "value": 8, "slug": "popgrigorovo" }, { "key": "\u041F\u043E\u043F\u0433\u0440\u0443\u0435\u0432\u043E", "value": 11, "slug": "popgruevo" }, { "key": "\u041F\u043E\u043F\u0438\u043D\u0430", "value": 8, "slug": "popina" }, { "key": "\u041F\u043E\u043F\u0438\u043D\u0446\u0438", "value": 49, "slug": "popinci" }, { "key": "\u041F\u043E\u043F\u0438\u0446\u0430", "value": 40, "slug": "popica" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u0435\u0446", "value": 3, "slug": "popovec" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u0438\u0446\u0430", "value": 50, "slug": "popovica" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u0438\u0447", "value": 13, "slug": "popovich" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u043E", "value": 1064, "slug": "popovo" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u0446\u0438", "value": 42, "slug": "popovci" }, { "key": "\u041F\u043E\u043F\u043E\u0432\u044F\u043D\u0435", "value": 7, "slug": "popovyane" }, { "key": "\u041F\u043E\u043F\u0440\u0443\u0441\u0435\u0432\u0446\u0438", "value": 1, "slug": "poprusevci" }, { "key": "\u041F\u043E\u043F\u0441\u043A\u0430", "value": 2, "slug": "popska" }, { "key": "\u041F\u043E\u0440\u0434\u0438\u043C", "value": 70, "slug": "pordim" }, { "key": "\u041F\u043E\u0440\u043E\u0438\u0449\u0435", "value": 12, "slug": "poroishche" }, { "key": "\u041F\u043E\u0440\u043E\u0439", "value": 42, "slug": "poroy" }, { "key": "\u041F\u043E\u0440\u043E\u0439\u043D\u0430", "value": 1, "slug": "poroyna" }, { "key": "\u041F\u043E\u0440\u043E\u0439\u043D\u043E", "value": 28, "slug": "poroyno" }, { "key": "\u041F\u043E\u0440\u043E\u043C\u0438\u043D\u043E\u0432\u043E", "value": 6, "slug": "porominovo" }, { "key": "\u041F\u043E\u0440\u0442\u0438\u0442\u043E\u0432\u0446\u0438", "value": 12, "slug": "portitovci" }, { "key": "\u041F\u043E\u0440\u0443\u0447\u0438\u043A \u041A\u044A\u0440\u0434\u0436\u0438\u0435\u0432\u043E", "value": 2, "slug": "poruchik-krdzhievo" }, { "key": "\u041F\u043E\u0440\u0443\u0447\u0438\u043A \u0427\u0443\u043D\u0447\u0435\u0432\u043E", "value": 3, "slug": "poruchik-chunchevo" }, { "key": "\u041F\u043E\u0441\u0430\u0431\u0438\u043D\u0430", "value": 2, "slug": "posabina" }, { "key": "\u041F\u043E\u0441\u0435\u0432", "value": 2, "slug": "posev" }, { "key": "\u041F\u043E\u0441\u0442\u043D\u0438\u043A", "value": 2, "slug": "postnik" }, { "key": "\u041F\u043E\u0442\u043E\u043F", "value": 1, "slug": "potop" }, { "key": "\u041F\u043E\u0442\u043E\u0447\u043D\u0438\u0446\u0430", "value": 3, "slug": "potochnica" }, { "key": "\u041F\u0440\u0430\u0432\u0434\u0430", "value": 51, "slug": "pravda" }, { "key": "\u041F\u0440\u0430\u0432\u0434\u0438\u043D\u043E", "value": 7, "slug": "pravdino" }, { "key": "\u041F\u0440\u0430\u0432\u0434\u043E\u043B\u044E\u0431", "value": 1, "slug": "pravdolyub" }, { "key": "\u041F\u0440\u0430\u0432\u0435\u043D\u0446\u0438", "value": 3, "slug": "pravenci" }, { "key": "\u041F\u0440\u0430\u0432\u0435\u0446", "value": 389, "slug": "pravec" }, { "key": "\u041F\u0440\u0430\u0432\u0435\u0448\u043A\u0430 \u041B\u0430\u043A\u0430\u0432\u0438\u0446\u0430", "value": 9, "slug": "praveshka-lakavica" }, { "key": "\u041F\u0440\u0430\u0432\u0438\u0449\u0435", "value": 5, "slug": "pravishche" }, { "key": "\u041F\u0440\u0430\u0432\u043E \u0431\u044A\u0440\u0434\u043E", "value": 1, "slug": "pravo-brdo" }, { "key": "\u041F\u0440\u0430\u0432\u043E\u0441\u043B\u0430\u0432", "value": 5, "slug": "pravoslav" }, { "key": "\u041F\u0440\u0430\u0432\u043E\u0441\u043B\u0430\u0432\u0435\u043D", "value": 10, "slug": "pravoslaven" }, { "key": "\u041F\u0440\u0430\u0443\u0436\u0434\u0430", "value": 1, "slug": "prauzhda" }, { "key": "\u041F\u0440\u0430\u0445\u0430\u043B\u0438", "value": 3, "slug": "prahali" }, { "key": "\u041F\u0440\u0435\u0432\u0430\u043B\u0430", "value": 18, "slug": "prevala" }, { "key": "\u041F\u0440\u0435\u043A\u043E\u043B\u043D\u0438\u0446\u0430", "value": 4, "slug": "prekolnica" }, { "key": "\u041F\u0440\u0435\u043B\u0435\u0437", "value": 12, "slug": "prelez" }, { "key": "\u041F\u0440\u0435\u043B\u043E\u043C", "value": 2, "slug": "prelom" }, { "key": "\u041F\u0440\u0435\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0446\u0438", "value": 9, "slug": "preobrazhenci" }, { "key": "\u041F\u0440\u0435\u0441\u0435\u043A\u0430", "value": 2, "slug": "preseka" }, { "key": "\u041F\u0440\u0435\u0441\u0435\u043B\u0435\u043D\u0446\u0438", "value": 24, "slug": "preselenci" }, { "key": "\u041F\u0440\u0435\u0441\u0435\u043B\u0435\u0446", "value": 9, "slug": "preselec" }, { "key": "\u041F\u0440\u0435\u0441\u0435\u043B\u043A\u0430", "value": 14, "slug": "preselka" }, { "key": "\u041F\u0440\u0435\u0441\u0438\u044F\u043D", "value": 5, "slug": "presiyan" }, { "key": "\u041F\u0440\u0435\u0441\u043B\u0430\u0432\u0435\u043D", "value": 25, "slug": "preslaven" }, { "key": "\u041F\u0440\u0435\u0441\u043B\u0430\u0432\u0435\u0446", "value": 3, "slug": "preslavec" }, { "key": "\u041F\u0440\u0435\u0441\u043B\u0430\u0432\u0446\u0438", "value": 12, "slug": "preslavci" }, { "key": "\u041F\u0440\u0435\u0441\u043F\u0430", "value": 9, "slug": "prespa" }, { "key": "\u041F\u0440\u0435\u0441\u044F\u043A", "value": 3, "slug": "presyak" }, { "key": "\u041F\u0440\u0435\u0441\u044F\u043A\u0430", "value": 11, "slug": "presyaka" }, { "key": "\u041F\u0440\u0438\u0431\u043E\u0439", "value": 3, "slug": "priboy" }, { "key": "\u041F\u0440\u0438\u043B\u0435\u043F", "value": 17, "slug": "prilep" }, { "key": "\u041F\u0440\u0438\u043B\u0435\u043F\u0446\u0438", "value": 26, "slug": "prilepci" }, { "key": "\u041F\u0440\u0438\u043C\u043E\u0440\u0441\u043A\u043E", "value": 668, "slug": "primorsko" }, { "key": "\u041F\u0440\u0438\u043C\u043E\u0440\u0446\u0438", "value": 12, "slug": "primorci" }, { "key": "\u041F\u0440\u0438\u043F\u0435\u043A", "value": 28, "slug": "pripek" }, { "key": "\u041F\u0440\u0438\u0441\u0430\u0434", "value": 22, "slug": "prisad" }, { "key": "\u041F\u0440\u0438\u0441\u0430\u0434\u0435\u0446", "value": 1, "slug": "prisadec" }, { "key": "\u041F\u0440\u0438\u0441\u0435\u043B\u0446\u0438", "value": 134, "slug": "priselci" }, { "key": "\u041F\u0440\u0438\u0441\u043E\u0432\u043E", "value": 43, "slug": "prisovo" }, { "key": "\u041F\u0440\u0438\u0441\u0442\u043E\u0435", "value": 39, "slug": "pristoe" }, { "key": "\u041F\u0440\u043E\u0431\u0443\u0434\u0430", "value": 9, "slug": "probuda" }, { "key": "\u041F\u0440\u043E\u0432\u0430\u0434\u0438\u044F", "value": 911, "slug": "provadiya" }, { "key": "\u041F\u0440\u043E\u0433\u043B\u0435\u0434", "value": 14, "slug": "progled" }, { "key": "\u041F\u0440\u043E\u0433\u0440\u0435\u0441", "value": 14, "slug": "progres" }, { "key": "\u041F\u0440\u043E\u0434\u0430\u043D\u043E\u0432\u0446\u0438", "value": 31, "slug": "prodanovci" }, { "key": "\u041F\u0440\u043E\u0434\u0430\u043D\u0447\u0430", "value": 1, "slug": "prodancha" }, { "key": "\u041F\u0440\u043E\u043B\u0430\u0437", "value": 3, "slug": "prolaz" }, { "key": "\u041F\u0440\u043E\u043B\u0435\u0437", "value": 4, "slug": "prolez" }, { "key": "\u041F\u0440\u043E\u043B\u0435\u0448\u0430", "value": 31, "slug": "prolesha" }, { "key": "\u041F\u0440\u043E\u043B\u043E\u043C", "value": 15, "slug": "prolom" }, { "key": "\u041F\u0440\u043E\u043F\u0430\u0441\u0442", "value": 3, "slug": "propast" }, { "key": "\u041F\u0440\u043E\u0441\u0435\u043D\u0430", "value": 12, "slug": "prosena" }, { "key": "\u041F\u0440\u043E\u0441\u0435\u043D\u0438\u043A", "value": 67, "slug": "prosenik" }, { "key": "\u041F\u0440\u043E\u0441\u0435\u0447\u0435\u043D", "value": 9, "slug": "prosechen" }, { "key": "\u041F\u0440\u043E\u0441\u0442\u043E\u0440\u043D\u043E", "value": 2, "slug": "prostorno" }, { "key": "\u041F\u0440\u043E\u0442\u043E\u043F\u043E\u043F\u0438\u043D\u0446\u0438", "value": 4, "slug": "protopopinci" }, { "key": "\u041F\u0440\u043E\u0444\u0435\u0441\u043E\u0440 \u0418\u0448\u0438\u0440\u043A\u043E\u0432\u043E", "value": 19, "slug": "profesor-ishirkovo" }, { "key": "\u041F\u0440\u043E\u0445\u043B\u0430\u0434\u0430", "value": 6, "slug": "prohlada" }, { "key": "\u041F\u0440\u043E\u0445\u043E\u0434", "value": 10, "slug": "prohod" }, { "key": "\u041F\u0440\u043E\u0445\u043E\u0440\u043E\u0432\u043E", "value": 1, "slug": "prohorovo" }, { "key": "\u041F\u0440\u044F\u043F\u043E\u0440\u0435\u0446", "value": 9, "slug": "pryaporec" }, { "key": "\u041F\u0442\u0438\u0447\u0430\u0440", "value": 2, "slug": "ptichar" }, { "key": "\u041F\u0442\u0438\u0447\u0435\u0432\u043E", "value": 4, "slug": "ptichevo" }, { "key": "\u041F\u0443\u0434\u0440\u0438\u044F", "value": 15, "slug": "pudriya" }, { "key": "\u041F\u0443\u0448\u0435\u0432\u043E", "value": 4, "slug": "pushevo" }, { "key": "\u041F\u0447\u0435\u043B\u0430", "value": 8, "slug": "pchela" }, { "key": "\u041F\u0447\u0435\u043B\u0430\u0440\u0438", "value": 11, "slug": "pchelari" }, { "key": "\u041F\u0447\u0435\u043B\u0430\u0440\u043E\u0432\u043E", "value": 17, "slug": "pchelarovo" }, { "key": "\u041F\u0447\u0435\u043B\u0438\u043D", "value": 33, "slug": "pchelin" }, { "key": "\u041F\u0447\u0435\u043B\u0438\u043D\u0430", "value": 5, "slug": "pchelina" }, { "key": "\u041F\u0447\u0435\u043B\u0438\u043D\u043E", "value": 17, "slug": "pchelino" }, { "key": "\u041F\u0447\u0435\u043B\u0438\u043D\u043E\u0432\u043E", "value": 4, "slug": "pchelinovo" }, { "key": "\u041F\u0447\u0435\u043B\u0438\u0449\u0435", "value": 38, "slug": "pchelishche" }, { "key": "\u041F\u0447\u0435\u043B\u043D\u0438\u043A", "value": 75, "slug": "pchelnik" }, { "key": "\u041F\u0448\u0435\u043D\u0438\u0447\u0435\u0432\u043E", "value": 9, "slug": "pshenichevo" }, { "key": "\u041F\u044A\u0434\u0430\u0440\u0435\u0432\u043E", "value": 19, "slug": "pdarevo" }, { "key": "\u041F\u044A\u0434\u0430\u0440\u0438\u043D\u043E", "value": 16, "slug": "pdarino" }, { "key": "\u041F\u044A\u0434\u0430\u0440\u0441\u043A\u043E", "value": 14, "slug": "pdarsko" }, { "key": "\u041F\u044A\u0440\u0432\u0430\u043D", "value": 7, "slug": "prvan" }, { "key": "\u041F\u044A\u0440\u0432\u0435\u043D\u0435\u0446", "value": 285, "slug": "prvenec" }, { "key": "\u041F\u044A\u0440\u0432\u0438\u0446\u0430", "value": 12, "slug": "prvica" }, { "key": "\u041F\u044A\u0440\u0432\u043E\u043C\u0430\u0439", "value": 1082, "slug": "prvomay" }, { "key": "\u041F\u044A\u0440\u0432\u043E\u043C\u0430\u0439\u0446\u0438", "value": 127, "slug": "prvomayci" }, { "key": "\u041F\u044A\u0441\u0442\u0440\u0435\u043D", "value": 5, "slug": "pstren" }, { "key": "\u041F\u044A\u0441\u0442\u0440\u043E\u0432\u043E", "value": 1, "slug": "pstrovo" }, { "key": "\u041F\u044A\u0441\u0442\u0440\u043E\u0433\u043E\u0440", "value": 6, "slug": "pstrogor" }, { "key": "\u041F\u044A\u0441\u0442\u0440\u043E\u043E\u043A", "value": 1, "slug": "pstrook" }, { "key": "\u041F\u044A\u0442\u043D\u0438\u043A\u043E\u0432\u043E", "value": 1, "slug": "ptnikovo" }, { "key": "\u041F\u044F\u0441\u044A\u0447\u0435\u0432\u043E", "value": 3, "slug": "pyaschevo" }, { "key": "\u0420\u0430\u0431\u0438\u0448\u0430", "value": 10, "slug": "rabisha" }, { "key": "\u0420\u0430\u0431\u043E\u0432\u043E", "value": 2, "slug": "rabovo" }, { "key": "\u0420\u0430\u0431\u0440\u043E\u0432\u043E", "value": 5, "slug": "rabrovo" }, { "key": "\u0420\u0430\u0432\u0430\u0434\u0438\u043D\u043E\u0432\u043E", "value": 54, "slug": "ravadinovo" }, { "key": "\u0420\u0430\u0432\u0434\u0430", "value": 657, "slug": "ravda" }, { "key": "\u0420\u0430\u0432\u0435\u043D", "value": 10, "slug": "raven" }, { "key": "\u0420\u0430\u0432\u043D\u0430", "value": 8, "slug": "ravna" }, { "key": "\u0420\u0430\u0432\u043D\u0430 \u0433\u043E\u0440\u0430", "value": 36, "slug": "ravna-gora" }, { "key": "\u0420\u0430\u0432\u043D\u0435\u0446", "value": 43, "slug": "ravnec" }, { "key": "\u0420\u0430\u0432\u043D\u0438\u043D\u0430\u0442\u0430", "value": 4, "slug": "ravninata" }, { "key": "\u0420\u0430\u0432\u043D\u0438\u0449\u0430", "value": 10, "slug": "ravnishcha" }, { "key": "\u0420\u0430\u0432\u043D\u0438\u0449\u0435", "value": 7, "slug": "ravnishche" }, { "key": "\u0420\u0430\u0432\u043D\u043E", "value": 20, "slug": "ravno" }, { "key": "\u0420\u0430\u0432\u043D\u043E \u043D\u0438\u0432\u0438\u0449\u0435", "value": 2, "slug": "ravno-nivishche" }, { "key": "\u0420\u0430\u0432\u043D\u043E \u043F\u043E\u043B\u0435", "value": 141, "slug": "ravno-pole" }, { "key": "\u0420\u0430\u0432\u043D\u043E\u0433\u043E\u0440", "value": 19, "slug": "ravnogor" }, { "key": "\u0420\u0430\u0434\u0430\u043D \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 10, "slug": "radan-voyvoda" }, { "key": "\u0420\u0430\u0434\u0430\u043D\u043E\u0432\u043E", "value": 50, "slug": "radanovo" }, { "key": "\u0420\u0430\u0434\u0435\u0432\u043E", "value": 11, "slug": "radevo" }, { "key": "\u0420\u0430\u0434\u0435\u0432\u0446\u0438", "value": 3, "slug": "radevci" }, { "key": "\u0420\u0430\u0434\u0435\u0446\u043A\u0438", "value": 3, "slug": "radecki" }, { "key": "\u0420\u0430\u0434\u0438\u0431\u043E\u0448", "value": 3, "slug": "radibosh" }, { "key": "\u0420\u0430\u0434\u0438\u0435\u0432\u043E", "value": 31, "slug": "radievo" }, { "key": "\u0420\u0430\u0434\u0438\u043B\u043E\u0432\u043E", "value": 58, "slug": "radilovo" }, { "key": "\u0420\u0430\u0434\u0438\u043D\u0433\u0440\u0430\u0434", "value": 20, "slug": "radingrad" }, { "key": "\u0420\u0430\u0434\u0438\u043D\u043E", "value": 1, "slug": "radino" }, { "key": "\u0420\u0430\u0434\u0438\u043D\u043E\u0432\u043E", "value": 73, "slug": "radinovo" }, { "key": "\u0420\u0430\u0434\u0438\u0448\u0435\u0432\u043E", "value": 13, "slug": "radishevo" }, { "key": "\u0420\u0430\u0434\u043A\u043E \u0414\u0438\u043C\u0438\u0442\u0440\u0438\u0435\u0432\u043E", "value": 16, "slug": "radko-dimitrievo" }, { "key": "\u0420\u0430\u0434\u043B\u043E\u0432\u0446\u0438", "value": 1, "slug": "radlovci" }, { "key": "\u0420\u0430\u0434\u043D\u0435\u0432\u043E", "value": 809, "slug": "radnevo" }, { "key": "\u0420\u0430\u0434\u043E\u0432\u0435\u043D\u0435", "value": 7, "slug": "radovene" }, { "key": "\u0420\u0430\u0434\u043E\u0432\u0435\u0446", "value": 10, "slug": "radovec" }, { "key": "\u0420\u0430\u0434\u043E\u0432\u043E", "value": 1, "slug": "radovo" }, { "key": "\u0420\u0430\u0434\u043E\u0439\u043D\u043E\u0432\u043E", "value": 4, "slug": "radoynovo" }, { "key": "\u0420\u0430\u0434\u043E\u043C\u0438\u0440", "value": 874, "slug": "radomir" }, { "key": "\u0420\u0430\u0434\u043E\u043C\u0438\u0440\u0446\u0438", "value": 21, "slug": "radomirci" }, { "key": "\u0420\u0430\u0434\u043E\u0442\u0438\u043D\u0430", "value": 6, "slug": "radotina" }, { "key": "\u0420\u0430\u0434\u0443\u0438\u043B", "value": 79, "slug": "raduil" }, { "key": "\u0420\u0430\u0434\u0443\u043D\u0446\u0438", "value": 3, "slug": "radunci" }, { "key": "\u0420\u0430\u0434\u044E\u0432\u0435\u043D\u0435", "value": 15, "slug": "radyuvene" }, { "key": "\u0420\u0430\u0436\u0434\u0430\u0432\u0438\u0446\u0430", "value": 6, "slug": "razhdavica" }, { "key": "\u0420\u0430\u0437\u0431\u043E\u0439\u043D\u0430", "value": 49, "slug": "razboyna" }, { "key": "\u0420\u0430\u0437\u0432\u0438\u0433\u043E\u0440\u043E\u0432\u043E", "value": 7, "slug": "razvigorovo" }, { "key": "\u0420\u0430\u0437\u0433\u0440\u0430\u0434", "value": 3210, "slug": "razgrad" }, { "key": "\u0420\u0430\u0437\u0434\u0435\u043B", "value": 25, "slug": "razdel" }, { "key": "\u0420\u0430\u0437\u0434\u0435\u043B\u043D\u0430", "value": 19, "slug": "razdelna" }, { "key": "\u0420\u0430\u0437\u0434\u0435\u043B\u0446\u0438", "value": 4, "slug": "razdelci" }, { "key": "\u0420\u0430\u0437\u0434\u043E\u043B", "value": 3, "slug": "razdol" }, { "key": "\u0420\u0430\u0437\u043B\u0438\u0432", "value": 24, "slug": "razliv" }, { "key": "\u0420\u0430\u0437\u043B\u043E\u0433", "value": 1212, "slug": "razlog" }, { "key": "\u0420\u0430\u0437\u0441\u043E\u0445\u0430", "value": 4, "slug": "razsoha" }, { "key": "\u0420\u0430\u0439\u043A\u043E\u0432\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 1, "slug": "raykova-mogila" }, { "key": "\u0420\u0430\u0439\u043D\u0438\u043D\u043E", "value": 13, "slug": "raynino" }, { "key": "\u0420\u0430\u0439\u043D\u043E\u0432\u043E", "value": 1, "slug": "raynovo" }, { "key": "\u0420\u0430\u0439\u043D\u043E\u0432\u0446\u0438", "value": 9, "slug": "raynovci" }, { "key": "\u0420\u0430\u0439\u043E\u0432\u043E", "value": 28, "slug": "rayovo" }, { "key": "\u0420\u0430\u043A\u0435\u0432\u043E", "value": 31, "slug": "rakevo" }, { "key": "\u0420\u0430\u043A\u0438\u043B\u043E\u0432\u0446\u0438", "value": 4, "slug": "rakilovci" }, { "key": "\u0420\u0430\u043A\u0438\u0442\u0430", "value": 10, "slug": "rakita" }, { "key": "\u0420\u0430\u043A\u0438\u0442\u043D\u0430", "value": 5, "slug": "rakitna" }, { "key": "\u0420\u0430\u043A\u0438\u0442\u043D\u0438\u0446\u0430", "value": 27, "slug": "rakitnica" }, { "key": "\u0420\u0430\u043A\u0438\u0442\u043E\u0432\u043E", "value": 341, "slug": "rakitovo" }, { "key": "\u0420\u0430\u043A\u043B\u0438\u043D\u043E\u0432\u043E", "value": 2, "slug": "raklinovo" }, { "key": "\u0420\u0430\u043A\u043E\u0432\u0438\u0446\u0430", "value": 21, "slug": "rakovica" }, { "key": "\u0420\u0430\u043A\u043E\u0432\u0441\u043A\u0438", "value": 1009, "slug": "rakovski" }, { "key": "\u0420\u0430\u043A\u043E\u0432\u0441\u043A\u043E\u0432\u043E", "value": 14, "slug": "rakovskovo" }, { "key": "\u0420\u0430\u043B\u0435\u0432\u043E", "value": 8, "slug": "ralevo" }, { "key": "\u0420\u0430\u043B\u0438\u0446\u0430", "value": 4, "slug": "ralica" }, { "key": "\u0420\u0430\u043D\u0435\u043D\u0446\u0438", "value": 5, "slug": "ranenci" }, { "key": "\u0420\u0430\u043D\u0438 \u043B\u0438\u0441\u0442", "value": 23, "slug": "rani-list" }, { "key": "\u0420\u0430\u043D\u0438 \u043B\u0443\u0433", "value": 1, "slug": "rani-lug" }, { "key": "\u0420\u0430\u0441\u043D\u0438\u043A", "value": 10, "slug": "rasnik" }, { "key": "\u0420\u0430\u0441\u043E\u0432\u043E", "value": 41, "slug": "rasovo" }, { "key": "\u0420\u0430\u0441\u0442\u043D\u0438\u043A", "value": 9, "slug": "rastnik" }, { "key": "\u0420\u0430\u0445\u043E\u0432\u0446\u0438", "value": 4, "slug": "rahovci" }, { "key": "\u0420\u0430\u0447\u0435\u0432\u0446\u0438", "value": 2, "slug": "rachevci" }, { "key": "\u0420\u0430\u0448\u043A\u0430 \u0413\u0440\u0430\u0449\u0438\u0446\u0430", "value": 8, "slug": "rashka-grashchica" }, { "key": "\u0420\u0430\u0448\u043A\u043E\u0432\u043E", "value": 5, "slug": "rashkovo" }, { "key": "\u0420\u0430\u044E\u0432\u0446\u0438", "value": 6, "slug": "rayuvci" }, { "key": "\u0420\u0430\u044F\u043D\u043E\u0432\u0446\u0438", "value": 2, "slug": "rayanovci" }, { "key": "\u0420\u0435\u0431\u0440\u0435\u0432\u0446\u0438", "value": 3, "slug": "rebrevci" }, { "key": "\u0420\u0435\u0431\u0440\u043E\u0432\u043E", "value": 42, "slug": "rebrovo" }, { "key": "\u0420\u0435\u0431\u044A\u0440\u043A\u043E\u0432\u043E", "value": 18, "slug": "rebrkovo" }, { "key": "\u0420\u0435\u0434\u0438\u043D\u0430", "value": 1, "slug": "redina" }, { "key": "\u0420\u0435\u0436\u0430\u043D\u0446\u0438", "value": 3, "slug": "rezhanci" }, { "key": "\u0420\u0435\u0437\u0430\u0447", "value": 7, "slug": "rezach" }, { "key": "\u0420\u0435\u0437\u0431\u0430\u0440\u0446\u0438", "value": 44, "slug": "rezbarci" }, { "key": "\u0420\u0435\u0437\u043E\u0432\u043E", "value": 8, "slug": "rezovo" }, { "key": "\u0420\u0435\u043A\u0430", "value": 4, "slug": "reka" }, { "key": "\u0420\u0435\u043B\u044C\u043E\u0432\u043E", "value": 7, "slug": "relovo" }, { "key": "\u0420\u0435\u043F\u043B\u044F\u043D\u0430", "value": 5, "slug": "replyana" }, { "key": "\u0420\u0435\u0441\u0435\u043B\u0435\u0446", "value": 21, "slug": "reselec" }, { "key": "\u0420\u0435\u0441\u0435\u043D", "value": 66, "slug": "resen" }, { "key": "\u0420\u0435\u0441\u0438\u043B\u043E\u0432\u043E", "value": 37, "slug": "resilovo" }, { "key": "\u0420\u0435\u0447\u0438\u0446\u0430", "value": 23, "slug": "rechica" }, { "key": "\u0420\u0438\u0431\u0430\u0440\u0438\u0446\u0430", "value": 81, "slug": "ribarica" }, { "key": "\u0420\u0438\u0431\u0435\u043D", "value": 41, "slug": "riben" }, { "key": "\u0420\u0438\u0431\u043D\u0438\u0446\u0430", "value": 7, "slug": "ribnica" }, { "key": "\u0420\u0438\u0431\u043D\u043E\u0432\u043E", "value": 67, "slug": "ribnovo" }, { "key": "\u0420\u0438\u0434\u0438\u043D\u043E", "value": 6, "slug": "ridino" }, { "key": "\u0420\u0438\u0434\u043E\u0432\u043E", "value": 1, "slug": "ridovo" }, { "key": "\u0420\u0438\u043B\u0430", "value": 81, "slug": "rila" }, { "key": "\u0420\u0438\u043B\u0446\u0438", "value": 59, "slug": "rilci" }, { "key": "\u0420\u0438\u0441\u0438\u043C\u0430\u043D\u043E\u0432\u043E", "value": 1, "slug": "risimanovo" }, { "key": "\u0420\u0438\u0442\u044F", "value": 1, "slug": "ritya" }, { "key": "\u0420\u0438\u0448", "value": 25, "slug": "rish" }, { "key": "\u0420\u043E\u0431\u043E\u0432\u043E", "value": 1, "slug": "robovo" }, { "key": "\u0420\u043E\u0433\u0430\u0447", "value": 6, "slug": "rogach" }, { "key": "\u0420\u043E\u0433\u0430\u0447\u0435\u0432\u043E", "value": 51, "slug": "rogachevo" }, { "key": "\u0420\u043E\u0433\u043E\u0437\u0435\u043D", "value": 27, "slug": "rogozen" }, { "key": "\u0420\u043E\u0433\u043E\u0437\u0438\u043D\u0430", "value": 1, "slug": "rogozina" }, { "key": "\u0420\u043E\u0433\u043E\u0437\u0438\u043D\u043E\u0432\u043E", "value": 10, "slug": "rogozinovo" }, { "key": "\u0420\u043E\u0433\u043E\u0437\u0447\u0435", "value": 4, "slug": "rogozche" }, { "key": "\u0420\u043E\u0433\u043E\u0448", "value": 132, "slug": "rogosh" }, { "key": "\u0420\u043E\u0434\u0438\u043D\u0430", "value": 7, "slug": "rodina" }, { "key": "\u0420\u043E\u0436\u0434\u0435\u043D", "value": 7, "slug": "rozhden" }, { "key": "\u0420\u043E\u0436\u0435\u043D", "value": 4, "slug": "rozhen" }, { "key": "\u0420\u043E\u0437\u0430", "value": 70, "slug": "roza" }, { "key": "\u0420\u043E\u0437\u0438\u043D\u043E", "value": 106, "slug": "rozino" }, { "key": "\u0420\u043E\u0437\u043E\u0432\u0435\u0446", "value": 6, "slug": "rozovec" }, { "key": "\u0420\u043E\u0437\u043E\u0432\u043E", "value": 47, "slug": "rozovo" }, { "key": "\u0420\u043E\u043C\u0430\u043D", "value": 158, "slug": "roman" }, { "key": "\u0420\u043E\u0441\u0435\u043D", "value": 107, "slug": "rosen" }, { "key": "\u0420\u043E\u0441\u0435\u043D\u043E\u0432\u043E", "value": 14, "slug": "rosenovo" }, { "key": "\u0420\u043E\u0441\u0438\u043D\u0430", "value": 3, "slug": "rosina" }, { "key": "\u0420\u043E\u0441\u0438\u0446\u0430", "value": 33, "slug": "rosica" }, { "key": "\u0420\u043E\u0441\u043D\u043E", "value": 8, "slug": "rosno" }, { "key": "\u0420\u043E\u0441\u043E\u043C\u0430\u043D", "value": 2, "slug": "rosoman" }, { "key": "\u0420\u043E\u0445\u043B\u0435\u0432\u0430", "value": 3, "slug": "rohleva" }, { "key": "\u0420\u043E\u044F\u043A", "value": 10, "slug": "royak" }, { "key": "\u0420\u0443\u0434\u0430\u0440\u0446\u0438", "value": 74, "slug": "rudarci" }, { "key": "\u0420\u0443\u0434\u0438\u043D\u0430", "value": 5, "slug": "rudina" }, { "key": "\u0420\u0443\u0434\u043D\u0438\u043A", "value": 142, "slug": "rudnik" }, { "key": "\u0420\u0443\u0434\u043E\u0437\u0435\u043C", "value": 295, "slug": "rudozem" }, { "key": "\u0420\u0443\u0435\u0432\u0446\u0438", "value": 2, "slug": "ruevci" }, { "key": "\u0420\u0443\u0435\u043D", "value": 111, "slug": "ruen" }, { "key": "\u0420\u0443\u0435\u0446", "value": 18, "slug": "ruec" }, { "key": "\u0420\u0443\u0436\u0438\u043D\u0446\u0438", "value": 37, "slug": "ruzhinci" }, { "key": "\u0420\u0443\u0436\u0438\u0446\u0430", "value": 22, "slug": "ruzhica" }, { "key": "\u0420\u0443\u0439\u043D\u043E", "value": 17, "slug": "ruyno" }, { "key": "\u0420\u0443\u043C\u044F\u043D\u0446\u0435\u0432\u043E", "value": 33, "slug": "rumyancevo" }, { "key": "\u0420\u0443\u043D\u044F", "value": 3, "slug": "runya" }, { "key": "\u0420\u0443\u043F\u0438\u0442\u0435", "value": 40, "slug": "rupite" }, { "key": "\u0420\u0443\u043F\u043A\u0438\u0442\u0435", "value": 17, "slug": "rupkite" }, { "key": "\u0420\u0443\u043F\u0446\u0438", "value": 39, "slug": "rupci" }, { "key": "\u0420\u0443\u043F\u0447\u0430", "value": 9, "slug": "rupcha" }, { "key": "\u0420\u0443\u0441\u0430\u043B\u044F", "value": 15, "slug": "rusalya" }, { "key": "\u0420\u0443\u0441\u0435", "value": 17103, "slug": "ruse" }, { "key": "\u0420\u0443\u0441\u043A\u0430 \u0411\u0435\u043B\u0430", "value": 9, "slug": "ruska-bela" }, { "key": "\u0420\u0443\u0441\u043E\u043A\u0430\u0441\u0442\u0440\u043E", "value": 30, "slug": "rusokastro" }, { "key": "\u0420\u0443\u0445\u043E\u0432\u0446\u0438", "value": 2, "slug": "ruhovci" }, { "key": "\u0420\u044A\u0436\u0434\u0430\u043A", "value": 28, "slug": "rzhdak" }, { "key": "\u0420\u044A\u0436\u0435\u0432\u043E", "value": 4, "slug": "rzhevo" }, { "key": "\u0420\u044A\u0436\u0435\u0432\u043E \u041A\u043E\u043D\u0430\u0440\u0435", "value": 67, "slug": "rzhevo-konare" }, { "key": "\u0420\u044A\u0436\u0435\u043D\u0430", "value": 25, "slug": "rzhena" }, { "key": "\u0420\u044A\u0436\u0435\u043D\u043E\u0432\u043E", "value": 6, "slug": "rzhenovo" }, { "key": "\u0420\u044A\u0436\u0438\u0446\u0430", "value": 24, "slug": "rzhica" }, { "key": "\u0420\u044A\u0442\u043B\u0438\u043D\u0430", "value": 1, "slug": "rtlina" }, { "key": "\u0420\u044F\u0445\u043E\u0432\u043E", "value": 93, "slug": "ryahovo" }, { "key": "\u0420\u044F\u0445\u043E\u0432\u0446\u0438\u0442\u0435", "value": 39, "slug": "ryahovcite" }, { "key": "\u0421\u0430\u0432\u0430", "value": 18, "slug": "sava" }, { "key": "\u0421\u0430\u0432\u0438\u043D", "value": 8, "slug": "savin" }, { "key": "\u0421\u0430\u0432\u0438\u043D\u043E", "value": 8, "slug": "savino" }, { "key": "\u0421\u0430\u0434\u0438\u043D\u0430", "value": 24, "slug": "sadina" }, { "key": "\u0421\u0430\u0434\u043E\u0432\u0435\u0446", "value": 48, "slug": "sadovec" }, { "key": "\u0421\u0430\u0434\u043E\u0432\u0438\u043A", "value": 3, "slug": "sadovik" }, { "key": "\u0421\u0430\u0434\u043E\u0432\u043E", "value": 197, "slug": "sadovo" }, { "key": "\u0421\u0430\u043A\u0430\u0440\u0446\u0438", "value": 1, "slug": "sakarci" }, { "key": "\u0421\u0430\u043B\u0430\u0441\u0443\u043A\u0430", "value": 2, "slug": "salasuka" }, { "key": "\u0421\u0430\u043B\u043C\u0430\u043D\u043E\u0432\u043E", "value": 16, "slug": "salmanovo" }, { "key": "\u0421\u0430\u043C\u043E\u0432\u0438\u043B\u0430", "value": 1, "slug": "samovila" }, { "key": "\u0421\u0430\u043C\u043E\u0432\u043E\u0434\u0435\u043D\u0435", "value": 76, "slug": "samovodene" }, { "key": "\u0421\u0430\u043C\u043E\u0434\u0438\u0432\u0430", "value": 8, "slug": "samodiva" }, { "key": "\u0421\u0430\u043C\u043E\u043A\u0438\u0442\u043A\u0430", "value": 2, "slug": "samokitka" }, { "key": "\u0421\u0430\u043C\u043E\u043A\u043E\u0432", "value": 2744, "slug": "samokov" }, { "key": "\u0421\u0430\u043C\u043E\u0440\u0430\u043D\u043E\u0432\u043E", "value": 67, "slug": "samoranovo" }, { "key": "\u0421\u0430\u043C\u0443\u0438\u043B", "value": 58, "slug": "samuil" }, { "key": "\u0421\u0430\u043C\u0443\u0438\u043B\u043E\u0432\u043E", "value": 121, "slug": "samuilovo" }, { "key": "\u0421\u0430\u043D-\u0421\u0442\u0435\u0444\u0430\u043D\u043E", "value": 4, "slug": "san-stefano" }, { "key": "\u0421\u0430\u043D\u0430\u0434\u0438\u043D\u043E\u0432\u043E", "value": 3, "slug": "sanadinovo" }, { "key": "\u0421\u0430\u043D\u0434\u0430\u043D\u0441\u043A\u0438", "value": 4300, "slug": "sandanski" }, { "key": "\u0421\u0430\u043D\u0434\u0440\u043E\u0432\u043E", "value": 102, "slug": "sandrovo" }, { "key": "\u0421\u0430\u043F\u0430\u0440\u0435\u0432\u0430 \u0431\u0430\u043D\u044F", "value": 365, "slug": "sapareva-banya" }, { "key": "\u0421\u0430\u043F\u0430\u0440\u0435\u0432\u043E", "value": 55, "slug": "saparevo" }, { "key": "\u0421\u0430\u0440\u0430\u043D\u0441\u043A\u043E", "value": 4, "slug": "saransko" }, { "key": "\u0421\u0430\u0440\u0430\u043D\u0446\u0438", "value": 12, "slug": "saranci" }, { "key": "\u0421\u0430\u0440\u0430\u044F", "value": 42, "slug": "saraya" }, { "key": "\u0421\u0430\u0442\u043E\u0432\u0447\u0430", "value": 119, "slug": "satovcha" }, { "key": "\u0421\u0431\u043E\u0440", "value": 10, "slug": "sbor" }, { "key": "\u0421\u0431\u043E\u0440\u0438\u0449\u0435", "value": 49, "slug": "sborishche" }, { "key": "\u0421\u0432\u0430\u043B\u0435\u043D\u0438\u043A", "value": 27, "slug": "svalenik" }, { "key": "\u0421\u0432\u0435\u0436\u0435\u043D", "value": 17, "slug": "svezhen" }, { "key": "\u0421\u0432\u0435\u0442\u0430 \u041F\u0435\u0442\u043A\u0430", "value": 32, "slug": "sveta-petka" }, { "key": "\u0421\u0432\u0435\u0442\u0438 \u0412\u043B\u0430\u0441", "value": 1033, "slug": "sveti-vlas" }, { "key": "\u0421\u0432\u0435\u0442\u0438 \u041D\u0438\u043A\u043E\u043B\u0430", "value": 3, "slug": "sveti-nikola" }, { "key": "\u0421\u0432\u0435\u0442\u043B\u0435\u043D", "value": 20, "slug": "svetlen" }, { "key": "\u0421\u0432\u0435\u0442\u043B\u0438\u043D\u0430", "value": 34, "slug": "svetlina" }, { "key": "\u0421\u0432\u0435\u0442\u043B\u044F", "value": 10, "slug": "svetlya" }, { "key": "\u0421\u0432\u0435\u0442\u043E\u0432\u0440\u0430\u0447\u0435\u043D\u0435", "value": 143, "slug": "svetovrachene" }, { "key": "\u0421\u0432\u0435\u0442\u043E\u0441\u043B\u0430\u0432", "value": 10, "slug": "svetoslav" }, { "key": "\u0421\u0432\u0435\u0442\u043E\u0441\u043B\u0430\u0432\u0446\u0438", "value": 1, "slug": "svetoslavci" }, { "key": "\u0421\u0432\u0435\u0442\u0443\u043B\u043A\u0430", "value": 5, "slug": "svetulka" }, { "key": "\u0421\u0432\u0435\u0449\u0430\u0440\u0438", "value": 13, "slug": "sveshchari" }, { "key": "\u0421\u0432\u0438\u0434\u043D\u044F", "value": 42, "slug": "svidnya" }, { "key": "\u0421\u0432\u0438\u043B\u0435\u043D\u0433\u0440\u0430\u0434", "value": 1797, "slug": "svilengrad" }, { "key": "\u0421\u0432\u0438\u0440\u0430\u0447\u0438", "value": 8, "slug": "svirachi" }, { "key": "\u0421\u0432\u0438\u0440\u043A\u043E\u0432\u043E", "value": 8, "slug": "svirkovo" }, { "key": "\u0421\u0432\u0438\u0449\u043E\u0432", "value": 1589, "slug": "svishchov" }, { "key": "\u0421\u0432\u043E\u0431\u043E\u0434\u0430", "value": 54, "slug": "svoboda" }, { "key": "\u0421\u0432\u043E\u0431\u043E\u0434\u0435\u043D", "value": 4, "slug": "svoboden" }, { "key": "\u0421\u0432\u043E\u0431\u043E\u0434\u0438\u043D\u043E\u0432\u043E", "value": 8, "slug": "svobodinovo" }, { "key": "\u0421\u0432\u043E\u0433\u0435", "value": 600, "slug": "svoge" }, { "key": "\u0421\u0432\u043E\u0434\u0435", "value": 7, "slug": "svode" }, { "key": "\u0421\u0435\u0432\u0430\u0440", "value": 48, "slug": "sevar" }, { "key": "\u0421\u0435\u0432\u0435\u0440\u0446\u0438", "value": 3, "slug": "severci" }, { "key": "\u0421\u0435\u0432\u043B\u0438\u0435\u0432\u043E", "value": 2034, "slug": "sevlievo" }, { "key": "\u0421\u0435\u0434\u0435\u043B\u0435\u0446", "value": 1, "slug": "sedelec" }, { "key": "\u0421\u0435\u0434\u0435\u0444\u0447\u0435", "value": 1, "slug": "sedefche" }, { "key": "\u0421\u0435\u0434\u043B\u0430\u0440\u0435\u0432\u043E", "value": 1, "slug": "sedlarevo" }, { "key": "\u0421\u0435\u0434\u043B\u0430\u0440\u0438", "value": 9, "slug": "sedlari" }, { "key": "\u0421\u0435\u0434\u043B\u0430\u0440\u0446\u0438", "value": 4, "slug": "sedlarci" }, { "key": "\u0421\u0435\u0434\u043B\u043E\u0432\u0438\u043D\u0430", "value": 10, "slug": "sedlovina" }, { "key": "\u0421\u0435\u0434\u044F\u043D\u043A\u043E\u0432\u0446\u0438", "value": 3, "slug": "sedyankovci" }, { "key": "\u0421\u0435\u0439\u0434\u043E\u043B", "value": 13, "slug": "seydol" }, { "key": "\u0421\u0435\u043A\u0443\u043B\u043E\u0432\u043E", "value": 16, "slug": "sekulovo" }, { "key": "\u0421\u0435\u043B\u0430\u043D\u043E\u0432\u0446\u0438", "value": 85, "slug": "selanovci" }, { "key": "\u0421\u0435\u043B\u0438\u043C\u0438\u043D\u043E\u0432\u043E", "value": 47, "slug": "seliminovo" }, { "key": "\u0421\u0435\u043B\u0438\u0449\u0435", "value": 17, "slug": "selishche" }, { "key": "\u0421\u0435\u043B\u0438\u0449\u0435\u043D \u0434\u043E\u043B", "value": 2, "slug": "selishchen-dol" }, { "key": "\u0421\u0435\u043B\u0446\u0435", "value": 4, "slug": "selce" }, { "key": "\u0421\u0435\u043B\u0446\u0438", "value": 18, "slug": "selci" }, { "key": "\u0421\u0435\u043B\u0447\u0430", "value": 19, "slug": "selcha" }, { "key": "\u0421\u0435\u043B\u044F\u043D\u0438\u043D", "value": 5, "slug": "selyanin" }, { "key": "\u0421\u0435\u043C\u0435\u0440\u0434\u0436\u0438\u0435\u0432\u043E", "value": 38, "slug": "semerdzhievo" }, { "key": "\u0421\u0435\u043C\u0435\u0440\u0446\u0438", "value": 1, "slug": "semerci" }, { "key": "\u0421\u0435\u043C\u0447\u0438\u043D\u043E\u0432\u043E", "value": 45, "slug": "semchinovo" }, { "key": "\u0421\u0435\u043D\u043D\u0438\u043A", "value": 25, "slug": "sennik" }, { "key": "\u0421\u0435\u043D\u043E\u0432\u043E", "value": 34, "slug": "senovo" }, { "key": "\u0421\u0435\u043D\u043E\u043A\u043B\u0430\u0441", "value": 1, "slug": "senoklas" }, { "key": "\u0421\u0435\u043D\u043E\u043A\u043E\u0441", "value": 34, "slug": "senokos" }, { "key": "\u0421\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438", "value": 488, "slug": "septemvri" }, { "key": "\u0421\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438\u0439\u0446\u0438", "value": 46, "slug": "septemvriyci" }, { "key": "\u0421\u0435\u0441\u043B\u0430\u0432", "value": 36, "slug": "seslav" }, { "key": "\u0421\u0435\u0441\u0442\u0440\u0438\u043C\u043E", "value": 45, "slug": "sestrimo" }, { "key": "\u0421\u0435\u0441\u0442\u0440\u0438\u043D\u0441\u043A\u043E", "value": 2, "slug": "sestrinsko" }, { "key": "\u0421\u0435\u0447\u0438\u0449\u0435", "value": 3, "slug": "sechishche" }, { "key": "\u0421\u0438\u0432\u0430 \u0440\u0435\u043A\u0430", "value": 5, "slug": "siva-reka" }, { "key": "\u0421\u0438\u0432\u0438\u043D\u043E", "value": 3, "slug": "sivino" }, { "key": "\u0421\u0438\u0433\u043C\u0435\u043D", "value": 8, "slug": "sigmen" }, { "key": "\u0421\u0438\u043B\u0435\u043D", "value": 8, "slug": "silen" }, { "key": "\u0421\u0438\u043B\u0438\u0441\u0442\u0440\u0430", "value": 3289, "slug": "silistra" }, { "key": "\u0421\u0438\u043C\u0435\u043E\u043D\u043E\u0432\u0433\u0440\u0430\u0434", "value": 307, "slug": "simeonovgrad" }, { "key": "\u0421\u0438\u043C\u0435\u043E\u043D\u043E\u0432\u0435\u0446", "value": 41, "slug": "simeonovec" }, { "key": "\u0421\u0438\u043C\u0435\u043E\u043D\u043E\u0432\u043E", "value": 19, "slug": "simeonovo" }, { "key": "\u0421\u0438\u043C\u0438\u0442\u043B\u0438", "value": 469, "slug": "simitli" }, { "key": "\u0421\u0438\u043D\u0430\u0433\u043E\u0432\u0446\u0438", "value": 19, "slug": "sinagovci" }, { "key": "\u0421\u0438\u043D\u0430\u043F\u043E\u0432\u043E", "value": 18, "slug": "sinapovo" }, { "key": "\u0421\u0438\u043D\u0434\u0435\u043B", "value": 18, "slug": "sindel" }, { "key": "\u0421\u0438\u043D\u0434\u0435\u043B\u0446\u0438", "value": 8, "slug": "sindelci" }, { "key": "\u0421\u0438\u043D\u0435\u043C\u043E\u0440\u0435\u0446", "value": 61, "slug": "sinemorec" }, { "key": "\u0421\u0438\u043D\u0438 \u0432\u0438\u0440", "value": 5, "slug": "sini-vir" }, { "key": "\u0421\u0438\u043D\u0438 \u0440\u0438\u0434", "value": 22, "slug": "sini-rid" }, { "key": "\u0421\u0438\u043D\u0438\u0442\u043E\u0432\u043E", "value": 83, "slug": "sinitovo" }, { "key": "\u0421\u0438\u043D\u0447\u0435\u0446", "value": 2, "slug": "sinchec" }, { "key": "\u0421\u0438\u043D\u044C\u043E \u0431\u044A\u0440\u0434\u043E", "value": 6, "slug": "sino-brdo" }, { "key": "\u0421\u0438\u043D\u044F \u0432\u043E\u0434\u0430", "value": 19, "slug": "sinya-voda" }, { "key": "\u0421\u0438\u043F\u0435\u0439", "value": 30, "slug": "sipey" }, { "key": "\u0421\u0438\u0440\u0430\u043A\u043E\u0432\u043E", "value": 24, "slug": "sirakovo" }, { "key": "\u0421\u0438\u0440\u0438\u0449\u043D\u0438\u043A", "value": 11, "slug": "sirishchnik" }, { "key": "\u0421\u0438\u0442\u043E\u0432\u043E", "value": 58, "slug": "sitovo" }, { "key": "\u0421\u043A\u0430\u043B\u0430", "value": 8, "slug": "skala" }, { "key": "\u0421\u043A\u0430\u043B\u0430\u043A", "value": 32, "slug": "skalak" }, { "key": "\u0421\u043A\u0430\u043B\u0438\u043D\u0430", "value": 1, "slug": "skalina" }, { "key": "\u0421\u043A\u0430\u043B\u0438\u0446\u0430", "value": 27, "slug": "skalica" }, { "key": "\u0421\u043A\u0430\u043B\u0438\u0449\u0435", "value": 9, "slug": "skalishche" }, { "key": "\u0421\u043A\u0430\u043B\u043D\u0430 \u0433\u043B\u0430\u0432\u0430", "value": 5, "slug": "skalna-glava" }, { "key": "\u0421\u043A\u0430\u043B\u0441\u043A\u043E", "value": 12, "slug": "skalsko" }, { "key": "\u0421\u043A\u0430\u043D\u0434\u0430\u043B\u043E\u0442\u043E", "value": 4, "slug": "skandaloto" }, { "key": "\u0421\u043A\u043B\u0430\u0432\u0435", "value": 59, "slug": "sklave" }, { "key": "\u0421\u043A\u043E\u0431\u0435\u043B\u0435\u0432\u043E", "value": 70, "slug": "skobelevo" }, { "key": "\u0421\u043A\u0440\u0430\u0432\u0435\u043D\u0430", "value": 68, "slug": "skravena" }, { "key": "\u0421\u043A\u0440\u0435\u0431\u0430\u0442\u043D\u043E", "value": 14, "slug": "skrebatno" }, { "key": "\u0421\u043A\u0440\u0438\u043D\u043E", "value": 2, "slug": "skrino" }, { "key": "\u0421\u043A\u0440\u0438\u043D\u044F\u043D\u043E", "value": 7, "slug": "skrinyano" }, { "key": "\u0421\u043A\u0440\u044A\u0442", "value": 45, "slug": "skrt" }, { "key": "\u0421\u043A\u0443\u0442\u0430\u0440\u0435", "value": 144, "slug": "skutare" }, { "key": "\u0421\u043A\u044A\u0440\u0431\u0438\u043D\u043E", "value": 6, "slug": "skrbino" }, { "key": "\u0421\u043B\u0430\u0432\u0435\u0435\u0432\u043E", "value": 18, "slug": "slaveevo" }, { "key": "\u0421\u043B\u0430\u0432\u0435\u0439\u043A\u043E\u0432\u043E", "value": 18, "slug": "slaveykovo" }, { "key": "\u0421\u043B\u0430\u0432\u0435\u0439\u043D\u043E", "value": 10, "slug": "slaveyno" }, { "key": "\u0421\u043B\u0430\u0432\u043E\u0432\u0438\u0446\u0430", "value": 24, "slug": "slavovica" }, { "key": "\u0421\u043B\u0430\u0432\u043E\u0442\u0438\u043D", "value": 3, "slug": "slavotin" }, { "key": "\u0421\u043B\u0430\u0432\u0449\u0438\u0446\u0430", "value": 5, "slug": "slavshchica" }, { "key": "\u0421\u043B\u0430\u0432\u044F\u043D\u0438", "value": 15, "slug": "slavyani" }, { "key": "\u0421\u043B\u0430\u0432\u044F\u043D\u0438\u043D", "value": 2, "slug": "slavyanin" }, { "key": "\u0421\u043B\u0430\u0432\u044F\u043D\u043E\u0432\u043E", "value": 179, "slug": "slavyanovo" }, { "key": "\u0421\u043B\u0430\u0432\u044F\u043D\u0446\u0438", "value": 39, "slug": "slavyanci" }, { "key": "\u0421\u043B\u0430\u0434\u043A\u0430 \u0432\u043E\u0434\u0430", "value": 2, "slug": "sladka-voda" }, { "key": "\u0421\u043B\u0430\u0434\u0443\u043D", "value": 5, "slug": "sladun" }, { "key": "\u0421\u043B\u0430\u0434\u044A\u043A \u043A\u043B\u0430\u0434\u0435\u043D\u0435\u0446", "value": 1, "slug": "sladk-kladenec" }, { "key": "\u0421\u043B\u0430\u043A\u043E\u0432\u0446\u0438", "value": 9, "slug": "slakovci" }, { "key": "\u0421\u043B\u0430\u043C\u0438\u043D\u043E", "value": 7, "slug": "slamino" }, { "key": "\u0421\u043B\u0430\u043D\u0430 \u0431\u0430\u0440\u0430", "value": 13, "slug": "slana-bara" }, { "key": "\u0421\u043B\u0430\u043D\u043E\u0442\u0440\u044A\u043D", "value": 20, "slug": "slanotrn" }, { "key": "\u0421\u043B\u0430\u0442\u0438\u043D\u0430", "value": 53, "slug": "slatina" }, { "key": "\u0421\u043B\u0430\u0442\u0438\u043D\u043E", "value": 16, "slug": "slatino" }, { "key": "\u0421\u043B\u0430\u0449\u0435\u043D", "value": 68, "slug": "slashchen" }, { "key": "\u0421\u043B\u0438\u0432\u0430\u043A", "value": 6, "slug": "slivak" }, { "key": "\u0421\u043B\u0438\u0432\u0430\u0440\u043A\u0430", "value": 9, "slug": "slivarka" }, { "key": "\u0421\u043B\u0438\u0432\u0430\u0440\u043E\u0432\u043E", "value": 3, "slug": "slivarovo" }, { "key": "\u0421\u043B\u0438\u0432\u0430\u0442\u0430", "value": 1, "slug": "slivata" }, { "key": "\u0421\u043B\u0438\u0432\u0435\u043A", "value": 6, "slug": "slivek" }, { "key": "\u0421\u043B\u0438\u0432\u0435\u043D", "value": 8240, "slug": "sliven" }, { "key": "\u0421\u043B\u0438\u0432\u0435\u043D\u0446\u0438", "value": 4, "slug": "slivenci" }, { "key": "\u0421\u043B\u0438\u0432\u0438\u0442\u043E", "value": 2, "slug": "slivito" }, { "key": "\u0421\u043B\u0438\u0432\u043A\u0430", "value": 1, "slug": "slivka" }, { "key": "\u0421\u043B\u0438\u0432\u043D\u0438\u0446\u0430", "value": 664, "slug": "slivnica" }, { "key": "\u0421\u043B\u0438\u0432\u043E \u043F\u043E\u043B\u0435", "value": 127, "slug": "slivo-pole" }, { "key": "\u0421\u043B\u0438\u0432\u043E\u0432\u0438\u043A", "value": 5, "slug": "slivovik" }, { "key": "\u0421\u043B\u0438\u0432\u043E\u0432\u0438\u0446\u0430", "value": 1, "slug": "slivovica" }, { "key": "\u0421\u043B\u0438\u0432\u043E\u0432\u043E", "value": 2, "slug": "slivovo" }, { "key": "\u0421\u043B\u0438\u0448\u043E\u0432\u0446\u0438", "value": 1, "slug": "slishovci" }, { "key": "\u0421\u043B\u043E\u043A\u043E\u0449\u0438\u0446\u0430", "value": 58, "slug": "slokoshchica" }, { "key": "\u0421\u043B\u043E\u043C\u0435\u0440", "value": 7, "slug": "slomer" }, { "key": "\u0421\u043B\u044A\u043D\u0447\u0435\u0432\u043E", "value": 43, "slug": "slnchevo" }, { "key": "\u0421\u043B\u044A\u043D\u0447\u043E\u0433\u043B\u0435\u0434", "value": 17, "slug": "slnchogled" }, { "key": "\u0421\u043C\u0438\u043B\u0435\u0446", "value": 15, "slug": "smilec" }, { "key": "\u0421\u043C\u0438\u043B\u044F\u043D", "value": 108, "slug": "smilyan" }, { "key": "\u0421\u043C\u0438\u043D", "value": 3, "slug": "smin" }, { "key": "\u0421\u043C\u0438\u0440\u043D\u0435\u043D\u0441\u043A\u0438", "value": 112, "slug": "smirnenski" }, { "key": "\u0421\u043C\u0438\u0440\u043E\u0432 \u0434\u043E\u043B", "value": 7, "slug": "smirov-dol" }, { "key": "\u0421\u043C\u043E\u043B\u0435\u0432\u043E", "value": 8, "slug": "smolevo" }, { "key": "\u0421\u043C\u043E\u043B\u0438\u0447\u0430\u043D\u043E", "value": 4, "slug": "smolichano" }, { "key": "\u0421\u043C\u043E\u043B\u043D\u0438\u043A", "value": 2, "slug": "smolnik" }, { "key": "\u0421\u043C\u043E\u043B\u043D\u0438\u0446\u0430", "value": 14, "slug": "smolnica" }, { "key": "\u0421\u043C\u043E\u043B\u0441\u043A\u043E", "value": 6, "slug": "smolsko" }, { "key": "\u0421\u043C\u043E\u043B\u044F\u043D", "value": 3349, "slug": "smolyan" }, { "key": "\u0421\u043C\u043E\u043B\u044F\u043D\u043E\u0432\u0446\u0438", "value": 21, "slug": "smolyanovci" }, { "key": "\u0421\u043C\u043E\u0447\u0430\u043D", "value": 15, "slug": "smochan" }, { "key": "\u0421\u043C\u043E\u0447\u0435\u0432\u043E", "value": 2, "slug": "smochevo" }, { "key": "\u0421\u043C\u044F\u0434\u043E\u0432\u043E", "value": 183, "slug": "smyadovo" }, { "key": "\u0421\u043D\u0435\u0436\u0430", "value": 6, "slug": "snezha" }, { "key": "\u0421\u043D\u0435\u0436\u0438\u043D\u0430", "value": 11, "slug": "snezhina" }, { "key": "\u0421\u043D\u043E\u043F", "value": 11, "slug": "snop" }, { "key": "\u0421\u043D\u044F\u0433\u043E\u0432\u043E", "value": 42, "slug": "snyagovo" }, { "key": "\u0421\u043E\u0432\u0430\u0442\u0430", "value": 6, "slug": "sovata" }, { "key": "\u0421\u043E\u0432\u043E\u043B\u044F\u043D\u043E", "value": 25, "slug": "sovolyano" }, { "key": "\u0421\u043E\u0437\u043E\u043F\u043E\u043B", "value": 979, "slug": "sozopol" }, { "key": "\u0421\u043E\u043A\u043E\u043B", "value": 16, "slug": "sokol" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u0430\u0440\u0435", "value": 12, "slug": "sokolare" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u0430\u0440\u0446\u0438", "value": 11, "slug": "sokolarci" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u0435\u0446", "value": 3, "slug": "sokolec" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u0438\u043D\u043E", "value": 15, "slug": "sokolino" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u0438\u0446\u0430", "value": 19, "slug": "sokolica" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u043E\u0432\u043E", "value": 96, "slug": "sokolovo" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u043E\u0432\u0446\u0438", "value": 10, "slug": "sokolovci" }, { "key": "\u0421\u043E\u043A\u043E\u043B\u044F\u043D\u0435", "value": 8, "slug": "sokolyane" }, { "key": "\u0421\u043E\u043B\u0438\u0449\u0430", "value": 2, "slug": "solishcha" }, { "key": "\u0421\u043E\u043B\u0438\u0449\u0435", "value": 11, "slug": "solishche" }, { "key": "\u0421\u043E\u043B\u043D\u0438\u043A", "value": 12, "slug": "solnik" }, { "key": "\u0421\u043E\u043C\u043E\u0432\u0438\u0442", "value": 12, "slug": "somovit" }, { "key": "\u0421\u043E\u043F\u0438\u0446\u0430", "value": 3, "slug": "sopica" }, { "key": "\u0421\u043E\u043F\u043E\u0442", "value": 573, "slug": "sopot" }, { "key": "\u0421\u043E\u043F\u043E\u0442\u043E\u0442", "value": 11, "slug": "sopotot" }, { "key": "\u0421\u043E\u0442\u0438\u0440\u044F", "value": 45, "slug": "sotirya" }, { "key": "\u0421\u043E\u0444\u0438\u0439\u0446\u0438", "value": 2, "slug": "sofiyci" }, { "key": "\u0421\u043E\u0444\u0438\u044F", "value": 192809, "slug": "sofiya" }, { "key": "\u0421\u043E\u0444\u0440\u043E\u043D\u0438\u0435\u0432\u043E", "value": 29, "slug": "sofronievo" }, { "key": "\u0421\u043F\u0430\u043D\u0447\u0435\u0432\u0446\u0438", "value": 9, "slug": "spanchevci" }, { "key": "\u0421\u043F\u0430\u0441\u043E\u0432\u043E", "value": 48, "slug": "spasovo" }, { "key": "\u0421\u043F\u0430\u0442\u043E\u0432\u043E", "value": 4, "slug": "spatovo" }, { "key": "\u0421\u043F\u0430\u0445\u0438\u0435\u0432\u043E", "value": 8, "slug": "spahievo" }, { "key": "\u0421\u0440\u0430\u0446\u0438\u043C\u0438\u0440", "value": 9, "slug": "sracimir" }, { "key": "\u0421\u0440\u0430\u0446\u0438\u043C\u0438\u0440\u043E\u0432\u043E", "value": 1, "slug": "sracimirovo" }, { "key": "\u0421\u0440\u0435\u0431\u044A\u0440\u043D\u0430", "value": 16, "slug": "srebrna" }, { "key": "\u0421\u0440\u0435\u0434\u0435\u0446", "value": 588, "slug": "sredec" }, { "key": "\u0421\u0440\u0435\u0434\u0438\u043D\u0430", "value": 3, "slug": "sredina" }, { "key": "\u0421\u0440\u0435\u0434\u0438\u043D\u043A\u0430", "value": 9, "slug": "sredinka" }, { "key": "\u0421\u0440\u0435\u0434\u0438\u0449\u0435", "value": 34, "slug": "sredishche" }, { "key": "\u0421\u0440\u0435\u0434\u043A\u043E\u0432\u0435\u0446", "value": 13, "slug": "sredkovec" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 5, "slug": "sredna-mahala" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u0435\u0432\u043E", "value": 6, "slug": "srednevo" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u0438 \u043A\u043E\u043B\u0438\u0431\u0438", "value": 11, "slug": "sredni-kolibi" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u043E \u0433\u0440\u0430\u0434\u0438\u0449\u0435", "value": 14, "slug": "sredno-gradishche" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u043E \u0441\u0435\u043B\u043E", "value": 7, "slug": "sredno-selo" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u043E\u0433\u043E\u0440\u043E\u0432\u043E", "value": 11, "slug": "srednogorovo" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u043E\u0433\u043E\u0440\u0446\u0438", "value": 48, "slug": "srednogorci" }, { "key": "\u0421\u0440\u0435\u0434\u043D\u044F", "value": 10, "slug": "srednya" }, { "key": "\u0421\u0440\u0435\u0434\u043E\u0433\u0440\u0438\u0432", "value": 2, "slug": "sredogriv" }, { "key": "\u0421\u0440\u0435\u0434\u043E\u0440\u0435\u043A", "value": 4, "slug": "sredorek" }, { "key": "\u0421\u0440\u0435\u0434\u043E\u0441\u0435\u043B\u0446\u0438", "value": 11, "slug": "sredoselci" }, { "key": "\u0421\u0440\u0435\u0434\u0441\u043A\u043E", "value": 3, "slug": "sredsko" }, { "key": "\u0421\u0440\u0435\u043C", "value": 26, "slug": "srem" }, { "key": "\u0421\u0440\u044A\u043D\u0441\u043A\u043E", "value": 3, "slug": "srnsko" }, { "key": "\u0421\u0442\u0430\u0432\u0435\u0440\u0446\u0438", "value": 42, "slug": "staverci" }, { "key": "\u0421\u0442\u0430\u0435\u0432\u0446\u0438", "value": 1, "slug": "staevci" }, { "key": "\u0421\u0442\u0430\u043A\u0435\u0432\u0446\u0438", "value": 6, "slug": "stakevci" }, { "key": "\u0421\u0442\u0430\u043B\u0435\u0432\u043E", "value": 9, "slug": "stalevo" }, { "key": "\u0421\u0442\u0430\u043B\u0438\u0439\u0441\u043A\u0430 \u043C\u0430\u0445\u0430\u043B\u0430", "value": 26, "slug": "staliyska-mahala" }, { "key": "\u0421\u0442\u0430\u043C\u0431\u043E\u043B\u0438\u0439\u0441\u043A\u0438", "value": 700, "slug": "stamboliyski" }, { "key": "\u0421\u0442\u0430\u043C\u0431\u043E\u043B\u043E\u0432\u043E", "value": 134, "slug": "stambolovo" }, { "key": "\u0421\u0442\u0430\u043D", "value": 19, "slug": "stan" }, { "key": "\u0421\u0442\u0430\u043D\u0435\u0432\u043E", "value": 4, "slug": "stanevo" }, { "key": "\u0421\u0442\u0430\u043D\u0435\u0446", "value": 5, "slug": "stanec" }, { "key": "\u0421\u0442\u0430\u043D\u0438\u043D\u0446\u0438", "value": 1, "slug": "staninci" }, { "key": "\u0421\u0442\u0430\u043D\u043E\u0432\u0435\u0446", "value": 2, "slug": "stanovec" }, { "key": "\u0421\u0442\u0430\u043D\u0447\u043E\u0432 \u0445\u0430\u043D", "value": 1, "slug": "stanchov-han" }, { "key": "\u0421\u0442\u0430\u043D\u044C\u043E\u0432\u0446\u0438", "value": 1, "slug": "stanovci" }, { "key": "\u0421\u0442\u0430\u043D\u044F\u043D\u0446\u0438", "value": 11, "slug": "stanyanci" }, { "key": "\u0421\u0442\u0430\u0440\u0430 \u0417\u0430\u0433\u043E\u0440\u0430", "value": 15025, "slug": "stara-zagora" }, { "key": "\u0421\u0442\u0430\u0440\u0430 \u041A\u0440\u0435\u0441\u043D\u0430", "value": 2, "slug": "stara-kresna" }, { "key": "\u0421\u0442\u0430\u0440\u0430 \u0440\u0435\u043A\u0430", "value": 37, "slug": "stara-reka" }, { "key": "\u0421\u0442\u0430\u0440\u0430 \u0440\u0435\u0447\u043A\u0430", "value": 5, "slug": "stara-rechka" }, { "key": "\u0421\u0442\u0430\u0440\u0438 \u0447\u0430\u043B", "value": 1, "slug": "stari-chal" }, { "key": "\u0421\u0442\u0430\u0440\u043E \u0416\u0435\u043B\u0435\u0437\u0430\u0440\u0435", "value": 18, "slug": "staro-zhelezare" }, { "key": "\u0421\u0442\u0430\u0440\u043E \u041E\u0440\u044F\u0445\u043E\u0432\u043E", "value": 95, "slug": "staro-oryahovo" }, { "key": "\u0421\u0442\u0430\u0440\u043E \u0441\u0435\u043B\u0438\u0449\u0435", "value": 5, "slug": "staro-selishche" }, { "key": "\u0421\u0442\u0430\u0440\u043E \u0441\u0435\u043B\u043E", "value": 44, "slug": "staro-selo" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u0432\u043E", "value": 2, "slug": "starovo" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u0437\u0430\u0433\u043E\u0440\u0441\u043A\u0438 \u0431\u0430\u043D\u0438", "value": 20, "slug": "starozagorski-bani" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u043F\u0430\u0442\u0438\u0446\u0430", "value": 8, "slug": "staropatica" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u0441\u0435\u043B", "value": 28, "slug": "starosel" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u0441\u0435\u043B\u0435\u0446", "value": 3, "slug": "staroselec" }, { "key": "\u0421\u0442\u0430\u0440\u043E\u0441\u0435\u043B\u0446\u0438", "value": 25, "slug": "staroselci" }, { "key": "\u0421\u0442\u0430\u0440\u0446\u0435\u0432\u043E", "value": 111, "slug": "starcevo" }, { "key": "\u0421\u0442\u0430\u0440\u0447\u0435\u0432\u043E", "value": 26, "slug": "starchevo" }, { "key": "\u0421\u0442\u0430\u0440\u0447\u0438\u0449\u0435", "value": 3, "slug": "starchishche" }, { "key": "\u0421\u0442\u0435\u0432\u0440\u0435\u043A", "value": 1, "slug": "stevrek" }, { "key": "\u0421\u0442\u0435\u0436\u0435\u0440\u043E\u0432\u043E", "value": 17, "slug": "stezherovo" }, { "key": "\u0421\u0442\u0435\u043D\u0441\u043A\u043E", "value": 1, "slug": "stensko" }, { "key": "\u0421\u0442\u0435\u0444\u0430\u043D \u041A\u0430\u0440\u0430\u0434\u0436\u0430", "value": 92, "slug": "stefan-karadzha" }, { "key": "\u0421\u0442\u0435\u0444\u0430\u043D \u041A\u0430\u0440\u0430\u0434\u0436\u043E\u0432\u043E", "value": 23, "slug": "stefan-karadzhovo" }, { "key": "\u0421\u0442\u0435\u0444\u0430\u043D \u0421\u0442\u0430\u043C\u0431\u043E\u043B\u043E\u0432\u043E", "value": 13, "slug": "stefan-stambolovo" }, { "key": "\u0421\u0442\u0435\u0444\u0430\u043D\u043E\u0432\u043E", "value": 63, "slug": "stefanovo" }, { "key": "\u0421\u0442\u043E\u0431", "value": 11, "slug": "stob" }, { "key": "\u0421\u0442\u043E\u0435\u0432\u043E", "value": 18, "slug": "stoevo" }, { "key": "\u0421\u0442\u043E\u0435\u0432\u0446\u0438", "value": 2, "slug": "stoevci" }, { "key": "\u0421\u0442\u043E\u0436\u0430", "value": 1, "slug": "stozha" }, { "key": "\u0421\u0442\u043E\u0436\u0435\u0440", "value": 62, "slug": "stozher" }, { "key": "\u0421\u0442\u043E\u0438\u043B \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 28, "slug": "stoil-voyvoda" }, { "key": "\u0421\u0442\u043E\u0438\u043B\u043E\u0432\u043E", "value": 8, "slug": "stoilovo" }, { "key": "\u0421\u0442\u043E\u0439\u043A\u0438\u0442\u0435", "value": 30, "slug": "stoykite" }, { "key": "\u0421\u0442\u043E\u0439\u043A\u043E\u0432\u043E", "value": 3, "slug": "stoykovo" }, { "key": "\u0421\u0442\u043E\u0439\u043D\u043E\u0432\u043E", "value": 1, "slug": "stoynovo" }, { "key": "\u0421\u0442\u043E\u0439\u0447\u043E\u0432\u0446\u0438", "value": 3, "slug": "stoychovci" }, { "key": "\u0421\u0442\u043E\u043A\u0438\u0442\u0435", "value": 11, "slug": "stokite" }, { "key": "\u0421\u0442\u043E\u043B\u0435\u0442\u043E\u0432\u043E", "value": 22, "slug": "stoletovo" }, { "key": "\u0421\u0442\u043E\u043B\u043D\u0438\u043A", "value": 23, "slug": "stolnik" }, { "key": "\u0421\u0442\u043E\u043B\u044A\u0442", "value": 9, "slug": "stolt" }, { "key": "\u0421\u0442\u043E\u043C\u0430\u043D\u0435\u0432\u043E", "value": 5, "slug": "stomanevo" }, { "key": "\u0421\u0442\u043E\u043C\u0430\u043D\u0435\u0446\u0438\u0442\u0435", "value": 2, "slug": "stomanecite" }, { "key": "\u0421\u0442\u043E\u043C\u0430\u043D\u0446\u0438", "value": 4, "slug": "stomanci" }, { "key": "\u0421\u0442\u043E\u044F\u043D \u041C\u0438\u0445\u0430\u0439\u043B\u043E\u0432\u0441\u043A\u0438", "value": 19, "slug": "stoyan-mihaylovski" }, { "key": "\u0421\u0442\u043E\u044F\u043D-\u0417\u0430\u0438\u043C\u043E\u0432\u043E", "value": 1, "slug": "stoyan-zaimovo" }, { "key": "\u0421\u0442\u043E\u044F\u043D\u043E\u0432\u0446\u0438", "value": 1, "slug": "stoyanovci" }, { "key": "\u0421\u0442\u0440\u0430\u0436\u0430", "value": 43, "slug": "strazha" }, { "key": "\u0421\u0442\u0440\u0430\u0436\u0435\u0432\u0446\u0438", "value": 1, "slug": "strazhevci" }, { "key": "\u0421\u0442\u0440\u0430\u0436\u0435\u0446", "value": 85, "slug": "strazhec" }, { "key": "\u0421\u0442\u0440\u0430\u0436\u0438\u0446\u0430", "value": 265, "slug": "strazhica" }, { "key": "\u0421\u0442\u0440\u0430\u0436\u043D\u0438\u0446\u0430", "value": 4, "slug": "strazhnica" }, { "key": "\u0421\u0442\u0440\u0430\u043B\u0434\u0436\u0430", "value": 302, "slug": "straldzha" }, { "key": "\u0421\u0442\u0440\u0430\u043D\u0434\u0436\u0430", "value": 3, "slug": "strandzha" }, { "key": "\u0421\u0442\u0440\u0430\u043D\u0434\u0436\u0435\u0432\u043E", "value": 5, "slug": "strandzhevo" }, { "key": "\u0421\u0442\u0440\u0430\u043D\u0441\u043A\u043E", "value": 12, "slug": "stransko" }, { "key": "\u0421\u0442\u0440\u0430\u0445\u0438\u043B", "value": 1, "slug": "strahil" }, { "key": "\u0421\u0442\u0440\u0430\u0445\u0438\u043B \u0432\u043E\u0439\u0432\u043E\u0434\u0430", "value": 3, "slug": "strahil-voyvoda" }, { "key": "\u0421\u0442\u0440\u0430\u0445\u0438\u043B\u0438\u0446\u0430", "value": 2, "slug": "strahilica" }, { "key": "\u0421\u0442\u0440\u0430\u0445\u0438\u043B\u043E\u0432\u043E", "value": 58, "slug": "strahilovo" }, { "key": "\u0421\u0442\u0440\u0430\u0446\u0438\u043D", "value": 41, "slug": "stracin" }, { "key": "\u0421\u0442\u0440\u0430\u0448\u0438\u043C\u0438\u0440", "value": 1, "slug": "strashimir" }, { "key": "\u0421\u0442\u0440\u0430\u0448\u0438\u043C\u0438\u0440\u043E\u0432\u043E", "value": 34, "slug": "strashimirovo" }, { "key": "\u0421\u0442\u0440\u0435\u043B\u0435\u0446", "value": 13, "slug": "strelec" }, { "key": "\u0421\u0442\u0440\u0435\u043B\u0446\u0438", "value": 37, "slug": "strelci" }, { "key": "\u0421\u0442\u0440\u0435\u043B\u0447\u0430", "value": 213, "slug": "strelcha" }, { "key": "\u0421\u0442\u0440\u0435\u043C\u043E\u0432\u043E", "value": 6, "slug": "stremovo" }, { "key": "\u0421\u0442\u0440\u0435\u043C\u0446\u0438", "value": 34, "slug": "stremci" }, { "key": "\u0421\u0442\u0440\u0438\u0436\u0431\u0430", "value": 3, "slug": "strizhba" }, { "key": "\u0421\u0442\u0440\u043E\u0435\u0432\u043E", "value": 109, "slug": "stroevo" }, { "key": "\u0421\u0442\u0440\u0443\u0438\u043D\u043E", "value": 8, "slug": "struino" }, { "key": "\u0421\u0442\u0440\u0443\u043C\u0430", "value": 20, "slug": "struma" }, { "key": "\u0421\u0442\u0440\u0443\u043C\u0435\u0448\u043D\u0438\u0446\u0430", "value": 15, "slug": "strumeshnica" }, { "key": "\u0421\u0442\u0440\u0443\u043C\u044F\u043D\u0438", "value": 90, "slug": "strumyani" }, { "key": "\u0421\u0442\u0440\u0443\u043F\u0435\u0446", "value": 6, "slug": "strupec" }, { "key": "\u0421\u0442\u0440\u0443\u044F", "value": 29, "slug": "struya" }, { "key": "\u0421\u0442\u0440\u044F\u043C\u0430", "value": 146, "slug": "stryama" }, { "key": "\u0421\u0442\u0443\u0431\u0435\u043B", "value": 19, "slug": "stubel" }, { "key": "\u0421\u0442\u0443\u0434\u0435\u043D \u0438\u0437\u0432\u043E\u0440", "value": 2, "slug": "studen-izvor" }, { "key": "\u0421\u0442\u0443\u0434\u0435\u043D\u0430", "value": 126, "slug": "studena" }, { "key": "\u0421\u0442\u0443\u0434\u0435\u043D\u0435\u0446", "value": 12, "slug": "studenec" }, { "key": "\u0421\u0442\u0443\u0434\u0435\u043D\u0438\u0446\u0430", "value": 7, "slug": "studenica" }, { "key": "\u0421\u0442\u0443\u0434\u0435\u043D\u043E \u0431\u0443\u0447\u0435", "value": 19, "slug": "studeno-buche" }, { "key": "\u0421\u0442\u044A\u0440\u0433\u0435\u043B", "value": 25, "slug": "strgel" }, { "key": "\u0421\u0442\u044A\u0440\u043C\u0435\u043D", "value": 5, "slug": "strmen" }, { "key": "\u0421\u0442\u044A\u0440\u043D\u0438\u0446\u0430", "value": 17, "slug": "strnica" }, { "key": "\u0421\u0443\u0432\u043E\u0440\u043E\u0432\u043E", "value": 229, "slug": "suvorovo" }, { "key": "\u0421\u0443\u0433\u0430\u0440\u0435\u0432\u043E", "value": 3, "slug": "sugarevo" }, { "key": "\u0421\u0443\u043B\u0438\u0446\u0430", "value": 5, "slug": "sulica" }, { "key": "\u0421\u0443\u043C\u0435\u0440", "value": 2, "slug": "sumer" }, { "key": "\u0421\u0443\u043D\u0433\u0443\u0440\u043B\u0430\u0440\u0435", "value": 219, "slug": "sungurlare" }, { "key": "\u0421\u0443\u0441\u0430\u043C", "value": 26, "slug": "susam" }, { "key": "\u0421\u0443\u0445\u0430 \u0440\u0435\u043A\u0430", "value": 10, "slug": "suha-reka" }, { "key": "\u0421\u0443\u0445\u0430\u0447\u0435", "value": 18, "slug": "suhache" }, { "key": "\u0421\u0443\u0445\u0438\u043D\u0434\u043E\u043B", "value": 114, "slug": "suhindol" }, { "key": "\u0421\u0443\u0445\u043E\u0432\u043E", "value": 2, "slug": "suhovo" }, { "key": "\u0421\u0443\u0445\u043E\u0434\u043E\u043B", "value": 36, "slug": "suhodol" }, { "key": "\u0421\u0443\u0445\u043E\u0437\u0435\u043C", "value": 9, "slug": "suhozem" }, { "key": "\u0421\u0443\u0448\u0435\u0432\u043E", "value": 21, "slug": "sushevo" }, { "key": "\u0421\u0443\u0448\u0438\u043D\u0430", "value": 4, "slug": "sushina" }, { "key": "\u0421\u0443\u0448\u0438\u0446\u0430", "value": 28, "slug": "sushica" }, { "key": "\u0421\u044A\u0431\u043E\u0442\u043A\u043E\u0432\u0446\u0438", "value": 2, "slug": "sbotkovci" }, { "key": "\u0421\u044A\u0431\u0440\u0430\u043D\u043E", "value": 10, "slug": "sbrano" }, { "key": "\u0421\u044A\u0434\u0438\u0435\u0432\u043E", "value": 36, "slug": "sdievo" }, { "key": "\u0421\u044A\u0434\u0438\u0439\u0441\u043A\u043E \u043F\u043E\u043B\u0435", "value": 3, "slug": "sdiysko-pole" }, { "key": "\u0421\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0435", "value": 315, "slug": "sedinenie" }, { "key": "\u0421\u044A\u0440\u043D\u0435\u0432\u0435\u0446", "value": 9, "slug": "srnevec" }, { "key": "\u0421\u044A\u0440\u043D\u0435\u0432\u043E", "value": 78, "slug": "srnevo" }, { "key": "\u0421\u044A\u0440\u043D\u0435\u0433\u043E\u0440", "value": 8, "slug": "srnegor" }, { "key": "\u0421\u044A\u0440\u043D\u0435\u0446", "value": 5, "slug": "srnec" }, { "key": "\u0421\u044A\u0440\u043D\u0438\u043D\u043E", "value": 12, "slug": "srnino" }, { "key": "\u0421\u044A\u0440\u043D\u0438\u0446\u0430", "value": 346, "slug": "srnica" }, { "key": "\u0421\u044A\u0440\u043F\u043E\u0432\u043E", "value": 4, "slug": "srpovo" }, { "key": "\u0421\u044A\u0440\u0446\u0435\u0432\u043E", "value": 3, "slug": "srcevo" }, { "key": "\u0421\u044F\u043D\u043E\u0432\u043E", "value": 11, "slug": "syanovo" }, { "key": "\u0422\u0430\u0431\u0430\u043D", "value": 2, "slug": "taban" }, { "key": "\u0422\u0430\u0431\u0430\u0447\u043A\u0430", "value": 10, "slug": "tabachka" }, { "key": "\u0422\u0430\u0431\u0430\u0448\u043A\u0430", "value": 2, "slug": "tabashka" }, { "key": "\u0422\u0430\u0432\u0430\u043B\u0438\u0447\u0435\u0432\u043E", "value": 4, "slug": "tavalichevo" }, { "key": "\u0422\u0430\u0439\u043C\u0438\u0449\u0435", "value": 2, "slug": "taymishche" }, { "key": "\u0422\u0430\u043C\u0430\u0440\u0438\u043D\u043E", "value": 9, "slug": "tamarino" }, { "key": "\u0422\u0430\u0442\u0430\u0440\u0435\u0432\u043E", "value": 38, "slug": "tatarevo" }, { "key": "\u0422\u0430\u0442\u0430\u0440\u0438", "value": 2, "slug": "tatari" }, { "key": "\u0422\u0430\u0442\u0443\u043B", "value": 1, "slug": "tatul" }, { "key": "\u0422\u0432\u044A\u0440\u0434\u0438\u043D\u0446\u0438", "value": 1, "slug": "tvrdinci" }, { "key": "\u0422\u0432\u044A\u0440\u0434\u0438\u0446\u0430", "value": 321, "slug": "tvrdica" }, { "key": "\u0422\u0435\u043A\u0435\u0442\u043E", "value": 3, "slug": "teketo" }, { "key": "\u0422\u0435\u043B\u0435\u0440\u0438\u0433", "value": 18, "slug": "telerig" }, { "key": "\u0422\u0435\u043B\u0438\u0448", "value": 24, "slug": "telish" }, { "key": "\u0422\u0435\u043B\u0447\u0430\u0440\u043A\u0430", "value": 4, "slug": "telcharka" }, { "key": "\u0422\u0435\u043C\u0435\u043D\u0443\u0433\u0430", "value": 1, "slug": "temenuga" }, { "key": "\u0422\u0435\u043D\u0435\u0432\u043E", "value": 59, "slug": "tenevo" }, { "key": "\u0422\u0435\u043F\u043B\u0435\u043D", "value": 12, "slug": "teplen" }, { "key": "\u0422\u0435\u0440\u0432\u0435\u043B", "value": 357, "slug": "tervel" }, { "key": "\u0422\u0435\u0440\u0437\u0438\u0439\u0441\u043A\u043E", "value": 23, "slug": "terziysko" }, { "key": "\u0422\u0435\u0440\u0442\u0435\u0440", "value": 4, "slug": "terter" }, { "key": "\u0422\u0435\u0442\u0435\u0432\u0435\u043D", "value": 612, "slug": "teteven" }, { "key": "\u0422\u0435\u0442\u043E\u0432\u043E", "value": 57, "slug": "tetovo" }, { "key": "\u0422\u0435\u0448\u043E\u0432\u043E", "value": 11, "slug": "teshovo" }, { "key": "\u0422\u0438\u043A\u0430\u043B\u0435", "value": 4, "slug": "tikale" }, { "key": "\u0422\u0438\u043C\u0430\u0440\u0435\u0432\u043E", "value": 20, "slug": "timarevo" }, { "key": "\u0422\u0438\u043F\u0447\u0435\u043D\u0438\u0446\u0430", "value": 6, "slug": "tipchenica" }, { "key": "\u0422\u0438\u0445\u043E\u043C\u0438\u0440", "value": 30, "slug": "tihomir" }, { "key": "\u0422\u0438\u0445\u043E\u043C\u0438\u0440\u043E\u0432\u043E", "value": 2, "slug": "tihomirovo" }, { "key": "\u0422\u0438\u0447\u0430", "value": 38, "slug": "ticha" }, { "key": "\u0422\u0438\u0448\u0430\u043D\u043E\u0432\u043E", "value": 2, "slug": "tishanovo" }, { "key": "\u0422\u0438\u0448\u0435\u0432\u0438\u0446\u0430", "value": 12, "slug": "tishevica" }, { "key": "\u0422\u0438\u044F\u043D\u043E\u0432\u0446\u0438", "value": 2, "slug": "tiyanovci" }, { "key": "\u0422\u043B\u0430\u0447\u0435\u043D\u0435", "value": 14, "slug": "tlachene" }, { "key": "\u0422\u043E\u0434\u043E\u0440 \u0418\u043A\u043E\u043D\u043E\u043C\u043E\u0432\u043E", "value": 57, "slug": "todor-ikonomovo" }, { "key": "\u0422\u043E\u0434\u043E\u0440\u0438\u0447\u0435\u043D\u0435", "value": 12, "slug": "todorichene" }, { "key": "\u0422\u043E\u0434\u043E\u0440\u043E\u0432\u043E", "value": 40, "slug": "todorovo" }, { "key": "\u0422\u043E\u0434\u043E\u0440\u0447\u0435\u0442\u0430", "value": 1, "slug": "todorcheta" }, { "key": "\u0422\u043E\u0434\u044E\u0432\u0446\u0438", "value": 3, "slug": "todyuvci" }, { "key": "\u0422\u043E\u043A\u0430\u0447\u043A\u0430", "value": 4, "slug": "tokachka" }, { "key": "\u0422\u043E\u043B\u043E\u0432\u0438\u0446\u0430", "value": 3, "slug": "tolovica" }, { "key": "\u0422\u043E\u043C\u043F\u0441\u044A\u043D", "value": 19, "slug": "tompsn" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u0430", "value": 23, "slug": "topola" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u0438", "value": 204, "slug": "topoli" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u0438 \u0434\u043E\u043B", "value": 4, "slug": "topoli-dol" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u0438\u0446\u0430", "value": 64, "slug": "topolica" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u043D\u0438\u0446\u0430", "value": 75, "slug": "topolnica" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u043E\u0432\u0433\u0440\u0430\u0434", "value": 336, "slug": "topolovgrad" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u043E\u0432\u0435\u0446", "value": 8, "slug": "topolovec" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u043E\u0432\u043E", "value": 108, "slug": "topolovo" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u0447\u0430\u043D\u0435", "value": 83, "slug": "topolchane" }, { "key": "\u0422\u043E\u043F\u043E\u043B\u044F\u043D\u0435", "value": 8, "slug": "topolyane" }, { "key": "\u0422\u043E\u043F\u0443\u0437\u0435\u0432\u043E", "value": 1, "slug": "topuzevo" }, { "key": "\u0422\u043E\u043F\u0447\u0438\u0438", "value": 11, "slug": "topchii" }, { "key": "\u0422\u043E\u043F\u0447\u0438\u0439\u0441\u043A\u043E", "value": 23, "slug": "topchiysko" }, { "key": "\u0422\u043E\u0440\u043E\u0441", "value": 50, "slug": "toros" }, { "key": "\u0422\u043E\u0442\u043B\u0435\u0431\u0435\u043D", "value": 21, "slug": "totleben" }, { "key": "\u0422\u043E\u0447\u0438\u043B\u0430\u0440\u0438", "value": 6, "slug": "tochilari" }, { "key": "\u0422\u043E\u0448\u0435\u0432\u0446\u0438", "value": 5, "slug": "toshevci" }, { "key": "\u0422\u0440\u0430\u0432\u0435", "value": 1, "slug": "trave" }, { "key": "\u0422\u0440\u0430\u0439\u043A\u043E\u0432\u043E", "value": 23, "slug": "traykovo" }, { "key": "\u0422\u0440\u0430\u043A\u0438\u0435\u0446", "value": 10, "slug": "trakiec" }, { "key": "\u0422\u0440\u0430\u043A\u0438\u044F", "value": 13, "slug": "trakiya" }, { "key": "\u0422\u0440\u0430\u043F\u0438\u0449\u0435", "value": 10, "slug": "trapishche" }, { "key": "\u0422\u0440\u0430\u043F\u043E\u043A\u043B\u043E\u0432\u043E", "value": 4, "slug": "trapoklovo" }, { "key": "\u0422\u0440\u0435\u0431\u0438\u0449\u0435", "value": 1, "slug": "trebishche" }, { "key": "\u0422\u0440\u0435\u043A\u043B\u044F\u043D\u043E", "value": 11, "slug": "treklyano" }, { "key": "\u0422\u0440\u0435\u043C", "value": 8, "slug": "trem" }, { "key": "\u0422\u0440\u0435\u0441\u043A\u0430\u0432\u0435\u0446", "value": 18, "slug": "treskavec" }, { "key": "\u0422\u0440\u0438 \u043A\u043B\u0430\u0434\u0435\u043D\u0446\u0438", "value": 16, "slug": "tri-kladenci" }, { "key": "\u0422\u0440\u0438 \u043C\u043E\u0433\u0438\u043B\u0438", "value": 14, "slug": "tri-mogili" }, { "key": "\u0422\u0440\u0438\u0432\u043E\u0434\u0438\u0446\u0438", "value": 39, "slug": "trivodici" }, { "key": "\u0422\u0440\u0438\u0433\u0440\u0430\u0434", "value": 47, "slug": "trigrad" }, { "key": "\u0422\u0440\u0438\u043B\u0438\u0441\u0442\u043D\u0438\u043A", "value": 25, "slug": "trilistnik" }, { "key": "\u0422\u0440\u0438\u0444\u043E\u043D\u043E\u0432\u043E", "value": 2, "slug": "trifonovo" }, { "key": "\u0422\u0440\u043E\u0438\u0446\u0430", "value": 9, "slug": "troica" }, { "key": "\u0422\u0440\u043E\u044F\u043D", "value": 1847, "slug": "troyan" }, { "key": "\u0422\u0440\u043E\u044F\u043D\u043E\u0432\u043E", "value": 52, "slug": "troyanovo" }, { "key": "\u0422\u0440\u0443\u0434", "value": 341, "slug": "trud" }, { "key": "\u0422\u0440\u0443\u0434\u043E\u0432\u0435\u0446", "value": 158, "slug": "trudovec" }, { "key": "\u0422\u0440\u044A\u0431\u0430\u0447", "value": 8, "slug": "trbach" }, { "key": "\u0422\u0440\u044A\u043D", "value": 139, "slug": "trn" }, { "key": "\u0422\u0440\u044A\u043D\u0430\u043A", "value": 31, "slug": "trnak" }, { "key": "\u0422\u0440\u044A\u043D\u0438\u0442\u043E", "value": 3, "slug": "trnito" }, { "key": "\u0422\u0440\u044A\u043D\u0438\u0446\u0430", "value": 2, "slug": "trnica" }, { "key": "\u0422\u0440\u044A\u043D\u043A\u043E\u0432\u043E", "value": 17, "slug": "trnkovo" }, { "key": "\u0422\u0440\u044A\u043D\u0447\u043E\u0432\u0438\u0446\u0430", "value": 19, "slug": "trnchovica" }, { "key": "\u0422\u0440\u044A\u0441\u0442\u0435\u043D\u0438\u043A", "value": 213, "slug": "trstenik" }, { "key": "\u0422\u0440\u044A\u0441\u0442\u0438\u043A\u0430", "value": 3, "slug": "trstika" }, { "key": "\u0422\u0440\u044A\u0441\u0442\u0438\u043A\u043E\u0432\u043E", "value": 67, "slug": "trstikovo" }, { "key": "\u0422\u0440\u044F\u0432\u043D\u0430", "value": 758, "slug": "tryavna" }, { "key": "\u0422\u0443\u0434\u0435\u043D", "value": 7, "slug": "tuden" }, { "key": "\u0422\u0443\u043B\u043E\u0432\u043E", "value": 40, "slug": "tulovo" }, { "key": "\u0422\u0443\u043C\u0431\u0430\u043B\u043E\u0432\u043E", "value": 3, "slug": "tumbalovo" }, { "key": "\u0422\u0443\u0440\u0438\u044F", "value": 20, "slug": "turiya" }, { "key": "\u0422\u0443\u0440\u043A\u0438\u043D\u0447\u0430", "value": 5, "slug": "turkincha" }, { "key": "\u0422\u0443\u0440\u043E\u043A\u043E\u0432\u0446\u0438", "value": 3, "slug": "turokovci" }, { "key": "\u0422\u0443\u0440\u044F\u043D", "value": 1, "slug": "turyan" }, { "key": "\u0422\u0443\u0442\u0440\u0430\u043A\u0430\u043D", "value": 515, "slug": "tutrakan" }, { "key": "\u0422\u0443\u0442\u0440\u0430\u043A\u0430\u043D\u0446\u0438", "value": 59, "slug": "tutrakanci" }, { "key": "\u0422\u0443\u0445\u043E\u0432\u0438\u0449\u0430", "value": 31, "slug": "tuhovishcha" }, { "key": "\u0422\u0443\u0447\u0435\u043D\u0438\u0446\u0430", "value": 4, "slug": "tuchenica" }, { "key": "\u0422\u0443\u0448\u043E\u0432\u0438\u0446\u0430", "value": 12, "slug": "tushovica" }, { "key": "\u0422\u044A\u0436\u0430", "value": 44, "slug": "tzha" }, { "key": "\u0422\u044A\u043A\u0430\u0447", "value": 15, "slug": "tkach" }, { "key": "\u0422\u044A\u043D\u043A\u0430 \u0431\u0430\u0440\u0430", "value": 1, "slug": "tnka-bara" }, { "key": "\u0422\u044A\u043D\u043A\u043E\u0432\u043E", "value": 166, "slug": "tnkovo" }, { "key": "\u0422\u044A\u043D\u043A\u043E\u0442\u043E", "value": 1, "slug": "tnkoto" }, { "key": "\u0422\u044A\u0440\u0433\u043E\u0432\u0438\u0449\u0435", "value": 3465, "slug": "trgovishche" }, { "key": "\u0422\u044A\u0440\u043D\u0430", "value": 1, "slug": "trna" }, { "key": "\u0422\u044A\u0440\u043D\u0430\u0432\u0430", "value": 86, "slug": "trnava" }, { "key": "\u0422\u044A\u0440\u043D\u0430\u043A", "value": 48, "slug": "trnak" }, { "key": "\u0422\u044A\u0440\u043D\u0435\u043D\u0435", "value": 12, "slug": "trnene" }, { "key": "\u0422\u044A\u0440\u043D\u0438\u0447\u0435\u043D\u0438", "value": 20, "slug": "trnicheni" }, { "key": "\u0422\u044A\u0440\u043D\u043E\u0432\u0446\u0430", "value": 18, "slug": "trnovca" }, { "key": "\u0422\u044A\u0440\u043D\u043E\u0432\u0446\u0438", "value": 6, "slug": "trnovci" }, { "key": "\u0422\u044A\u0440\u043D\u044F\u043D\u0435", "value": 6, "slug": "trnyane" }, { "key": "\u0422\u044A\u0440\u0445\u043E\u0432\u043E", "value": 4, "slug": "trhovo" }, { "key": "\u0422\u044A\u0440\u044A\u043D", "value": 31, "slug": "trn" }, { "key": "\u0422\u044E\u043B\u0435\u043D\u043E\u0432\u043E", "value": 5, "slug": "tyulenovo" }, { "key": "\u0422\u044E\u0440\u043A\u043C\u0435\u043D", "value": 13, "slug": "tyurkmen" }, { "key": "\u0422\u044E\u0442\u044E\u043D\u0447\u0435", "value": 5, "slug": "tyutyunche" }, { "key": "\u0422\u044F\u043D\u0435\u0432\u043E", "value": 10, "slug": "tyanevo" }, { "key": "\u0423\u0433\u043B\u0435\u0434\u043D\u043E", "value": 1, "slug": "ugledno" }, { "key": "\u0423\u0433\u043B\u044F\u0440\u0446\u0438", "value": 4, "slug": "uglyarci" }, { "key": "\u0423\u0433\u044A\u0440\u0447\u0438\u043D", "value": 115, "slug": "ugrchin" }, { "key": "\u0423\u0437\u043E\u0432\u043E", "value": 2, "slug": "uzovo" }, { "key": "\u0423\u0437\u0443\u043D\u0434\u0436\u043E\u0432\u043E", "value": 55, "slug": "uzundzhovo" }, { "key": "\u0423\u0437\u0443\u043D\u0438\u0442\u0435", "value": 2, "slug": "uzunite" }, { "key": "\u0423\u043C\u0430\u0440\u0435\u0432\u0446\u0438", "value": 11, "slug": "umarevci" }, { "key": "\u0423\u0440\u043E\u0432\u0435\u043D\u0435", "value": 5, "slug": "urovene" }, { "key": "\u0423\u0441\u043E\u0439\u043A\u0430", "value": 12, "slug": "usoyka" }, { "key": "\u0423\u0441\u0442\u0438\u043D\u0430", "value": 75, "slug": "ustina" }, { "key": "\u0423\u0441\u0442\u0440\u0435\u043C", "value": 35, "slug": "ustrem" }, { "key": "\u0423\u0441\u0442\u0440\u0435\u043D", "value": 8, "slug": "ustren" }, { "key": "\u0423\u0445\u043B\u043E\u0432\u0438\u0446\u0430", "value": 1, "slug": "uhlovica" }, { "key": "\u0423\u0448\u0438", "value": 2, "slug": "ushi" }, { "key": "\u0423\u0448\u0438\u043D\u0446\u0438", "value": 24, "slug": "ushinci" }, { "key": "\u0424\u0430\u0437\u0430\u043D\u043E\u0432\u043E", "value": 4, "slug": "fazanovo" }, { "key": "\u0424\u0430\u043A\u0438\u044F", "value": 8, "slug": "fakiya" }, { "key": "\u0424\u0430\u0442\u043E\u0432\u043E", "value": 1, "slug": "fatovo" }, { "key": "\u0424\u0435\u043B\u0434\u0444\u0435\u0431\u0435\u043B \u0414\u0435\u043D\u043A\u043E\u0432\u043E", "value": 9, "slug": "feldfebel-denkovo" }, { "key": "\u0424\u0438\u043B\u0430\u0440\u0435\u0442\u043E\u0432\u043E", "value": 14, "slug": "filaretovo" }, { "key": "\u0424\u0438\u043B\u0438\u043F\u043E\u0432\u043E", "value": 25, "slug": "filipovo" }, { "key": "\u0424\u0438\u043B\u0438\u043F\u043E\u0432\u0446\u0438", "value": 5, "slug": "filipovci" }, { "key": "\u0424\u043B\u043E\u0440\u0435\u043D\u0442\u0438\u043D", "value": 6, "slug": "florentin" }, { "key": "\u0424\u043E\u0442\u0438\u043D\u043E\u0432\u043E", "value": 39, "slug": "fotinovo" }, { "key": "\u0424\u0440\u043E\u043B\u043E\u0448", "value": 1, "slug": "frolosh" }, { "key": "\u0424\u0443\u0440\u0435\u043D", "value": 16, "slug": "furen" }, { "key": "\u0424\u044A\u0440\u0433\u043E\u0432\u043E", "value": 10, "slug": "frgovo" }, { "key": "\u0424\u044A\u0440\u0435\u0432\u0446\u0438", "value": 1, "slug": "frevci" }, { "key": "\u0425\u0430\u0434\u0436\u0438 \u0414\u0438\u043C\u0438\u0442\u044A\u0440", "value": 12, "slug": "hadzhi-dimitr" }, { "key": "\u0425\u0430\u0434\u0436\u0438\u0434\u0438\u043C\u0438\u0442\u0440\u043E\u0432\u043E", "value": 123, "slug": "hadzhidimitrovo" }, { "key": "\u0425\u0430\u0434\u0436\u0438\u0434\u0438\u043C\u043E\u0432\u043E", "value": 174, "slug": "hadzhidimovo" }, { "key": "\u0425\u0430\u0434\u0436\u0438\u0435\u0432\u043E", "value": 50, "slug": "hadzhievo" }, { "key": "\u0425\u0430\u0434\u0436\u0438\u0438\u0442\u0435", "value": 11, "slug": "hadzhiite" }, { "key": "\u0425\u0430\u0434\u0436\u0438\u0439\u0441\u043A\u043E", "value": 11, "slug": "hadzhiysko" }, { "key": "\u0425\u0430\u0439\u0440\u0435\u0434\u0438\u043D", "value": 76, "slug": "hayredin" }, { "key": "\u0425\u0430\u043D \u0410\u0441\u043F\u0430\u0440\u0443\u0445\u043E\u0432\u043E", "value": 37, "slug": "han-asparuhovo" }, { "key": "\u0425\u0430\u043D \u041A\u0440\u0443\u043C", "value": 22, "slug": "han-krum" }, { "key": "\u0425\u0430\u043D\u043E\u0432\u043E", "value": 16, "slug": "hanovo" }, { "key": "\u0425\u0430\u0440\u0430\u0447\u0435\u0440\u0438\u0442\u0435", "value": 3, "slug": "haracherite" }, { "key": "\u0425\u0430\u0440\u0432\u0430\u043B\u043E\u0432\u0446\u0438", "value": 1, "slug": "harvalovci" }, { "key": "\u0425\u0430\u0440\u043C\u0430\u043D\u043B\u0438", "value": 1495, "slug": "harmanli" }, { "key": "\u0425\u0430\u0441\u043A\u043E\u0432\u043E", "value": 8322, "slug": "haskovo" }, { "key": "\u0425\u0432\u043E\u0439\u043D\u0430", "value": 48, "slug": "hvoyna" }, { "key": "\u0425\u0432\u043E\u0441\u0442\u044F\u043D\u0435", "value": 31, "slug": "hvostyane" }, { "key": "\u0425\u0435\u0440\u0430\u043A\u043E\u0432\u043E", "value": 27, "slug": "herakovo" }, { "key": "\u0425\u0438\u0440\u0435\u0432\u043E", "value": 6, "slug": "hirevo" }, { "key": "\u0425\u0438\u0441\u0430\u0440\u044F", "value": 552, "slug": "hisarya" }, { "key": "\u0425\u0438\u0442\u043E\u0432\u043E", "value": 9, "slug": "hitovo" }, { "key": "\u0425\u0438\u0442\u0440\u0438\u043D\u043E", "value": 49, "slug": "hitrino" }, { "key": "\u0425\u043B\u0435\u0432\u0435\u043D\u0435", "value": 18, "slug": "hlevene" }, { "key": "\u0425\u043B\u044F\u0431\u043E\u0432\u043E", "value": 20, "slug": "hlyabovo" }, { "key": "\u0425\u041E\u041D\u041A\u041E\u041D\u0413,", "value": 6, "slug": "honkong" }, { "key": "\u0425\u043E\u0442\u0430\u043D\u0446\u0430", "value": 24, "slug": "hotanca" }, { "key": "\u0425\u043E\u0442\u043D\u0438\u0446\u0430", "value": 19, "slug": "hotnica" }, { "key": "\u0425\u043E\u0442\u043E\u0432\u043E", "value": 1, "slug": "hotovo" }, { "key": "\u0425\u0440\u0430\u0431\u0440\u0438\u043D\u043E", "value": 46, "slug": "hrabrino" }, { "key": "\u0425\u0440\u0430\u0431\u0440\u043E\u0432\u043E", "value": 27, "slug": "hrabrovo" }, { "key": "\u0425\u0440\u0430\u0431\u044A\u0440\u0441\u043A\u043E", "value": 30, "slug": "hrabrsko" }, { "key": "\u0425\u0440\u0438\u0441\u0442\u0438\u044F\u043D\u043E\u0432\u043E", "value": 12, "slug": "hristiyanovo" }, { "key": "\u0425\u0440\u0438\u0441\u0442\u043E \u0414\u0430\u043D\u043E\u0432\u043E", "value": 28, "slug": "hristo-danovo" }, { "key": "\u0425\u0440\u0438\u0441\u0442\u043E\u0432\u0446\u0438", "value": 2, "slug": "hristovci" }, { "key": "\u0425\u0440\u0438\u0449\u0435\u043D\u0438", "value": 94, "slug": "hrishcheni" }, { "key": "\u0425\u0440\u043E\u043C\u0438\u0446\u0430", "value": 1, "slug": "hromica" }, { "key": "\u0425\u0443\u0431\u0430\u0432\u0435\u043D\u0435", "value": 3, "slug": "hubavene" }, { "key": "\u0425\u0443\u043C\u0430", "value": 9, "slug": "huma" }, { "key": "\u0425\u0443\u0445\u043B\u0430", "value": 2, "slug": "huhla" }, { "key": "\u0425\u044A\u0440\u043B\u0435\u0446", "value": 55, "slug": "hrlec" }, { "key": "\u0425\u044A\u0440\u0441\u043E\u0432\u043E", "value": 32, "slug": "hrsovo" }, { "key": "\u0426\u0430\u043B\u0430\u043F\u0438\u0446\u0430", "value": 219, "slug": "calapica" }, { "key": "\u0426\u0430\u043D\u0438 \u0413\u0438\u043D\u0447\u0435\u0432\u043E", "value": 5, "slug": "cani-ginchevo" }, { "key": "\u0426\u0430\u043F\u0430\u0440\u0435\u0432\u043E", "value": 3, "slug": "caparevo" }, { "key": "\u0426\u0430\u0440 \u0410\u0441\u0435\u043D", "value": 38, "slug": "car-asen" }, { "key": "\u0426\u0430\u0440 \u041A\u0430\u043B\u043E\u044F\u043D", "value": 121, "slug": "car-kaloyan" }, { "key": "\u0426\u0430\u0440 \u0421\u0430\u043C\u0443\u0438\u043B", "value": 14, "slug": "car-samuil" }, { "key": "\u0426\u0430\u0440 \u0421\u0438\u043C\u0435\u043E\u043D\u043E\u0432\u043E", "value": 5, "slug": "car-simeonovo" }, { "key": "\u0426\u0430\u0440 \u0428\u0438\u0448\u043C\u0430\u043D\u043E\u0432\u043E", "value": 9, "slug": "car-shishmanovo" }, { "key": "\u0426\u0430\u0440-\u041F\u0435\u0442\u0440\u043E\u0432\u043E", "value": 9, "slug": "car-petrovo" }, { "key": "\u0426\u0430\u0440\u0430\u0446\u043E\u0432\u043E", "value": 191, "slug": "caracovo" }, { "key": "\u0426\u0430\u0440\u0435\u0432 \u0431\u0440\u043E\u0434", "value": 37, "slug": "carev-brod" }, { "key": "\u0426\u0430\u0440\u0435\u0432 \u0434\u043E\u043B", "value": 3, "slug": "carev-dol" }, { "key": "\u0426\u0430\u0440\u0435\u0432\u0430 \u043B\u0438\u0432\u0430\u0434\u0430", "value": 42, "slug": "careva-livada" }, { "key": "\u0426\u0430\u0440\u0435\u0432\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 20, "slug": "careva-polyana" }, { "key": "\u0426\u0430\u0440\u0435\u0432\u0435\u0446", "value": 64, "slug": "carevec" }, { "key": "\u0426\u0430\u0440\u0435\u0432\u043E", "value": 755, "slug": "carevo" }, { "key": "\u0426\u0430\u0440\u0435\u0432\u0446\u0438", "value": 22, "slug": "carevci" }, { "key": "\u0426\u0430\u0440\u0438\u043C\u0438\u0440", "value": 46, "slug": "carimir" }, { "key": "\u0426\u0430\u0440\u0438\u0447\u0438\u043D\u043E", "value": 25, "slug": "carichino" }, { "key": "\u0426\u0430\u0440\u0441\u043A\u0438 \u0438\u0437\u0432\u043E\u0440", "value": 15, "slug": "carski-izvor" }, { "key": "\u0426\u0430\u0446\u0430\u0440\u043E\u0432\u0446\u0438", "value": 5, "slug": "cacarovci" }, { "key": "\u0426\u0432\u0435\u0442\u0438\u043D\u043E", "value": 3, "slug": "cvetino" }, { "key": "\u0426\u0432\u0435\u0442\u043A\u043E\u0432\u0430 \u0431\u0430\u0440\u0430", "value": 1, "slug": "cvetkova-bara" }, { "key": "\u0426\u0435\u043B\u0438\u043D\u0430", "value": 1, "slug": "celina" }, { "key": "\u0426\u0435\u043D\u0438\u043D\u043E", "value": 3, "slug": "cenino" }, { "key": "\u0426\u0435\u043D\u043E\u0432\u043E", "value": 65, "slug": "cenovo" }, { "key": "\u0426\u0435\u0440\u0435\u0442\u0435\u043B\u0435\u0432\u043E", "value": 15, "slug": "ceretelevo" }, { "key": "\u0426\u0435\u0440\u043A\u043E\u0432\u0441\u043A\u0438", "value": 3, "slug": "cerkovski" }, { "key": "\u0426\u0435\u0440\u043E\u0432\u0430 \u043A\u043E\u0440\u0438\u044F", "value": 14, "slug": "cerova-koriya" }, { "key": "\u0426\u0435\u0440\u043E\u0432\u0435\u0446", "value": 1, "slug": "cerovec" }, { "key": "\u0426\u0435\u0440\u043E\u0432\u0438\u0449\u0435", "value": 8, "slug": "cerovishche" }, { "key": "\u0426\u0435\u0440\u043E\u0432\u043E", "value": 105, "slug": "cerovo" }, { "key": "\u0426\u0438\u0440\u043A\u0430", "value": 4, "slug": "cirka" }, { "key": "\u0426\u043E\u043D\u0435\u0432\u043E", "value": 85, "slug": "conevo" }, { "key": "\u0426\u0440\u044A\u043D\u0447\u0430", "value": 57, "slug": "crncha" }, { "key": "\u0426\u044A\u0440\u0432\u0435\u043D\u044F\u043D\u043E", "value": 4, "slug": "crvenyano" }, { "key": "\u0426\u044A\u0440\u0432\u0438\u0449\u0435", "value": 2, "slug": "crvishche" }, { "key": "\u0426\u044A\u0440\u043A\u0432\u0430", "value": 27, "slug": "crkva" }, { "key": "\u0426\u044A\u0440\u043A\u0432\u0438\u0446\u0430", "value": 16, "slug": "crkvica" }, { "key": "\u0426\u044A\u0440\u043A\u0432\u0438\u0449\u0435", "value": 10, "slug": "crkvishche" }, { "key": "\u0427\u0430\u0432\u0434\u0430\u0440", "value": 64, "slug": "chavdar" }, { "key": "\u0427\u0430\u0432\u0434\u0430\u0440\u0446\u0438", "value": 2, "slug": "chavdarci" }, { "key": "\u0427\u0430\u0439\u043A\u0430", "value": 6, "slug": "chayka" }, { "key": "\u0427\u0430\u043A\u0430\u043B\u0430\u0440\u043E\u0432\u043E", "value": 39, "slug": "chakalarovo" }, { "key": "\u0427\u0430\u043A\u0430\u043B\u0438", "value": 3, "slug": "chakali" }, { "key": "\u0427\u0430\u043B\u0430", "value": 4, "slug": "chala" }, { "key": "\u0427\u0430\u043B\u044A\u043A\u043E\u0432\u0438", "value": 23, "slug": "chalkovi" }, { "key": "\u0427\u0430\u043C\u043B\u0430", "value": 1, "slug": "chamla" }, { "key": "\u0427\u0430\u0440\u0433\u0430\u043D", "value": 47, "slug": "chargan" }, { "key": "\u0427\u0430\u0440\u0434\u0430", "value": 14, "slug": "charda" }, { "key": "\u0427\u0430\u0440\u043A\u043E\u0432\u043E", "value": 9, "slug": "charkovo" }, { "key": "\u0427\u0435\u043A\u0430\u043D\u0446\u0438", "value": 1, "slug": "chekanci" }, { "key": "\u0427\u0435\u043A\u0430\u043D\u0447\u0435\u0432\u043E", "value": 11, "slug": "chekanchevo" }, { "key": "\u0427\u0435\u043B\u043D\u0438\u043A", "value": 6, "slug": "chelnik" }, { "key": "\u0427\u0435\u043B\u043E\u043F\u0435\u043A", "value": 15, "slug": "chelopek" }, { "key": "\u0427\u0435\u043B\u043E\u043F\u0435\u0447", "value": 107, "slug": "chelopech" }, { "key": "\u0427\u0435\u043B\u043E\u043F\u0435\u0447\u0435\u043D\u0435", "value": 3, "slug": "chelopechene" }, { "key": "\u0427\u0435\u043B\u044E\u0441\u0442\u043D\u0438\u0446\u0430", "value": 3, "slug": "chelyustnica" }, { "key": "\u0427\u0435\u043C\u0438\u0448", "value": 5, "slug": "chemish" }, { "key": "\u0427\u0435\u043F\u0435\u043B\u0430\u0440\u0435", "value": 484, "slug": "chepelare" }, { "key": "\u0427\u0435\u043F\u0438\u043D\u043E", "value": 1, "slug": "chepino" }, { "key": "\u0427\u0435\u043F\u0438\u043D\u0446\u0438", "value": 278, "slug": "chepinci" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D", "value": 58, "slug": "cherven" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D \u0431\u0440\u0435\u0433", "value": 40, "slug": "cherven-breg" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D \u0431\u0440\u044F\u0433", "value": 791, "slug": "cherven-bryag" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D\u0430", "value": 8, "slug": "chervena" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D\u0430 \u0432\u043E\u0434\u0430", "value": 78, "slug": "chervena-voda" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 7, "slug": "chervena-mogila" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D\u0430\u043A\u043E\u0432\u043E", "value": 10, "slug": "chervenakovo" }, { "key": "\u0427\u0435\u0440\u0432\u0435\u043D\u0446\u0438", "value": 25, "slug": "chervenci" }, { "key": "\u0427\u0435\u0440\u0433\u0430\u043D\u043E\u0432\u043E", "value": 43, "slug": "cherganovo" }, { "key": "\u0427\u0435\u0440\u0435\u043D\u0447\u0430", "value": 8, "slug": "cherencha" }, { "key": "\u0427\u0435\u0440\u0435\u043F\u043E\u0432\u043E", "value": 6, "slug": "cherepovo" }, { "key": "\u0427\u0435\u0440\u0435\u0448\u0430", "value": 16, "slug": "cheresha" }, { "key": "\u0427\u0435\u0440\u0435\u0448\u0438\u0446\u0430", "value": 3, "slug": "chereshica" }, { "key": "\u0427\u0435\u0440\u0435\u0448\u043E\u0432\u043E", "value": 13, "slug": "chereshovo" }, { "key": "\u0427\u0435\u0440\u043A\u0430\u0441\u043A\u0438", "value": 2, "slug": "cherkaski" }, { "key": "\u0427\u0435\u0440\u043A\u043E\u0432\u0438\u0446\u0430", "value": 11, "slug": "cherkovica" }, { "key": "\u0427\u0435\u0440\u043A\u043E\u0432\u043D\u0430", "value": 45, "slug": "cherkovna" }, { "key": "\u0427\u0435\u0440\u043A\u043E\u0432\u043E", "value": 9, "slug": "cherkovo" }, { "key": "\u0427\u0435\u0440\u043D\u0430", "value": 24, "slug": "cherna" }, { "key": "\u0427\u0435\u0440\u043D\u0430 \u0433\u043E\u0440\u0430", "value": 23, "slug": "cherna-gora" }, { "key": "\u0427\u0435\u0440\u043D\u0430 \u041C\u0435\u0441\u0442\u0430", "value": 7, "slug": "cherna-mesta" }, { "key": "\u0427\u0435\u0440\u043D\u0430 \u043C\u043E\u0433\u0438\u043B\u0430", "value": 12, "slug": "cherna-mogila" }, { "key": "\u0427\u0435\u0440\u043D\u0430 \u043D\u0438\u0432\u0430", "value": 2, "slug": "cherna-niva" }, { "key": "\u0427\u0435\u0440\u043D\u0430 \u0441\u043A\u0430\u043B\u0430", "value": 1, "slug": "cherna-skala" }, { "key": "\u0427\u0435\u0440\u043D\u0435\u0432\u043E", "value": 71, "slug": "chernevo" }, { "key": "\u0427\u0435\u0440\u043D\u0435\u0432\u0446\u0438", "value": 3, "slug": "chernevci" }, { "key": "\u0427\u0435\u0440\u043D\u0438 \u0431\u0440\u044F\u0433", "value": 4, "slug": "cherni-bryag" }, { "key": "\u0427\u0435\u0440\u043D\u0438 \u0412\u0438\u0442", "value": 23, "slug": "cherni-vit" }, { "key": "\u0427\u0435\u0440\u043D\u0438 \u0432\u0440\u044A\u0445", "value": 52, "slug": "cherni-vrh" }, { "key": "\u0427\u0435\u0440\u043D\u0438 \u041E\u0441\u044A\u043C", "value": 83, "slug": "cherni-osm" }, { "key": "\u0427\u0435\u0440\u043D\u0438\u043A", "value": 89, "slug": "chernik" }, { "key": "\u0427\u0435\u0440\u043D\u0438\u0446\u0430", "value": 9, "slug": "chernica" }, { "key": "\u0427\u0435\u0440\u043D\u0438\u0447\u0435", "value": 53, "slug": "cherniche" }, { "key": "\u0427\u0435\u0440\u043D\u0438\u0447\u0435\u0432\u043E", "value": 31, "slug": "chernichevo" }, { "key": "\u0427\u0435\u0440\u043D\u0438\u0447\u0438\u043D\u043E", "value": 2, "slug": "chernichino" }, { "key": "\u0427\u0435\u0440\u043D\u043E \u043C\u043E\u0440\u0435", "value": 86, "slug": "cherno-more" }, { "key": "\u0427\u0435\u0440\u043D\u043E \u043F\u043E\u043B\u0435", "value": 4, "slug": "cherno-pole" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0432\u0440\u044A\u0445", "value": 6, "slug": "chernovrh" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0433\u043B\u0430\u0432\u0446\u0438", "value": 15, "slug": "chernoglavci" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0433\u043E\u0440", "value": 7, "slug": "chernogor" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0433\u043E\u0440\u043E\u0432\u043E", "value": 78, "slug": "chernogorovo" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0433\u0440\u0430\u0434", "value": 16, "slug": "chernograd" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0434\u044A\u0431", "value": 9, "slug": "chernodb" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0437\u0435\u043C", "value": 4, "slug": "chernozem" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u0437\u0435\u043C\u0435\u043D", "value": 28, "slug": "chernozemen" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043A\u0430\u043F\u0446\u0438", "value": 7, "slug": "chernokapci" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043B\u0438\u043A", "value": 30, "slug": "chernolik" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043C\u043E\u0440\u0435\u0446", "value": 340, "slug": "chernomorec" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043C\u043E\u0440\u0446\u0438", "value": 1, "slug": "chernomorci" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043E\u043A", "value": 7, "slug": "chernook" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043E\u043A\u0438", "value": 1, "slug": "chernooki" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043E\u043A\u043E\u0432\u043E", "value": 23, "slug": "chernookovo" }, { "key": "\u0427\u0435\u0440\u043D\u043E\u043E\u0447\u0435\u043D\u0435", "value": 35, "slug": "chernoochene" }, { "key": "\u0427\u0435\u0440\u043D\u044C\u043E\u0432\u043E", "value": 20, "slug": "chernovo" }, { "key": "\u0427\u0435\u0441\u0442\u0438\u043C\u0435\u043D\u0441\u043A\u043E", "value": 2, "slug": "chestimensko" }, { "key": "\u0427\u0435\u0442\u0438\u0440\u0446\u0438", "value": 8, "slug": "chetirci" }, { "key": "\u0427\u0435\u0445\u043B\u0430\u0440\u0435", "value": 2, "slug": "chehlare" }, { "key": "\u0427\u0435\u0448\u043C\u0430", "value": 1, "slug": "cheshma" }, { "key": "\u0427\u0435\u0448\u043D\u0435\u0433\u0438\u0440\u043E\u0432\u043E", "value": 95, "slug": "cheshnegirovo" }, { "key": "\u0427\u0438\u0431\u0430\u043E\u0432\u0446\u0438", "value": 6, "slug": "chibaovci" }, { "key": "\u0427\u0438\u043B\u0438\u043A", "value": 6, "slug": "chilik" }, { "key": "\u0427\u0438\u043B\u043D\u043E\u0432", "value": 15, "slug": "chilnov" }, { "key": "\u0427\u0438\u043D\u0442\u0443\u043B\u043E\u0432\u043E", "value": 28, "slug": "chintulovo" }, { "key": "\u0427\u0438\u043F\u0440\u043E\u0432\u0446\u0438", "value": 94, "slug": "chiprovci" }, { "key": "\u0427\u0438\u0440\u0435\u043D", "value": 24, "slug": "chiren" }, { "key": "\u0427\u0438\u0440\u043F\u0430\u043D", "value": 824, "slug": "chirpan" }, { "key": "\u0427\u0438\u0442\u0430\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "chitakovci" }, { "key": "\u0427\u0438\u0444\u043B\u0438\u043A", "value": 54, "slug": "chiflik" }, { "key": "\u0427\u0438\u0447\u0435\u0432\u043E", "value": 2, "slug": "chichevo" }, { "key": "\u0427\u043E\u0431\u0430", "value": 34, "slug": "choba" }, { "key": "\u0427\u043E\u0431\u0430\u043D\u043A\u0430", "value": 5, "slug": "chobanka" }, { "key": "\u0427\u043E\u043A\u043C\u0430\u043D\u043E\u0432\u043E", "value": 6, "slug": "chokmanovo" }, { "key": "\u0427\u043E\u043A\u043E\u0431\u0430", "value": 12, "slug": "chokoba" }, { "key": "\u0427\u043E\u043B\u0430\u043A\u043E\u0432\u0430", "value": 3, "slug": "cholakova" }, { "key": "\u0427\u043E\u043C\u0430\u043A\u043E\u0432\u0446\u0438", "value": 28, "slug": "chomakovci" }, { "key": "\u0427\u043E\u0440\u0431\u0430\u0434\u0436\u0438\u0439\u0441\u043A\u043E", "value": 73, "slug": "chorbadzhiysko" }, { "key": "\u0427\u043E\u0440\u0443\u043B", "value": 4, "slug": "chorul" }, { "key": "\u0427\u0443\u0431\u0440\u0430", "value": 30, "slug": "chubra" }, { "key": "\u0427\u0443\u0431\u0440\u0438\u043A\u0430", "value": 5, "slug": "chubrika" }, { "key": "\u0427\u0443\u0434\u043E\u043C\u0438\u0440", "value": 7, "slug": "chudomir" }, { "key": "\u0427\u0443\u0439\u043F\u0435\u0442\u043B\u043E\u0432\u043E", "value": 3, "slug": "chuypetlovo" }, { "key": "\u0427\u0443\u043A\u0430\u0440\u043A\u0430", "value": 10, "slug": "chukarka" }, { "key": "\u0427\u0443\u043A\u043E\u0432\u0435\u0437\u0435\u0440", "value": 1, "slug": "chukovezer" }, { "key": "\u0427\u0443\u043A\u043E\u0432\u0435\u0446", "value": 9, "slug": "chukovec" }, { "key": "\u0427\u0443\u043A\u043E\u0432\u043E", "value": 6, "slug": "chukovo" }, { "key": "\u0427\u0443\u043F\u0440\u0435\u043D\u0435", "value": 16, "slug": "chuprene" }, { "key": "\u0427\u0443\u0440\u0435\u043A", "value": 14, "slug": "churek" }, { "key": "\u0427\u0443\u0440\u0435\u043D", "value": 1, "slug": "churen" }, { "key": "\u0427\u0443\u0440\u0438\u0447\u0435\u043D\u0438", "value": 2, "slug": "churicheni" }, { "key": "\u0427\u0443\u0440\u043A\u0430", "value": 1, "slug": "churka" }, { "key": "\u0427\u0443\u0440\u0443\u043A\u043E\u0432\u043E", "value": 1, "slug": "churukovo" }, { "key": "\u0427\u0443\u0447\u0443\u043B\u0438\u0433\u043E\u0432\u043E", "value": 11, "slug": "chuchuligovo" }, { "key": "\u0428\u0430\u0431\u043B\u0430", "value": 259, "slug": "shabla" }, { "key": "\u0428\u0430\u043D\u043E\u0432\u043E", "value": 12, "slug": "shanovo" }, { "key": "\u0428\u0430\u0440\u0430\u043D\u0438", "value": 4, "slug": "sharani" }, { "key": "\u0428\u0430\u0440\u0435\u043D\u0441\u043A\u0430", "value": 5, "slug": "sharenska" }, { "key": "\u0428\u0430\u0440\u043A\u043E\u0432\u043E", "value": 2, "slug": "sharkovo" }, { "key": "\u0428\u0430\u0442\u0440\u043E\u0432\u043E", "value": 1, "slug": "shatrovo" }, { "key": "\u0428\u0435\u0439\u043D\u043E\u0432\u043E", "value": 62, "slug": "sheynovo" }, { "key": "\u0428\u0435\u043C\u0448\u0435\u0432\u043E", "value": 27, "slug": "shemshevo" }, { "key": "\u0428\u0435\u0440\u0435\u043C\u0435\u0442\u044F", "value": 10, "slug": "sheremetya" }, { "key": "\u0428\u0438\u0432\u0430\u0440\u043E\u0432\u043E", "value": 10, "slug": "shivarovo" }, { "key": "\u0428\u0438\u0432\u0430\u0447\u0435\u0432\u043E", "value": 113, "slug": "shivachevo" }, { "key": "\u0428\u0438\u043B\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "shilkovci" }, { "key": "\u0428\u0438\u043F\u043A\u0430", "value": 115, "slug": "shipka" }, { "key": "\u0428\u0438\u043F\u043A\u043E\u0432\u043E", "value": 43, "slug": "shipkovo" }, { "key": "\u0428\u0438\u043F\u043E\u0447\u0430\u043D\u0435", "value": 4, "slug": "shipochane" }, { "key": "\u0428\u0438\u043F\u043E\u0447\u0430\u043D\u043E", "value": 2, "slug": "shipochano" }, { "key": "\u0428\u0438\u0440\u043E\u043A\u0430 \u043B\u044A\u043A\u0430", "value": 24, "slug": "shiroka-lka" }, { "key": "\u0428\u0438\u0440\u043E\u043A\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 10, "slug": "shiroka-polyana" }, { "key": "\u0428\u0438\u0440\u043E\u043A\u0438 \u0434\u043E\u043B", "value": 55, "slug": "shiroki-dol" }, { "key": "\u0428\u0438\u0440\u043E\u043A\u043E \u043F\u043E\u043B\u0435", "value": 24, "slug": "shiroko-pole" }, { "key": "\u0428\u0438\u0440\u043E\u043A\u043E\u0432\u043E", "value": 11, "slug": "shirokovo" }, { "key": "\u0428\u0438\u0448\u0435\u043D\u0446\u0438", "value": 1, "slug": "shishenci" }, { "key": "\u0428\u0438\u0448\u043A\u043E\u0432\u0438\u0446\u0430", "value": 1, "slug": "shishkovica" }, { "key": "\u0428\u0438\u0448\u043A\u043E\u0432\u0446\u0438", "value": 16, "slug": "shishkovci" }, { "key": "\u0428\u0438\u0448\u043C\u0430\u043D\u043E\u0432\u043E", "value": 7, "slug": "shishmanovo" }, { "key": "\u0428\u0438\u0448\u043C\u0430\u043D\u0446\u0438", "value": 30, "slug": "shishmanci" }, { "key": "\u0428\u0438\u044F\u043A\u043E\u0432\u043E", "value": 7, "slug": "shiyakovo" }, { "key": "\u0428\u043A\u043E\u0440\u043F\u0438\u043B\u043E\u0432\u0446\u0438", "value": 53, "slug": "shkorpilovci" }, { "key": "\u0428\u043E\u0434\u0435\u043A\u043E\u0432\u0446\u0438", "value": 1, "slug": "shodekovci" }, { "key": "\u0428\u043E\u043F\u0446\u0438", "value": 5, "slug": "shopci" }, { "key": "\u0428\u0443\u043C\u0430", "value": 12, "slug": "shuma" }, { "key": "\u0428\u0443\u043C\u0430\u0442\u0430", "value": 19, "slug": "shumata" }, { "key": "\u0428\u0443\u043C\u0435\u043D", "value": 7408, "slug": "shumen" }, { "key": "\u0428\u0443\u043C\u0435\u043D\u0446\u0438", "value": 7, "slug": "shumenci" }, { "key": "\u0428\u0443\u043C\u043D\u0430\u0442\u0438\u0446\u0430", "value": 7, "slug": "shumnatica" }, { "key": "\u0429\u0435\u0440\u043D\u0430", "value": 2, "slug": "shcherna" }, { "key": "\u0429\u0438\u043F\u0441\u043A\u043E", "value": 7, "slug": "shchipsko" }, { "key": "\u0429\u0438\u0442", "value": 4, "slug": "shchit" }, { "key": "\u0429\u0440\u044A\u043A\u043B\u0435\u0432\u043E", "value": 107, "slug": "shchrklevo" }, { "key": "\u0429\u044A\u0440\u043A\u043E\u0432\u043E", "value": 10, "slug": "shchrkovo" }, { "key": "\u042A\u0433\u043B\u0435\u043D", "value": 30, "slug": "glen" }, { "key": "\u042E\u0433\u043E\u0432\u043E", "value": 2, "slug": "yugovo" }, { "key": "\u042E\u0434\u0435\u043B\u043D\u0438\u043A", "value": 27, "slug": "yudelnik" }, { "key": "\u042E\u043B\u0438\u0435\u0432\u043E", "value": 28, "slug": "yulievo" }, { "key": "\u042E\u043D\u0430\u043A", "value": 16, "slug": "yunak" }, { "key": "\u042E\u043D\u0430\u0446\u0438\u0442\u0435", "value": 58, "slug": "yunacite" }, { "key": "\u042E\u043D\u0434\u043E\u043B\u0430", "value": 21, "slug": "yundola" }, { "key": "\u042E\u043D\u0435\u0446", "value": 33, "slug": "yunec" }, { "key": "\u042E\u043F\u0435\u0440", "value": 11, "slug": "yuper" }, { "key": "\u042E\u0440\u0443\u043A\u043E\u0432\u043E", "value": 33, "slug": "yurukovo" }, { "key": "\u042F\u0431\u043B\u0430\u043D\u0438\u0446\u0430", "value": 172, "slug": "yablanica" }, { "key": "\u042F\u0431\u043B\u0430\u043D\u043E\u0432\u043E", "value": 139, "slug": "yablanovo" }, { "key": "\u042F\u0431\u044A\u043B\u043A\u043E\u0432\u0435\u0446", "value": 6, "slug": "yablkovec" }, { "key": "\u042F\u0431\u044A\u043B\u043A\u043E\u0432\u043E", "value": 83, "slug": "yablkovo" }, { "key": "\u042F\u0431\u044A\u043B\u0447\u0435\u0432\u043E", "value": 36, "slug": "yablchevo" }, { "key": "\u042F\u0431\u044A\u043B\u0447\u0435\u043D\u0438", "value": 2, "slug": "yablcheni" }, { "key": "\u042F\u0432\u043E\u0440\u0435\u0446", "value": 34, "slug": "yavorec" }, { "key": "\u042F\u0432\u043E\u0440\u043D\u0438\u0446\u0430", "value": 19, "slug": "yavornica" }, { "key": "\u042F\u0432\u043E\u0440\u043E\u0432\u043E", "value": 6, "slug": "yavorovo" }, { "key": "\u042F\u0432\u0440\u043E\u0432\u043E", "value": 11, "slug": "yavrovo" }, { "key": "\u042F\u0433\u043D\u0438\u043B\u043E", "value": 11, "slug": "yagnilo" }, { "key": "\u042F\u0433\u043E\u0434\u0430", "value": 98, "slug": "yagoda" }, { "key": "\u042F\u0433\u043E\u0434\u0438\u043D\u0430", "value": 36, "slug": "yagodina" }, { "key": "\u042F\u0433\u043E\u0434\u043E\u0432\u043E", "value": 190, "slug": "yagodovo" }, { "key": "\u042F\u0437\u0434\u0430\u0447", "value": 3, "slug": "yazdach" }, { "key": "\u042F\u043A\u0438\u043C \u0413\u0440\u0443\u0435\u0432\u043E", "value": 8, "slug": "yakim-gruevo" }, { "key": "\u042F\u043A\u0438\u043C\u043E\u0432\u043E", "value": 56, "slug": "yakimovo" }, { "key": "\u042F\u043A\u043E\u0432\u0446\u0438", "value": 7, "slug": "yakovci" }, { "key": "\u042F\u043A\u043E\u0440\u0443\u0434\u0430", "value": 324, "slug": "yakoruda" }, { "key": "\u042F\u043B\u0431\u043E\u0442\u0438\u043D\u0430", "value": 2, "slug": "yalbotina" }, { "key": "\u042F\u043B\u043E\u0432\u043E", "value": 2, "slug": "yalovo" }, { "key": "\u042F\u043C\u0431\u043E\u043B", "value": 6247, "slug": "yambol" }, { "key": "\u042F\u043C\u0438\u043D\u043E", "value": 8, "slug": "yamino" }, { "key": "\u042F\u043C\u043D\u0430", "value": 3, "slug": "yamna" }, { "key": "\u042F\u043D\u0430", "value": 66, "slug": "yana" }, { "key": "\u042F\u043D\u0438\u043D\u043E", "value": 3, "slug": "yanino" }, { "key": "\u042F\u043D\u043A\u043E\u0432\u043E", "value": 18, "slug": "yankovo" }, { "key": "\u042F\u043D\u043A\u043E\u0432\u0446\u0438", "value": 6, "slug": "yankovci" }, { "key": "\u042F\u043D\u043E\u0432\u043E", "value": 6, "slug": "yanovo" }, { "key": "\u042F\u043D\u0442\u0440\u0430", "value": 15, "slug": "yantra" }, { "key": "\u042F\u043D\u044C\u043E\u0432\u0435\u0446", "value": 1, "slug": "yanovec" }, { "key": "\u042F\u0440\u0434\u0436\u0438\u043B\u043E\u0432\u0446\u0438", "value": 29, "slug": "yardzhilovci" }, { "key": "\u042F\u0440\u0435\u0431\u0438\u0446\u0430", "value": 37, "slug": "yarebica" }, { "key": "\u042F\u0440\u0435\u0431\u0438\u0447\u043D\u0430", "value": 19, "slug": "yarebichna" }, { "key": "\u042F\u0440\u043B\u043E\u0432\u043E", "value": 10, "slug": "yarlovo" }, { "key": "\u042F\u0440\u043B\u043E\u0432\u0446\u0438", "value": 2, "slug": "yarlovci" }, { "key": "\u042F\u0441\u0435\u043D", "value": 101, "slug": "yasen" }, { "key": "\u042F\u0441\u0435\u043D\u0438\u0442\u0435", "value": 1, "slug": "yasenite" }, { "key": "\u042F\u0441\u0435\u043D\u043A\u043E\u0432\u043E", "value": 57, "slug": "yasenkovo" }, { "key": "\u042F\u0441\u0435\u043D\u043E\u0432\u0435\u0446", "value": 97, "slug": "yasenovec" }, { "key": "\u042F\u0441\u0435\u043D\u043E\u0432\u043E", "value": 26, "slug": "yasenovo" }, { "key": "\u042F\u0441\u043D\u0430 \u043F\u043E\u043B\u044F\u043D\u0430", "value": 35, "slug": "yasna-polyana" }, { "key": "\u042F\u0441\u043D\u043E \u043F\u043E\u043B\u0435", "value": 12, "slug": "yasno-pole" }, { "key": "\u042F\u0441\u0442\u0440\u0435\u0431", "value": 11, "slug": "yastreb" }, { "key": "\u042F\u0441\u0442\u0440\u0435\u0431\u0438\u043D\u043E", "value": 2, "slug": "yastrebino" }, { "key": "\u042F\u0441\u0442\u0440\u0435\u0431\u043D\u0430", "value": 2, "slug": "yastrebna" }, { "key": "\u042F\u0441\u0442\u0440\u0435\u0431\u043E\u0432\u043E", "value": 28, "slug": "yastrebovo" }, { "key": "\u042F\u0445\u0438\u043D\u043E\u0432\u043E", "value": 111, "slug": "yahinovo" }];
    $$Astro = createAstro();
    prerender = false;
    $$ = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
      Astro2.self = $$;
      const { business: business2 } = Astro2.params;
      console.log(business2);
      const x2 = business2 ? business2.split("/") : ["a"];
      let resp;
      let pagenum = 1;
      let items = 0;
      let slug = "";
      let cats;
      let firms;
      if (business2?.includes("/")) {
        pagenum = x2[1] ? Number(x2[1].replace(/\//g, "")) : 1;
        slug = x2[0];
        const skip = pagenum * 100 - 100;
        const key = businesses.find((xx) => xx.slug === x2[0])?.key || "\u0421\u043E\u0444\u0438\u044F";
        const datax = db.view("company/companiesbg", {
          reduce: false,
          key: encodeURI(key),
          limit: 100,
          skip,
          update: "lazy",
          cache: 864e3
        });
        const itemsx = db.view("company/companiesbg", {
          reduce: true,
          key: encodeURI(key),
          limit: 1,
          group: false,
          update: "lazy",
          cache: 864e3
        });
        resp = await Promise.all([datax, itemsx]).then((values) => {
          return {
            firms: values[0].rows,
            items: values[1].value
          };
        });
        items = resp.items;
        firms = resp.firms;
      } else {
        cats = businesses.filter((i2) => i2.value > 1200).sort((a2, z) => z.value - a2.value);
      }
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": ` Twitter ecosphere ${pagenum}`, "description": `Twitter ecosphere   ` }, { "default": ($$result2) => renderTemplate`${!business2 ? renderTemplate`${maybeRenderHead()}<div class="flex w-full flex-wrap gap-3">
				${cats?.map((city) => renderTemplate`${renderComponent($$result2, "CatButton", $$CatButton, { "title": city.key, "url": "/business/" + city.slug + "/1", "count": city.value })}`)}
			</div>` : renderTemplate`<div>
				<div class="my-5 flex w-full flex-wrap gap-2">
					${firms.map(({ value }) => renderTemplate`${renderComponent($$result2, "CatButton", $$CatButton, { "title": value, "url": "#" + value })}`)}
				</div>
				${renderComponent($$result2, "Pagination", $$Pagination, { "items": items, "currentPage": pagenum, "pageSize": 100, "prefix": "/business/" + slug + "/" })}
			</div>`}` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/business/[...business].astro", void 0);
    $$file = "/home/runner/work/monext/monext/apps/kloun/src/pages/business/[...business].astro";
    $$url = "/business/[...business]";
    ____business_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: $$,
      file: $$file,
      prerender,
      url: $$url
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/$server_build/chunks/pages/index.astro.cf839c2d.mjs
var index_astro_cf839c2d_exports = {};
__export(index_astro_cf839c2d_exports, {
  default: () => $$Index,
  file: () => $$file2,
  prerender: () => prerender2,
  url: () => $$url2
});
var import_cookie3, import_mime3, $$Astro2, prerender2, $$Index, $$file2, $$url2;
var init_index_astro_cf839c2d = __esm({
  "dist/$server_build/chunks/pages/index.astro.cf839c2d.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie3 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime3 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro2 = createAstro();
    prerender2 = false;
    $$Index = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro2, $$props, $$slots);
      Astro2.self = $$Index;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "\u0412\u0438\u0446\u043E\u0432\u0435 \u0438 \u0437\u0430\u0431\u0430\u0432\u043D\u0438 \u043A\u043E\u0442\u043A\u0438 \u0438 \u043C\u0435\u043C\u0435\u0442\u0430", "description": "\u0412\u0438\u0446\u043E\u0432\u0435 \u0438 \u0437\u0430\u0431\u0430\u0432\u043D\u0438 \u043A\u043E\u0442\u043A\u0438 \u0438 \u043C\u0435\u043C\u0435\u0442\u0430" }, { "default": ($$result2) => renderTemplate`
  hello
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/index.astro", void 0);
    $$file2 = "/home/runner/work/monext/monext/apps/kloun/src/pages/index.astro";
    $$url2 = "";
  }
});

// dist/$server_build/chunks/index@_@astro.3cb80dac.mjs
var index_astro_3cb80dac_exports = {};
__export(index_astro_3cb80dac_exports, {
  onRequest: () => onRequest,
  page: () => page,
  renderers: () => renderers
});
var import_cookie4, import_mime4, import_react3, import_server2, page;
var init_index_astro_3cb80dac = __esm({
  "dist/$server_build/chunks/index@_@astro.3cb80dac.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie4 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime4 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react3 = __toESM(require_react(), 1);
    import_server2 = __toESM(require_server_browser(), 1);
    page = () => Promise.resolve().then(() => (init_index_astro_cf839c2d(), index_astro_cf839c2d_exports));
  }
});

// dist/$server_build/chunks/_...ca6a0e1d.mjs
var ca6a0e1d_exports = {};
__export(ca6a0e1d_exports, {
  onRequest: () => onRequest,
  page: () => page2,
  renderers: () => renderers
});
var import_cookie5, import_mime5, import_react4, import_server3, page2;
var init_ca6a0e1d = __esm({
  "dist/$server_build/chunks/_...ca6a0e1d.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie5 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime5 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react4 = __toESM(require_react(), 1);
    import_server3 = __toESM(require_server_browser(), 1);
    page2 = () => Promise.resolve().then(() => (init_business_astro_1d423138(), business_astro_1d423138_exports)).then((n) => n._);
  }
});

// dist/$server_build/chunks/prerender.8fbeeaca.mjs
var prerender_8fbeeaca_exports = {};
__export(prerender_8fbeeaca_exports, {
  a: () => a,
  i: () => i
});
var noop, a, i;
var init_prerender_8fbeeaca = __esm({
  "dist/$server_build/chunks/prerender.8fbeeaca.mjs"() {
    noop = () => {
    };
    a = noop;
    i = noop;
  }
});

// dist/$server_build/chunks/index1@_@html.094e159c.mjs
var index1_html_094e159c_exports = {};
__export(index1_html_094e159c_exports, {
  onRequest: () => onRequest,
  page: () => page3,
  renderers: () => renderers
});
var import_cookie6, import_mime6, import_react5, import_server4, page3;
var init_index1_html_094e159c = __esm({
  "dist/$server_build/chunks/index1@_@html.094e159c.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie6 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime6 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react5 = __toESM(require_react(), 1);
    import_server4 = __toESM(require_server_browser(), 1);
    page3 = () => Promise.resolve().then(() => (init_prerender_8fbeeaca(), prerender_8fbeeaca_exports)).then((n) => n.i);
  }
});

// dist/$server_build/chunks/pages/_...jokecat_.astro.c1b39e73.mjs
var jokecat_astro_c1b39e73_exports = {};
__export(jokecat_astro_c1b39e73_exports, {
  $: () => $$FormatJoke,
  _: () => ____jokecat_,
  a: () => $$JokeThumbnail,
  b: () => $$RudSense,
  s: () => slugify
});
function slugify(string) {
  let slug = string.replace(/\s+/g, "-");
  slug = slug.toLowerCase();
  const CYRILLIC_TO_LATIN_MAP = {
    \u0430: "a",
    \u0431: "b",
    \u0432: "v",
    \u0433: "g",
    \u0434: "d",
    \u0435: "e",
    \u0451: "e",
    \u0436: "zh",
    \u0437: "z",
    \u0438: "i",
    \u0439: "i",
    \u043A: "k",
    \u043B: "l",
    \u043C: "m",
    \u043D: "n",
    \u043E: "o",
    \u043F: "p",
    \u0440: "r",
    \u0441: "s",
    \u0442: "t",
    \u0443: "u",
    \u0444: "f",
    \u0445: "kh",
    \u0446: "ts",
    \u0447: "ch",
    \u0448: "sh",
    \u0449: "shch",
    \u044A: "u",
    \u044B: "y",
    \u044C: "",
    \u044D: "e",
    \u044E: "iu",
    \u044F: "ia"
  };
  slug = Array.from(slug).map((ch) => CYRILLIC_TO_LATIN_MAP[ch.toLowerCase()] || ch).join("");
  slug = slug.replace(/[^a-z0-9-]+/g, "-").replace(/[-]+/g, "-");
  return slug || "404";
}
var __freeze2, __defProp3, __template2, _a3, _b2, $$Astro$52, $$RudSense, business, jokes, formattedjoke, $$Astro$42, remappedJokeFunction, $$FormatJoke, $$Astro$32, $$FormatJokeShort, $$Astro$22, $$Modal, $$Astro$12, $$JokeThumbnail, jokecats, $$Astro3, prerender3, $$2, $$file3, $$url3, ____jokecat_;
var init_jokecat_astro_c1b39e73 = __esm({
  "dist/$server_build/chunks/pages/_...jokecat_.astro.c1b39e73.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    __freeze2 = Object.freeze;
    __defProp3 = Object.defineProperty;
    __template2 = (cooked, raw) => __freeze2(__defProp3(cooked, "raw", { value: __freeze2(raw || cooked.slice()) }));
    $$Astro$52 = createAstro();
    $$RudSense = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$52, $$props, $$slots);
      Astro2.self = $$RudSense;
      const { main, type } = Astro2.props;
      const types = { "inarticle": { html: `<ins class="adsbygoogle"
     style="display:block; text-align:center; min-width: 350px;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-5476404733919333"
     data-ad-slot="2065828237"></ins>` } };
      return renderTemplate`${maybeRenderHead()}<div class="flex justify-center items-center">
    ${main && renderTemplate(_a3 || (_a3 = __template2(['<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5476404733919333" crossorigin="anonymous"><\/script>'])))}
   ${!type && renderTemplate`<ins class="adsbygoogle w-full rounded-md" style="display:block; min-width: 350px;" data-ad-format="fluid" data-ad-layout-key="-gw-3+1f-3d+2z" data-ad-client="ca-pub-5476404733919333" data-ad-slot="2115206418"></ins>`}
       
        ${type && renderTemplate`<div>${unescapeHTML(types[type].html)}</div>`}
        ${main && renderTemplate(_b2 || (_b2 = __template2(["<script>\n                (adsbygoogle = window.adsbygoogle || []).push({});\n            <\/script>"])))}
   
</div>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/RudSense.astro", void 0);
    business = [
      {
        count: 252346,
        cat: "\u0421\u043E\u0444\u0438\u044F"
      },
      {
        count: 62692,
        cat: "\u0412\u0430\u0440\u043D\u0430"
      },
      {
        count: 56469,
        cat: "\u041F\u043B\u043E\u0432\u0434\u0438\u0432"
      },
      {
        count: 36904,
        cat: "\u0411\u0443\u0440\u0433\u0430\u0441"
      },
      {
        count: 22544,
        cat: "\u0420\u0443\u0441\u0435"
      },
      {
        count: 19454,
        cat: "\u0421\u0442\u0430\u0440\u0430 \u0417\u0430\u0433\u043E\u0440\u0430"
      },
      {
        count: 12950,
        cat: "\u0411\u043B\u0430\u0433\u043E\u0435\u0432\u0433\u0440\u0430\u0434"
      },
      {
        count: 12541,
        cat: "\u041F\u043B\u0435\u0432\u0435\u043D"
      },
      {
        count: 11950,
        cat: "\u0414\u043E\u0431\u0440\u0438\u0447"
      },
      {
        count: 10899,
        cat: "\u0425\u0430\u0441\u043A\u043E\u0432\u043E"
      },
      {
        count: 10632,
        cat: "\u0421\u043B\u0438\u0432\u0435\u043D"
      },
      {
        count: 10411,
        cat: "\u0412\u0435\u043B\u0438\u043A\u043E \u0422\u044A\u0440\u043D\u043E\u0432\u043E"
      },
      {
        count: 9531,
        cat: "\u0428\u0443\u043C\u0435\u043D"
      },
      {
        count: 9201,
        cat: "\u041F\u0435\u0442\u0440\u0438\u0447"
      },
      {
        count: 8934,
        cat: "\u041F\u0430\u0437\u0430\u0440\u0434\u0436\u0438\u043A"
      },
      {
        count: 8658,
        cat: "\u041F\u0435\u0440\u043D\u0438\u043A"
      },
      {
        count: 8237,
        cat: "\u042F\u043C\u0431\u043E\u043B"
      },
      {
        count: 8193,
        cat: "\u0413\u0430\u0431\u0440\u043E\u0432\u043E"
      },
      {
        count: 7295,
        cat: "\u0412\u0440\u0430\u0446\u0430"
      },
      {
        count: 6246,
        cat: "\u041A\u044E\u0441\u0442\u0435\u043D\u0434\u0438\u043B"
      },
      {
        count: 6194,
        cat: "\u0410\u0441\u0435\u043D\u043E\u0432\u0433\u0440\u0430\u0434"
      },
      {
        count: 5700,
        cat: "\u041A\u044A\u0440\u0434\u0436\u0430\u043B\u0438"
      },
      {
        count: 5599,
        cat: "\u041A\u0430\u0437\u0430\u043D\u043B\u044A\u043A"
      },
      {
        count: 5548,
        cat: "\u0421\u0430\u043D\u0434\u0430\u043D\u0441\u043A\u0438"
      },
      {
        count: 5525,
        cat: "\u041D\u0435\u0441\u0435\u0431\u044A\u0440"
      },
      {
        count: 4927,
        cat: "\u041C\u043E\u043D\u0442\u0430\u043D\u0430"
      },
      {
        count: 4911,
        cat: "\u0412\u0438\u0434\u0438\u043D"
      },
      {
        count: 4761,
        cat: "\u0414\u0438\u043C\u0438\u0442\u0440\u043E\u0432\u0433\u0440\u0430\u0434"
      },
      {
        count: 4625,
        cat: "\u0422\u044A\u0440\u0433\u043E\u0432\u0438\u0449\u0435"
      },
      {
        count: 4405,
        cat: "\u0421\u043C\u043E\u043B\u044F\u043D"
      },
      {
        count: 4319,
        cat: "\u0421\u0438\u043B\u0438\u0441\u0442\u0440\u0430"
      },
      {
        count: 4207,
        cat: "\u0420\u0430\u0437\u0433\u0440\u0430\u0434"
      },
      {
        count: 3961,
        cat: "\u041B\u043E\u0432\u0435\u0447"
      },
      {
        count: 3680,
        cat: "\u0421\u0430\u043C\u043E\u043A\u043E\u0432"
      },
      {
        count: 3635,
        cat: "\u0414\u0443\u043F\u043D\u0438\u0446\u0430"
      },
      {
        count: 3093,
        cat: "\u0413\u043E\u0446\u0435 \u0414\u0435\u043B\u0447\u0435\u0432"
      },
      {
        count: 3088,
        cat: "\u0413\u043E\u0440\u043D\u0430 \u041E\u0440\u044F\u0445\u043E\u0432\u0438\u0446\u0430"
      },
      {
        count: 3017,
        cat: "\u041F\u043E\u043C\u043E\u0440\u0438\u0435"
      },
      {
        count: 2609,
        cat: "\u0421\u0435\u0432\u043B\u0438\u0435\u0432\u043E"
      },
      {
        count: 2461,
        cat: "\u0422\u0440\u043E\u044F\u043D"
      },
      {
        count: 2426,
        cat: "\u041A\u0430\u0440\u043B\u043E\u0432\u043E"
      },
      {
        count: 2352,
        cat: "\u0412\u0435\u043B\u0438\u043D\u0433\u0440\u0430\u0434"
      },
      {
        count: 2324,
        cat: "\u0421\u0432\u0438\u043B\u0435\u043D\u0433\u0440\u0430\u0434"
      },
      {
        count: 2203,
        cat: "\u0411\u043E\u0442\u0435\u0432\u0433\u0440\u0430\u0434"
      },
      {
        count: 2071,
        cat: "\u0421\u0432\u0438\u0449\u043E\u0432"
      },
      {
        count: 2006,
        cat: "\u0410\u0439\u0442\u043E\u0441"
      },
      {
        count: 1892,
        cat: "\u0425\u0430\u0440\u043C\u0430\u043D\u043B\u0438"
      },
      {
        count: 1832,
        cat: "\u041D\u043E\u0432\u0430 \u0417\u0430\u0433\u043E\u0440\u0430"
      },
      {
        count: 1810,
        cat: "\u0411\u0430\u043D\u0441\u043A\u043E"
      },
      {
        count: 1659,
        cat: "\u041A\u0430\u0440\u043D\u043E\u0431\u0430\u0442"
      }
    ];
    jokes = [
      {
        cat: "\u0420\u0430\u0437\u043D\u0438",
        count: 51785
      },
      {
        cat: "\u0421\u0435\u043C\u0435\u0439\u043D\u0438",
        count: 8115
      },
      {
        cat: "\u0411\u0438\u0441\u0435\u0440\u0438",
        count: 7511
      },
      {
        cat: "\u0416\u0435\u043D\u0438",
        count: 7400
      },
      {
        cat: "\u041C\u0440\u044A\u0441\u043D\u0438",
        count: 3035
      },
      {
        cat: "\u041F\u0440\u043E\u0444\u0435\u0441\u0438\u043E\u043D\u0430\u043B\u043D\u0438",
        count: 2377
      },
      {
        cat: "\u0416\u0438\u0432\u043E\u0442\u043D\u0438",
        count: 2319
      },
      {
        cat: "\u0411\u043B\u043E\u043D\u0434\u0438\u043D\u043A\u0438",
        count: 2242
      },
      {
        cat: "\u041B\u044E\u0431\u0438\u043C\u0438 \u0413\u0435\u0440\u043E\u0438",
        count: 2084
      },
      {
        cat: "\u0427\u0435\u0440\u0435\u043D \u0445\u0443\u043C\u043E\u0440",
        count: 1892
      },
      {
        cat: "\u041F\u0440\u043E\u0433\u0440\u0430\u043C\u0438\u0441\u0442\u0438",
        count: 1861
      },
      {
        cat: "\u041F\u043E\u043B\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0438",
        count: 1750
      },
      {
        cat: "\u0418\u0432\u0430\u043D\u0447\u043E \u0438 \u041C\u0430\u0440\u0438\u0439\u043A\u0430",
        count: 1485
      },
      {
        cat: "\u041F\u0438\u044F\u043D\u0441\u043A\u0438",
        count: 1410
      },
      {
        cat: "\u041B\u0435\u043A\u0430\u0440\u0438",
        count: 1074
      },
      {
        cat: "\u041F\u043E\u043B\u0438\u0446\u0430\u0438",
        count: 934
      },
      {
        cat: "\u0414\u0440\u0443\u0433\u0438",
        count: 801
      },
      {
        cat: "\u0421\u043F\u043E\u0440\u0442\u043D\u0438",
        count: 768
      },
      {
        cat: "\u041F\u0440\u043E\u0441\u0442\u0438\u0442\u0443\u0442\u043A\u0438",
        count: 762
      },
      {
        cat: "\u0421\u0442\u0443\u0434\u0435\u043D\u0442\u0441\u043A\u0438",
        count: 762
      },
      {
        cat: "\u0411\u043E\u0440\u0446\u0438",
        count: 696
      },
      {
        cat: "\u0414\u0435\u0446\u0430",
        count: 694
      },
      {
        cat: "\u0418\u0432\u0430\u043D\u0447\u043E",
        count: 575
      },
      {
        cat: "\u0426\u0438\u0433\u0430\u043D\u0438",
        count: 529
      },
      {
        cat: "\u041C\u043B\u0430\u0434\u043E\u0436\u0435\u043D\u0446\u0438",
        count: 481
      },
      {
        cat: "\u0424\u0430\u0440\u043C\u0430\u0446\u0435\u0432\u0442\u0438",
        count: 471
      },
      {
        cat: "\u0423\u0447\u0435\u043D\u0438\u0447\u0435\u0441\u043A\u0438",
        count: 468
      },
      {
        cat: "\u041C\u043E\u043D\u0430\u0441\u0438",
        count: 465
      },
      {
        cat: "\u0428\u043E\u0444\u044C\u043E\u0440\u0438",
        count: 439
      },
      {
        cat: "\u0421\u0432\u0430\u043B\u043A\u0438",
        count: 434
      },
      {
        cat: "\u0422\u044A\u0449\u0438",
        count: 431
      },
      {
        cat: "\u0413\u043B\u0443\u043F\u0430\u0432\u0438",
        count: 430
      },
      {
        cat: "\u041D\u0430\u0434\u043F\u0438\u0441\u0438",
        count: 421
      },
      {
        cat: "\u0420\u0430\u0434\u0438\u043E \u0415\u0440\u0435\u0432\u0430\u043D",
        count: 401
      },
      {
        cat: "\u0414\u043E\u043A\u0442\u043E\u0440\u0438",
        count: 400
      },
      {
        cat: "\u0410\u0434\u0432\u043E\u043A\u0430\u0442\u0438",
        count: 399
      },
      {
        cat: "\u0424\u0435\u0439\u0441\u0431\u0443\u043A",
        count: 397
      },
      {
        cat: "\u0415\u0432\u0440\u0435\u0438",
        count: 396
      },
      {
        cat: "\u0413\u0438\u043D\u0435\u043A\u043E\u043B\u043E\u0437\u0438",
        count: 387
      },
      {
        cat: "\u0421\u044A\u0441\u0435\u0434\u0438",
        count: 380
      },
      {
        cat: "\u0426\u0438\u0433\u0430\u0440\u0438",
        count: 378
      },
      {
        cat: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430",
        count: 364
      },
      {
        cat: "\u041C\u044A\u0436\u0435",
        count: 362
      },
      {
        cat: "\u041E\u0433\u043B\u0435\u0434\u0430\u043B\u043E",
        count: 361
      },
      {
        cat: "\u0429\u0435\u0440\u043A\u0438",
        count: 359
      },
      {
        cat: "\u0422\u043E\u0430\u043B\u0435\u0442\u043D\u0430",
        count: 355
      },
      {
        cat: "\u0423\u043C\u0440\u0435\u043B\u0438",
        count: 349
      },
      {
        cat: "\u041F\u043B\u0430\u0436\u043E\u0432\u0435",
        count: 342
      },
      {
        cat: "\u0420\u043E\u0434\u0438\u0442\u0435\u043B\u0438",
        count: 341
      },
      {
        cat: "\u041F\u0440\u043E\u0444\u0435\u0441\u0438\u0438",
        count: 341
      },
      {
        cat: "\u041C\u043B\u0430\u0434\u0435\u0436\u0438",
        count: 340
      },
      {
        cat: "\u041F\u0440\u0430\u0441\u0435\u0442\u0430",
        count: 340
      },
      {
        cat: "\u041F\u0440\u0438\u043D\u0446\u043E\u0432\u0435 \u0438 \u043F\u0440\u0438\u043D\u0446\u0435\u0441\u0438",
        count: 335
      },
      {
        cat: "\u0412\u0438\u043D\u043E",
        count: 331
      },
      {
        cat: "\u041F\u043E\u0434\u0430\u0440\u044A\u0446\u0438",
        count: 329
      },
      {
        cat: "\u0421*\u043A\u0441",
        count: 329
      },
      {
        cat: "\u0414\u044F\u0434\u043E\u0432\u0446\u0438",
        count: 326
      },
      {
        cat: "\u0420\u0430\u043A\u0438\u044F",
        count: 322
      },
      {
        cat: "\u0420\u043E\u0436\u0434\u0435\u043D\u0438\u0446\u0438",
        count: 319
      },
      {
        cat: "\u0422\u044A\u043F\u0438\u0437\u043C\u0438",
        count: 316
      },
      {
        cat: "\u0420\u0430\u0434\u0438\u043E \u0435\u0440\u0435\u0432\u0430\u043D",
        count: 316
      },
      {
        cat: "\u041A\u0430\u0442\u0430\u0434\u0436\u0438\u0438",
        count: 314
      },
      {
        cat: "SMS",
        count: 314
      },
      {
        cat: "\u0412\u043E\u0435\u043D\u043D\u0438",
        count: 313
      },
      {
        cat: "\u041A\u0440\u044A\u0447\u043C\u0438",
        count: 311
      },
      {
        cat: "\u0414\u0435\u0431\u0435\u043B\u0438",
        count: 310
      },
      {
        cat: "\u041F\u0441\u0438\u0445\u0438\u0430\u0442\u0440\u0438\u044F",
        count: 306
      },
      {
        cat: "\u041F\u0440\u0430\u0437\u043D\u0438\u0447\u043D\u0438",
        count: 293
      },
      {
        cat: "\u0413\u0440\u0430\u0434\u043E\u0432\u0435",
        count: 277
      },
      {
        cat: "\u0417\u0430\u0442\u0432\u043E\u0440\u043D\u0438\u0446\u0438",
        count: 276
      },
      {
        cat: "\u0412\u043B\u0430\u043A\u043E\u0432\u0435",
        count: 275
      },
      {
        cat: "\u041A\u0430\u043A\u0432\u0430 \u0435 \u0440\u0430\u0437\u043B\u0438\u043A\u0430\u0442\u0430",
        count: 270
      },
      {
        cat: "\u0411\u0435\u0431\u0435\u0442\u0430",
        count: 268
      },
      {
        cat: "\u0424\u0438\u043B\u043C\u0438",
        count: 267
      },
      {
        cat: "\u041B\u044F\u0442\u043E",
        count: 266
      },
      {
        cat: "\u0421\u0443\u0442\u0438\u0435\u043D\u0438",
        count: 265
      },
      {
        cat: "\u0413\u0430\u0434\u043E\u0440\u0438\u0438",
        count: 265
      },
      {
        cat: "\u041F\u0435\u0442\u044A\u043A",
        count: 261
      },
      {
        cat: "\u0423\u0438\u0441\u043A\u0438",
        count: 261
      },
      {
        cat: "\u0421\u0435\u043A\u0440\u0435\u0442\u0430\u0440\u043A\u0438",
        count: 257
      },
      {
        cat: "\u041C\u0430\u0442\u0435\u043C\u0430\u0442\u0438\u043A\u0430",
        count: 255
      },
      {
        cat: "\u041B\u044E\u0431\u043E\u0432\u043D\u0438\u043A",
        count: 255
      },
      {
        cat: "\u041C\u0430\u0440\u0438\u0439\u043A\u0430",
        count: 254
      },
      {
        cat: "\u041A\u0443\u043F\u043E\u043D\u0438",
        count: 250
      },
      {
        cat: "\u041F\u043B\u0443\u0432\u0430\u043D\u0435",
        count: 250
      },
      {
        cat: "\u041E\u0442\u0441\u043B\u0430\u0431\u0432\u0430\u043D\u0435",
        count: 248
      },
      {
        cat: "\u041E\u0431\u0443\u0432\u043A\u0438",
        count: 244
      },
      {
        cat: "\u041A\u043E\u043C\u0430\u043D\u0434\u0438\u0440\u043E\u0432\u043A\u0438",
        count: 244
      },
      {
        cat: "\u041A\u0440\u0430\u0432\u0438",
        count: 244
      },
      {
        cat: "\u041E\u0432\u0447\u0430\u0440\u0438",
        count: 243
      },
      {
        cat: "\u041D\u0430\u0440\u043A\u043E\u043C\u0430\u043D\u0441\u043A\u0438",
        count: 240
      },
      {
        cat: "\u0414\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438",
        count: 240
      },
      {
        cat: "\u041F\u0440\u043E\u0444\u0435\u0441\u043E\u0440\u0438",
        count: 239
      },
      {
        cat: "\u041A\u043E\u043A\u043E\u0448\u043A\u0438",
        count: 234
      },
      {
        cat: "\u0421\u043B\u043E\u043D\u043E\u0432\u0435",
        count: 234
      },
      {
        cat: "\u0425\u043B\u044F\u0431",
        count: 233
      },
      {
        cat: "\u0427\u044A\u043A \u041D\u043E\u0440\u0438\u0441",
        count: 229
      },
      {
        cat: "\u0428\u043E\u043A\u043E\u043B\u0430\u0434",
        count: 228
      },
      {
        cat: "\u0417\u0438\u043C\u0430",
        count: 226
      },
      {
        cat: "\u041C\u0430\u0439\u043C\u0443\u043D\u0438",
        count: 226
      },
      {
        cat: "\u041A\u0438\u0442\u0430\u0439",
        count: 223
      },
      {
        cat: "\u0413\u0440\u043E\u0437\u043D\u0438",
        count: 219
      },
      {
        cat: "\u041B\u044E\u0431\u043E\u0432\u043D\u0438\u0446\u0430",
        count: 218
      },
      {
        cat: "\u0425\u0440\u0430\u043D\u0430",
        count: 215
      },
      {
        cat: "\u0423\u0441\u043C\u0438\u0432\u043A\u0438",
        count: 211
      },
      {
        cat: "\u0422\u0430\u043A\u0441\u0438",
        count: 210
      },
      {
        cat: "\u041F\u0435\u0440\u043D\u0438\u0447\u0430\u043D\u0438",
        count: 209
      },
      {
        cat: "\u0420\u0443\u0441\u0438\u044F",
        count: 205
      },
      {
        cat: "\u0422\u0430\u0442\u043A\u043E\u0432\u0446\u0438",
        count: 202
      },
      {
        cat: "\u0412\u043E\u0434\u043A\u0430",
        count: 201
      },
      {
        cat: "\u041D\u043E\u0432\u0430 \u0433\u043E\u0434\u0438\u043D\u0430",
        count: 200
      },
      {
        cat: "\u041A\u0430\u043F\u0438\u0442\u0430\u043D\u0438",
        count: 199
      },
      {
        cat: "\u041A\u043E\u0442\u043A\u0438",
        count: 197
      },
      {
        cat: "\u0421\u044A\u0434\u0438\u0438",
        count: 197
      },
      {
        cat: "\u041C\u0430\u0441\u0430",
        count: 197
      },
      {
        cat: "\u0413\u043E\u0442\u0432\u0430\u0447\u0438",
        count: 195
      },
      {
        cat: "\u041F\u043B\u0430\u043D\u0438\u043D\u0430",
        count: 195
      },
      {
        cat: "\u0421\u043E\u0444\u0438\u044F",
        count: 194
      },
      {
        cat: "\u0421\u0443\u043F\u0438",
        count: 188
      },
      {
        cat: "\u0427\u0443\u043A\u0447\u0438",
        count: 184
      },
      {
        cat: "\u0424\u0440\u0430\u043D\u0446\u0438\u044F",
        count: 181
      },
      {
        cat: "\u041B\u0443\u0434\u0438",
        count: 181
      },
      {
        cat: "\u0425\u043E\u0442\u0435\u043B\u0438",
        count: 179
      },
      {
        cat: "\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F",
        count: 177
      },
      {
        cat: "\u041C\u0443\u0442\u0440\u0438",
        count: 177
      }
    ];
    jokes.map((item) => {
      return {
        ...item,
        slug: slugify(item.cat)
      };
    });
    business.map((item) => {
      return {
        ...item,
        slug: slugify(item.cat)
      };
    });
    formattedjoke = (joke) => {
      const formatted = joke.replace(/([.!?])[:]/g, "$1\n\n").replace(/—/g, "\n-").replace(/— ([А-Я])/g, "\n- $1").replace(/-([А-Я])/g, "\n- $1").replace(/[ ]+- ([А-Я])/g, "\n- $1").replace(/\?/g, "?\n").replace(/\n+/g, "\n").split("\n").filter((x2) => x2.length > 2).map((x2) => x2.trim()).join("\n");
      return formatted;
    };
    $$Astro$42 = createAstro();
    remappedJokeFunction = (joke) => {
      let i1 = 0;
      return formattedjoke(joke).split("\n").map((line, i2) => {
        const num = line.startsWith("-") || line.startsWith(" -") || line.startsWith("\u2013") || line.startsWith("  -") ? (i1 += 1) % 2 === 0 ? "even" : "odd" : false;
        return {
          key: i2,
          line: num === "odd" || num === "even" ? line.replace("-", "").replace("\u2013", "") : line,
          ...num && { oddness: num }
        };
      });
    };
    $$FormatJoke = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$42, $$props, $$slots);
      Astro2.self = $$FormatJoke;
      const { joke } = Astro2.props;
      const remapped = remappedJokeFunction(joke);
      return renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": ($$result2) => renderTemplate`${remapped.map(
        ({
          oddness,
          line,
          key
        }) => oddness ? renderTemplate`${maybeRenderHead()}<div${addAttribute(`flex flex-wrap pb-4 ${oddness === "even" ? "flex-row-reverse" : ""}`, "class")}>
                        <div${addAttribute(`relative whitespace-pre-wrap rounded-lg p-2 font-sans font-medium shadow-2xl ${oddness === "even" ? "bg-violet-900 text-right dark:bg-slate-200" : "bg-indigo-700 text-left dark:bg-slate-400"}`, "class")}>
                            ${oddness === "odd" ? renderTemplate`<div class="absolute -left-4 top-3 inline-block w-4 overflow-hidden">
                                    <div class="h-16  origin-top-right -rotate-45 bg-indigo-700 dark:bg-slate-400"></div>
                                </div>` : renderTemplate`<div class="absolute -right-4 top-3 inline-block w-4 overflow-hidden">
                                    <div class=" h-16  origin-top-left rotate-45 bg-violet-900 dark:bg-slate-200"></div>
                                </div>`}
                            ${line} ${key === 3 && renderTemplate`${renderComponent($$result2, "RudSense", $$RudSense, { "main": true })}`}
                        </div>
                    </div>` : renderTemplate`<div class="block pb-4 text-lg">${line}</div>`
      )}` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/FormatJoke.astro", void 0);
    $$Astro$32 = createAstro();
    $$FormatJokeShort = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$32, $$props, $$slots);
      Astro2.self = $$FormatJokeShort;
      const { joke } = Astro2.props;
      const substr = joke.slice(0, 150);
      const jlen = joke.length <= 150;
      const lines = formattedjoke(jlen ? joke.replace(/\.../g, "") : `${substr} ...`).split("\n").slice(0, 3);
      return renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": ($$result2) => renderTemplate`${lines.map((line) => renderTemplate`${maybeRenderHead()}<p>
				${line.endsWith("...") ? renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": ($$result3) => renderTemplate`${line.replace(/\.../g, "")}${" "}<span class="absolute h-6   w-8 text-4xl">
							<span class="absolute ml-1 leading-4 text-purple-600">
								...
							</span>
						</span>
					` })}` : renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": ($$result3) => renderTemplate`${line}` })}`}
			</p>`)}` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/FormatJokeShort.astro", void 0);
    $$Astro$22 = createAstro();
    $$Modal = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$22, $$props, $$slots);
      Astro2.self = $$Modal;
      const { id, open: open2 } = Astro2.props;
      return renderTemplate`
${renderSlot($$result, $$slots["button"])}

${maybeRenderHead()}<dialog${addAttribute(id, "id")} class="astro-QMZM2SOJ">
    ${renderSlot($$result, $$slots["main"])}

    ${renderSlot($$result, $$slots["close"])}
</dialog>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/Modal.astro", void 0);
    $$Astro$12 = createAstro();
    $$JokeThumbnail = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$12, $$props, $$slots);
      Astro2.self = $$JokeThumbnail;
      const { item, showcats, short, hideReadMore } = Astro2.props;
      const { joke, cat, id } = item;
      const jlen = joke.length <= 150;
      return renderTemplate`${maybeRenderHead()}<article class="joke relative">
    ${showcats && item.cat !== "\u0420\u0430\u0437\u043D\u0438" && renderTemplate`<a class="joketop text-shadow"${addAttribute(`/cat/${cat.replace(/ /g, "%20")}`, "href")}>
                <h2>${cat.replace("JOK", "")}</h2>
            </a>`}

    <div class="jokewrap">
        <div class="py-5 font-black text-md">
            ${short ? renderTemplate`${renderComponent($$result, "FormatJokeShort", $$FormatJokeShort, { "joke": joke })}` : renderTemplate`${renderComponent($$result, "FormatJoke", $$FormatJoke, { "joke": joke })}`}
        </div>
    </div>
    ${!hideReadMore && (!jlen ? renderTemplate`${renderComponent($$result, "Modal", $$Modal, { "id": id }, { "button": ($$result2) => renderTemplate`<a${addAttribute(`(function(e){e.preventDefault(); document.getElementById("${id}").showModal()})(event)`, "onclick")}${addAttribute("/joke/" + id, "href")} class="btn absolute right-2 -mt-12 flex cursor-pointer border-gray-800 bg-black shadow-lg dark:border-gray-500 dark:bg-white rounded-l-none rounded-t-none">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${addAttribute(1.5, "stroke-width")} stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM10.5 7.5v6m3-3h-6"></path>
                        </svg>
                    </a>` })}` : renderTemplate`<div class="absolute right-2 -mt-12">
                    <button${addAttribute(`fbshare('https://kloun.lol/joke/${id}')`, "onclick")} class="text-white  transition duration-300 max-w-xs w-full rounded-3xl uppercase flex text-sm font-bold p-3  relative   rounded-l-none rounded-t-none bg-transparent false undefined" style="background-color: transparent;">
                        <svg class="h-6 w-6 fill-white dark:fill-blue-600 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"></path>
                        </svg>
                    </button>
                </div>`)}
</article>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/JokeThumbnail.astro", void 0);
    jokecats = [{ "cat": "\u0420\u0430\u0437\u043D\u0438", "slug": "razni", "count": 25073 }, { "cat": "\u0421\u0435\u043C\u0435\u0439\u043D\u0438", "slug": "semeini", "count": 3870 }, { "cat": "\u0416\u0435\u043D\u0438", "slug": "zheni", "count": 3713 }, { "cat": "\u0411\u0438\u0441\u0435\u0440\u0438", "slug": "biseri", "count": 3571 }, { "cat": "\u041C\u0440\u044A\u0441\u043D\u0438", "slug": "mr-sni", "count": 1474 }, { "cat": "\u0416\u0438\u0432\u043E\u0442\u043D\u0438", "slug": "zhivotni", "count": 1135 }, { "cat": "\u041F\u0440\u043E\u0444\u0435\u0441\u0438\u043E\u043D\u0430\u043B\u043D\u0438", "slug": "profesionalni", "count": 1134 }, { "cat": "\u0411\u043B\u043E\u043D\u0434\u0438\u043D\u043A\u0438", "slug": "blondinki", "count": 1099 }, { "cat": "\u041B\u044E\u0431\u0438\u043C\u0438 \u0413\u0435\u0440\u043E\u0438", "slug": "liubimi-geroi", "count": 1011 }, { "cat": "\u041F\u0440\u043E\u0433\u0440\u0430\u043C\u0438\u0441\u0442\u0438", "slug": "programisti", "count": 934 }, { "cat": "\u0427\u0435\u0440\u0435\u043D \u0445\u0443\u043C\u043E\u0440", "slug": "cheren-khumor", "count": 913 }, { "cat": "\u041F\u043E\u043B\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0438", "slug": "politicheski", "count": 864 }, { "cat": "\u0418\u0432\u0430\u043D\u0447\u043E \u0438 \u041C\u0430\u0440\u0438\u0439\u043A\u0430", "slug": "ivancho-i-mariika", "count": 686 }, { "cat": "\u041F\u0438\u044F\u043D\u0441\u043A\u0438", "slug": "piianski", "count": 666 }, { "cat": "\u041F\u043E\u043B\u0438\u0446\u0430\u0438", "slug": "politsai", "count": 513 }, { "cat": "\u041B\u0435\u043A\u0430\u0440\u0438", "slug": "lekari", "count": 512 }, { "cat": "\u041F\u0440\u043E\u0441\u0442\u0438\u0442\u0443\u0442\u043A\u0438", "slug": "prostitutki", "count": 446 }, { "cat": "\u0421\u043F\u043E\u0440\u0442\u043D\u0438", "slug": "sportni", "count": 389 }, { "cat": "\u0414\u0440\u0443\u0433\u0438", "slug": "drugi", "count": 385 }, { "cat": "\u0421\u0442\u0443\u0434\u0435\u043D\u0442\u0441\u043A\u0438", "slug": "studentski", "count": 368 }, { "cat": "\u0411\u043E\u0440\u0446\u0438", "slug": "bortsi", "count": 343 }, { "cat": "\u0414\u0435\u0446\u0430", "slug": "detsa", "count": 323 }, { "cat": "\u0426\u0438\u0433\u0430\u043D\u0438", "slug": "tsigani", "count": 276 }, { "cat": "\u041C\u043B\u0430\u0434\u043E\u0436\u0435\u043D\u0446\u0438", "slug": "mladozhentsi", "count": 245 }, { "cat": "\u0424\u0430\u0440\u043C\u0430\u0446\u0435\u0432\u0442\u0438", "slug": "farmatsevti", "count": 241 }, { "cat": "\u041D\u0430\u0434\u043F\u0438\u0441\u0438", "slug": "nadpisi", "count": 238 }, { "cat": "\u0418\u0432\u0430\u043D\u0447\u043E", "slug": "ivancho", "count": 237 }, { "cat": "\u0423\u0447\u0435\u043D\u0438\u0447\u0435\u0441\u043A\u0438", "slug": "uchenicheski", "count": 230 }, { "cat": "\u041C\u043E\u043D\u0430\u0441\u0438", "slug": "monasi", "count": 225 }, { "cat": "\u0413\u043B\u0443\u043F\u0430\u0432\u0438", "slug": "glupavi", "count": 224 }, { "cat": "\u0428\u043E\u0444\u044C\u043E\u0440\u0438", "slug": "shof-ori", "count": 218 }, { "cat": "\u0415\u0432\u0440\u0435\u0438", "slug": "evrei", "count": 211 }, { "cat": "\u0426\u0438\u0433\u0430\u0440\u0438", "slug": "tsigari", "count": 210 }, { "cat": "\u0420\u0430\u0434\u0438\u043E \u0415\u0440\u0435\u0432\u0430\u043D", "slug": "radio-erevan", "count": 200 }, { "cat": "\u0422\u044A\u0449\u0438", "slug": "t-shti", "count": 200 }, { "cat": "\u041C\u043B\u0430\u0434\u0435\u0436\u0438", "slug": "mladezhi", "count": 190 }, { "cat": "\u0421\u0432\u0430\u043B\u043A\u0438", "slug": "svalki", "count": 188 }, { "cat": "\u0423\u043C\u0440\u0435\u043B\u0438", "slug": "umreli", "count": 188 }, { "cat": "\u041A\u0440\u044A\u0447\u043C\u0438", "slug": "kr-chmi", "count": 185 }, { "cat": "\u0421\u044A\u0441\u0435\u0434\u0438", "slug": "s-sedi", "count": 184 }, { "cat": "\u041F\u0440\u043E\u0444\u0435\u0441\u0438\u0438", "slug": "profesii", "count": 183 }, { "cat": "\u041C\u044A\u0436\u0435", "slug": "m-zhe", "count": 182 }, { "cat": "\u0424\u0435\u0439\u0441\u0431\u0443\u043A", "slug": "feisbuk", "count": 182 }, { "cat": "\u0412\u0438\u043D\u043E", "slug": "vino", "count": 180 }, { "cat": "\u0414\u043E\u043A\u0442\u043E\u0440\u0438", "slug": "doktori", "count": 179 }, { "cat": "\u0421\u0443\u0442\u0438\u0435\u043D\u0438", "slug": "sutieni", "count": 178 }, { "cat": "\u0414\u044F\u0434\u043E\u0432\u0446\u0438", "slug": "diadovtsi", "count": 174 }, { "cat": "\u0420\u0430\u043A\u0438\u044F", "slug": "rakiia", "count": 170 }, { "cat": "\u0414\u0435\u0431\u0435\u043B\u0438", "slug": "debeli", "count": 167 }, { "cat": "\u0410\u043C\u0435\u0440\u0438\u043A\u0430", "slug": "amerika", "count": 164 }, { "cat": "\u041A\u0440\u0430\u0432\u0438", "slug": "kravi", "count": 164 }, { "cat": "\u041F\u043E\u0434\u0430\u0440\u044A\u0446\u0438", "slug": "podar-tsi", "count": 164 }, { "cat": "\u0420\u043E\u0434\u0438\u0442\u0435\u043B\u0438", "slug": "roditeli", "count": 163 }, { "cat": "\u0429\u0435\u0440\u043A\u0438", "slug": "shterki", "count": 162 }, { "cat": "\u041F\u0440\u0430\u0437\u043D\u0438\u0447\u043D\u0438", "slug": "praznichni", "count": 160 }, { "cat": "\u0422\u044A\u043F\u0438\u0437\u043C\u0438", "slug": "t-pizmi", "count": 156 }, { "cat": "\u041F\u0440\u0430\u0441\u0435\u0442\u0430", "slug": "praseta", "count": 154 }, { "cat": "SMS", "slug": "sms", "count": 153 }, { "cat": "\u0410\u0434\u0432\u043E\u043A\u0430\u0442\u0438", "slug": "advokati", "count": 153 }, { "cat": "\u0420\u0430\u0434\u0438\u043E \u0435\u0440\u0435\u0432\u0430\u043D", "slug": "radio-erevan", "count": 153 }, { "cat": "\u041E\u0433\u043B\u0435\u0434\u0430\u043B\u043E", "slug": "ogledalo", "count": 152 }, { "cat": "\u0420\u043E\u0436\u0434\u0435\u043D\u0438\u0446\u0438", "slug": "rozhdenitsi", "count": 152 }, { "cat": "\u0413\u0438\u043D\u0435\u043A\u043E\u043B\u043E\u0437\u0438", "slug": "ginekolozi", "count": 148 }, { "cat": "\u0414\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438", "slug": "direktori", "count": 148 }, { "cat": "\u0425\u043B\u044F\u0431", "slug": "khliab", "count": 148 }, { "cat": "\u0412\u043E\u0435\u043D\u043D\u0438", "slug": "voenni", "count": 147 }, { "cat": "\u0412\u043B\u0430\u043A\u043E\u0432\u0435", "slug": "vlakove", "count": 146 }, { "cat": "\u041D\u0430\u0440\u043A\u043E\u043C\u0430\u043D\u0441\u043A\u0438", "slug": "narkomanski", "count": 138 }, { "cat": "\u041A\u043E\u043A\u043E\u0448\u043A\u0438", "slug": "kokoshki", "count": 135 }, { "cat": "\u041F\u0441\u0438\u0445\u0438\u0430\u0442\u0440\u0438\u044F", "slug": "psikhiatriia", "count": 135 }, { "cat": "\u041A\u0430\u0442\u0430\u0434\u0436\u0438\u0438", "slug": "katadzhii", "count": 133 }, { "cat": "\u041C\u0430\u0442\u0435\u043C\u0430\u0442\u0438\u043A\u0430", "slug": "matematika", "count": 133 }, { "cat": "\u041E\u0432\u0447\u0430\u0440\u0438", "slug": "ovchari", "count": 133 }, { "cat": "\u0411\u0435\u0431\u0435\u0442\u0430", "slug": "bebeta", "count": 132 }, { "cat": "\u041B\u044E\u0431\u043E\u0432\u043D\u0438\u043A", "slug": "liubovnik", "count": 132 }, { "cat": "\u0413\u0430\u0434\u043E\u0440\u0438\u0438", "slug": "gadorii", "count": 130 }, { "cat": "\u0413\u0440\u0430\u0434\u043E\u0432\u0435", "slug": "gradove", "count": 130 }, { "cat": "\u0422\u043E\u0430\u043B\u0435\u0442\u043D\u0430", "slug": "toaletna", "count": 130 }, { "cat": "\u041F\u0440\u0438\u043D\u0446\u043E\u0432\u0435 \u0438 \u043F\u0440\u0438\u043D\u0446\u0435\u0441\u0438", "slug": "printsove-i-printsesi", "count": 128 }, { "cat": "\u0413\u0440\u043E\u0437\u043D\u0438", "slug": "grozni", "count": 126 }, { "cat": "\u0417\u0430\u0442\u0432\u043E\u0440\u043D\u0438\u0446\u0438", "slug": "zatvornitsi", "count": 126 }, { "cat": "\u041C\u0430\u0440\u0438\u0439\u043A\u0430", "slug": "mariika", "count": 126 }, { "cat": "\u041E\u0442\u0441\u043B\u0430\u0431\u0432\u0430\u043D\u0435", "slug": "otslabvane", "count": 126 }, { "cat": "\u0421\u043B\u043E\u043D\u043E\u0432\u0435", "slug": "slonove", "count": 126 }, { "cat": "\u0421*\u043A\u0441", "slug": "s-ks", "count": 125 }, { "cat": "\u041E\u0431\u0443\u0432\u043A\u0438", "slug": "obuvki", "count": 121 }, { "cat": "\u0428\u043E\u043A\u043E\u043B\u0430\u0434", "slug": "shokolad", "count": 121 }, { "cat": "\u041E\u0431\u044F\u0434", "slug": "obiad", "count": 120 }, { "cat": "\u041B\u044E\u0431\u043E\u0432\u043D\u0438\u0446\u0430", "slug": "liubovnitsa", "count": 117 }, { "cat": "\u0421\u0435\u043A\u0440\u0435\u0442\u0430\u0440\u043A\u0438", "slug": "sekretarki", "count": 117 }, { "cat": "\u041A\u0430\u043A\u0432\u0430 \u0435 \u0440\u0430\u0437\u043B\u0438\u043A\u0430\u0442\u0430", "slug": "kakva-e-razlikata", "count": 116 }, { "cat": "\u041F\u0435\u0442\u044A\u043A", "slug": "pet-k", "count": 114 }, { "cat": "\u0417\u0438\u043C\u0430", "slug": "zima", "count": 113 }, { "cat": "\u041F\u0440\u043E\u0444\u0435\u0441\u043E\u0440\u0438", "slug": "profesori", "count": 112 }, { "cat": "\u0424\u0438\u043B\u043C\u0438", "slug": "filmi", "count": 112 }, { "cat": "\u041C\u0430\u0439\u043C\u0443\u043D\u0438", "slug": "maimuni", "count": 110 }, { "cat": "\u041F\u043B\u0430\u0436\u043E\u0432\u0435", "slug": "plazhove", "count": 109 }, { "cat": "\u041F\u043B\u0443\u0432\u0430\u043D\u0435", "slug": "pluvane", "count": 109 }, { "cat": "\u0423\u0438\u0441\u043A\u0438", "slug": "uiski", "count": 104 }, { "cat": "\u0420\u0443\u0441\u0438\u044F", "slug": "rusiia", "count": 103 }, { "cat": "\u0421\u0443\u043F\u0438", "slug": "supi", "count": 103 }, { "cat": "\u0427\u044A\u043A \u041D\u043E\u0440\u0438\u0441", "slug": "ch-k-noris", "count": 103 }, { "cat": "\u0413\u043E\u0442\u0432\u0430\u0447\u0438", "slug": "gotvachi", "count": 102 }, { "cat": "\u0424\u0440\u0430\u043D\u0446\u0438\u044F", "slug": "frantsiia", "count": 100 }, { "cat": "\u0413\u0430\u0440\u0434\u0435\u0440\u043E\u0431\u0438", "slug": "garderobi", "count": 99 }, { "cat": "\u041E\u0431\u0440\u0430\u0442\u043D\u0438", "slug": "obratni", "count": 98 }, { "cat": "\u041A\u0430\u043F\u0438\u0442\u0430\u043D\u0438", "slug": "kapitani", "count": 97 }, { "cat": "\u041B\u0443\u0434\u0438", "slug": "ludi", "count": 97 }, { "cat": "\u0422\u0430\u043A\u0441\u0438", "slug": "taksi", "count": 97 }, { "cat": "\u0425\u043E\u0442\u0435\u043B\u0438", "slug": "khoteli", "count": 97 }, { "cat": "\u042F\u0434\u0435\u043D\u0435", "slug": "iadene", "count": 95 }, { "cat": "\u042F\u043F\u043E\u043D\u0446\u0438", "slug": "iapontsi", "count": 95 }, { "cat": "\u0417\u0430\u043F\u043B\u0430\u0442\u0438", "slug": "zaplati", "count": 93 }, { "cat": "\u0423\u0441\u043C\u0438\u0432\u043A\u0438", "slug": "usmivki", "count": 93 }, { "cat": "\u041A\u043E\u043C\u0430\u043D\u0434\u0438\u0440\u043E\u0432\u043A\u0438", "slug": "komandirovki", "count": 91 }, { "cat": "\u041A\u0443\u043F\u043E\u043D\u0438", "slug": "kuponi", "count": 90 }, { "cat": "\u0427\u0443\u043A\u0447\u0438", "slug": "chukchi", "count": 90 }, { "cat": "\u041B\u044F\u0442\u043E", "slug": "liato", "count": 89 }, { "cat": "\u041C\u0443\u0442\u0440\u0438", "slug": "mutri", "count": 89 }, { "cat": "\u0421\u0443\u0442\u0440\u0438\u043D", "slug": "sutrin", "count": 89 }, { "cat": "\u0418\u0437\u043F\u0438\u0442\u0438", "slug": "izpiti", "count": 88 }, { "cat": "\u0423\u043C\u043D\u0438", "slug": "umni", "count": 88 }, { "cat": "Mercedes", "slug": "mercedes", "count": 87 }, { "cat": "\u041D\u043E\u0432\u0430 \u0433\u043E\u0434\u0438\u043D\u0430", "slug": "nova-godina", "count": 87 }, { "cat": "\u041C\u0430\u0441\u0430", "slug": "masa", "count": 85 }, { "cat": "\u0421\u044A\u0434\u0438\u0438", "slug": "s-dii", "count": 85 }, { "cat": "\u0411\u0430\u0439 \u0413\u0430\u043D\u044C\u043E", "slug": "bai-gan-o", "count": 83 }, { "cat": "\u041A\u0438\u0442\u0430\u0439", "slug": "kitai", "count": 83 }, { "cat": "\u041F\u0435\u0440\u043D\u0438\u0447\u0430\u043D\u0438", "slug": "pernichani", "count": 83 }, { "cat": "\u0422\u0430\u0442\u043A\u043E\u0432\u0446\u0438", "slug": "tatkovtsi", "count": 82 }, { "cat": "\u0411\u0430\u043D\u043A\u0438", "slug": "banki", "count": 80 }, { "cat": "\u041F\u043B\u0430\u043D\u0438\u043D\u0430", "slug": "planina", "count": 80 }, { "cat": "\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F", "slug": "b-lgariia", "count": 79 }, { "cat": "\u0412\u043E\u0434\u043A\u0430", "slug": "vodka", "count": 79 }, { "cat": "\u0414\u0438\u0441\u043A\u043E\u0442\u0435\u043A\u0438", "slug": "diskoteki", "count": 79 }, { "cat": "\u0421\u043E\u0444\u0438\u044F", "slug": "sofiia", "count": 79 }, { "cat": "\u0422\u0435\u043B\u0435\u0444\u043E\u043D\u0438", "slug": "telefoni", "count": 78 }, { "cat": "\u041C\u043E\u0440\u0435\u0442\u043E", "slug": "moreto", "count": 77 }, { "cat": "\u041F\u043E\u0434\u0441\u044A\u0434\u0438\u043C\u0438", "slug": "pods-dimi", "count": 77 }, { "cat": "\u0424\u0443\u0442\u0431\u043E\u043B", "slug": "futbol", "count": 74 }, { "cat": "\u0420\u0435\u0441\u0442\u043E\u0440\u0430\u043D\u0442\u0438", "slug": "restoranti", "count": 72 }, { "cat": "\u0414\u044F\u0434\u043E \u041C\u0440\u0430\u0437", "slug": "diado-mraz", "count": 71 }, { "cat": "\u041D\u0430\u0447\u0430\u043B\u043D\u0438\u0446\u0438", "slug": "nachalnitsi", "count": 70 }, { "cat": "\u0410\u0432\u0442\u043E", "slug": "avto", "count": 68 }, { "cat": "\u041A\u043E\u0442\u043A\u0438", "slug": "kotki", "count": 68 }, { "cat": "\u0412 \u0440\u0435\u0441\u0442\u043E\u0440\u0430\u043D\u0442\u0430", "slug": "v-restoranta", "count": 65 }, { "cat": "\u041A\u043E\u043C\u0443\u043D\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043A\u0438", "slug": "komunisticheski", "count": 63 }, { "cat": "\u0413\u0435\u0440\u043E\u0438", "slug": "geroi", "count": 62 }, { "cat": "\u0425\u0430\u0441\u0430\u043D \u0438 \u0410\u0439\u0448\u0435\u0442\u043E", "slug": "khasan-i-aisheto", "count": 61 }, { "cat": "\u041A\u0443\u0447\u0435\u0442\u0430", "slug": "kucheta", "count": 59 }, { "cat": "\u0411\u0430\u0431\u0438", "slug": "babi", "count": 58 }, { "cat": "\u0428\u0435\u0444\u043E\u0432\u0435", "slug": "shefove", "count": 57 }, { "cat": "\u0411\u043E\u0439\u043A\u043E \u0411\u043E\u0440\u0438\u0441\u043E\u0432", "slug": "boiko-borisov", "count": 56 }, { "cat": "\u0429\u0438\u0440\u043B\u0438\u0446", "slug": "shtirlits", "count": 53 }, { "cat": "\u041A\u0440\u0435\u0434\u0438\u0442\u0438", "slug": "krediti", "count": 52 }, { "cat": "\u0427\u0435\u0440\u0432\u0435\u043D\u0430\u0442\u0430 \u0448\u0430\u043F\u0447\u0438\u0446\u0430", "slug": "chervenata-shapchitsa", "count": 51 }, { "cat": "\u0411\u0440\u044E\u043D\u0435\u0442\u043A\u0438", "slug": "briunetki", "count": 50 }, { "cat": "\u0411\u0438\u0440\u0430", "slug": "bira", "count": 48 }, { "cat": "\u0418\u043D\u0442\u0435\u0440\u043D\u0435\u0442", "slug": "internet", "count": 48 }, { "cat": "\u041F\u043E\u0440\u0443\u0447\u0438\u043A \u0420\u0436\u0435\u0432\u0441\u043A\u0438", "slug": "poruchik-rzhevski", "count": 47 }, { "cat": "\u0422\u0435\u043B\u0435\u0432\u0438\u0437\u0438\u044F", "slug": "televiziia", "count": 47 }, { "cat": "\u041F\u0435\u0442\u043A\u0430 \u0438 \u0427\u0430\u043F\u0430\u0435\u0432", "slug": "petka-i-chapaev", "count": 44 }, { "cat": "\u041F\u043E\u0436\u0435\u043B\u0430\u043D\u0438\u044F", "slug": "pozhelaniia", "count": 44 }, { "cat": "\u0413\u043E\u0434\u0435\u043D\u0438\u0446\u0438", "slug": "godenitsi", "count": 40 }, { "cat": "\u041A\u0443\u0445\u043D\u044F", "slug": "kukhnia", "count": 40 }, { "cat": "\u041A\u0430\u0444\u0435", "slug": "kafe", "count": 38 }, { "cat": "\u0413\u0430\u0431\u0440\u043E\u0432\u0441\u043A\u0438", "slug": "gabrovski", "count": 36 }, { "cat": "\u041A\u0435\u043B\u043D\u0435\u0440\u0438", "slug": "kelneri", "count": 36 }, { "cat": "\u0420\u0430\u0441\u0438\u0441\u0442\u043A\u0438", "slug": "rasistki", "count": 36 }, { "cat": "\u0427\u0430\u043F\u0430\u0439 \u0438 \u041F\u0435\u0442\u043A\u0430", "slug": "chapai-i-petka", "count": 35 }, { "cat": "\u0416\u0430\u0431\u0438", "slug": "zhabi", "count": 33 }, { "cat": "\u041F\u0430\u0440\u0438", "slug": "pari", "count": 33 }, { "cat": "\u0425\u0440\u0430\u043D\u0430", "slug": "khrana", "count": 33 }, { "cat": "\u0418\u043D\u0434\u0438\u0430\u043D\u0446\u0438 \u0438 \u041A\u0430\u0443\u0431\u043E\u0438", "slug": "indiantsi-i-kauboi", "count": 30 }, { "cat": "\u041A\u043E\u043C\u0430\u0440", "slug": "komar", "count": 30 }, { "cat": "\u041B\u043E\u0432\u0446\u0438", "slug": "lovtsi", "count": 30 }, { "cat": "\u041D\u0430\u043D\u0435 \u0438 \u0412\u0443\u0442\u0435", "slug": "nane-i-vute", "count": 30 }, { "cat": "\u0421\u0435\u0440\u0432\u0438\u0442\u044C\u043E\u0440\u0438", "slug": "servit-ori", "count": 30 }, { "cat": "\u041C\u0438\u0442\u043D\u0438\u0447\u0430\u0440\u0438", "slug": "mitnichari", "count": 29 }, { "cat": "\u0414\u0430\u043D\u044A\u0447\u043D\u0438", "slug": "dan-chni", "count": 25 }, { "cat": "\u0414\u0436\u0438\u043F\u043E\u0432\u0435", "slug": "dzhipove", "count": 25 }, { "cat": "\u041A\u0430\u043D\u0438\u0431\u0430\u043B\u0438", "slug": "kanibali", "count": 24 }, { "cat": "\u0413\u0435\u043D\u043A\u043E", "slug": "genko", "count": 22 }, { "cat": "\u0429\u0430\u0441\u0442\u0438\u0435", "slug": "shtastie", "count": 22 }, { "cat": "\u0418\u0437\u043D\u0435\u0432\u0435\u0440\u0438", "slug": "izneveri", "count": 21 }, { "cat": "\u0420\u0438\u0431\u0430\u0440\u0438", "slug": "ribari", "count": 21 }, { "cat": "\u0417\u043D\u0430\u0435\u0442\u0435 \u043B\u0438 \u0447\u0435", "slug": "znaete-li-che", "count": 19 }, { "cat": "\u0421\u043B\u0443\u0436\u0438\u0442\u0435\u043B\u0438", "slug": "sluzhiteli", "count": 19 }, { "cat": "\u041A\u043E\u043B\u0435\u0434\u0430 \u0438 \u041D\u043E\u0432\u0430 \u0433\u043E\u0434\u0438\u043D\u0430", "slug": "koleda-i-nova-godina", "count": 17 }, { "cat": "\u041A\u044E\u0444\u0442\u0435\u0442\u0430", "slug": "kiufteta", "count": 16 }, { "cat": "\u041F\u0440\u0438\u044F\u0442\u0435\u043B\u0438", "slug": "priiateli", "count": 16 }, { "cat": "\u0411\u044A\u0440\u0437\u0430 \u043F\u043E\u043C\u043E\u0449", "slug": "b-rza-pomosht", "count": 15 }, { "cat": "\u0418\u043C\u043F\u043E\u0442\u0435\u043D\u0442\u043D\u0438", "slug": "impotentni", "count": 15 }, { "cat": "\u041A\u0438\u0440\u043A\u043E\u0440 \u0438 \u0413\u0430\u0440\u0430\u0431\u0435\u0434", "slug": "kirkor-i-garabed", "count": 15 }, { "cat": "\u0421\u0432\u0430\u0442\u0431\u0430", "slug": "svatba", "count": 15 }, { "cat": "\u0411\u0438\u0437\u043D\u0435\u0441\u043C\u0435\u043D\u0438", "slug": "biznesmeni", "count": 14 }, { "cat": "\u0412\u0430\u0440\u043D\u0430", "slug": "varna", "count": 14 }, { "cat": "\u041A\u0440\u043E\u043A\u043E\u0434\u0438\u043B\u0438", "slug": "krokodili", "count": 14 }, { "cat": "\u041C\u0430\u0439\u043A\u0438", "slug": "maiki", "count": 14 }, { "cat": "\u0417\u043B\u0430\u0442\u043D\u0430\u0442\u0430 \u0440\u0438\u0431\u043A\u0430", "slug": "zlatnata-ribka", "count": 13 }, { "cat": "\u0417\u044A\u0431\u043E\u043B\u0435\u043A\u0430\u0440\u0438", "slug": "z-bolekari", "count": 13 }, { "cat": "\u041F\u044A\u0442\u0443\u0432\u0430\u043D\u0435", "slug": "p-tuvane", "count": 13 }, { "cat": "\u0428\u0435\u0440\u043B\u043E\u043A \u0425\u043E\u0443\u043C\u0441", "slug": "sherlok-khoums", "count": 13 }, { "cat": "\u0413\u044A\u0431\u0430\u0440\u0438", "slug": "g-bari", "count": 12 }, { "cat": "\u0418\u0437\u0432\u044A\u043D\u0437\u0435\u043C\u043D\u0438", "slug": "izv-nzemni", "count": 12 }, { "cat": "\u0417\u0435\u0442\u044C\u043E\u0432\u0435", "slug": "zet-ove", "count": 11 }, { "cat": "\u041C\u0435\u0434\u0438\u0446\u0438\u043D\u0441\u043A\u0438 \u0441\u0435\u0441\u0442\u0440\u0438", "slug": "meditsinski-sestri", "count": 11 }, { "cat": "\u041C\u0440\u0430\u0432\u043A\u0438", "slug": "mravki", "count": 11 }, { "cat": "\u041E\u043F\u0442\u0438\u043C\u0438\u0441\u0442\u0438", "slug": "optimisti", "count": 11 }, { "cat": "\u0410\u043D\u0433\u043B\u0438\u044F", "slug": "angliia", "count": 10 }, { "cat": "\u0421\u0438\u043D\u043E\u0432\u0435", "slug": "sinove", "count": 10 }, { "cat": "\u0414\u0435\u043F\u0443\u0442\u0430\u0442\u0438", "slug": "deputati", "count": 9 }, { "cat": "\u0414\u044A\u0449\u0435\u0440\u0438", "slug": "d-shteri", "count": 9 }, { "cat": "\u0418\u0437\u0431\u043E\u0440\u0438", "slug": "izbori", "count": 9 }, { "cat": "\u041C\u0435\u0447\u043E \u041F\u0443\u0445", "slug": "mecho-pukh", "count": 9 }, { "cat": "\u041D\u0435\u0433\u0440\u0438", "slug": "negri", "count": 9 }, { "cat": "\u041F\u0430\u0440\u043B\u0430\u043C\u0435\u043D\u0442", "slug": "parlament", "count": 9 }, { "cat": "\u0421\u0432\u0435\u043A\u044A\u0440 \u0438 \u0441\u0432\u0435\u043A\u044A\u0440\u0432\u0430", "slug": "svek-r-i-svek-rva", "count": 9 }, { "cat": "\u0425\u0438\u0440\u0443\u0440\u0437\u0438", "slug": "khirurzi", "count": 9 }, { "cat": "\u0410\u0444\u0440\u0438\u043A\u0430", "slug": "afrika", "count": 8 }, { "cat": "\u0421\u043B\u0430\u0431\u043E\u0442\u0435\u043B\u0435\u0441\u043D\u0438", "slug": "slabotelesni", "count": 8 }, { "cat": "\u0421\u043C\u044A\u0440\u0442\u0430", "slug": "sm-rta", "count": 8 }, { "cat": "\u041A\u043B\u0438\u0435\u043D\u0442\u0438", "slug": "klienti", "count": 7 }, { "cat": "\u041C\u0430\u0433\u0430\u0440\u0435\u0442\u0430", "slug": "magareta", "count": 7 }, { "cat": "\u041F\u0435\u0448\u043E", "slug": "pesho", "count": 7 }, { "cat": "\u0418\u0441\u0442\u043E\u0440\u0438\u0438", "slug": "istorii", "count": 6 }, { "cat": "\u041A\u0440\u0430\u0441\u0438\u0432\u0438", "slug": "krasivi", "count": 6 }, { "cat": "\u041E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u0442\u043E", "slug": "obrazovanieto", "count": 6 }, { "cat": "\u0429\u044A\u0440\u043A\u0435\u043B\u0438", "slug": "sht-rkeli", "count": 6 }, { "cat": "\u041A\u0438\u043D\u043E", "slug": "kino", "count": 5 }, { "cat": "\u041B\u0443\u043D\u0430\u0442\u0430", "slug": "lunata", "count": 5 }, { "cat": "\u0421\u0442\u044E\u0430\u0440\u0434\u0435\u0441\u0438", "slug": "stiuardesi", "count": 5 }, { "cat": "\u0422\u043E\u043A\u0430", "slug": "toka", "count": 5 }, { "cat": "\u0414\u0436\u0435\u043D\u0442\u044A\u043B\u043C\u0435\u043D\u0438", "slug": "dzhent-lmeni", "count": 4 }, { "cat": "\u0416\u0443\u0440\u043D\u0430\u043B\u0438\u0441\u0442\u0438", "slug": "zhurnalisti", "count": 4 }, { "cat": "\u041A\u043E\u043B\u0435\u0433\u0438", "slug": "kolegi", "count": 4 }, { "cat": "\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A", "slug": "ponedelnik", "count": 4 }, { "cat": "\u0423\u0438\u043A\u0435\u043D\u0434", "slug": "uikend", "count": 4 }, { "cat": "\u0413\u0435\u0440\u043C\u0430\u043D\u0438\u044F", "slug": "germaniia", "count": 3 }, { "cat": "\u0415\u0432\u0440\u043E\u043F\u0430", "slug": "evropa", "count": 3 }, { "cat": "\u0417\u043C\u0438\u0438", "slug": "zmii", "count": 3 }, { "cat": "\u041A\u0430\u0437\u0430\u0440\u043C\u0430", "slug": "kazarma", "count": 3 }, { "cat": "\u0417\u043E\u043E\u043F\u0430\u0440\u043A", "slug": "zoopark", "count": 2 }, { "cat": "\u041F\u0430\u0442\u043A\u0438", "slug": "patki", "count": 2 }];
    $$Astro3 = createAstro();
    prerender3 = false;
    $$2 = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro3, $$props, $$slots);
      Astro2.self = $$2;
      const { jokecat } = Astro2.params;
      const x2 = jokecat.split("/");
      const cat = jokecats.find((xx) => xx.slug === x2[0])?.cat;
      const pagenum = x2[1] ? Number(x2[1]) : 1;
      const skip = pagenum * 30 - 30;
      const datax = db.view("joke/cat", {
        key: "JOK" + encodeURI(cat || ""),
        limit: 30,
        update: "lazy",
        reduce: "false",
        skip,
        cache: 864e3
      });
      const countx = db.view("joke/cat", {
        key: "JOK" + encodeURI(cat || ""),
        limit: 1,
        update: "lazy",
        reduce: true,
        cache: 864e3
      });
      const resp = await Promise.all([datax, countx]).then((values) => {
        return {
          jokes: values[0].rows,
          items: values[1].value
        };
      });
      const { jokes: jokes2, items } = resp;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": `\u0412\u0438\u0446\u043E\u0432\u0435 \u043E\u0442 ${cat} \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430 ${pagenum}`, "description": `\u0412\u0438\u0446\u043E\u0432\u0435 \u043E\u0442 ${cat}  ` }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead()}<div class="text-sm font-bold">
		<ul class="flex gap-2 items-center">
			<li>
				<a${addAttribute("/vicove", "href")}>Вицове</a>${" "}
			</li>
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${addAttribute(1.5, "stroke-width")} stroke="currentColor" class="w-5 h-5">
				<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5"></path>
			</svg>
			<li>
				<a${addAttribute(`/cat/${x2[0]}`, "href")}>${cat}</a>
			</li>
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${addAttribute(1.5, "stroke-width")} stroke="currentColor" class="w-5 h-5">
				<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5"></path>
			</svg>
			<li>
				<a${addAttribute(`/cat/${x2[0]}/${pagenum}`, "href")}>${pagenum}</a>
			</li>
		</ul>
	</div>
	<div class="flex flex-wrap">
		<div class="joke">
			${renderComponent($$result2, "RudSense", $$RudSense, {})}
		</div>
		${jokes2.map((item) => renderTemplate`${renderComponent($$result2, "JokeThumbnail", $$JokeThumbnail, { "item": item, "showcats": false, "short": true })}`)}
		<div class="joke">
			${renderComponent($$result2, "RudSense", $$RudSense, { "main": true })}
		</div>
	</div>
	${renderComponent($$result2, "Pagination", $$Pagination, { "items": items, "currentPage": pagenum, "pageSize": 30, "prefix": `/cat/${x2[0]}/` })}
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/cat/[...jokecat].astro", void 0);
    $$file3 = "/home/runner/work/monext/monext/apps/kloun/src/pages/cat/[...jokecat].astro";
    $$url3 = "/cat/[...jokecat]";
    ____jokecat_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: $$2,
      file: $$file3,
      prerender: prerender3,
      url: $$url3
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/$server_build/chunks/pages/vicove.astro.22009a50.mjs
var vicove_astro_22009a50_exports = {};
__export(vicove_astro_22009a50_exports, {
  default: () => $$Vicove,
  file: () => $$file4,
  prerender: () => prerender4,
  url: () => $$url4
});
var import_cookie7, import_mime7, $$Astro4, prerender4, $$Vicove, $$file4, $$url4;
var init_vicove_astro_22009a50 = __esm({
  "dist/$server_build/chunks/pages/vicove.astro.22009a50.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    init_jokecat_astro_c1b39e73();
    import_cookie7 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime7 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro4 = createAstro();
    prerender4 = false;
    $$Vicove = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro4, $$props, $$slots);
      Astro2.self = $$Vicove;
      const catsx = await db.view("joke/cat", {
        reduce: true,
        update: "lazy",
        group: true,
        cache: 864e3
      });
      const cats = catsx.rows.filter((x2) => x2.value > 1).map((x2) => ({
        cat: x2.key.replace("JOK", ""),
        slug: slugify(x2.key.replace("JOK", "").replace("\u044A", " ")),
        count: x2.value
      })).sort((a2, b2) => b2.count - a2.count);
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "\u0412\u0438\u0446\u043E\u0432\u0435 \u0438 \u0437\u0430\u0431\u0430\u0432\u043D\u0438 \u043A\u043E\u0442\u043A\u0438 \u0438 \u043C\u0435\u043C\u0435\u0442\u0430", "description": "\u0412\u0438\u0446\u043E\u0432\u0435 \u0438 \u0437\u0430\u0431\u0430\u0432\u043D\u0438 \u043A\u043E\u0442\u043A\u0438 \u0438 \u043C\u0435\u043C\u0435\u0442\u0430", "hideFooter": true }, { "default": ($$result2) => renderTemplate`
    ${renderComponent($$result2, "RudSense", $$RudSense, { "main": true })}
    ${maybeRenderHead()}<h1 class="text-5xl text-gradient">Вицове</h1>
    <div class="my-3 flex w-full flex-wrap gap-3">
        ${cats.map(
        ({
          cat,
          slug,
          count
        }) => renderTemplate`${renderComponent($$result2, "CatButton", $$CatButton, { "title": cat, "url": "/cat/" + slug, "count": count })}`
      )}
    </div>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/vicove.astro", void 0);
    $$file4 = "/home/runner/work/monext/monext/apps/kloun/src/pages/vicove.astro";
    $$url4 = "/vicove";
  }
});

// dist/$server_build/chunks/vicove@_@astro.558815c1.mjs
var vicove_astro_558815c1_exports = {};
__export(vicove_astro_558815c1_exports, {
  onRequest: () => onRequest,
  page: () => page4,
  renderers: () => renderers
});
var import_cookie8, import_mime8, import_react6, import_server5, page4;
var init_vicove_astro_558815c1 = __esm({
  "dist/$server_build/chunks/vicove@_@astro.558815c1.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie8 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime8 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react6 = __toESM(require_react(), 1);
    import_server5 = __toESM(require_server_browser(), 1);
    page4 = () => Promise.resolve().then(() => (init_vicove_astro_22009a50(), vicove_astro_22009a50_exports));
  }
});

// dist/$server_build/chunks/index@_@astro.419a0c3c.mjs
var index_astro_419a0c3c_exports = {};
__export(index_astro_419a0c3c_exports, {
  onRequest: () => onRequest,
  page: () => page5,
  renderers: () => renderers
});
var import_cookie9, import_mime9, import_react7, import_server6, page5;
var init_index_astro_419a0c3c = __esm({
  "dist/$server_build/chunks/index@_@astro.419a0c3c.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie9 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime9 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react7 = __toESM(require_react(), 1);
    import_server6 = __toESM(require_server_browser(), 1);
    page5 = () => Promise.resolve().then(() => (init_prerender_8fbeeaca(), prerender_8fbeeaca_exports)).then((n) => n.a);
  }
});

// dist/$server_build/chunks/pages/memes.astro.6273e49b.mjs
var memes_astro_6273e49b_exports = {};
__export(memes_astro_6273e49b_exports, {
  default: () => $$Memes,
  file: () => $$file5,
  prerender: () => prerender5,
  url: () => $$url5
});
var import_cookie10, import_mime10, $$Astro5, prerender5, $$Memes, $$file5, $$url5;
var init_memes_astro_6273e49b = __esm({
  "dist/$server_build/chunks/pages/memes.astro.6273e49b.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie10 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime10 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro5 = createAstro();
    prerender5 = false;
    $$Memes = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro5, $$props, $$slots);
      Astro2.self = $$Memes;
      const items = await fetch(
        `https://cache.monastro.workers.dev/proxy?url=${encodeURIComponent(
          "https://pr0gramm.com/api/items/get?flags=1&promoted=1&cache=7200"
        )}`
      ).then((res) => res.json());
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "memes" }, { "default": ($$result2) => renderTemplate`
  ${maybeRenderHead()}<div class="container flex flex-wrap items-center justify-center sm:mx-auto">
    ${items.items.map(
        ({
          thumb
        }) => renderTemplate`<label class="hover:animate-pulse snap-center">
            <div class="rounded-lg bg-gradient-to-r from-purple-900 to-pink-600 p-1 dark:from-white dark:to-slate-400 m-1 cursor-pointer flex">
              <img loading="lazy" width="128" height="128" class="rounded-lg" alt="pr0gramm"${addAttribute(`https://thumb.pr0gramm.com/${thumb}`, "src")}>
            </div>
          </label>`
      )}
  </div>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/memes.astro", void 0);
    $$file5 = "/home/runner/work/monext/monext/apps/kloun/src/pages/memes.astro";
    $$url5 = "/memes";
  }
});

// dist/$server_build/chunks/memes@_@astro.1783bfec.mjs
var memes_astro_1783bfec_exports = {};
__export(memes_astro_1783bfec_exports, {
  onRequest: () => onRequest,
  page: () => page6,
  renderers: () => renderers
});
var import_cookie11, import_mime11, import_react8, import_server7, page6;
var init_memes_astro_1783bfec = __esm({
  "dist/$server_build/chunks/memes@_@astro.1783bfec.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie11 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime11 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react8 = __toESM(require_react(), 1);
    import_server7 = __toESM(require_server_browser(), 1);
    page6 = () => Promise.resolve().then(() => (init_memes_astro_6273e49b(), memes_astro_6273e49b_exports));
  }
});

// dist/$server_build/chunks/pages/contact.astro.8d5d260d.mjs
var contact_astro_8d5d260d_exports = {};
__export(contact_astro_8d5d260d_exports, {
  default: () => $$Contact,
  file: () => $$file6,
  prerender: () => prerender6,
  url: () => $$url6
});
var import_cookie12, import_mime12, $$Astro6, prerender6, $$Contact, $$file6, $$url6;
var init_contact_astro_8d5d260d = __esm({
  "dist/$server_build/chunks/pages/contact.astro.8d5d260d.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie12 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime12 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro6 = createAstro();
    prerender6 = false;
    $$Contact = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro6, $$props, $$slots);
      Astro2.self = $$Contact;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "", "description": "" }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead()}<div>
		<h1 class="text-center text-3xl font-thin">Contact</h1>
		<div class="mt-10 flex flex-row items-center justify-center">
			<div class="mb-8 w-full px-3 lg:mb-0 lg:w-1/5">
				<p class="mb-2 font-bold lg:mb-4 lg:text-lg">Office</p>
				<p class="lg:text-lg">14 Parijka Komuna, Varna, Bulgaria</p>
			</div>
			<div class="mb-8 w-full px-3 lg:mb-0 lg:w-1/5">
				<p class="mb-2 font-bold lg:mb-4 lg:text-lg">Contacts</p>
				<p class="lg:text-lg">(+359) 876 358 115 info@rudixops.com</p>
			</div>
		</div>
	</div>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/other/contact.astro", void 0);
    $$file6 = "/home/runner/work/monext/monext/apps/kloun/src/pages/other/contact.astro";
    $$url6 = "/other/contact";
  }
});

// dist/$server_build/chunks/contact@_@astro.3aef25a8.mjs
var contact_astro_3aef25a8_exports = {};
__export(contact_astro_3aef25a8_exports, {
  onRequest: () => onRequest,
  page: () => page7,
  renderers: () => renderers
});
var import_cookie13, import_mime13, import_react9, import_server8, page7;
var init_contact_astro_3aef25a8 = __esm({
  "dist/$server_build/chunks/contact@_@astro.3aef25a8.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie13 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime13 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react9 = __toESM(require_react(), 1);
    import_server8 = __toESM(require_server_browser(), 1);
    page7 = () => Promise.resolve().then(() => (init_contact_astro_8d5d260d(), contact_astro_8d5d260d_exports));
  }
});

// dist/$server_build/chunks/pages/privacy.astro.84359dc5.mjs
var privacy_astro_84359dc5_exports = {};
__export(privacy_astro_84359dc5_exports, {
  default: () => $$Privacy,
  file: () => $$file7,
  prerender: () => prerender7,
  url: () => $$url7
});
var import_cookie14, import_mime14, $$Astro7, prerender7, $$Privacy, $$file7, $$url7;
var init_privacy_astro_84359dc5 = __esm({
  "dist/$server_build/chunks/pages/privacy.astro.84359dc5.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie14 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime14 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro7 = createAstro();
    prerender7 = false;
    $$Privacy = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro7, $$props, $$slots);
      Astro2.self = $$Privacy;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "", "description": "" }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead()}<p>
		На ezikTok.com се отнасяме с чувство на отговорност към личните ви
		данни. Ние не публикуваме, не продаваме и не споделяме личните ви данни
		с трети страни без вашето изрично съгласие. Само администраторите на
		сайта имат достъп до личните ви данни, които се използват само за
		улесняване на използването на сайта. Ако имате допълнителни въпроси за
		поверителността на личните ви данни, моля свържете се с нас.
	</p>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/other/privacy.astro", void 0);
    $$file7 = "/home/runner/work/monext/monext/apps/kloun/src/pages/other/privacy.astro";
    $$url7 = "/other/privacy";
  }
});

// dist/$server_build/chunks/privacy@_@astro.80e33f93.mjs
var privacy_astro_80e33f93_exports = {};
__export(privacy_astro_80e33f93_exports, {
  onRequest: () => onRequest,
  page: () => page8,
  renderers: () => renderers
});
var import_cookie15, import_mime15, import_react10, import_server9, page8;
var init_privacy_astro_80e33f93 = __esm({
  "dist/$server_build/chunks/privacy@_@astro.80e33f93.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie15 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime15 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react10 = __toESM(require_react(), 1);
    import_server9 = __toESM(require_server_browser(), 1);
    page8 = () => Promise.resolve().then(() => (init_privacy_astro_84359dc5(), privacy_astro_84359dc5_exports));
  }
});

// dist/$server_build/chunks/pages/about.astro.c8c6357c.mjs
var about_astro_c8c6357c_exports = {};
__export(about_astro_c8c6357c_exports, {
  default: () => $$About,
  file: () => $$file8,
  prerender: () => prerender8,
  url: () => $$url8
});
var import_cookie16, import_mime16, $$Astro8, prerender8, $$About, $$file8, $$url8;
var init_about_astro_c8c6357c = __esm({
  "dist/$server_build/chunks/pages/about.astro.c8c6357c.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie16 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime16 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro8 = createAstro();
    prerender8 = false;
    $$About = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro8, $$props, $$slots);
      Astro2.self = $$About;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "", "description": "" }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead()}<div class="mainx justify-start">
		<p>
			kloun.lol e сайт за безплатни обяви в категории: Недвижими имоти,
			Автомобили и авточасти, Eлектроника, Мода, За бебето и детето, Дом и
			градина, Свободно време, Домашни любимци, Услуги, Работа, Екскурзии
			и почивки. В езикТок можете да намерите интересни обяви за продажба
			на почти всичко, което търсите. Свържете се лесно и бързо с
			продавача и намерете атрактивни предложения на по-ниски цени
			отколкото в магазина. Ако искате да продадете нещо, добавете бързо,
			лесно и безплатно обява в езикТок. Купувайте и продавайте с езикТок!
		</p>
		${(/* @__PURE__ */ new Date()).toISOString()}
	</div>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/other/about.astro", void 0);
    $$file8 = "/home/runner/work/monext/monext/apps/kloun/src/pages/other/about.astro";
    $$url8 = "/other/about";
  }
});

// dist/$server_build/chunks/about@_@astro.f96fb4c7.mjs
var about_astro_f96fb4c7_exports = {};
__export(about_astro_f96fb4c7_exports, {
  onRequest: () => onRequest,
  page: () => page9,
  renderers: () => renderers
});
var import_cookie17, import_mime17, import_react11, import_server10, page9;
var init_about_astro_f96fb4c7 = __esm({
  "dist/$server_build/chunks/about@_@astro.f96fb4c7.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie17 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime17 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react11 = __toESM(require_react(), 1);
    import_server10 = __toESM(require_server_browser(), 1);
    page9 = () => Promise.resolve().then(() => (init_about_astro_c8c6357c(), about_astro_c8c6357c_exports));
  }
});

// dist/$server_build/chunks/pages/terms.astro.01e05786.mjs
var terms_astro_01e05786_exports = {};
__export(terms_astro_01e05786_exports, {
  default: () => $$Terms,
  file: () => $$file9,
  prerender: () => prerender9,
  url: () => $$url9
});
var import_cookie18, import_mime18, $$Astro9, prerender9, $$Terms, $$file9, $$url9;
var init_terms_astro_01e05786 = __esm({
  "dist/$server_build/chunks/pages/terms.astro.01e05786.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie18 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime18 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro9 = createAstro();
    prerender9 = false;
    $$Terms = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro9, $$props, $$slots);
      Astro2.self = $$Terms;
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "tos", "description": "tos" }, { "default": ($$result2) => renderTemplate`
  ${maybeRenderHead()}<p class="mt-10">
    „Като влезете в нашето приложение, като използвате своя акаунт в Google или
    Facebook (наричан тук „Доставчик за единично влизане“), вие се съгласявате,
    че можем да използваме потребителското име, свързано с вашия имейл
    доставчик, като ваше потребителско име в нашето приложение. Това
    потребителско име ще се показва публично на други потребители и ще се
    използва, за да ви идентифицира и да проследява дейността ви в нашето
    приложение. Можете да промените потребителското си име по всяко време, като
    влезете в секцията „Профил“ на нашето приложение.
    <br>
    Като влезете в нашето приложение с помощта на вашия доставчик на единично влизане,
    вие също се съгласявате да получавате имейли от нас относно вашата дейност и
    маркетингова информация. Можете да се откажете от получаването на тези имейли
    по всяко време, като влезете в секцията „Профил“ на нашето приложение и актуализирате
    вашите предпочитания за имейл.
  </p>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/other/terms.astro", void 0);
    $$file9 = "/home/runner/work/monext/monext/apps/kloun/src/pages/other/terms.astro";
    $$url9 = "/other/terms";
  }
});

// dist/$server_build/chunks/terms@_@astro.64790a1b.mjs
var terms_astro_64790a1b_exports = {};
__export(terms_astro_64790a1b_exports, {
  onRequest: () => onRequest,
  page: () => page10,
  renderers: () => renderers
});
var import_cookie19, import_mime19, import_react12, import_server11, page10;
var init_terms_astro_64790a1b = __esm({
  "dist/$server_build/chunks/terms@_@astro.64790a1b.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie19 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime19 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react12 = __toESM(require_react(), 1);
    import_server11 = __toESM(require_server_browser(), 1);
    page10 = () => Promise.resolve().then(() => (init_terms_astro_01e05786(), terms_astro_01e05786_exports));
  }
});

// ../../node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "../../node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// ../../node_modules/lodash/eq.js
var require_eq = __commonJS({
  "../../node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// ../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// ../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// ../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// ../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// ../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// ../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// ../../node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "../../node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// ../../node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "../../node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// ../../node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "../../node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// ../../node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "../../node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// ../../node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "../../node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// ../../node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "../../node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// ../../node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "../../node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// ../../node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "../../node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// ../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// ../../node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "../../node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// ../../node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "../../node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// ../../node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "../../node_modules/lodash/toFinite.js"(exports, module) {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  }
});

// ../../node_modules/lodash/toInteger.js
var require_toInteger = __commonJS({
  "../../node_modules/lodash/toInteger.js"(exports, module) {
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger;
  }
});

// ../../node_modules/lodash/chunk.js
var require_chunk = __commonJS({
  "../../node_modules/lodash/chunk.js"(exports, module) {
    var baseSlice = require_baseSlice();
    var isIterateeCall = require_isIterateeCall();
    var toInteger = require_toInteger();
    var nativeCeil = Math.ceil;
    var nativeMax = Math.max;
    function chunk2(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size === void 0) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
      while (index < length) {
        result[resIndex++] = baseSlice(array, index, index += size);
      }
      return result;
    }
    module.exports = chunk2;
  }
});

// dist/$server_build/chunks/pages/_jokeid_.astro.f4cfe593.mjs
var jokeid_astro_f4cfe593_exports = {};
__export(jokeid_astro_f4cfe593_exports, {
  default: () => $$jokeid,
  file: () => $$file10,
  prerender: () => prerender10,
  url: () => $$url10
});
var import_chunk, import_cookie20, import_mime20, $$Astro$13, $$FacebookShare, $$Astro10, prerender10, $$jokeid, $$file10, $$url10;
var init_jokeid_astro_f4cfe593 = __esm({
  "dist/$server_build/chunks/pages/_jokeid_.astro.f4cfe593.mjs"() {
    init_astro_0fa599e7();
    import_chunk = __toESM(require_chunk(), 1);
    init_business_astro_1d423138();
    init_jokecat_astro_c1b39e73();
    import_cookie20 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime20 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro$13 = createAstro();
    $$FacebookShare = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$13, $$props, $$slots);
      Astro2.self = $$FacebookShare;
      const { url: url3 } = Astro2.props;
      return renderTemplate`${maybeRenderHead()}<button${addAttribute(`fbshare('${url3}')`, "onclick")} class="text-white transition duration-300 max-w-xs w-full rounded-3xl uppercase flex text-sm font-bold p-3 relative undefined false undefined" style="background-color:#1877F3">
    <div class="absolute h-full left-3 top-0 flex justify-center items-center">
        <svg class="h-6 w-6 fill-white drop-shadow-md" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z">
            </path>
        </svg>
    </div>
    <div class="w-full ml-6 flex justify-center items-center pt-0.5 drop-shadow-md">
        Сподели във Facebook
    </div>
</button>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/FacebookShare.astro", void 0);
    $$Astro10 = createAstro();
    prerender10 = false;
    $$jokeid = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro10, $$props, $$slots);
      Astro2.self = $$jokeid;
      const { jokeid } = Astro2.params;
      const rid = Math.floor(Math.random() * 1938).toString();
      const jokex = db.get(jokeid);
      const itemsx = db.view("joke/random", {
        key: rid,
        update: "lazy",
        cache: 864e3
      });
      const resp = await Promise.all([jokex, itemsx]).then((values) => {
        return {
          joke: values[0],
          chunks: (0, import_chunk.default)(values[1].rows, 3)
        };
      });
      const { joke, chunks } = resp;
      if (joke.error) {
        return new Response("Not Found", {
          status: 404,
          statusText: "Not Found"
        });
      }
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": joke.title || "", "description": joke.title || "", "image": `https://kloun.lol/api/joke/og/?idx=${jokeid}` }, { "default": ($$result2) => renderTemplate`
    ${maybeRenderHead()}<div class="my-10 flex w-full flex-col text-center">
        <article class="mx-auto mb-6 px-10 text-xl leading-relaxed xs:px-2 sm:px-4 lg:w-2/3">
            ${renderComponent($$result2, "FormatJoke", $$FormatJoke, { "joke": joke.title })}
        </article>
        <div class="flex justify-end items-center">
            ${renderComponent($$result2, "FacebookShare", $$FacebookShare, { "url": `https://kloun.lol/joke/${jokeid}` })}
        </div>
    </div>
    ${chunks.map((piece) => renderTemplate`<div class="flex flex-wrap">
                ${piece.map((joke2) => renderTemplate`${renderComponent($$result2, "JokeThumbnail", $$JokeThumbnail, { "item": joke2, "showcats": false, "short": true })}`)}
            </div>`)}` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/joke/[jokeid].astro", void 0);
    $$file10 = "/home/runner/work/monext/monext/apps/kloun/src/pages/joke/[jokeid].astro";
    $$url10 = "/joke/[jokeid]";
  }
});

// dist/$server_build/chunks/_jokeid_@_@astro.bbd880b0.mjs
var jokeid_astro_bbd880b0_exports = {};
__export(jokeid_astro_bbd880b0_exports, {
  onRequest: () => onRequest,
  page: () => page11,
  renderers: () => renderers
});
var import_cookie21, import_mime21, import_react13, import_server12, page11;
var init_jokeid_astro_bbd880b0 = __esm({
  "dist/$server_build/chunks/_jokeid_@_@astro.bbd880b0.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie21 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime21 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react13 = __toESM(require_react(), 1);
    import_server12 = __toESM(require_server_browser(), 1);
    page11 = () => Promise.resolve().then(() => (init_jokeid_astro_f4cfe593(), jokeid_astro_f4cfe593_exports));
  }
});

// dist/$server_build/chunks/pages/test.astro.d1b04451.mjs
var test_astro_d1b04451_exports = {};
__export(test_astro_d1b04451_exports, {
  default: () => $$Test,
  file: () => $$file11,
  prerender: () => prerender11,
  url: () => $$url11
});
var import_cookie22, import_mime22, $$Astro11, prerender11, $$Test, $$file11, $$url11;
var init_test_astro_d1b04451 = __esm({
  "dist/$server_build/chunks/pages/test.astro.d1b04451.mjs"() {
    init_astro_0fa599e7();
    import_cookie22 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime22 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro11 = createAstro();
    prerender11 = false;
    $$Test = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro11, $$props, $$slots);
      Astro2.self = $$Test;
      return renderTemplate`${maybeRenderHead()}<h1>${(/* @__PURE__ */ new Date()).toISOString()}</h1>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/news/test.astro", void 0);
    $$file11 = "/home/runner/work/monext/monext/apps/kloun/src/pages/news/test.astro";
    $$url11 = "/news/test";
  }
});

// dist/$server_build/chunks/test@_@astro.bf8a2e67.mjs
var test_astro_bf8a2e67_exports = {};
__export(test_astro_bf8a2e67_exports, {
  onRequest: () => onRequest,
  page: () => page12,
  renderers: () => renderers
});
var import_cookie23, import_mime23, import_react14, import_server13, page12;
var init_test_astro_bf8a2e67 = __esm({
  "dist/$server_build/chunks/test@_@astro.bf8a2e67.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie23 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime23 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react14 = __toESM(require_react(), 1);
    import_server13 = __toESM(require_server_browser(), 1);
    page12 = () => Promise.resolve().then(() => (init_test_astro_d1b04451(), test_astro_d1b04451_exports));
  }
});

// dist/$server_build/chunks/pages/_id_.astro.076ad324.mjs
var id_astro_076ad324_exports = {};
__export(id_astro_076ad324_exports, {
  default: () => $$id,
  file: () => $$file12,
  prerender: () => prerender12,
  url: () => $$url12
});
var import_cookie24, import_mime24, $$Astro12, prerender12, $$id, $$file12, $$url12;
var init_id_astro_076ad324 = __esm({
  "dist/$server_build/chunks/pages/_id_.astro.076ad324.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie24 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime24 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro12 = createAstro();
    prerender12 = false;
    $$id = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro12, $$props, $$slots);
      Astro2.self = $$id;
      const { id } = Astro2.params;
      const data = await db.get(id);
      const { title, content, html, type } = data;
      const parsed = content ? JSON.parse(content).html.map((x2) => ({
        type: "p",
        content: x2
      })) : html;
      return renderTemplate`<head>
	<meta charset="UTF-8">
${renderHead()}</head>
<div>
	<h1 class="font-bold sm:text-2xl md:text-4xl" id="title">${title}</h1>
	<article class="leading-relaxed" id="article">
		${parsed.map(
        ({ type: type2, content: content2 }) => type2 === "p" ? renderTemplate`<p>${content2}</p>` : renderTemplate`<img${addAttribute(content2, "src")}>`
      )}
	</article>
	${type}
	<div id="emp">${type === "NewsBG" ? "\u0438\u043C\u043F\u0435\u0440\u0430\u0442\u043E\u0440" : "emperor"}</div>
</div>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/news/tr/[id].astro", void 0);
    $$file12 = "/home/runner/work/monext/monext/apps/kloun/src/pages/news/tr/[id].astro";
    $$url12 = "/news/tr/[id]";
  }
});

// dist/$server_build/chunks/_id_@_@astro.5deedc8a.mjs
var id_astro_5deedc8a_exports = {};
__export(id_astro_5deedc8a_exports, {
  onRequest: () => onRequest,
  page: () => page13,
  renderers: () => renderers
});
var import_cookie25, import_mime25, import_react15, import_server14, page13;
var init_id_astro_5deedc8a = __esm({
  "dist/$server_build/chunks/_id_@_@astro.5deedc8a.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie25 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime25 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react15 = __toESM(require_react(), 1);
    import_server14 = __toESM(require_server_browser(), 1);
    page13 = () => Promise.resolve().then(() => (init_id_astro_076ad324(), id_astro_076ad324_exports));
  }
});

// ../../node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "../../node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// ../../node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "../../node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// ../../node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "../../node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// ../../node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "../../node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// ../../node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "../../node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// ../../node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "../../node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// ../../node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "../../node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// ../../node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "../../node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// ../../node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "../../node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// ../../node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "../../node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// ../../node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "../../node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// ../../node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "../../node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// ../../node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "../../node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// ../../node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "../../node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// ../../node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "../../node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// ../../node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "../../node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// ../../node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "../../node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// ../../node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "../../node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// ../../node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "../../node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// ../../node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "../../node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// ../../node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "../../node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// ../../node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "../../node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// ../../node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "../../node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// ../../node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "../../node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// ../../node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "../../node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// ../../node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "../../node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// ../../node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "../../node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// ../../node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "../../node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// ../../node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "../../node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// ../../node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "../../node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// ../../node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "../../node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// ../../node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "../../node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// ../../node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "../../node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// ../../node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "../../node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// ../../node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "../../node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// ../../node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "../../node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// ../../node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "../../node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// ../../node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "../../node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// ../../node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "../../node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// ../../node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "../../node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// ../../node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "../../node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// ../../node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "../../node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array2 = root.Uint8Array;
    module.exports = Uint8Array2;
  }
});

// ../../node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "../../node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// ../../node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "../../node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// ../../node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "../../node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert2 = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert2 || (convert2 = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert2(object), convert2(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// ../../node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "../../node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// ../../node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "../../node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// ../../node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "../../node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// ../../node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "../../node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// ../../node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "../../node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// ../../node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "../../node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// ../../node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "../../node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// ../../node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "../../node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// ../../node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "../../node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// ../../node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "../../node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// ../../node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "../../node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// ../../node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "../../node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// ../../node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "../../node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// ../../node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "../../node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// ../../node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "../../node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// ../../node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "../../node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// ../../node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "../../node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// ../../node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "../../node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// ../../node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "../../node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// ../../node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "../../node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// ../../node_modules/lodash/keys.js
var require_keys = __commonJS({
  "../../node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// ../../node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "../../node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// ../../node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "../../node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// ../../node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "../../node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// ../../node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "../../node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// ../../node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "../../node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// ../../node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "../../node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// ../../node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "../../node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// ../../node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "../../node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// ../../node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "../../node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// ../../node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "../../node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// ../../node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "../../node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// ../../node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "../../node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// ../../node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "../../node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// ../../node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "../../node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// ../../node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "../../node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// ../../node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "../../node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// ../../node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "../../node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// ../../node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "../../node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// ../../node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "../../node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// ../../node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "../../node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// ../../node_modules/lodash/toString.js
var require_toString = __commonJS({
  "../../node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// ../../node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "../../node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// ../../node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "../../node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// ../../node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "../../node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// ../../node_modules/lodash/get.js
var require_get = __commonJS({
  "../../node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get5(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get5;
  }
});

// ../../node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "../../node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// ../../node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "../../node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// ../../node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "../../node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// ../../node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "../../node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get5 = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get5(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// ../../node_modules/lodash/identity.js
var require_identity = __commonJS({
  "../../node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// ../../node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "../../node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// ../../node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "../../node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// ../../node_modules/lodash/property.js
var require_property = __commonJS({
  "../../node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// ../../node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "../../node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// ../../node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "../../node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// ../../node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "../../node_modules/lodash/_baseIsNaN.js"(exports, module) {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// ../../node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "../../node_modules/lodash/_strictIndexOf.js"(exports, module) {
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// ../../node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "../../node_modules/lodash/_baseIndexOf.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// ../../node_modules/lodash/_arrayIncludes.js
var require_arrayIncludes = __commonJS({
  "../../node_modules/lodash/_arrayIncludes.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    module.exports = arrayIncludes;
  }
});

// ../../node_modules/lodash/_arrayIncludesWith.js
var require_arrayIncludesWith = __commonJS({
  "../../node_modules/lodash/_arrayIncludesWith.js"(exports, module) {
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    module.exports = arrayIncludesWith;
  }
});

// ../../node_modules/lodash/noop.js
var require_noop = __commonJS({
  "../../node_modules/lodash/noop.js"(exports, module) {
    function noop2() {
    }
    module.exports = noop2;
  }
});

// ../../node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "../../node_modules/lodash/_createSet.js"(exports, module) {
    var Set2 = require_Set();
    var noop2 = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop2 : function(values) {
      return new Set2(values);
    };
    module.exports = createSet;
  }
});

// ../../node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "../../node_modules/lodash/_baseUniq.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// ../../node_modules/lodash/uniqBy.js
var require_uniqBy = __commonJS({
  "../../node_modules/lodash/uniqBy.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var baseUniq = require_baseUniq();
    function uniqBy2(array, iteratee) {
      return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }
    module.exports = uniqBy2;
  }
});

// dist/$server_build/chunks/pages/_...newspage_.astro.a5d1ddf3.mjs
var newspage_astro_a5d1ddf3_exports = {};
__export(newspage_astro_a5d1ddf3_exports, {
  $: () => $$CardNews,
  _: () => ____newspage_
});
function timeAgo(date) {
  const seconds = Math.floor(((/* @__PURE__ */ new Date()).getTime() - date.getTime()) / 1e3);
  const intervals = {
    \u0433\u043E\u0434\u0438\u043D\u0430: { int: 31536e3, ext: "\u0433\u043E\u0434\u0438\u043D\u0438" },
    \u043C\u0435\u0441\u0435\u0446: { int: 2592e3, ext: "\u043C\u0435\u0441\u0435\u0446\u0430" },
    \u0441\u0435\u0434\u043C\u0438\u0446\u0430: { int: 604800, ext: "\u0441\u0435\u0434\u043C\u0438\u0446\u0438" },
    \u0434\u0435\u043D: { int: 86400, ext: "\u0434\u043D\u0438" },
    \u0447\u0430\u0441: { int: 3600, ext: "\u0447\u0430\u0441\u0430" },
    \u043C\u0438\u043D\u0443\u0442\u0430: { int: 60, ext: "\u043C\u0438\u043D\u0443\u0442\u0438" },
    \u0441\u0435\u043A\u0443\u043D\u0434\u0430: { int: 1, ext: "\u0441\u0435\u043A\u0443\u043D\u0434\u0438" }
  };
  let counter;
  for (const interval in intervals) {
    counter = Math.floor(seconds / intervals[interval].int);
    if (counter > 0) {
      return `\u043F\u0440\u0435\u0434\u0438 ${counter === 1 ? "" : counter} ${counter === 1 ? interval : intervals[interval].ext}`;
    }
  }
  return "";
}
var $$Astro$14, $$CardNews, $$Astro13, prerender13, $$3, $$file13, $$url13, ____newspage_;
var init_newspage_astro_a5d1ddf3 = __esm({
  "dist/$server_build/chunks/pages/_...newspage_.astro.a5d1ddf3.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    init_jokecat_astro_c1b39e73();
    $$Astro$14 = createAstro();
    $$CardNews = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$14, $$props, $$slots);
      Astro2.self = $$CardNews;
      const { title, date, nid } = Astro2.props;
      return renderTemplate`${maybeRenderHead()}<a class="cursor-point md:w-1/3 lg:w-1/4 overflow-hidden newswrap" style="height: 180px;"${addAttribute(`/news/i/${slugify(title)}/${nid}`, "href")} rel="prefetch">
  <div class="flex">
    <div style="width:130px; height: 180px;" class="relative overflow-hidden">
      <img${addAttribute(title, "alt")}${addAttribute("https://imgnews.kloun.lol/api/img/" + nid + ".jpg", "src")} loading="lazy" class="absolute top-0 left-0 w-full h-full object-cover">
    </div>

    <div class="flex flex-col justify-center w-full">
      <h3 class="px-2 font-bold text-slate-300 dark:text-gray-800">
        ${title}
      </h3>
      <div class="pl-2 text-xs">${timeAgo(new Date(date))}</div>
    </div>
  </div>
</a>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/CardNews.astro", void 0);
    $$Astro13 = createAstro();
    prerender13 = false;
    $$3 = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro13, $$props, $$slots);
      Astro2.self = $$3;
      const { newspage } = Astro2.params;
      const pagenum = newspage ? Number(newspage) : 1;
      const skip = pagenum * 30 - 30;
      const datax = db.view("newsbg/news", {
        reduce: false,
        limit: 30,
        skip,
        update: "lazy",
        descending: true,
        cache: skip
      });
      const itemsx = db.view("newsbg/agregate", {
        reduce: true,
        limit: 1,
        group: false,
        update: "lazy",
        cache: 864e3
      });
      const resp = await Promise.all([datax, itemsx]).then((values) => {
        return {
          articles: values[0].rows,
          items: values[1].value
        };
      });
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": `\u041D\u043E\u0432\u0438\u043D\u0438 \u043E\u0442 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430 ${pagenum}`, "description": `\u041D\u043E\u0432\u0438\u043D\u0438  `, "hideFooter": true }, { "default": ($$result2) => renderTemplate`
    ${maybeRenderHead()}<div class="flex flex-wrap gap-3">
        ${resp.articles.map(
        ({
          id,
          title,
          date,
          key,
          image
        }) => renderTemplate`${renderComponent($$result2, "CardNews", $$CardNews, { "title": title, "img": image, "date": date, "key": key, "id": id })}`
      )}
    </div>
    ${renderComponent($$result2, "Pagination", $$Pagination, { "items": resp.items, "currentPage": pagenum, "pageSize": 30, "prefix": "/news/" })}
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/news/[...newspage].astro", void 0);
    $$file13 = "/home/runner/work/monext/monext/apps/kloun/src/pages/news/[...newspage].astro";
    $$url13 = "/news/[...newspage]";
    ____newspage_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: $$3,
      file: $$file13,
      prerender: prerender13,
      url: $$url13
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/$server_build/chunks/pages/_newsid_.astro.5d878528.mjs
var newsid_astro_5d878528_exports = {};
__export(newsid_astro_5d878528_exports, {
  default: () => $$newsid,
  file: () => $$file14,
  prerender: () => prerender14,
  url: () => $$url14
});
var import_uniqBy, import_cookie26, import_mime26, urlh, geth, $$Astro14, prerender14, $$newsid, $$file14, $$url14;
var init_newsid_astro_5d878528 = __esm({
  "dist/$server_build/chunks/pages/_newsid_.astro.5d878528.mjs"() {
    init_astro_0fa599e7();
    import_uniqBy = __toESM(require_uniqBy(), 1);
    init_newspage_astro_a5d1ddf3();
    init_jokecat_astro_c1b39e73();
    init_business_astro_1d423138();
    import_cookie26 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime26 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    urlh = "http://hasura.arpecop.win/api/rest/";
    geth = (id) => {
      const res = fetch(`${urlh}${id}`, {
        method: "GET",
        headers: {
          "Content-Type": "appication/json",
          "x-hasura-role": "public"
        }
      }).then((response) => response.json()).catch((e) => console.log(e));
      return res;
    };
    $$Astro14 = createAstro();
    prerender14 = false;
    $$newsid = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro14, $$props, $$slots);
      Astro2.self = $$newsid;
      function countAlphanumeric(str) {
        const regex2 = /[a-zA-Z0-9а-яА-Я]/g;
        const matches = str.match(regex2);
        return matches ? matches.length : 0;
      }
      function getLastP(arrz) {
        const arr = arrz.map((x2, i2) => ({ ...x2, i: i2 }));
        const emptylines = arr.filter((x2) => countAlphanumeric(x2.content) !== 0);
        const lastPElemIndex = emptylines.reduce((acc, curr, index) => {
          if (curr.type === "p") {
            acc = index;
          }
          return acc;
        }, 0);
        const filteredArr = arr.slice(0, lastPElemIndex + 1);
        const removeNoImages = filteredArr.filter(
          (x2) => x2.type === "p" || x2.type === "img" && x2.content.includes("http")
        );
        const arrx = (0, import_uniqBy.default)(removeNoImages, function(e) {
          return e.content;
        });
        return arrx;
      }
      const { newsid } = Astro2.params;
      const getnid = geth(`news/id/${newsid}`);
      const newsx = geth(`news/start_key/${newsid}`);
      const resp = await Promise.all([getnid, newsx]).then((results) => ({
        article: results[0],
        news: results[1]
      }));
      const { news, article } = resp;
      console.log(resp);
      const { title, html, date } = article.newsbg_by_pk;
      const parsed = html;
      function formatDate(date2) {
        const options = {
          year: "numeric",
          month: "long",
          day: "numeric",
          hour: "numeric",
          minute: "numeric",
          hour12: false
        };
        return date2.toLocaleString("bg-BG", options);
      }
      function getRandomDate(year) {
        const month = Math.floor(Math.random() * 12) + 1;
        const day = Math.floor(Math.random() * 31) + 1;
        const hour = Math.floor(Math.random() * 14) + 9;
        return new Date(year, month - 1, day, hour);
      }
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": title, "description": title, "image": "https://imgnews.kloun.lol/api/img/" + newsid + ".jpg", "hideFooter": true }, { "default": ($$result2) => renderTemplate`${formatDate(new Date(date ? date : getRandomDate(2021)))}${maybeRenderHead()}<h1 class="font-bold sm:text-2xl md:text-4xl">${title}</h1>
  <div class="flex justify-center items-center">
    <div class="p-1 rounded-lg bg-gradient-to-r from-fuchsia-500 to-cyan-500">
      <img${addAttribute("https://imgnews.kloun.lol/api/img/" + newsid + ".jpg", "src")} class="rounded-md" loading="lazy"${addAttribute(title, "alt")}>
    </div>
  </div>
  <div class="mb-6 items-center justify-center">
    ${renderComponent($$result2, "RudSense", $$RudSense, { "type": "inarticle" })}
    <article class="leading-relaxed" id="article">
      ${getLastP(parsed).map(
        ({
          type,
          content,
          i: i2
        }) => type === "p" ? renderTemplate`<p class="text-lg">
                ${content}${" "}
                ${(i2 === 3 || i2 === 9 || i2 === 12) && renderTemplate`${renderComponent($$result2, "RudSense", $$RudSense, { "type": "inarticle" })}`}
              </p>` : renderTemplate`<div class="flex justify-center items-center">
                <div class="p-1 rounded-lg bg-gradient-to-r from-fuchsia-500 to-cyan-500">
                  <img${addAttribute(
          "https://imgnews.kloun.lol/api/img/" + newsid + "--" + i2 + ".jpg",
          "src"
        )} class="rounded-md" loading="lazy">
                </div>
                ${(i2 === 3 || i2 === 9 || i2 === 12) && renderTemplate`${renderComponent($$result2, "RudSense", $$RudSense, { "type": "inarticle" })}`}
              </div>`
      )}
    </article>
    <div class="clear-both"></div>

    ${renderComponent($$result2, "RudSense", $$RudSense, { "type": "inarticle", "main": true })}

    <div class="clear-both"></div>
  </div>
  <div class="flex flex-wrap gap-3">
    ${news.newsbg.map(({ id, title: title2, key, date: date2, image }) => renderTemplate`${renderComponent($$result2, "CardNews", $$CardNews, { "title": title2, "img": image, "date": date2 || "", "key": key || "", "id": id || "" })}`)}
  </div>
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/news/i/[slug]/[newsid].astro", void 0);
    $$file14 = "/home/runner/work/monext/monext/apps/kloun/src/pages/news/i/[slug]/[newsid].astro";
    $$url14 = "/news/i/[slug]/[newsid]";
  }
});

// dist/$server_build/chunks/_newsid_@_@astro.e83516b8.mjs
var newsid_astro_e83516b8_exports = {};
__export(newsid_astro_e83516b8_exports, {
  onRequest: () => onRequest,
  page: () => page14,
  renderers: () => renderers
});
var import_cookie27, import_mime27, import_react16, import_server15, page14;
var init_newsid_astro_e83516b8 = __esm({
  "dist/$server_build/chunks/_newsid_@_@astro.e83516b8.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie27 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime27 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react16 = __toESM(require_react(), 1);
    import_server15 = __toESM(require_server_browser(), 1);
    page14 = () => Promise.resolve().then(() => (init_newsid_astro_5d878528(), newsid_astro_5d878528_exports));
  }
});

// dist/$server_build/chunks/_...c6054889.mjs
var c6054889_exports = {};
__export(c6054889_exports, {
  onRequest: () => onRequest,
  page: () => page15,
  renderers: () => renderers
});
var import_cookie28, import_mime28, import_react17, import_server16, page15;
var init_c6054889 = __esm({
  "dist/$server_build/chunks/_...c6054889.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie28 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime28 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react17 = __toESM(require_react(), 1);
    import_server16 = __toESM(require_server_browser(), 1);
    page15 = () => Promise.resolve().then(() => (init_newspage_astro_a5d1ddf3(), newspage_astro_a5d1ddf3_exports)).then((n) => n._);
  }
});

// dist/$server_build/chunks/pages/cache.ts.53e97078.mjs
var cache_ts_53e97078_exports = {};
__export(cache_ts_53e97078_exports, {
  get: () => get2,
  prerender: () => prerender15
});
async function fetchWithCloudflare(url3, options) {
  return fetch(url3, options);
}
function convertToFriendlierId(url3) {
  const friendlyId = url3.replace(/[^\w\s]/gi, "").replace(/\s+/g, "-").toLowerCase();
  return friendlyId;
}
var prerender15, get2;
var init_cache_ts_53e97078 = __esm({
  "dist/$server_build/chunks/pages/cache.ts.53e97078.mjs"() {
    prerender15 = false;
    get2 = async function get22({ request }) {
      const url3 = decodeURI(request.url).split("?url=")[1];
      const ttl = url3 ? Number(url3.split("&cache=")[1]) : 5;
      let response = await fetchWithCloudflare(url3, {
        cf: {
          cacheTtl: ttl,
          cacheEverything: true,
          cacheKey: convertToFriendlierId(url3)
        }
      });
      return new Response(response.body, {
        status: 200,
        headers: {
          "Content-Type": "application/json",
          "Cache-Control": "public, max-age=" + ttl.toString()
        }
      });
    };
  }
});

// dist/$server_build/chunks/cache@_@ts.ddeb5264.mjs
var cache_ts_ddeb5264_exports = {};
__export(cache_ts_ddeb5264_exports, {
  onRequest: () => onRequest,
  page: () => page16,
  renderers: () => renderers
});
var import_cookie29, import_mime29, import_react18, import_server17, page16;
var init_cache_ts_ddeb5264 = __esm({
  "dist/$server_build/chunks/cache@_@ts.ddeb5264.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie29 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime29 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react18 = __toESM(require_react(), 1);
    import_server17 = __toESM(require_server_browser(), 1);
    page16 = () => Promise.resolve().then(() => (init_cache_ts_53e97078(), cache_ts_53e97078_exports));
  }
});

// dist/$server_build/chunks/pages/_id_.jpg.ts.f04f8160.mjs
var id_jpg_ts_f04f8160_exports = {};
__export(id_jpg_ts_f04f8160_exports, {
  get: () => get3,
  prerender: () => prerender16
});
var import_cookie30, import_mime30, prerender16, get3;
var init_id_jpg_ts_f04f8160 = __esm({
  "dist/$server_build/chunks/pages/_id_.jpg.ts.f04f8160.mjs"() {
    init_business_astro_1d423138();
    init_astro_0fa599e7();
    import_cookie30 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime30 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    prerender16 = false;
    get3 = async function get23({ params }) {
      const id = params.id || "";
      const datax = await db.view("newsbg/news", {
        limit: 1,
        key: id,
        update: false
      });
      const response = await fetch(datax.image);
      const buffer = await response.arrayBuffer();
      return new Response(buffer, {
        status: 200,
        headers: {
          "Content-Type": "image/jpeg"
        }
      });
    };
  }
});

// dist/$server_build/chunks/_id_.178e0813.mjs
var id_178e0813_exports = {};
__export(id_178e0813_exports, {
  onRequest: () => onRequest,
  page: () => page17,
  renderers: () => renderers
});
var import_cookie31, import_mime31, import_react19, import_server18, page17;
var init_id_178e0813 = __esm({
  "dist/$server_build/chunks/_id_.178e0813.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie31 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime31 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react19 = __toESM(require_react(), 1);
    import_server18 = __toESM(require_server_browser(), 1);
    page17 = () => Promise.resolve().then(() => (init_id_jpg_ts_f04f8160(), id_jpg_ts_f04f8160_exports));
  }
});

// ../../node_modules/@libsql/client/lib-esm/api.js
var LibsqlError;
var init_api = __esm({
  "../../node_modules/@libsql/client/lib-esm/api.js"() {
    LibsqlError = class extends Error {
      constructor(message, code, cause) {
        if (code !== void 0) {
          message = `${code}: ${message}`;
        }
        super(message, { cause });
        __publicField(this, "code");
        this.code = code;
        this.name = "LibsqlError";
      }
    };
  }
});

// ../../node_modules/@libsql/client/lib-esm/uri.js
function parseUri(text) {
  const match = URI_RE.exec(text);
  if (match === null) {
    throw new LibsqlError("The URL is not in a valid format", "URL_INVALID");
  }
  const groups = match.groups;
  const scheme = groups["scheme"];
  const authority = groups["authority"] !== void 0 ? parseAuthority(groups["authority"]) : void 0;
  const path = percentDecode(groups["path"]);
  const query = groups["query"] !== void 0 ? parseQuery(groups["query"]) : void 0;
  const fragment = groups["fragment"] !== void 0 ? percentDecode(groups["fragment"]) : void 0;
  return { scheme, authority, path, query, fragment };
}
function parseAuthority(text) {
  const match = AUTHORITY_RE.exec(text);
  if (match === null) {
    throw new LibsqlError("The authority part of the URL is not in a valid format", "URL_INVALID");
  }
  const groups = match.groups;
  const host = percentDecode(groups["host_br"] ?? groups["host"]);
  const port = groups["port"] ? parseInt(groups["port"], 10) : void 0;
  const userinfo = groups["username"] !== void 0 ? {
    username: percentDecode(groups["username"]),
    password: groups["password"] !== void 0 ? percentDecode(groups["password"]) : void 0
  } : void 0;
  return { host, port, userinfo };
}
function parseQuery(text) {
  const sequences = text.split("&");
  const pairs = [];
  for (const sequence of sequences) {
    if (sequence === "") {
      continue;
    }
    let key;
    let value;
    const splitIdx = sequence.indexOf("=");
    if (splitIdx < 0) {
      key = sequence;
      value = "";
    } else {
      key = sequence.substring(0, splitIdx);
      value = sequence.substring(splitIdx + 1);
    }
    pairs.push({
      key: percentDecode(key.replaceAll("+", " ")),
      value: percentDecode(value.replaceAll("+", " "))
    });
  }
  return { pairs };
}
function percentDecode(text) {
  try {
    return decodeURIComponent(text);
  } catch (e) {
    if (e instanceof URIError) {
      throw new LibsqlError(`URL component has invalid percent encoding: ${e}`, "URL_INVALID", e);
    }
    throw e;
  }
}
function encodeBaseUrl(scheme, authority, path) {
  if (authority === void 0) {
    throw new LibsqlError(`URL with scheme ${JSON.stringify(scheme + ":")} requires authority (the "//" part)`, "URL_INVALID");
  }
  const schemeText = `${scheme}:`;
  const hostText = encodeHost(authority.host);
  const portText = encodePort(authority.port);
  const userinfoText = encodeUserinfo(authority.userinfo);
  const authorityText = `//${userinfoText}${hostText}${portText}`;
  let pathText = path.split("/").map(encodeURIComponent).join("/");
  if (pathText !== "" && !pathText.startsWith("/")) {
    pathText = "/" + pathText;
  }
  return new URL(`${schemeText}${authorityText}${pathText}`);
}
function encodeHost(host) {
  return host.includes(":") ? `[${encodeURI(host)}]` : encodeURI(host);
}
function encodePort(port) {
  return port !== void 0 ? `:${port}` : "";
}
function encodeUserinfo(userinfo) {
  if (userinfo === void 0) {
    return "";
  }
  const usernameText = encodeURIComponent(userinfo.username);
  const passwordText = userinfo.password !== void 0 ? `:${encodeURIComponent(userinfo.password)}` : "";
  return `${usernameText}${passwordText}@`;
}
var URI_RE, AUTHORITY_RE;
var init_uri = __esm({
  "../../node_modules/@libsql/client/lib-esm/uri.js"() {
    init_api();
    URI_RE = (() => {
      const SCHEME = "(?<scheme>[A-Za-z][A-Za-z.+-]*)";
      const AUTHORITY = "(?<authority>[^/?#]*)";
      const PATH = "(?<path>[^?#]*)";
      const QUERY = "(?<query>[^#]*)";
      const FRAGMENT = "(?<fragment>.*)";
      return new RegExp(`^${SCHEME}:(//${AUTHORITY})?${PATH}(\\?${QUERY})?(#${FRAGMENT})?$`, "su");
    })();
    AUTHORITY_RE = (() => {
      const USERINFO = "(?<username>[^:]*)(:(?<password>.*))?";
      const HOST = "((?<host>[^:\\[\\]]*)|(\\[(?<host_br>[^\\[\\]]*)\\]))";
      const PORT = "(?<port>[0-9]*)";
      return new RegExp(`^(${USERINFO}@)?${HOST}(:${PORT})?$`, "su");
    })();
  }
});

// ../../node_modules/@libsql/client/lib-esm/config.js
function expandConfig(config) {
  const uri = parseUri(config.url);
  let authToken2 = config.authToken;
  for (const { key, value } of uri.query?.pairs ?? []) {
    if (key === "authToken") {
      authToken2 = value ? value : void 0;
    } else {
      throw new LibsqlError(`Unknown URL query parameter ${JSON.stringify(key)}`, "URL_PARAM_NOT_SUPPORTED");
    }
  }
  if (uri.fragment !== void 0) {
    throw new LibsqlError(`URL fragments are not supported: ${JSON.stringify("#" + uri.fragment)}`, "URL_INVALID");
  }
  return {
    scheme: uri.scheme,
    authority: uri.authority,
    path: uri.path,
    authToken: authToken2
  };
}
var init_config = __esm({
  "../../node_modules/@libsql/client/lib-esm/config.js"() {
    init_api();
    init_uri();
  }
});

// ../../node_modules/@libsql/client/lib-esm/help.js
var supportedUrlLink;
var init_help = __esm({
  "../../node_modules/@libsql/client/lib-esm/help.js"() {
    supportedUrlLink = "https://github.com/libsql/libsql-client-ts#supported-urls";
  }
});

// ../../node_modules/@libsql/isomorphic-ws/web.mjs
var _WebSocket;
var init_web = __esm({
  "../../node_modules/@libsql/isomorphic-ws/web.mjs"() {
    if (typeof WebSocket !== "undefined") {
      _WebSocket = WebSocket;
    } else if (typeof global !== "undefined") {
      _WebSocket = global.WebSocket;
    } else if (typeof window !== "undefined") {
      _WebSocket = window.WebSocket;
    } else if (typeof self !== "undefined") {
      _WebSocket = self.WebSocket;
    }
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/id_alloc.js
var _usedIds, _freeIds, IdAlloc;
var init_id_alloc = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/id_alloc.js"() {
    IdAlloc = class {
      constructor() {
        // Set of all allocated ids
        __privateAdd(this, _usedIds, void 0);
        // Set of all free ids lower than `#usedIds.size`
        __privateAdd(this, _freeIds, void 0);
        __privateSet(this, _usedIds, /* @__PURE__ */ new Set());
        __privateSet(this, _freeIds, /* @__PURE__ */ new Set());
      }
      // Returns an id that was free, and marks it as used.
      alloc() {
        for (const freeId2 of __privateGet(this, _freeIds)) {
          __privateGet(this, _freeIds).delete(freeId2);
          __privateGet(this, _usedIds).add(freeId2);
          if (!__privateGet(this, _usedIds).has(__privateGet(this, _usedIds).size - 1)) {
            __privateGet(this, _freeIds).add(__privateGet(this, _usedIds).size - 1);
          }
          return freeId2;
        }
        const freeId = __privateGet(this, _usedIds).size;
        __privateGet(this, _usedIds).add(freeId);
        return freeId;
      }
      free(id) {
        if (!__privateGet(this, _usedIds).delete(id)) {
          throw new Error("Freeing an id that is not allocated");
        }
        __privateGet(this, _freeIds).delete(__privateGet(this, _usedIds).size);
        if (id < __privateGet(this, _usedIds).size) {
          __privateGet(this, _freeIds).add(id);
        }
      }
    };
    _usedIds = new WeakMap();
    _freeIds = new WeakMap();
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/errors.js
var ClientError, ProtoError, ResponseError, ClosedError, WebSocketUnsupportedError, WebSocketError, ProtocolVersionError;
var init_errors = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/errors.js"() {
    ClientError = class extends Error {
      /** @private */
      constructor(message) {
        super(message);
        this.name = "ClientError";
      }
    };
    ProtoError = class extends ClientError {
      /** @private */
      constructor(message) {
        super(message);
        this.name = "ProtoError";
      }
    };
    ResponseError = class extends ClientError {
      /** @private */
      constructor(message, protoError) {
        super(message);
        __publicField(this, "code");
        /** @internal */
        __publicField(this, "proto");
        this.name = "ResponseError";
        this.code = protoError["code"] ?? void 0;
        this.proto = protoError;
        this.stack = void 0;
      }
    };
    ClosedError = class extends ClientError {
      /** @private */
      constructor(message, cause) {
        super(`${message}: ${cause}`);
        this.cause = cause;
      }
    };
    WebSocketUnsupportedError = class extends ClientError {
      /** @private */
      constructor(message) {
        super(message);
        this.name = "WebSocketUnsupportedError";
      }
    };
    WebSocketError = class extends ClientError {
      /** @private */
      constructor(message) {
        super(message);
        this.name = "WebSocketError";
      }
    };
    ProtocolVersionError = class extends ClientError {
      /** @private */
      constructor(message) {
        super(message);
        this.name = "ProtocolVersionError";
      }
    };
  }
});

// ../../node_modules/js-base64/base64.mjs
var version, VERSION, _hasatob, _hasbtoa, _hasBuffer, _TD, _TE, b64ch, b64chs, b64tab, b64re, _fromCC, _U8Afrom, _mkUriSafe, _tidyB64, btoaPolyfill, _btoa, _fromUint8Array, fromUint8Array, cb_utob, re_utob, utob, _encode, encode, encodeURI2, re_btou, cb_btou, btou, atobPolyfill, _atob, _toUint8Array, toUint8Array, _decode, _unURI, decode, isValid, _noEnum, extendString, extendUint8Array, extendBuiltins, gBase64;
var init_base64 = __esm({
  "../../node_modules/js-base64/base64.mjs"() {
    version = "3.7.5";
    VERSION = version;
    _hasatob = typeof atob === "function";
    _hasbtoa = typeof btoa === "function";
    _hasBuffer = typeof Buffer === "function";
    _TD = typeof TextDecoder === "function" ? new TextDecoder() : void 0;
    _TE = typeof TextEncoder === "function" ? new TextEncoder() : void 0;
    b64ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    b64chs = Array.prototype.slice.call(b64ch);
    b64tab = ((a2) => {
      let tab = {};
      a2.forEach((c, i2) => tab[c] = i2);
      return tab;
    })(b64chs);
    b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
    _fromCC = String.fromCharCode.bind(String);
    _U8Afrom = typeof Uint8Array.from === "function" ? Uint8Array.from.bind(Uint8Array) : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));
    _mkUriSafe = (src) => src.replace(/=/g, "").replace(/[+\/]/g, (m0) => m0 == "+" ? "-" : "_");
    _tidyB64 = (s2) => s2.replace(/[^A-Za-z0-9\+\/]/g, "");
    btoaPolyfill = (bin) => {
      let u32, c0, c1, c2, asc = "";
      const pad = bin.length % 3;
      for (let i2 = 0; i2 < bin.length; ) {
        if ((c0 = bin.charCodeAt(i2++)) > 255 || (c1 = bin.charCodeAt(i2++)) > 255 || (c2 = bin.charCodeAt(i2++)) > 255)
          throw new TypeError("invalid character found");
        u32 = c0 << 16 | c1 << 8 | c2;
        asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];
      }
      return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
    };
    _btoa = _hasbtoa ? (bin) => btoa(bin) : _hasBuffer ? (bin) => Buffer.from(bin, "binary").toString("base64") : btoaPolyfill;
    _fromUint8Array = _hasBuffer ? (u8a) => Buffer.from(u8a).toString("base64") : (u8a) => {
      const maxargs = 4096;
      let strs = [];
      for (let i2 = 0, l = u8a.length; i2 < l; i2 += maxargs) {
        strs.push(_fromCC.apply(null, u8a.subarray(i2, i2 + maxargs)));
      }
      return _btoa(strs.join(""));
    };
    fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
    cb_utob = (c) => {
      if (c.length < 2) {
        var cc = c.charCodeAt(0);
        return cc < 128 ? c : cc < 2048 ? _fromCC(192 | cc >>> 6) + _fromCC(128 | cc & 63) : _fromCC(224 | cc >>> 12 & 15) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
      } else {
        var cc = 65536 + (c.charCodeAt(0) - 55296) * 1024 + (c.charCodeAt(1) - 56320);
        return _fromCC(240 | cc >>> 18 & 7) + _fromCC(128 | cc >>> 12 & 63) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
      }
    };
    re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
    utob = (u2) => u2.replace(re_utob, cb_utob);
    _encode = _hasBuffer ? (s2) => Buffer.from(s2, "utf8").toString("base64") : _TE ? (s2) => _fromUint8Array(_TE.encode(s2)) : (s2) => _btoa(utob(s2));
    encode = (src, urlsafe = false) => urlsafe ? _mkUriSafe(_encode(src)) : _encode(src);
    encodeURI2 = (src) => encode(src, true);
    re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
    cb_btou = (cccc) => {
      switch (cccc.length) {
        case 4:
          var cp = (7 & cccc.charCodeAt(0)) << 18 | (63 & cccc.charCodeAt(1)) << 12 | (63 & cccc.charCodeAt(2)) << 6 | 63 & cccc.charCodeAt(3), offset = cp - 65536;
          return _fromCC((offset >>> 10) + 55296) + _fromCC((offset & 1023) + 56320);
        case 3:
          return _fromCC((15 & cccc.charCodeAt(0)) << 12 | (63 & cccc.charCodeAt(1)) << 6 | 63 & cccc.charCodeAt(2));
        default:
          return _fromCC((31 & cccc.charCodeAt(0)) << 6 | 63 & cccc.charCodeAt(1));
      }
    };
    btou = (b2) => b2.replace(re_btou, cb_btou);
    atobPolyfill = (asc) => {
      asc = asc.replace(/\s+/g, "");
      if (!b64re.test(asc))
        throw new TypeError("malformed base64.");
      asc += "==".slice(2 - (asc.length & 3));
      let u24, bin = "", r1, r2;
      for (let i2 = 0; i2 < asc.length; ) {
        u24 = b64tab[asc.charAt(i2++)] << 18 | b64tab[asc.charAt(i2++)] << 12 | (r1 = b64tab[asc.charAt(i2++)]) << 6 | (r2 = b64tab[asc.charAt(i2++)]);
        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
      }
      return bin;
    };
    _atob = _hasatob ? (asc) => atob(_tidyB64(asc)) : _hasBuffer ? (asc) => Buffer.from(asc, "base64").toString("binary") : atobPolyfill;
    _toUint8Array = _hasBuffer ? (a2) => _U8Afrom(Buffer.from(a2, "base64")) : (a2) => _U8Afrom(_atob(a2).split("").map((c) => c.charCodeAt(0)));
    toUint8Array = (a2) => _toUint8Array(_unURI(a2));
    _decode = _hasBuffer ? (a2) => Buffer.from(a2, "base64").toString("utf8") : _TD ? (a2) => _TD.decode(_toUint8Array(a2)) : (a2) => btou(_atob(a2));
    _unURI = (a2) => _tidyB64(a2.replace(/[-_]/g, (m0) => m0 == "-" ? "+" : "/"));
    decode = (src) => _decode(_unURI(src));
    isValid = (src) => {
      if (typeof src !== "string")
        return false;
      const s2 = src.replace(/\s+/g, "").replace(/={0,2}$/, "");
      return !/[^\s0-9a-zA-Z\+/]/.test(s2) || !/[^\s0-9a-zA-Z\-_]/.test(s2);
    };
    _noEnum = (v) => {
      return {
        value: v,
        enumerable: false,
        writable: true,
        configurable: true
      };
    };
    extendString = function() {
      const _add2 = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));
      _add2("fromBase64", function() {
        return decode(this);
      });
      _add2("toBase64", function(urlsafe) {
        return encode(this, urlsafe);
      });
      _add2("toBase64URI", function() {
        return encode(this, true);
      });
      _add2("toBase64URL", function() {
        return encode(this, true);
      });
      _add2("toUint8Array", function() {
        return toUint8Array(this);
      });
    };
    extendUint8Array = function() {
      const _add2 = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));
      _add2("toBase64", function(urlsafe) {
        return fromUint8Array(this, urlsafe);
      });
      _add2("toBase64URI", function() {
        return fromUint8Array(this, true);
      });
      _add2("toBase64URL", function() {
        return fromUint8Array(this, true);
      });
    };
    extendBuiltins = () => {
      extendString();
      extendUint8Array();
    };
    gBase64 = {
      version,
      VERSION,
      atob: _atob,
      atobPolyfill,
      btoa: _btoa,
      btoaPolyfill,
      fromBase64: decode,
      toBase64: encode,
      encode,
      encodeURI: encodeURI2,
      encodeURL: encodeURI2,
      utob,
      btou,
      decode,
      isValid,
      fromUint8Array,
      toUint8Array,
      extendString,
      extendUint8Array,
      extendBuiltins
    };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/value.js
function valueToProto(value) {
  if (value === null) {
    return protoNull;
  } else if (typeof value === "string") {
    return { "type": "text", "value": value };
  } else if (typeof value === "number") {
    if (!Number.isFinite(value)) {
      throw new ClientError("Only finite numbers (not Infinity or NaN) can be passed as arguments");
    }
    return { "type": "float", "value": +value };
  } else if (typeof value === "bigint") {
    return { "type": "text", "value": "" + value };
  } else if (typeof value === "boolean") {
    return { "type": "integer", "value": value ? "1" : "0" };
  } else if (value instanceof ArrayBuffer) {
    return { "type": "blob", "base64": gBase64.fromUint8Array(new Uint8Array(value)) };
  } else if (value instanceof Uint8Array) {
    return { "type": "blob", "base64": gBase64.fromUint8Array(value) };
  } else if (value instanceof Date) {
    return { "type": "float", "value": value.valueOf() };
  } else if (typeof value === "object") {
    return { "type": "text", "value": value.toString() };
  } else {
    throw new TypeError("Unsupported type of value");
  }
}
function valueFromProto(value) {
  if (value["type"] === "null") {
    return null;
  } else if (value["type"] === "integer") {
    const int = parseInt(value["value"], 10);
    if (!Number.isSafeInteger(int)) {
      throw new RangeError(`Received integer ${value["value"]} which cannot be safely represented as a JavaScript number`);
    }
    return int;
  } else if (value["type"] === "float") {
    return value["value"];
  } else if (value["type"] === "text") {
    return value["value"];
  } else if (value["type"] === "blob") {
    return gBase64.toUint8Array(value["base64"]).buffer;
  } else {
    throw new ProtoError("Unexpected value type");
  }
}
var protoNull;
var init_value = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/value.js"() {
    init_base64();
    init_errors();
    protoNull = { "type": "null" };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/result.js
function stmtResultFromProto(result) {
  return {
    affectedRowCount: result["affected_row_count"],
    lastInsertRowid: result["last_insert_rowid"] ?? void 0,
    columnNames: result["cols"].map((col) => col["name"] ?? void 0),
    columnDecltypes: result["cols"].map((col) => col["decltype"] ?? void 0)
  };
}
function rowsResultFromProto(result) {
  const stmtResult = stmtResultFromProto(result);
  const rows = result["rows"].map((row) => rowFromProto(stmtResult.columnNames, row));
  return { ...stmtResult, rows };
}
function rowResultFromProto(result) {
  const stmtResult = stmtResultFromProto(result);
  let row;
  if (result.rows.length > 0) {
    row = rowFromProto(stmtResult.columnNames, result.rows[0]);
  }
  return { ...stmtResult, row };
}
function valueResultFromProto(result) {
  const stmtResult = stmtResultFromProto(result);
  let value;
  if (result.rows.length > 0 && stmtResult.columnNames.length > 0) {
    value = valueFromProto(result.rows[0][0]);
  }
  return { ...stmtResult, value };
}
function rowFromProto(colNames, values) {
  const row = {};
  Object.defineProperty(row, "length", { value: values.length });
  for (let i2 = 0; i2 < values.length; ++i2) {
    const value = valueFromProto(values[i2]);
    Object.defineProperty(row, i2, { value });
    const colName = colNames[i2];
    if (colName !== void 0 && !Object.hasOwn(row, colName)) {
      Object.defineProperty(row, colName, { value, enumerable: true });
    }
  }
  return row;
}
function errorFromProto(error2) {
  return new ResponseError(error2["message"], error2);
}
var init_result = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/result.js"() {
    init_errors();
    init_value();
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/sql.js
function sqlToProto(sql) {
  if (sql instanceof Sql) {
    return { sqlId: sql._getSqlId() };
  } else {
    return { sql: "" + sql };
  }
}
var _client, _state, Sql;
var init_sql = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/sql.js"() {
    init_errors();
    Sql = class {
      /** @private */
      constructor(client, state) {
        __privateAdd(this, _client, void 0);
        __privateAdd(this, _state, void 0);
        __privateSet(this, _client, client);
        __privateSet(this, _state, state);
      }
      /** @private */
      _getSqlId() {
        if (__privateGet(this, _state).closed !== void 0) {
          throw new ClosedError("SQL text is closed", __privateGet(this, _state).closed);
        }
        return __privateGet(this, _state).sqlId;
      }
      /** Remove the SQL text from the server, releasing resouces. */
      close() {
        __privateGet(this, _client)._closeSql(__privateGet(this, _state), new ClientError("SQL was manually closed"));
      }
      /** True if the SQL text is closed (removed from the server). */
      get closed() {
        return __privateGet(this, _state).closed !== void 0;
      }
    };
    _client = new WeakMap();
    _state = new WeakMap();
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/stmt.js
function stmtToProto(stmt, wantRows) {
  let inSql;
  let args = [];
  let namedArgs = [];
  if (stmt instanceof Stmt) {
    inSql = stmt.sql;
    args = stmt._args;
    for (const [name, value] of stmt._namedArgs.entries()) {
      namedArgs.push({ "name": name, "value": value });
    }
  } else if (Array.isArray(stmt)) {
    inSql = stmt[0];
    if (Array.isArray(stmt[1])) {
      args = stmt[1].map(valueToProto);
    } else {
      namedArgs = Object.entries(stmt[1]).map((entry) => {
        const [key, value] = entry;
        return { "name": key, "value": valueToProto(value) };
      });
    }
  } else {
    inSql = stmt;
  }
  const { sql, sqlId } = sqlToProto(inSql);
  return {
    "sql": sql,
    "sql_id": sqlId,
    "args": args,
    "named_args": namedArgs,
    "want_rows": wantRows
  };
}
var Stmt;
var init_stmt = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/stmt.js"() {
    init_sql();
    init_value();
    Stmt = class {
      /** Initialize the statement with given SQL text. */
      constructor(sql) {
        /** The SQL statement text. */
        __publicField(this, "sql");
        /** @private */
        __publicField(this, "_args");
        /** @private */
        __publicField(this, "_namedArgs");
        this.sql = sql;
        this._args = [];
        this._namedArgs = /* @__PURE__ */ new Map();
      }
      /** Binds positional parameters from the given `values`. All previous positional bindings are cleared. */
      bindIndexes(values) {
        this._args.length = 0;
        for (const value of values) {
          this._args.push(valueToProto(value));
        }
        return this;
      }
      /** Binds a parameter by a 1-based index. */
      bindIndex(index, value) {
        if (index !== (index | 0) || index <= 0) {
          throw new RangeError("Index of a positional argument must be positive integer");
        }
        while (this._args.length < index) {
          this._args.push(protoNull);
        }
        this._args[index - 1] = valueToProto(value);
        return this;
      }
      /** Binds a parameter by name. */
      bindName(name, value) {
        this._namedArgs.set(name, valueToProto(value));
        return this;
      }
      /** Clears all bindings. */
      unbindAll() {
        this._args.length = 0;
        this._namedArgs.clear();
        return this;
      }
    };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/batch.js
function stepIndex(step) {
  if (step._index === void 0) {
    throw new Error("Cannot add a condition referencing a step that has not been added to the batch");
  }
  return step._index;
}
var _client2, _streamState, _executed, Batch, _batch, _conditions, _add, add_fn, BatchStep, BatchCond;
var init_batch = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/batch.js"() {
    init_errors();
    init_result();
    init_stmt();
    Batch = class {
      /** @private */
      constructor(client, streamState) {
        __privateAdd(this, _client2, void 0);
        __privateAdd(this, _streamState, void 0);
        __privateAdd(this, _executed, void 0);
        /** @private */
        __publicField(this, "_steps");
        /** @private */
        __publicField(this, "_resultCallbacks");
        __privateSet(this, _client2, client);
        __privateSet(this, _streamState, streamState);
        __privateSet(this, _executed, false);
        this._steps = [];
        this._resultCallbacks = [];
      }
      /** Return a builder for adding a step to the batch. */
      step() {
        return new BatchStep(this);
      }
      /** Execute the batch. */
      execute() {
        if (__privateGet(this, _executed)) {
          throw new Error("The Batch has already been executed");
        }
        __privateSet(this, _executed, true);
        return new Promise((doneCallback, errorCallback) => {
          const request = {
            "type": "batch",
            "stream_id": __privateGet(this, _streamState).streamId,
            "batch": {
              "steps": this._steps
            }
          };
          const responseCallback = (response) => {
            const result = response["result"];
            for (const callback of this._resultCallbacks) {
              callback(result);
            }
            doneCallback();
          };
          __privateGet(this, _client2)._sendStreamRequest(__privateGet(this, _streamState), request, { responseCallback, errorCallback });
        });
      }
    };
    _client2 = new WeakMap();
    _streamState = new WeakMap();
    _executed = new WeakMap();
    BatchStep = class {
      /** @private */
      constructor(batch) {
        __privateAdd(this, _add);
        __privateAdd(this, _batch, void 0);
        __privateAdd(this, _conditions, void 0);
        /** @private */
        __publicField(this, "_index");
        __privateSet(this, _batch, batch);
        __privateSet(this, _conditions, []);
        this._index = void 0;
      }
      /** Add the condition that needs to be satisfied to execute the statement. If you use this method multiple
      * times, we join them with a logical AND. */
      condition(cond) {
        __privateGet(this, _conditions).push(cond._proto);
        return this;
      }
      /** Add a statement that returns rows. */
      query(stmt) {
        return __privateMethod(this, _add, add_fn).call(this, stmtToProto(stmt, true), rowsResultFromProto);
      }
      /** Add a statement that returns at most a single row. */
      queryRow(stmt) {
        return __privateMethod(this, _add, add_fn).call(this, stmtToProto(stmt, true), rowResultFromProto);
      }
      /** Add a statement returns at most a single value. */
      queryValue(stmt) {
        return __privateMethod(this, _add, add_fn).call(this, stmtToProto(stmt, true), valueResultFromProto);
      }
      /** Add a statement without returning rows. */
      run(stmt) {
        return __privateMethod(this, _add, add_fn).call(this, stmtToProto(stmt, false), stmtResultFromProto);
      }
    };
    _batch = new WeakMap();
    _conditions = new WeakMap();
    _add = new WeakSet();
    add_fn = function(stmt, fromProto) {
      if (this._index !== void 0) {
        throw new Error("This step has already been added to the batch");
      }
      const index = __privateGet(this, _batch)._steps.length;
      this._index = index;
      let condition;
      if (__privateGet(this, _conditions).length === 0) {
        condition = null;
      } else if (__privateGet(this, _conditions).length === 1) {
        condition = __privateGet(this, _conditions)[0];
      } else {
        condition = { "type": "and", "conds": __privateGet(this, _conditions) };
      }
      __privateGet(this, _batch)._steps.push({
        "stmt": stmt,
        "condition": condition
      });
      return new Promise((outputCallback, errorCallback) => {
        __privateGet(this, _batch)._resultCallbacks.push((result) => {
          const stepResult = result["step_results"][index];
          const stepError = result["step_errors"][index];
          if (stepResult === void 0 || stepError === void 0) {
            errorCallback(new ProtoError("Server returned fewer step results than expected"));
          } else if (stepResult !== null && stepError !== null) {
            errorCallback(new ProtoError("Server returned both result and error"));
          } else if (stepError !== null) {
            errorCallback(errorFromProto(stepError));
          } else if (stepResult !== null) {
            outputCallback(fromProto(stepResult));
          } else {
            outputCallback(void 0);
          }
        });
      });
    };
    BatchCond = class {
      /** @private */
      constructor(proto) {
        /** @private */
        __publicField(this, "_proto");
        this._proto = proto;
      }
      static ok(step) {
        return new BatchCond({ "type": "ok", "step": stepIndex(step) });
      }
      static error(step) {
        return new BatchCond({ "type": "error", "step": stepIndex(step) });
      }
      static not(cond) {
        return new BatchCond({ "type": "not", "cond": cond._proto });
      }
      static and(conds) {
        return new BatchCond({ "type": "and", "conds": conds.map((e) => e._proto) });
      }
      static or(conds) {
        return new BatchCond({ "type": "or", "conds": conds.map((e) => e._proto) });
      }
    };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/describe.js
function describeResultFromProto(result) {
  return {
    paramNames: result["params"].map((p) => p.name ?? void 0),
    columns: result["cols"].map((c) => {
      return {
        name: c["name"],
        decltype: c["decltype"] ?? void 0
      };
    }),
    isExplain: result["is_explain"],
    isReadonly: result["is_readonly"]
  };
}
var init_describe = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/describe.js"() {
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/stream.js
var _client3, _state2, _execute, execute_fn, Stream;
var init_stream = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/stream.js"() {
    init_batch();
    init_describe();
    init_errors();
    init_result();
    init_sql();
    init_stmt();
    Stream = class {
      /** @private */
      constructor(client, state) {
        __privateAdd(this, _execute);
        __privateAdd(this, _client3, void 0);
        __privateAdd(this, _state2, void 0);
        __privateSet(this, _client3, client);
        __privateSet(this, _state2, state);
      }
      /** Execute a statement and return rows. */
      query(stmt) {
        return __privateMethod(this, _execute, execute_fn).call(this, stmtToProto(stmt, true), rowsResultFromProto);
      }
      /** Execute a statement and return at most a single row. */
      queryRow(stmt) {
        return __privateMethod(this, _execute, execute_fn).call(this, stmtToProto(stmt, true), rowResultFromProto);
      }
      /** Execute a statement and return at most a single value. */
      queryValue(stmt) {
        return __privateMethod(this, _execute, execute_fn).call(this, stmtToProto(stmt, true), valueResultFromProto);
      }
      /** Execute a statement without returning rows. */
      run(stmt) {
        return __privateMethod(this, _execute, execute_fn).call(this, stmtToProto(stmt, false), stmtResultFromProto);
      }
      /** Return a builder for creating and executing a batch. */
      batch() {
        return new Batch(__privateGet(this, _client3), __privateGet(this, _state2));
      }
      /** Parse and analyze a statement. This requires protocol version 2 or higher. */
      describe(inSql) {
        __privateGet(this, _client3)._ensureVersion(2, "describe()");
        const { sql, sqlId } = sqlToProto(inSql);
        return new Promise((doneCallback, errorCallback) => {
          const request = {
            "type": "describe",
            "stream_id": __privateGet(this, _state2).streamId,
            "sql": sql,
            "sql_id": sqlId
          };
          const responseCallback = (response) => {
            const result = response["result"];
            doneCallback(describeResultFromProto(result));
          };
          __privateGet(this, _client3)._sendStreamRequest(__privateGet(this, _state2), request, { responseCallback, errorCallback });
        });
      }
      /** Execute a sequence of statements separated by semicolons. This requires protocol version 2 or higher.
       * */
      sequence(inSql) {
        __privateGet(this, _client3)._ensureVersion(2, "sequence()");
        const { sql, sqlId } = sqlToProto(inSql);
        return new Promise((doneCallback, errorCallback) => {
          const request = {
            "type": "sequence",
            "stream_id": __privateGet(this, _state2).streamId,
            "sql": sql,
            "sql_id": sqlId
          };
          const responseCallback = (_response) => {
            doneCallback();
          };
          __privateGet(this, _client3)._sendStreamRequest(__privateGet(this, _state2), request, { responseCallback, errorCallback });
        });
      }
      /** Close the stream. */
      close() {
        __privateGet(this, _client3)._closeStream(__privateGet(this, _state2), new ClientError("Stream was manually closed"));
      }
      /** True if the stream is closed. */
      get closed() {
        return __privateGet(this, _state2).closed !== void 0;
      }
    };
    _client3 = new WeakMap();
    _state2 = new WeakMap();
    _execute = new WeakSet();
    execute_fn = function(stmt, fromProto) {
      return new Promise((doneCallback, errorCallback) => {
        const request = {
          "type": "execute",
          "stream_id": __privateGet(this, _state2).streamId,
          "stmt": stmt
        };
        const responseCallback = (response) => {
          const result = response["result"];
          doneCallback(fromProto(result));
        };
        __privateGet(this, _client3)._sendStreamRequest(__privateGet(this, _state2), request, { responseCallback, errorCallback });
      });
    };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/client.js
var protocolVersions, _socket, _openCallbacks, _opened, _closed, _recvdHello, _version, _getVersionCalled, _responseMap, _requestIdAlloc, _streamIdAlloc, _sqlIdAlloc, _send, send_fn, _onSocketOpen, onSocketOpen_fn, _sendToSocket, sendToSocket_fn, _onSocketError, onSocketError_fn, _onSocketClose, onSocketClose_fn, _setClosed, setClosed_fn, _onSocketMessage, onSocketMessage_fn, _handleMsg, handleMsg_fn, Client;
var init_client = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/client.js"() {
    init_id_alloc();
    init_errors();
    init_result();
    init_sql();
    init_stream();
    protocolVersions = /* @__PURE__ */ new Map([
      ["hrana2", 2],
      ["hrana1", 1]
    ]);
    Client = class {
      /** @private */
      constructor(socket, jwt) {
        // Send (or enqueue to send) a message to the server.
        __privateAdd(this, _send);
        // The socket transitioned from CONNECTING to OPEN
        __privateAdd(this, _onSocketOpen);
        __privateAdd(this, _sendToSocket);
        // The socket encountered an error.
        __privateAdd(this, _onSocketError);
        // The socket was closed.
        __privateAdd(this, _onSocketClose);
        // Close the client with the given error.
        __privateAdd(this, _setClosed);
        // We received a message from the socket.
        __privateAdd(this, _onSocketMessage);
        // Handle a message from the server.
        __privateAdd(this, _handleMsg);
        __privateAdd(this, _socket, void 0);
        // List of callbacks that we queue until the socket transitions from the CONNECTING to the OPEN state.
        __privateAdd(this, _openCallbacks, void 0);
        // Have we already transitioned from CONNECTING to OPEN and fired the callbacks in #openCallbacks?
        __privateAdd(this, _opened, void 0);
        // Stores the error that caused us to close the client (and the socket). If we are not closed, this is
        // `undefined`.
        __privateAdd(this, _closed, void 0);
        // Have we received a response to our "hello" from the server?
        __privateAdd(this, _recvdHello, void 0);
        // Protocol version negotiated with the server. It is only available after the socket transitions to the
        // OPEN state.
        __privateAdd(this, _version, void 0);
        // Has the `getVersion()` function been called? This is only used to validate that the API is used
        // correctly.
        __privateAdd(this, _getVersionCalled, void 0);
        // A map from request id to the responses that we expect to receive from the server.
        __privateAdd(this, _responseMap, void 0);
        // An allocator of request ids.
        __privateAdd(this, _requestIdAlloc, void 0);
        // An allocator of stream ids.
        __privateAdd(this, _streamIdAlloc, void 0);
        // An allocator of SQL text ids.
        __privateAdd(this, _sqlIdAlloc, void 0);
        __privateSet(this, _socket, socket);
        __privateGet(this, _socket).binaryType = "arraybuffer";
        __privateSet(this, _openCallbacks, []);
        __privateSet(this, _opened, false);
        __privateSet(this, _closed, void 0);
        __privateSet(this, _recvdHello, false);
        __privateSet(this, _version, void 0);
        __privateSet(this, _getVersionCalled, false);
        __privateSet(this, _responseMap, /* @__PURE__ */ new Map());
        __privateSet(this, _requestIdAlloc, new IdAlloc());
        __privateSet(this, _streamIdAlloc, new IdAlloc());
        __privateSet(this, _sqlIdAlloc, new IdAlloc());
        __privateGet(this, _socket).addEventListener("open", () => __privateMethod(this, _onSocketOpen, onSocketOpen_fn).call(this));
        __privateGet(this, _socket).addEventListener("close", (event) => __privateMethod(this, _onSocketClose, onSocketClose_fn).call(this, event));
        __privateGet(this, _socket).addEventListener("error", (event) => __privateMethod(this, _onSocketError, onSocketError_fn).call(this, event));
        __privateGet(this, _socket).addEventListener("message", (event) => __privateMethod(this, _onSocketMessage, onSocketMessage_fn).call(this, event));
        __privateMethod(this, _send, send_fn).call(this, { "type": "hello", "jwt": jwt });
      }
      /** Get the protocol version negotiated with the server, possibly waiting until the socket is open. */
      getVersion() {
        return new Promise((versionCallback, errorCallback) => {
          __privateSet(this, _getVersionCalled, true);
          if (__privateGet(this, _closed) !== void 0) {
            errorCallback(__privateGet(this, _closed));
          } else if (!__privateGet(this, _opened)) {
            const openCallback = () => versionCallback(__privateGet(this, _version));
            __privateGet(this, _openCallbacks).push({ openCallback, errorCallback });
          } else {
            versionCallback(__privateGet(this, _version));
          }
        });
      }
      // Make sure that the negotiated version is at least `minVersion`.
      /** @private */
      _ensureVersion(minVersion, feature) {
        if (__privateGet(this, _version) === void 0 || !__privateGet(this, _getVersionCalled)) {
          throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, but the version supported by the server is not yet known. Use Client.getVersion() to wait until the version is available.`);
        } else if (__privateGet(this, _version) < minVersion) {
          throw new ProtocolVersionError(`${feature} is supported on protocol version ${minVersion} and higher, but the server only supports version ${__privateGet(this, _version)}`);
        }
      }
      // Send a request to the server and invoke a callback when we get the response.
      /** @private */
      _sendRequest(request, callbacks) {
        if (__privateGet(this, _closed) !== void 0) {
          callbacks.errorCallback(new ClosedError("Client is closed", __privateGet(this, _closed)));
          return;
        }
        const requestId = __privateGet(this, _requestIdAlloc).alloc();
        __privateGet(this, _responseMap).set(requestId, { ...callbacks, type: request.type });
        __privateMethod(this, _send, send_fn).call(this, { "type": "request", "request_id": requestId, request });
      }
      /** Open a {@link Stream}, a stream for executing SQL statements. */
      openStream() {
        const streamId = __privateGet(this, _streamIdAlloc).alloc();
        const streamState = {
          streamId,
          closed: void 0
        };
        const responseCallback = () => void 0;
        const errorCallback = (e) => this._closeStream(streamState, e);
        const request = {
          "type": "open_stream",
          "stream_id": streamId
        };
        this._sendRequest(request, { responseCallback, errorCallback });
        return new Stream(this, streamState);
      }
      // Make sure that the stream is closed.
      /** @private */
      _closeStream(streamState, error2) {
        if (streamState.closed !== void 0 || __privateGet(this, _closed) !== void 0) {
          return;
        }
        streamState.closed = error2;
        const callback = () => {
          __privateGet(this, _streamIdAlloc).free(streamState.streamId);
        };
        const request = {
          "type": "close_stream",
          "stream_id": streamState.streamId
        };
        this._sendRequest(request, { responseCallback: callback, errorCallback: callback });
      }
      // Send a stream-specific request to the server and invoke a callback when we get the response.
      /** @private */
      _sendStreamRequest(streamState, request, callbacks) {
        if (streamState.closed !== void 0) {
          callbacks.errorCallback(new ClosedError("Stream is closed", streamState.closed));
          return;
        }
        this._sendRequest(request, callbacks);
      }
      /** Cache a SQL text on the server. This requires protocol version 2 or higher. */
      storeSql(sql) {
        this._ensureVersion(2, "storeSql()");
        const sqlId = __privateGet(this, _sqlIdAlloc).alloc();
        const sqlState = {
          sqlId,
          closed: void 0
        };
        const responseCallback = () => void 0;
        const errorCallback = (e) => this._closeSql(sqlState, e);
        const request = {
          "type": "store_sql",
          "sql_id": sqlId,
          "sql": sql
        };
        this._sendRequest(request, { responseCallback, errorCallback });
        return new Sql(this, sqlState);
      }
      // Make sure that the SQL text is closed.
      /** @private */
      _closeSql(sqlState, error2) {
        if (sqlState.closed !== void 0 || __privateGet(this, _closed) !== void 0) {
          return;
        }
        sqlState.closed = error2;
        const callback = () => {
          __privateGet(this, _sqlIdAlloc).free(sqlState.sqlId);
        };
        const request = {
          "type": "close_sql",
          "sql_id": sqlState.sqlId
        };
        this._sendRequest(request, { responseCallback: callback, errorCallback: callback });
      }
      /** Close the client and the WebSocket. */
      close() {
        __privateMethod(this, _setClosed, setClosed_fn).call(this, new ClientError("Client was manually closed"));
      }
      /** True if the client is closed. */
      get closed() {
        return __privateGet(this, _closed) !== void 0;
      }
    };
    _socket = new WeakMap();
    _openCallbacks = new WeakMap();
    _opened = new WeakMap();
    _closed = new WeakMap();
    _recvdHello = new WeakMap();
    _version = new WeakMap();
    _getVersionCalled = new WeakMap();
    _responseMap = new WeakMap();
    _requestIdAlloc = new WeakMap();
    _streamIdAlloc = new WeakMap();
    _sqlIdAlloc = new WeakMap();
    _send = new WeakSet();
    send_fn = function(msg) {
      if (__privateGet(this, _closed) !== void 0) {
        throw new ClientError("Internal error: trying to send a message on a closed client");
      }
      if (__privateGet(this, _opened)) {
        __privateMethod(this, _sendToSocket, sendToSocket_fn).call(this, msg);
      } else {
        const openCallback = () => __privateMethod(this, _sendToSocket, sendToSocket_fn).call(this, msg);
        const errorCallback = (_2) => void 0;
        __privateGet(this, _openCallbacks).push({ openCallback, errorCallback });
      }
    };
    _onSocketOpen = new WeakSet();
    onSocketOpen_fn = function() {
      const protocol = __privateGet(this, _socket).protocol;
      if (protocol === "") {
        __privateSet(this, _version, 1);
      } else if (protocol === void 0) {
        __privateSet(this, _version, 1);
      } else {
        __privateSet(this, _version, protocolVersions.get(protocol));
        if (__privateGet(this, _version) === void 0) {
          __privateMethod(this, _setClosed, setClosed_fn).call(this, new ProtoError(`Unrecognized WebSocket subprotocol: ${JSON.stringify(protocol)}`));
        }
      }
      for (const callbacks of __privateGet(this, _openCallbacks)) {
        callbacks.openCallback();
      }
      __privateGet(this, _openCallbacks).length = 0;
      __privateSet(this, _opened, true);
    };
    _sendToSocket = new WeakSet();
    sendToSocket_fn = function(msg) {
      __privateGet(this, _socket).send(JSON.stringify(msg));
    };
    _onSocketError = new WeakSet();
    onSocketError_fn = function(event) {
      const eventMessage = event.message;
      const message = eventMessage ?? "Connection was closed due to an error";
      __privateMethod(this, _setClosed, setClosed_fn).call(this, new WebSocketError(message));
    };
    _onSocketClose = new WeakSet();
    onSocketClose_fn = function(event) {
      let message = `WebSocket was closed with code ${event.code}`;
      if (event.reason) {
        message += `: ${event.reason}`;
      }
      __privateMethod(this, _setClosed, setClosed_fn).call(this, new WebSocketError(message));
    };
    _setClosed = new WeakSet();
    setClosed_fn = function(error2) {
      if (__privateGet(this, _closed) !== void 0) {
        return;
      }
      __privateSet(this, _closed, error2);
      for (const callbacks of __privateGet(this, _openCallbacks)) {
        callbacks.errorCallback(error2);
      }
      __privateGet(this, _openCallbacks).length = 0;
      for (const [requestId, responseState] of __privateGet(this, _responseMap).entries()) {
        responseState.errorCallback(error2);
        __privateGet(this, _requestIdAlloc).free(requestId);
      }
      __privateGet(this, _responseMap).clear();
      __privateGet(this, _socket).close();
    };
    _onSocketMessage = new WeakSet();
    onSocketMessage_fn = function(event) {
      if (__privateGet(this, _closed) !== void 0) {
        return;
      }
      if (typeof event.data !== "string") {
        __privateGet(this, _socket).close(3003, "Only string messages are accepted");
        __privateMethod(this, _setClosed, setClosed_fn).call(this, new ProtoError("Received non-string message from server"));
        return;
      }
      try {
        __privateMethod(this, _handleMsg, handleMsg_fn).call(this, event.data);
      } catch (e) {
        __privateGet(this, _socket).close(3007, "Could not handle message");
        __privateMethod(this, _setClosed, setClosed_fn).call(this, e);
      }
    };
    _handleMsg = new WeakSet();
    handleMsg_fn = function(msgText) {
      const msg = JSON.parse(msgText);
      if (msg["type"] === "hello_ok" || msg["type"] === "hello_error") {
        if (__privateGet(this, _recvdHello)) {
          throw new ProtoError("Received a duplicated hello response");
        }
        __privateSet(this, _recvdHello, true);
        if (msg["type"] === "hello_error") {
          throw errorFromProto(msg["error"]);
        }
        return;
      } else if (!__privateGet(this, _recvdHello)) {
        throw new ProtoError("Received a non-hello message before a hello response");
      }
      if (msg["type"] === "response_ok") {
        const requestId = msg["request_id"];
        const responseState = __privateGet(this, _responseMap).get(requestId);
        __privateGet(this, _responseMap).delete(requestId);
        if (responseState === void 0) {
          throw new ProtoError("Received unexpected OK response");
        }
        __privateGet(this, _requestIdAlloc).free(requestId);
        try {
          if (responseState.type !== msg["response"]["type"]) {
            throw new ProtoError("Received unexpected type of response");
          }
          responseState.responseCallback(msg["response"]);
        } catch (e) {
          responseState.errorCallback(e);
          throw e;
        }
      } else if (msg["type"] === "response_error") {
        const requestId = msg["request_id"];
        const responseState = __privateGet(this, _responseMap).get(requestId);
        __privateGet(this, _responseMap).delete(requestId);
        if (responseState === void 0) {
          throw new ProtoError("Received unexpected error response");
        }
        __privateGet(this, _requestIdAlloc).free(requestId);
        responseState.errorCallback(errorFromProto(msg["error"]));
      } else {
        throw new ProtoError("Received unexpected message type");
      }
    };
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/libsql_url.js
var init_libsql_url = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/libsql_url.js"() {
    init_errors();
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/raw.js
var raw_exports = {};
__export(raw_exports, {
  describeResultFromProto: () => describeResultFromProto,
  errorFromProto: () => errorFromProto,
  rowResultFromProto: () => rowResultFromProto,
  rowsResultFromProto: () => rowsResultFromProto,
  stmtResultFromProto: () => stmtResultFromProto,
  stmtToProto: () => stmtToProto,
  valueFromProto: () => valueFromProto,
  valueResultFromProto: () => valueResultFromProto,
  valueToProto: () => valueToProto
});
var init_raw = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/raw.js"() {
    init_describe();
    init_result();
    init_stmt();
    init_value();
  }
});

// ../../node_modules/@libsql/hrana-client/lib-esm/index.js
function open(url3, jwt) {
  if (typeof _WebSocket === "undefined") {
    throw new WebSocketUnsupportedError("WebSockets are not supported in this environment");
  }
  const socket = new _WebSocket(url3, Array.from(protocolVersions.keys()));
  return new Client(socket, jwt ?? null);
}
var init_lib_esm = __esm({
  "../../node_modules/@libsql/hrana-client/lib-esm/index.js"() {
    init_web();
    init_client();
    init_errors();
    init_client();
    init_errors();
    init_batch();
    init_libsql_url();
    init_raw();
    init_sql();
    init_stmt();
    init_stream();
  }
});

// ../../node_modules/@libsql/client/lib-esm/lru.js
var _cache, Lru;
var init_lru = __esm({
  "../../node_modules/@libsql/client/lib-esm/lru.js"() {
    Lru = class {
      constructor() {
        // This maps keys to the cache values. The entries are ordered by their last use (entires that were used
        // most recently are at the end).
        __privateAdd(this, _cache, void 0);
        __privateSet(this, _cache, /* @__PURE__ */ new Map());
      }
      get(key) {
        const value = __privateGet(this, _cache).get(key);
        if (value !== void 0) {
          __privateGet(this, _cache).delete(key);
          __privateGet(this, _cache).set(key, value);
        }
        return value;
      }
      set(key, value) {
        __privateGet(this, _cache).set(key, value);
      }
      deleteLru() {
        for (const [key, value] of __privateGet(this, _cache).entries()) {
          __privateGet(this, _cache).delete(key);
          return value;
        }
        return void 0;
      }
      get size() {
        return __privateGet(this, _cache).size;
      }
    };
    _cache = new WeakMap();
  }
});

// ../../node_modules/@libsql/client/lib-esm/hrana.js
function _createClient(config) {
  let scheme = config.scheme.toLowerCase();
  if (scheme === "libsql") {
    scheme = "wss";
  }
  if (scheme !== "wss" && scheme !== "ws") {
    throw new LibsqlError(`The WebSocket (Hrana) client supports only "libsql:", "wss:" and "ws:" URLs, got ${JSON.stringify(config.scheme + ":")}. For more information, please read ${supportedUrlLink}`, "URL_SCHEME_NOT_SUPPORTED");
  }
  const url3 = encodeBaseUrl(scheme, config.authority, config.path);
  let client;
  try {
    client = open(url3, config.authToken);
  } catch (e) {
    if (e instanceof WebSocketUnsupportedError) {
      const suggestedScheme = scheme === "wss" ? "https" : "http";
      const suggestedUrl = encodeBaseUrl(suggestedScheme, config.authority, config.path);
      throw new LibsqlError(`This environment does not support WebSockets, please switch to the HTTP client by using a "${suggestedScheme}:" URL (${JSON.stringify(suggestedUrl)}). Note that the HTTP client does not support interactive transactions. For more information, please read ${supportedUrlLink}`, "WEBSOCKETS_NOT_SUPPORTED");
    }
    throw mapHranaError(e);
  }
  return new HranaClient(client, url3, config.authToken);
}
function applySqlCache(connState, hranaStmt) {
  if (connState.useSqlCache && typeof hranaStmt.sql === "string") {
    const sqlText = hranaStmt.sql;
    let sqlObj = connState.sqlCache.get(sqlText);
    if (sqlObj === void 0) {
      sqlObj = connState.client.storeSql(sqlText);
      connState.sqlCache.set(sqlText, sqlObj);
    }
    if (sqlObj !== void 0) {
      hranaStmt.sql = sqlObj;
    }
  }
  return hranaStmt;
}
function evictSqlCache(connState) {
  while (connState.sqlCache.size > sqlCacheCapacity) {
    const sqlObj = connState.sqlCache.deleteLru();
    sqlObj.close();
  }
}
function stmtToHrana(stmt) {
  if (typeof stmt === "string") {
    return new Stmt(stmt);
  }
  const hranaStmt = new Stmt(stmt.sql);
  if (Array.isArray(stmt.args)) {
    hranaStmt.bindIndexes(stmt.args);
  } else {
    for (const [key, value] of Object.entries(stmt.args)) {
      hranaStmt.bindName(key, value);
    }
  }
  return hranaStmt;
}
function resultSetFromHrana(hranaRows) {
  return {
    columns: hranaRows.columnNames.map((c) => c ?? ""),
    rows: hranaRows.rows,
    rowsAffected: hranaRows.affectedRowCount,
    lastInsertRowid: hranaRows.lastInsertRowid !== void 0 ? BigInt(hranaRows.lastInsertRowid) : void 0
  };
}
function mapHranaError(e) {
  if (e instanceof ClientError) {
    let code = "UNKNOWN";
    if (e instanceof ResponseError && e.code !== void 0) {
      code = e.code;
    } else if (e instanceof ProtoError) {
      code = "HRANA_PROTO_ERROR";
    } else if (e instanceof ClosedError) {
      code = "HRANA_CLOSED_ERROR";
    } else if (e instanceof WebSocketError) {
      code = "HRANA_WEBSOCKET_ERROR";
    }
    return new LibsqlError(e.message, code, e);
  }
  return e;
}
var maxConnAgeMillis, _url, _authToken, _connState, _futureConnState, _openStream, openStream_fn, _openConn, openConn_fn, HranaClient, _client4, _streamState2, HranaTransaction, sqlCacheCapacity;
var init_hrana = __esm({
  "../../node_modules/@libsql/client/lib-esm/hrana.js"() {
    init_lib_esm();
    init_api();
    init_config();
    init_help();
    init_lru();
    init_uri();
    init_api();
    maxConnAgeMillis = 60 * 1e3;
    HranaClient = class {
      /** @private */
      constructor(client, url3, authToken2) {
        __privateAdd(this, _openStream);
        __privateAdd(this, _openConn);
        __privateAdd(this, _url, void 0);
        __privateAdd(this, _authToken, void 0);
        // State of the current connection. The `hrana.Client` inside may be closed at any moment due to an
        // asynchronous error.
        __privateAdd(this, _connState, void 0);
        // If defined, this is a connection that will be used in the future, once it is ready.
        __privateAdd(this, _futureConnState, void 0);
        __publicField(this, "closed");
        __privateSet(this, _url, url3);
        __privateSet(this, _authToken, authToken2);
        __privateSet(this, _connState, __privateMethod(this, _openConn, openConn_fn).call(this, client));
        __privateSet(this, _futureConnState, void 0);
        this.closed = false;
      }
      async execute(stmt) {
        const streamState = await __privateMethod(this, _openStream, openStream_fn).call(this);
        try {
          const hranaStmt = applySqlCache(streamState.conn, stmtToHrana(stmt));
          const hranaRows = await streamState.stream.query(hranaStmt);
          evictSqlCache(streamState.conn);
          return resultSetFromHrana(hranaRows);
        } catch (e) {
          throw mapHranaError(e);
        } finally {
          this._closeStream(streamState);
        }
      }
      async batch(stmts) {
        const streamState = await __privateMethod(this, _openStream, openStream_fn).call(this);
        try {
          const batch = streamState.stream.batch();
          const beginStep = batch.step();
          const beginPromise = beginStep.run("BEGIN").catch((_2) => void 0);
          let lastStep = beginStep;
          const stmtPromises = stmts.map((stmt) => {
            const hranaStmt = applySqlCache(streamState.conn, stmtToHrana(stmt));
            const stmtStep = batch.step().condition(BatchCond.ok(lastStep));
            const stmtPromise = stmtStep.query(hranaStmt);
            lastStep = stmtStep;
            return stmtPromise;
          });
          const commitStep = batch.step().condition(BatchCond.ok(lastStep));
          const commitPromise = commitStep.run("COMMIT");
          const rollbackStep = batch.step().condition(BatchCond.not(BatchCond.ok(commitStep)));
          rollbackStep.run("ROLLBACK").catch((_2) => void 0);
          await batch.execute();
          evictSqlCache(streamState.conn);
          const resultSets = [];
          for (const stmtPromise of stmtPromises) {
            const hranaRows = await stmtPromise;
            if (hranaRows === void 0) {
              throw new LibsqlError("Server did not return a result for statement in a batch", "SERVER_ERROR");
            }
            resultSets.push(resultSetFromHrana(hranaRows));
          }
          await commitPromise;
          return resultSets;
        } catch (e) {
          throw mapHranaError(e);
        } finally {
          this._closeStream(streamState);
        }
      }
      async transaction() {
        const streamState = await __privateMethod(this, _openStream, openStream_fn).call(this);
        try {
          await streamState.stream.run("BEGIN");
          return new HranaTransaction(this, streamState);
        } catch (e) {
          this._closeStream(streamState);
          throw mapHranaError(e);
        }
      }
      _closeStream(streamState) {
        streamState.stream.close();
        const connState = streamState.conn;
        connState.streamStates.delete(streamState);
        if (connState.streamStates.size === 0 && connState !== __privateGet(this, _connState)) {
          connState.client.close();
        }
      }
      close() {
        __privateGet(this, _connState).client.close();
        this.closed = true;
      }
    };
    _url = new WeakMap();
    _authToken = new WeakMap();
    _connState = new WeakMap();
    _futureConnState = new WeakMap();
    _openStream = new WeakSet();
    openStream_fn = async function() {
      if (this.closed) {
        throw new LibsqlError("The client is closed", "CLIENT_CLOSED");
      }
      const now = /* @__PURE__ */ new Date();
      const ageMillis = now.valueOf() - __privateGet(this, _connState).openTime.valueOf();
      if (ageMillis > maxConnAgeMillis && __privateGet(this, _futureConnState) === void 0) {
        const futureConnState = __privateMethod(this, _openConn, openConn_fn).call(this);
        __privateSet(this, _futureConnState, futureConnState);
        futureConnState.client.getVersion().then((_version2) => {
          if (__privateGet(this, _connState) !== futureConnState) {
            if (__privateGet(this, _connState).streamStates.size === 0) {
              __privateGet(this, _connState).client.close();
            } else {
            }
          }
          __privateSet(this, _connState, futureConnState);
          __privateSet(this, _futureConnState, void 0);
        }, (_e) => {
          __privateSet(this, _futureConnState, void 0);
        });
      }
      if (__privateGet(this, _connState).client.closed) {
        try {
          if (__privateGet(this, _futureConnState) !== void 0) {
            __privateSet(this, _connState, __privateGet(this, _futureConnState));
          } else {
            __privateSet(this, _connState, __privateMethod(this, _openConn, openConn_fn).call(this));
          }
        } catch (e) {
          throw mapHranaError(e);
        }
      }
      const connState = __privateGet(this, _connState);
      try {
        if (connState.useSqlCache === void 0) {
          connState.useSqlCache = await connState.client.getVersion() >= 2;
        }
        const stream = connState.client.openStream();
        const streamState = { conn: connState, stream };
        connState.streamStates.add(streamState);
        return streamState;
      } catch (e) {
        throw mapHranaError(e);
      }
    };
    _openConn = new WeakSet();
    openConn_fn = function(client) {
      try {
        return {
          client: client ?? open(__privateGet(this, _url), __privateGet(this, _authToken)),
          useSqlCache: void 0,
          sqlCache: new Lru(),
          openTime: /* @__PURE__ */ new Date(),
          streamStates: /* @__PURE__ */ new Set()
        };
      } catch (e) {
        throw mapHranaError(e);
      }
    };
    HranaTransaction = class {
      /** @private */
      constructor(client, state) {
        __privateAdd(this, _client4, void 0);
        __privateAdd(this, _streamState2, void 0);
        __privateSet(this, _client4, client);
        __privateSet(this, _streamState2, state);
      }
      async execute(stmt) {
        if (__privateGet(this, _streamState2).stream.closed) {
          throw new LibsqlError("Cannot execute a statement because the transaction is closed", "TRANSACTION_CLOSED");
        }
        try {
          const hranaStmt = applySqlCache(__privateGet(this, _streamState2).conn, stmtToHrana(stmt));
          const hranaRows = await __privateGet(this, _streamState2).stream.query(hranaStmt);
          evictSqlCache(__privateGet(this, _streamState2).conn);
          return resultSetFromHrana(hranaRows);
        } catch (e) {
          throw mapHranaError(e);
        }
      }
      async rollback() {
        if (__privateGet(this, _streamState2).stream.closed) {
          return;
        }
        const promise = __privateGet(this, _streamState2).stream.run("ROLLBACK").catch((e) => {
          throw mapHranaError(e);
        });
        __privateGet(this, _streamState2).stream.close();
        await promise;
      }
      async commit() {
        if (__privateGet(this, _streamState2).stream.closed) {
          throw new LibsqlError("Cannot commit the transaction because it is already closed", "TRANSACTION_CLOSED");
        }
        const promise = __privateGet(this, _streamState2).stream.run("COMMIT").catch((e) => {
          throw mapHranaError(e);
        });
        __privateGet(this, _streamState2).stream.close();
        await promise;
      }
      close() {
        __privateGet(this, _client4)._closeStream(__privateGet(this, _streamState2));
      }
      get closed() {
        return __privateGet(this, _streamState2).stream.closed;
      }
    };
    _client4 = new WeakMap();
    _streamState2 = new WeakMap();
    sqlCacheCapacity = 100;
  }
});

// ../../node_modules/@libsql/isomorphic-fetch/web.mjs
var _fetch;
var init_web2 = __esm({
  "../../node_modules/@libsql/isomorphic-fetch/web.mjs"() {
    _fetch = fetch;
  }
});

// ../../node_modules/@libsql/client/lib-esm/http.js
function _createClient2(config) {
  let scheme = config.scheme.toLowerCase();
  if (scheme === "libsql") {
    scheme = "https";
  }
  if (scheme !== "https" && scheme !== "http") {
    throw new LibsqlError(`The HTTP client supports only "libsql", "https" and "http" URLs, got ${JSON.stringify(config.scheme)}. For more information, please read ${supportedUrlLink}`, "URL_SCHEME_NOT_SUPPORTED");
  }
  const url3 = encodeBaseUrl(scheme, config.authority, config.path);
  return new HttpClient(url3, config.authToken);
}
var _url2, _authToken2, _send2, send_fn2, HttpClient;
var init_http = __esm({
  "../../node_modules/@libsql/client/lib-esm/http.js"() {
    init_lib_esm();
    init_web2();
    init_api();
    init_config();
    init_help();
    init_hrana();
    init_uri();
    init_api();
    HttpClient = class {
      /** @private */
      constructor(url3, authToken2) {
        __privateAdd(this, _send2);
        __privateAdd(this, _url2, void 0);
        __privateAdd(this, _authToken2, void 0);
        __publicField(this, "closed");
        __privateSet(this, _url2, url3);
        __privateSet(this, _authToken2, authToken2);
        this.closed = false;
      }
      async execute(stmt) {
        try {
          const hranaStmt = stmtToHrana(stmt);
          const protoStmt = raw_exports.stmtToProto(hranaStmt, true);
          const request = { "stmt": protoStmt };
          const response = await __privateMethod(this, _send2, send_fn2).call(this, "POST", "v1/execute", request);
          const protoStmtResult = response["result"];
          const hranaRows = raw_exports.rowsResultFromProto(protoStmtResult);
          return resultSetFromHrana(hranaRows);
        } catch (e) {
          throw mapHranaError(e);
        }
      }
      async batch(stmts) {
        try {
          const protoSteps = [];
          protoSteps.push({
            "stmt": { "sql": "BEGIN", "want_rows": false }
          });
          const beginStepIdx = protoSteps.length - 1;
          let lastStepIdx = beginStepIdx;
          for (const stmt of stmts) {
            const hranaStmt = stmtToHrana(stmt);
            protoSteps.push({
              "condition": { "type": "ok", "step": lastStepIdx },
              "stmt": raw_exports.stmtToProto(hranaStmt, true)
            });
            lastStepIdx = protoSteps.length - 1;
          }
          protoSteps.push({
            "condition": { "type": "ok", "step": lastStepIdx },
            "stmt": { "sql": "COMMIT", "want_rows": false }
          });
          const commitStepIdx = protoSteps.length - 1;
          protoSteps.push({
            "condition": {
              "type": "not",
              "cond": { "type": "ok", "step": commitStepIdx }
            },
            "stmt": { "sql": "ROLLBACK", "want_rows": false }
          });
          const protoBatch = { "steps": protoSteps };
          const request = { "batch": protoBatch };
          const response = await __privateMethod(this, _send2, send_fn2).call(this, "POST", "v1/batch", request);
          const protoBatchResult = response["result"];
          for (let stepIdx = beginStepIdx; stepIdx <= commitStepIdx; ++stepIdx) {
            const protoError = protoBatchResult["step_errors"][stepIdx];
            if (protoError !== null) {
              throw raw_exports.errorFromProto(protoError);
            }
          }
          const resultSets = [];
          for (let i2 = 0; i2 < stmts.length; ++i2) {
            const stepIdx = beginStepIdx + 1 + i2;
            const protoStmtResult = protoBatchResult["step_results"][stepIdx];
            if (protoStmtResult === null) {
              throw new LibsqlError("Server did not return a result for statement in a batch", "SERVER_ERROR");
            }
            const hranaRows = raw_exports.rowsResultFromProto(protoStmtResult);
            resultSets.push(resultSetFromHrana(hranaRows));
          }
          return resultSets;
        } catch (e) {
          throw mapHranaError(e);
        }
      }
      async transaction() {
        throw new LibsqlError(`The HTTP client does not support interactive transactions. Please use a "libsql:", "ws:" or "wss:" URL to connect to the server over a WebSocket. For more information, please read ${supportedUrlLink}`, "TRANSACTIONS_NOT_SUPPORTED");
      }
      close() {
        this.closed = true;
      }
    };
    _url2 = new WeakMap();
    _authToken2 = new WeakMap();
    _send2 = new WeakSet();
    send_fn2 = async function(method, path, reqBody) {
      if (this.closed) {
        throw new LibsqlError("The client is closed", "CLIENT_CLOSED");
      }
      const url3 = new URL(path, __privateGet(this, _url2));
      const headers = {};
      if (__privateGet(this, _authToken2) !== void 0) {
        headers["authorization"] = `Bearer ${__privateGet(this, _authToken2)}`;
      }
      const resp = await _fetch(url3, {
        method,
        headers,
        body: JSON.stringify(reqBody)
      });
      const respType = resp.headers.get("content-type") ?? "text/plain";
      if (!resp.ok) {
        if (respType === "application/json") {
          const respBody = await resp.json();
          if ("message" in respBody) {
            const code = respBody["code"] ?? "UNKNOWN";
            throw new LibsqlError(respBody["message"], code);
          }
        } else if (respType === "text/plain") {
          const respBody = await resp.text();
          throw new LibsqlError(`Server returned HTTP status ${resp.status} and error: ${respBody}`, "SERVER_ERROR");
        }
        throw new LibsqlError(`Server returned HTTP status ${resp.status}`, "SERVER_ERROR");
      }
      return await resp.json();
    };
  }
});

// ../../node_modules/@libsql/client/lib-esm/web.js
function createClient(config) {
  return _createClient3(expandConfig(config));
}
function _createClient3(config) {
  const scheme = config.scheme.toLowerCase();
  if (scheme === "libsql" || scheme === "wss" || scheme === "ws") {
    return _createClient(config);
  } else if (scheme === "https" || scheme === "http") {
    return _createClient2(config);
  } else {
    throw new LibsqlError(`The client that uses Web standard APIs supports only "libsql:", "wss:", "ws:", "https:" and "http:" URLs, got ${JSON.stringify(config.scheme + ":")}. For more information, please read ${supportedUrlLink}`, "URL_SCHEME_NOT_SUPPORTED");
  }
}
var init_web3 = __esm({
  "../../node_modules/@libsql/client/lib-esm/web.js"() {
    init_api();
    init_config();
    init_help();
    init_hrana();
    init_http();
    init_api();
  }
});

// dist/$server_build/chunks/pages/_id_.ts.042f95a1.mjs
var id_ts_042f95a1_exports = {};
__export(id_ts_042f95a1_exports, {
  get: () => get4,
  prerender: () => prerender17
});
var prerender17, url2, authToken, get4;
var init_id_ts_042f95a1 = __esm({
  "dist/$server_build/chunks/pages/_id_.ts.042f95a1.mjs"() {
    init_web3();
    prerender17 = false;
    url2 = "libsql://measured-lord-tyger-arpecop.turso.io";
    authToken = "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2ODQ1MjEwNzYsImlkIjoiNmJiZmY4MDctZGVlMC0xMWVkLWFhNzYtNmU1NjU4ODkwYjFmIn0.HTKvSZ2XTgvchBw9YOgM2ZMDsihs0JMTpKTsnusOMQn05AJoUYge79DzKIrRpys61e1mAbXEHbXUtz3hd8VmDg";
    get4 = async function get24({ params }) {
      const id = params.id || "";
      const client = createClient({ url: url2, authToken });
      const rs = await client.execute(`select * from keyz where key = '${id}'`);
      const resp = rs.rows[0] ? rs.rows[0] : { error: true };
      return new Response(JSON.stringify(resp), {
        status: rs.rows[0] ? 200 : 404,
        headers: {
          "Content-Type": "application/json"
        }
      });
    };
  }
});

// dist/$server_build/chunks/_id_@_@ts.2a2ad695.mjs
var id_ts_2a2ad695_exports = {};
__export(id_ts_2a2ad695_exports, {
  onRequest: () => onRequest,
  page: () => page18,
  renderers: () => renderers
});
var import_cookie32, import_mime32, import_react20, import_server19, page18;
var init_id_ts_2a2ad695 = __esm({
  "dist/$server_build/chunks/_id_@_@ts.2a2ad695.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie32 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime32 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react20 = __toESM(require_react(), 1);
    import_server19 = __toESM(require_server_browser(), 1);
    page18 = () => Promise.resolve().then(() => (init_id_ts_042f95a1(), id_ts_042f95a1_exports));
  }
});

// dist/$server_build/chunks/_...eeff6a31.mjs
var eeff6a31_exports = {};
__export(eeff6a31_exports, {
  onRequest: () => onRequest,
  page: () => page19,
  renderers: () => renderers
});
var import_cookie33, import_mime33, import_react21, import_server20, page19;
var init_eeff6a31 = __esm({
  "dist/$server_build/chunks/_...eeff6a31.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie33 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime33 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react21 = __toESM(require_react(), 1);
    import_server20 = __toESM(require_server_browser(), 1);
    page19 = () => Promise.resolve().then(() => (init_jokecat_astro_c1b39e73(), jokecat_astro_c1b39e73_exports)).then((n) => n._);
  }
});

// ../../node_modules/stopword/dist/stopword.umd.js
var require_stopword_umd = __commonJS({
  "../../node_modules/stopword/dist/stopword.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.sw = {}));
    })(exports, function(exports2) {
      "use strict";
      const num123 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
      const numFas = ["\u06F1", "\u06F2", "\u06F3", "\u06F4", "\u06F5", "\u06F6", "\u06F7", "\u06F8", "\u06F9", "\u06F0"];
      const numKor = ["\uFF10", "\uFF11", "\uFF12", "\uFF13", "\uFF14", "\uFF15", "\uFF16", "\uFF17", "\uFF18", "\uFF19"];
      const numMya = ["\u1040", "\u1041", "\u1042", "\u1043", "\u1044", "\u1045", "\u1046", "\u1047", "\u1048", "\u1049"];
      const numTel = ["\u0C66", "\u0C67", "\u0C68", "\u0C69", "\u0C6A", "\u0C6B", "\u0C6C", "\u0C6D", "\u0C6E", "\u0C6F"];
      const _123 = [...num123, ...numFas, ...numKor, ...numMya, ...numTel];
      const afr = [
        "die",
        "het",
        "en",
        "sy",
        "nie",
        "was",
        "hy",
        "te",
        "is",
        "ek",
        "om",
        "hulle",
        "in",
        "my",
        "'n",
        "vir",
        "toe",
        "haar",
        "van",
        "dit",
        "op",
        "se",
        "wat",
        "met",
        "gaan",
        "baie",
        "ons",
        "jy",
        "na",
        "maar",
        "hom",
        "so",
        "n",
        "huis",
        "kan",
        "aan",
        "dat",
        "daar",
        "sal",
        "jou",
        "ges\xEA",
        "by",
        "kom",
        "een",
        "ma",
        "as",
        "son",
        "groot",
        "begin",
        "al"
      ];
      const ara = [
        "\u060C",
        "\u0651\u0622\u0636",
        "\u0622\u0645\u064A\u0646\u064E",
        "\u0622\u0647",
        "\u0622\u0647\u0627\u064B",
        "\u0622\u064A",
        "\u0623",
        "\u0623\u0628",
        "\u0623\u062C\u0644",
        "\u0623\u062C\u0645\u0639",
        "\u0623\u062E",
        "\u0623\u062E\u0630",
        "\u0623\u0635\u0628\u062D",
        "\u0623\u0636\u062D\u0649",
        "\u0623\u0642\u0628\u0644",
        "\u0623\u0642\u0644",
        "\u0623\u0643\u062B\u0631",
        "\u0623\u0644\u0627",
        "\u0623\u0645",
        "\u0623\u0645\u0627",
        "\u0623\u0645\u0627\u0645\u0643",
        "\u0623\u0645\u0627\u0645\u0643\u064E",
        "\u0623\u0645\u0633\u0649",
        "\u0623\u0645\u0651\u0627",
        "\u0623\u0646",
        "\u0623\u0646\u0627",
        "\u0623\u0646\u062A",
        "\u0623\u0646\u062A\u0645",
        "\u0623\u0646\u062A\u0645\u0627",
        "\u0623\u0646\u062A\u0646",
        "\u0623\u0646\u062A\u0650",
        "\u0623\u0646\u0634\u0623",
        "\u0623\u0646\u0651\u0649",
        "\u0623\u0648",
        "\u0623\u0648\u0634\u0643",
        "\u0623\u0648\u0644\u0626\u0643",
        "\u0623\u0648\u0644\u0626\u0643\u0645",
        "\u0623\u0648\u0644\u0627\u0621",
        "\u0623\u0648\u0644\u0627\u0644\u0643",
        "\u0623\u0648\u0651\u0647\u0652",
        "\u0623\u064A",
        "\u0623\u064A\u0627",
        "\u0623\u064A\u0646",
        "\u0623\u064A\u0646\u0645\u0627",
        "\u0623\u064A\u0651",
        "\u0623\u064E\u0646\u064E\u0651",
        "\u0623\u064E\u064E\u064A\u064F\u0651",
        "\u0623\u064F\u0641\u064D\u0651",
        "\u0625\u0630",
        "\u0625\u0630\u0627",
        "\u0625\u0630\u0627\u064B",
        "\u0625\u0630\u0645\u0627",
        "\u0625\u0630\u0646",
        "\u0625\u0644\u0649",
        "\u0625\u0644\u064A\u0643\u0645",
        "\u0625\u0644\u064A\u0643\u0645\u0627",
        "\u0625\u0644\u064A\u0643\u0646\u0651",
        "\u0625\u0644\u064A\u0643\u064E",
        "\u0625\u0644\u064E\u064A\u0652\u0643\u064E",
        "\u0625\u0644\u0651\u0627",
        "\u0625\u0645\u0651\u0627",
        "\u0625\u0646",
        "\u0625\u0646\u0651\u0645\u0627",
        "\u0625\u064A",
        "\u0625\u064A\u0627\u0643",
        "\u0625\u064A\u0627\u0643\u0645",
        "\u0625\u064A\u0627\u0643\u0645\u0627",
        "\u0625\u064A\u0627\u0643\u0646",
        "\u0625\u064A\u0627\u0646\u0627",
        "\u0625\u064A\u0627\u0647",
        "\u0625\u064A\u0627\u0647\u0627",
        "\u0625\u064A\u0627\u0647\u0645",
        "\u0625\u064A\u0627\u0647\u0645\u0627",
        "\u0625\u064A\u0627\u0647\u0646",
        "\u0625\u064A\u0627\u064A",
        "\u0625\u064A\u0647\u064D",
        "\u0625\u0650\u0646\u064E\u0651",
        "\u0627",
        "\u0627\u0628\u062A\u062F\u0623",
        "\u0627\u062B\u0631",
        "\u0627\u062C\u0644",
        "\u0627\u062D\u062F",
        "\u0627\u062E\u0631\u0649",
        "\u0627\u062E\u0644\u0648\u0644\u0642",
        "\u0627\u0630\u0627",
        "\u0627\u0631\u0628\u0639\u0629",
        "\u0627\u0631\u062A\u062F\u0651",
        "\u0627\u0633\u062A\u062D\u0627\u0644",
        "\u0627\u0637\u0627\u0631",
        "\u0627\u0639\u0627\u062F\u0629",
        "\u0627\u0639\u0644\u0646\u062A",
        "\u0627\u0641",
        "\u0627\u0643\u062B\u0631",
        "\u0627\u0643\u062F",
        "\u0627\u0644\u0623\u0644\u0627\u0621",
        "\u0627\u0644\u0623\u0644\u0649",
        "\u0627\u0644\u0627",
        "\u0627\u0644\u0627\u062E\u064A\u0631\u0629",
        "\u0627\u0644\u0627\u0646",
        "\u0627\u0644\u0627\u0648\u0644",
        "\u0627\u0644\u0627\u0648\u0644\u0649",
        "\u0627\u0644\u062A\u0649",
        "\u0627\u0644\u062A\u064A",
        "\u0627\u0644\u062B\u0627\u0646\u064A",
        "\u0627\u0644\u062B\u0627\u0646\u064A\u0629",
        "\u0627\u0644\u0630\u0627\u062A\u064A",
        "\u0627\u0644\u0630\u0649",
        "\u0627\u0644\u0630\u064A",
        "\u0627\u0644\u0630\u064A\u0646",
        "\u0627\u0644\u0633\u0627\u0628\u0642",
        "\u0627\u0644\u0641",
        "\u0627\u0644\u0644\u0627\u0626\u064A",
        "\u0627\u0644\u0644\u0627\u062A\u064A",
        "\u0627\u0644\u0644\u062A\u0627\u0646",
        "\u0627\u0644\u0644\u062A\u064A\u0627",
        "\u0627\u0644\u0644\u062A\u064A\u0646",
        "\u0627\u0644\u0644\u0630\u0627\u0646",
        "\u0627\u0644\u0644\u0630\u064A\u0646",
        "\u0627\u0644\u0644\u0648\u0627\u062A\u064A",
        "\u0627\u0644\u0645\u0627\u0636\u064A",
        "\u0627\u0644\u0645\u0642\u0628\u0644",
        "\u0627\u0644\u0648\u0642\u062A",
        "\u0627\u0644\u0649",
        "\u0627\u0644\u064A\u0648\u0645",
        "\u0627\u0645\u0627",
        "\u0627\u0645\u0627\u0645",
        "\u0627\u0645\u0633",
        "\u0627\u0646",
        "\u0627\u0646\u0628\u0631\u0649",
        "\u0627\u0646\u0642\u0644\u0628",
        "\u0627\u0646\u0647",
        "\u0627\u0646\u0647\u0627",
        "\u0627\u0648",
        "\u0627\u0648\u0644",
        "\u0627\u064A",
        "\u0627\u064A\u0627\u0631",
        "\u0627\u064A\u0627\u0645",
        "\u0627\u064A\u0636\u0627",
        "\u0628",
        "\u0628\u0627\u062A",
        "\u0628\u0627\u0633\u0645",
        "\u0628\u0627\u0646",
        "\u0628\u062E\u064D",
        "\u0628\u0631\u0633",
        "\u0628\u0633\u0628\u0628",
        "\u0628\u0633\u0651",
        "\u0628\u0634\u0643\u0644",
        "\u0628\u0636\u0639",
        "\u0628\u0637\u0622\u0646",
        "\u0628\u0639\u062F",
        "\u0628\u0639\u0636",
        "\u0628\u0643",
        "\u0628\u0643\u0645",
        "\u0628\u0643\u0645\u0627",
        "\u0628\u0643\u0646",
        "\u0628\u0644",
        "\u0628\u0644\u0649",
        "\u0628\u0645\u0627",
        "\u0628\u0645\u0627\u0630\u0627",
        "\u0628\u0645\u0646",
        "\u0628\u0646",
        "\u0628\u0646\u0627",
        "\u0628\u0647",
        "\u0628\u0647\u0627",
        "\u0628\u064A",
        "\u0628\u064A\u062F",
        "\u0628\u064A\u0646",
        "\u0628\u064E\u0633\u0652",
        "\u0628\u064E\u0644\u0652\u0647\u064E",
        "\u0628\u0650\u0626\u0652\u0633\u064E",
        "\u062A\u0627\u0646\u0650",
        "\u062A\u0627\u0646\u0650\u0643",
        "\u062A\u0628\u062F\u0651\u0644",
        "\u062A\u062C\u0627\u0647",
        "\u062A\u062D\u0648\u0651\u0644",
        "\u062A\u0644\u0642\u0627\u0621",
        "\u062A\u0644\u0643",
        "\u062A\u0644\u0643\u0645",
        "\u062A\u0644\u0643\u0645\u0627",
        "\u062A\u0645",
        "\u062A\u064A\u0646\u0643",
        "\u062A\u064E\u064A\u0652\u0646\u0650",
        "\u062A\u0650\u0647",
        "\u062A\u0650\u064A",
        "\u062B\u0644\u0627\u062B\u0629",
        "\u062B\u0645",
        "\u062B\u0645\u0651",
        "\u062B\u0645\u0651\u0629",
        "\u062B\u064F\u0645\u064E\u0651",
        "\u062C\u0639\u0644",
        "\u062C\u0644\u0644",
        "\u062C\u0645\u064A\u0639",
        "\u062C\u064A\u0631",
        "\u062D\u0627\u0631",
        "\u062D\u0627\u0634\u0627",
        "\u062D\u0627\u0644\u064A\u0627",
        "\u062D\u0627\u064A",
        "\u062D\u062A\u0649",
        "\u062D\u0631\u0649",
        "\u062D\u0633\u0628",
        "\u062D\u0645",
        "\u062D\u0648\u0627\u0644\u0649",
        "\u062D\u0648\u0644",
        "\u062D\u064A\u062B",
        "\u062D\u064A\u062B\u0645\u0627",
        "\u062D\u064A\u0646",
        "\u062D\u064A\u064E\u0651",
        "\u062D\u064E\u0628\u064E\u0651\u0630\u064E\u0627",
        "\u062D\u064E\u062A\u064E\u0651\u0649",
        "\u062D\u064E\u0630\u0627\u0631\u0650",
        "\u062E\u0644\u0627",
        "\u062E\u0644\u0627\u0644",
        "\u062F\u0648\u0646",
        "\u062F\u0648\u0646\u0643",
        "\u0630\u0627",
        "\u0630\u0627\u062A",
        "\u0630\u0627\u0643",
        "\u0630\u0627\u0646\u0643",
        "\u0630\u0627\u0646\u0650",
        "\u0630\u0644\u0643",
        "\u0630\u0644\u0643\u0645",
        "\u0630\u0644\u0643\u0645\u0627",
        "\u0630\u0644\u0643\u0646",
        "\u0630\u0648",
        "\u0630\u0648\u0627",
        "\u0630\u0648\u0627\u062A\u0627",
        "\u0630\u0648\u0627\u062A\u064A",
        "\u0630\u064A\u062A",
        "\u0630\u064A\u0646\u0643",
        "\u0630\u064E\u064A\u0652\u0646\u0650",
        "\u0630\u0650\u0647",
        "\u0630\u0650\u064A",
        "\u0631\u0627\u062D",
        "\u0631\u062C\u0639",
        "\u0631\u0648\u064A\u062F\u0643",
        "\u0631\u064A\u062B",
        "\u0631\u064F\u0628\u064E\u0651",
        "\u0632\u064A\u0627\u0631\u0629",
        "\u0633\u0628\u062D\u0627\u0646",
        "\u0633\u0631\u0639\u0627\u0646",
        "\u0633\u0646\u0629",
        "\u0633\u0646\u0648\u0627\u062A",
        "\u0633\u0648\u0641",
        "\u0633\u0648\u0649",
        "\u0633\u064E\u0627\u0621\u064E",
        "\u0633\u064E\u0627\u0621\u064E\u0645\u064E\u0627",
        "\u0634\u0628\u0647",
        "\u0634\u062E\u0635\u0627",
        "\u0634\u0631\u0639",
        "\u0634\u064E\u062A\u064E\u0651\u0627\u0646\u064E",
        "\u0635\u0627\u0631",
        "\u0635\u0628\u0627\u062D",
        "\u0635\u0641\u0631",
        "\u0635\u0647\u064D",
        "\u0635\u0647\u0652",
        "\u0636\u062F",
        "\u0636\u0645\u0646",
        "\u0637\u0627\u0642",
        "\u0637\u0627\u0644\u0645\u0627",
        "\u0637\u0641\u0642",
        "\u0637\u064E\u0642",
        "\u0638\u0644\u0651",
        "\u0639\u0627\u062F",
        "\u0639\u0627\u0645",
        "\u0639\u0627\u0645\u0627",
        "\u0639\u0627\u0645\u0629",
        "\u0639\u062F\u0627",
        "\u0639\u062F\u0629",
        "\u0639\u062F\u062F",
        "\u0639\u062F\u0645",
        "\u0639\u0633\u0649",
        "\u0639\u0634\u0631",
        "\u0639\u0634\u0631\u0629",
        "\u0639\u0644\u0642",
        "\u0639\u0644\u0649",
        "\u0639\u0644\u064A\u0643",
        "\u0639\u0644\u064A\u0647",
        "\u0639\u0644\u064A\u0647\u0627",
        "\u0639\u0644\u064B\u0651",
        "\u0639\u0646",
        "\u0639\u0646\u062F",
        "\u0639\u0646\u062F\u0645\u0627",
        "\u0639\u0648\u0636",
        "\u0639\u064A\u0646",
        "\u0639\u064E\u062F\u064E\u0633\u0652",
        "\u0639\u064E\u0645\u064E\u0651\u0627",
        "\u063A\u062F\u0627",
        "\u063A\u064A\u0631",
        "\u0640",
        "\u0641",
        "\u0641\u0627\u0646",
        "\u0641\u0644\u0627\u0646",
        "\u0641\u0648",
        "\u0641\u0649",
        "\u0641\u064A",
        "\u0641\u064A\u0645",
        "\u0641\u064A\u0645\u0627",
        "\u0641\u064A\u0647",
        "\u0641\u064A\u0647\u0627",
        "\u0642\u0627\u0644",
        "\u0642\u0627\u0645",
        "\u0642\u0628\u0644",
        "\u0642\u062F",
        "\u0642\u0637\u0651",
        "\u0642\u0644\u0645\u0627",
        "\u0642\u0648\u0629",
        "\u0643\u0623\u0646\u0651\u0645\u0627",
        "\u0643\u0623\u064A\u0646",
        "\u0643\u0623\u064A\u0651",
        "\u0643\u0623\u064A\u0651\u0646",
        "\u0643\u0627\u062F",
        "\u0643\u0627\u0646",
        "\u0643\u0627\u0646\u062A",
        "\u0643\u0630\u0627",
        "\u0643\u0630\u0644\u0643",
        "\u0643\u0631\u0628",
        "\u0643\u0644",
        "\u0643\u0644\u0627",
        "\u0643\u0644\u0627\u0647\u0645\u0627",
        "\u0643\u0644\u062A\u0627",
        "\u0643\u0644\u0645",
        "\u0643\u0644\u064A\u0643\u0645\u0627",
        "\u0643\u0644\u064A\u0647\u0645\u0627",
        "\u0643\u0644\u0651\u0645\u0627",
        "\u0643\u0644\u064E\u0651\u0627",
        "\u0643\u0645",
        "\u0643\u0645\u0627",
        "\u0643\u064A",
        "\u0643\u064A\u062A",
        "\u0643\u064A\u0641",
        "\u0643\u064A\u0641\u0645\u0627",
        "\u0643\u064E\u0623\u064E\u0646\u064E\u0651",
        "\u0643\u0650\u062E",
        "\u0644\u0626\u0646",
        "\u0644\u0627",
        "\u0644\u0627\u062A",
        "\u0644\u0627\u0633\u064A\u0645\u0627",
        "\u0644\u062F\u0646",
        "\u0644\u062F\u0649",
        "\u0644\u0639\u0645\u0631",
        "\u0644\u0642\u0627\u0621",
        "\u0644\u0643",
        "\u0644\u0643\u0645",
        "\u0644\u0643\u0645\u0627",
        "\u0644\u0643\u0646",
        "\u0644\u0643\u0646\u064E\u0651\u0645\u0627",
        "\u0644\u0643\u064A",
        "\u0644\u0643\u064A\u0644\u0627",
        "\u0644\u0644\u0627\u0645\u0645",
        "\u0644\u0645",
        "\u0644\u0645\u0627",
        "\u0644\u0645\u0651\u0627",
        "\u0644\u0646",
        "\u0644\u0646\u0627",
        "\u0644\u0647",
        "\u0644\u0647\u0627",
        "\u0644\u0648",
        "\u0644\u0648\u0643\u0627\u0644\u0629",
        "\u0644\u0648\u0644\u0627",
        "\u0644\u0648\u0645\u0627",
        "\u0644\u064A",
        "\u0644\u064E\u0633\u0652\u062A\u064E",
        "\u0644\u064E\u0633\u0652\u062A\u064F",
        "\u0644\u064E\u0633\u0652\u062A\u064F\u0645",
        "\u0644\u064E\u0633\u0652\u062A\u064F\u0645\u064E\u0627",
        "\u0644\u064E\u0633\u0652\u062A\u064F\u0646\u064E\u0651",
        "\u0644\u064E\u0633\u0652\u062A\u0650",
        "\u0644\u064E\u0633\u0652\u0646\u064E",
        "\u0644\u064E\u0639\u064E\u0644\u064E\u0651",
        "\u0644\u064E\u0643\u0650\u0646\u064E\u0651",
        "\u0644\u064E\u064A\u0652\u062A\u064E",
        "\u0644\u064E\u064A\u0652\u0633\u064E",
        "\u0644\u064E\u064A\u0652\u0633\u064E\u0627",
        "\u0644\u064E\u064A\u0652\u0633\u064E\u062A\u064E\u0627",
        "\u0644\u064E\u064A\u0652\u0633\u064E\u062A\u0652",
        "\u0644\u064E\u064A\u0652\u0633\u064F\u0648\u0627",
        "\u0644\u064E\u0650\u0633\u0652\u0646\u064E\u0627",
        "\u0645\u0627",
        "\u0645\u0627\u0627\u0646\u0641\u0643",
        "\u0645\u0627\u0628\u0631\u062D",
        "\u0645\u0627\u062F\u0627\u0645",
        "\u0645\u0627\u0630\u0627",
        "\u0645\u0627\u0632\u0627\u0644",
        "\u0645\u0627\u0641\u062A\u0626",
        "\u0645\u0627\u064A\u0648",
        "\u0645\u062A\u0649",
        "\u0645\u062B\u0644",
        "\u0645\u0630",
        "\u0645\u0633\u0627\u0621",
        "\u0645\u0639",
        "\u0645\u0639\u0627\u0630",
        "\u0645\u0642\u0627\u0628\u0644",
        "\u0645\u0643\u0627\u0646\u0643\u0645",
        "\u0645\u0643\u0627\u0646\u0643\u0645\u0627",
        "\u0645\u0643\u0627\u0646\u0643\u0646\u0651",
        "\u0645\u0643\u0627\u0646\u064E\u0643",
        "\u0645\u0644\u064A\u0627\u0631",
        "\u0645\u0644\u064A\u0648\u0646",
        "\u0645\u0645\u0627",
        "\u0645\u0645\u0646",
        "\u0645\u0646",
        "\u0645\u0646\u0630",
        "\u0645\u0646\u0647\u0627",
        "\u0645\u0647",
        "\u0645\u0647\u0645\u0627",
        "\u0645\u064E\u0646\u0652",
        "\u0645\u0650\u0646",
        "\u0646\u062D\u0646",
        "\u0646\u062D\u0648",
        "\u0646\u0639\u0645",
        "\u0646\u0641\u0633",
        "\u0646\u0641\u0633\u0647",
        "\u0646\u0647\u0627\u064A\u0629",
        "\u0646\u064E\u062E\u0652",
        "\u0646\u0650\u0639\u0650\u0645\u0651\u0627",
        "\u0646\u0650\u0639\u0652\u0645\u064E",
        "\u0647\u0627",
        "\u0647\u0627\u0624\u0645",
        "\u0647\u0627\u0643\u064E",
        "\u0647\u0627\u0647\u0646\u0627",
        "\u0647\u0628\u0651",
        "\u0647\u0630\u0627",
        "\u0647\u0630\u0647",
        "\u0647\u0643\u0630\u0627",
        "\u0647\u0644",
        "\u0647\u0644\u0645\u064E\u0651",
        "\u0647\u0644\u0651\u0627",
        "\u0647\u0645",
        "\u0647\u0645\u0627",
        "\u0647\u0646",
        "\u0647\u0646\u0627",
        "\u0647\u0646\u0627\u0643",
        "\u0647\u0646\u0627\u0644\u0643",
        "\u0647\u0648",
        "\u0647\u064A",
        "\u0647\u064A\u0627",
        "\u0647\u064A\u062A",
        "\u0647\u064A\u0651\u0627",
        "\u0647\u064E\u0624\u0644\u0627\u0621",
        "\u0647\u064E\u0627\u062A\u0627\u0646\u0650",
        "\u0647\u064E\u0627\u062A\u064E\u064A\u0652\u0646\u0650",
        "\u0647\u064E\u0627\u062A\u0650\u0647",
        "\u0647\u064E\u0627\u062A\u0650\u064A",
        "\u0647\u064E\u062C\u0652",
        "\u0647\u064E\u0630\u0627",
        "\u0647\u064E\u0630\u0627\u0646\u0650",
        "\u0647\u064E\u0630\u064E\u064A\u0652\u0646\u0650",
        "\u0647\u064E\u0630\u0650\u0647",
        "\u0647\u064E\u0630\u0650\u064A",
        "\u0647\u064E\u064A\u0652\u0647\u064E\u0627\u062A\u064E",
        "\u0648",
        "\u0648\u0627",
        "\u0648\u0627\u062D\u062F",
        "\u0648\u0627\u0636\u0627\u0641",
        "\u0648\u0627\u0636\u0627\u0641\u062A",
        "\u0648\u0627\u0643\u062F",
        "\u0648\u0627\u0646",
        "\u0648\u0627\u0647\u0627\u064B",
        "\u0648\u0627\u0648\u0636\u062D",
        "\u0648\u0631\u0627\u0621\u064E\u0643",
        "\u0648\u0641\u064A",
        "\u0648\u0642\u0627\u0644",
        "\u0648\u0642\u0627\u0644\u062A",
        "\u0648\u0642\u062F",
        "\u0648\u0642\u0641",
        "\u0648\u0643\u0627\u0646",
        "\u0648\u0643\u0627\u0646\u062A",
        "\u0648\u0644\u0627",
        "\u0648\u0644\u0645",
        "\u0648\u0645\u0646",
        "\u0648\u0647\u0648",
        "\u0648\u0647\u064A",
        "\u0648\u064A\u0643\u0623\u0646\u0651",
        "\u0648\u064E\u064A\u0652",
        "\u0648\u064F\u0634\u0652\u0643\u064E\u0627\u0646\u064E\u064E",
        "\u064A\u0643\u0648\u0646",
        "\u064A\u0645\u0643\u0646",
        "\u064A\u0648\u0645",
        "\u0651\u0623\u064A\u0651\u0627\u0646"
      ];
      const hye = [
        "\u0561\u0575\u0564",
        "\u0561\u0575\u056C",
        "\u0561\u0575\u0576",
        "\u0561\u0575\u057D",
        "\u0564\u0578\u0582",
        "\u0564\u0578\u0582\u0584",
        "\u0565\u0574",
        "\u0565\u0576",
        "\u0565\u0576\u0584",
        "\u0565\u057D",
        "\u0565\u0584",
        "\u0567",
        "\u0567\u056B",
        "\u0567\u056B\u0576",
        "\u0567\u056B\u0576\u0584",
        "\u0567\u056B\u0580",
        "\u0567\u056B\u0584",
        "\u0567\u0580",
        "\u0568\u057D\u057F",
        "\u0569",
        "\u056B",
        "\u056B\u0576",
        "\u056B\u057D\u056F",
        "\u056B\u0580",
        "\u056F\u0561\u0574",
        "\u0570\u0561\u0574\u0561\u0580",
        "\u0570\u0565\u057F",
        "\u0570\u0565\u057F\u0578",
        "\u0574\u0565\u0576\u0584",
        "\u0574\u0565\u057B",
        "\u0574\u056B",
        "\u0576",
        "\u0576\u0561",
        "\u0576\u0561\u0587",
        "\u0576\u0580\u0561",
        "\u0576\u0580\u0561\u0576\u0584",
        "\u0578\u0580",
        "\u0578\u0580\u0568",
        "\u0578\u0580\u0578\u0576\u0584",
        "\u0578\u0580\u057A\u0565\u057D",
        "\u0578\u0582",
        "\u0578\u0582\u0574",
        "\u057A\u056B\u057F\u056B",
        "\u057E\u0580\u0561",
        "\u0587"
      ];
      const eus = [
        "al",
        "anitz",
        "arabera",
        "asko",
        "baina",
        "bat",
        "batean",
        "batek",
        "bati",
        "batzuei",
        "batzuek",
        "batzuetan",
        "batzuk",
        "bera",
        "beraiek",
        "berau",
        "berauek",
        "bere",
        "berori",
        "beroriek",
        "beste",
        "bezala",
        "da",
        "dago",
        "dira",
        "ditu",
        "du",
        "dute",
        "edo",
        "egin",
        "ere",
        "eta",
        "eurak",
        "ez",
        "gainera",
        "gu",
        "gutxi",
        "guzti",
        "haiei",
        "haiek",
        "haietan",
        "hainbeste",
        "hala",
        "han",
        "handik",
        "hango",
        "hara",
        "hari",
        "hark",
        "hartan",
        "hau",
        "hauei",
        "hauek",
        "hauetan",
        "hemen",
        "hemendik",
        "hemengo",
        "hi",
        "hona",
        "honek",
        "honela",
        "honetan",
        "honi",
        "hor",
        "hori",
        "horiei",
        "horiek",
        "horietan",
        "horko",
        "horra",
        "horrek",
        "horrela",
        "horretan",
        "horri",
        "hortik",
        "hura",
        "izan",
        "ni",
        "noiz",
        "nola",
        "non",
        "nondik",
        "nongo",
        "nor",
        "nora",
        "ze",
        "zein",
        "zen",
        "zenbait",
        "zenbat",
        "zer",
        "zergatik",
        "ziren",
        "zituen",
        "zu",
        "zuek",
        "zuen",
        "zuten"
      ];
      const ben = [
        "\u0985\u09A4\u098F\u09AC",
        "\u0985\u09A5\u099A",
        "\u0985\u09A5\u09AC\u09BE",
        "\u0985\u09A8\u09C1\u09AF\u09BE\u09AF\u09BC\u09C0",
        "\u0985\u09A8\u09C7\u0995",
        "\u0985\u09A8\u09C7\u0995\u09C7",
        "\u0985\u09A8\u09C7\u0995\u09C7\u0987",
        "\u0985\u09A8\u09CD\u09A4\u09A4",
        "\u0985\u09A8\u09CD\u09AF",
        "\u0985\u09AC\u09A7\u09BF",
        "\u0985\u09AC\u09B6\u09CD\u09AF",
        "\u0985\u09B0\u09CD\u09A5\u09BE\u09A4",
        "\u0986\u0987",
        "\u0986\u0997\u09BE\u09AE\u09C0",
        "\u0986\u0997\u09C7",
        "\u0986\u0997\u09C7\u0987",
        "\u0986\u099B\u09C7",
        "\u0986\u099C",
        "\u0986\u09A6\u09CD\u09AF\u09AD\u09BE\u0997\u09C7",
        "\u0986\u09AA\u09A8\u09BE\u09B0",
        "\u0986\u09AA\u09A8\u09BF",
        "\u0986\u09AC\u09BE\u09B0",
        "\u0986\u09AE\u09B0\u09BE",
        "\u0986\u09AE\u09BE\u0995\u09C7",
        "\u0986\u09AE\u09BE\u09A6\u09C7\u09B0",
        "\u0986\u09AE\u09BE\u09B0",
        "\u0986\u09AE\u09BF",
        "\u0986\u09B0",
        "\u0986\u09B0\u0993",
        "\u0987",
        "\u0987\u09A4\u09CD\u09AF\u09BE\u09A6\u09BF",
        "\u0987\u09B9\u09BE",
        "\u0989\u099A\u09BF\u09A4",
        "\u0989\u09A4\u09CD\u09A4\u09B0",
        "\u0989\u09A8\u09BF",
        "\u0989\u09AA\u09B0",
        "\u0989\u09AA\u09B0\u09C7",
        "\u098F",
        "\u098F\u0981\u09A6\u09C7\u09B0",
        "\u098F\u0981\u09B0\u09BE",
        "\u098F\u0987",
        "\u098F\u0995\u0987",
        "\u098F\u0995\u099F\u09BF",
        "\u098F\u0995\u09AC\u09BE\u09B0",
        "\u098F\u0995\u09C7",
        "\u098F\u0995\u09CD",
        "\u098F\u0996\u09A8",
        "\u098F\u0996\u09A8\u0993",
        "\u098F\u0996\u09BE\u09A8\u09C7",
        "\u098F\u0996\u09BE\u09A8\u09C7\u0987",
        "\u098F\u099F\u09BE",
        "\u098F\u099F\u09BE\u0987",
        "\u098F\u099F\u09BF",
        "\u098F\u09A4",
        "\u098F\u09A4\u099F\u09BE\u0987",
        "\u098F\u09A4\u09C7",
        "\u098F\u09A6\u09C7\u09B0",
        "\u098F\u09AC",
        "\u098F\u09AC\u0982",
        "\u098F\u09AC\u09BE\u09B0",
        "\u098F\u09AE\u09A8",
        "\u098F\u09AE\u09A8\u0995\u09C0",
        "\u098F\u09AE\u09A8\u09BF",
        "\u098F\u09B0",
        "\u098F\u09B0\u09BE",
        "\u098F\u09B2",
        "\u098F\u09B8",
        "\u098F\u09B8\u09C7",
        "\u0990",
        "\u0993",
        "\u0993\u0981\u09A6\u09C7\u09B0",
        "\u0993\u0981\u09B0",
        "\u0993\u0981\u09B0\u09BE",
        "\u0993\u0987",
        "\u0993\u0995\u09C7",
        "\u0993\u0996\u09BE\u09A8\u09C7",
        "\u0993\u09A6\u09C7\u09B0",
        "\u0993\u09B0",
        "\u0993\u09B0\u09BE",
        "\u0995\u0996\u09A8\u0993",
        "\u0995\u09A4",
        "\u0995\u09AC\u09C7",
        "\u0995\u09AE\u09A8\u09C7",
        "\u0995\u09AF\u09BC\u09C7\u0995",
        "\u0995\u09AF\u09BC\u09C7\u0995\u099F\u09BF",
        "\u0995\u09B0\u099B\u09C7",
        "\u0995\u09B0\u099B\u09C7\u09A8",
        "\u0995\u09B0\u09A4\u09C7",
        "\u0995\u09B0\u09AC\u09C7",
        "\u0995\u09B0\u09AC\u09C7\u09A8",
        "\u0995\u09B0\u09B2\u09C7",
        "\u0995\u09B0\u09B2\u09C7\u09A8",
        "\u0995\u09B0\u09BE",
        "\u0995\u09B0\u09BE\u0987",
        "\u0995\u09B0\u09BE\u09AF\u09BC",
        "\u0995\u09B0\u09BE\u09B0",
        "\u0995\u09B0\u09BF",
        "\u0995\u09B0\u09BF\u09A4\u09C7",
        "\u0995\u09B0\u09BF\u09AF\u09BC\u09BE",
        "\u0995\u09B0\u09BF\u09AF\u09BC\u09C7",
        "\u0995\u09B0\u09C7",
        "\u0995\u09B0\u09C7\u0987",
        "\u0995\u09B0\u09C7\u099B\u09BF\u09B2\u09C7\u09A8",
        "\u0995\u09B0\u09C7\u099B\u09C7",
        "\u0995\u09B0\u09C7\u099B\u09C7\u09A8",
        "\u0995\u09B0\u09C7\u09A8",
        "\u0995\u09BE\u0989\u0995\u09C7",
        "\u0995\u09BE\u099B",
        "\u0995\u09BE\u099B\u09C7",
        "\u0995\u09BE\u099C",
        "\u0995\u09BE\u099C\u09C7",
        "\u0995\u09BE\u09B0\u0993",
        "\u0995\u09BE\u09B0\u09A3",
        "\u0995\u09BF",
        "\u0995\u09BF\u0982\u09AC\u09BE",
        "\u0995\u09BF\u099B\u09C1",
        "\u0995\u09BF\u099B\u09C1\u0987",
        "\u0995\u09BF\u09A8\u09CD\u09A4\u09C1",
        "\u0995\u09C0",
        "\u0995\u09C7",
        "\u0995\u09C7\u0989",
        "\u0995\u09C7\u0989\u0987",
        "\u0995\u09C7\u0996\u09BE",
        "\u0995\u09C7\u09A8",
        "\u0995\u09CB\u099F\u09BF",
        "\u0995\u09CB\u09A8",
        "\u0995\u09CB\u09A8\u0993",
        "\u0995\u09CB\u09A8\u09CB",
        "\u0995\u09CD\u09B7\u09C7\u09A4\u09CD\u09B0\u09C7",
        "\u0995\u09AF\u09BC\u09C7\u0995",
        "\u0996\u09C1\u09AC",
        "\u0997\u09BF\u09AF\u09BC\u09C7",
        "\u0997\u09BF\u09AF\u09BC\u09C7\u099B\u09C7",
        "\u0997\u09BF\u09AF\u09BC\u09C7",
        "\u0997\u09C1\u09B2\u09BF",
        "\u0997\u09C7\u099B\u09C7",
        "\u0997\u09C7\u09B2",
        "\u0997\u09C7\u09B2\u09C7",
        "\u0997\u09CB\u099F\u09BE",
        "\u099A\u09B2\u09C7",
        "\u099A\u09BE\u09A8",
        "\u099A\u09BE\u09AF\u09BC",
        "\u099A\u09BE\u09B0",
        "\u099A\u09BE\u09B2\u09C1",
        "\u099A\u09C7\u09AF\u09BC\u09C7",
        "\u099A\u09C7\u09B7\u09CD\u099F\u09BE",
        "\u099B\u09BE\u09A1\u09BC\u09BE",
        "\u099B\u09BE\u09A1\u09BC\u09BE\u0993",
        "\u099B\u09BF\u09B2",
        "\u099B\u09BF\u09B2\u09C7\u09A8",
        "\u099C\u09A8",
        "\u099C\u09A8\u0995\u09C7",
        "\u099C\u09A8\u09C7\u09B0",
        "\u099C\u09A8\u09CD\u09AF",
        "\u099C\u09A8\u09CD\u09AF\u0993\u099C\u09C7",
        "\u099C\u09BE\u09A8\u09A4\u09C7",
        "\u099C\u09BE\u09A8\u09BE",
        "\u099C\u09BE\u09A8\u09BE\u09A8\u09CB",
        "\u099C\u09BE\u09A8\u09BE\u09AF\u09BC",
        "\u099C\u09BE\u09A8\u09BF\u09AF\u09BC\u09C7",
        "\u099C\u09BE\u09A8\u09BF\u09AF\u09BC\u09C7\u099B\u09C7",
        "\u099C\u09C7",
        "\u099C\u09CD\u09A8\u099C\u09A8",
        "\u099F\u09BF",
        "\u09A0\u09BF\u0995",
        "\u09A4\u0996\u09A8",
        "\u09A4\u09A4",
        "\u09A4\u09A5\u09BE",
        "\u09A4\u09AC\u09C1",
        "\u09A4\u09AC\u09C7",
        "\u09A4\u09BE",
        "\u09A4\u09BE\u0981\u0995\u09C7",
        "\u09A4\u09BE\u0981\u09A6\u09C7\u09B0",
        "\u09A4\u09BE\u0981\u09B0",
        "\u09A4\u09BE\u0981\u09B0\u09BE",
        "\u09A4\u09BE\u0981\u09BE\u09B9\u09BE\u09B0\u09BE",
        "\u09A4\u09BE\u0987",
        "\u09A4\u09BE\u0993",
        "\u09A4\u09BE\u0995\u09C7",
        "\u09A4\u09BE\u09A4\u09C7",
        "\u09A4\u09BE\u09A6\u09C7\u09B0",
        "\u09A4\u09BE\u09B0",
        "\u09A4\u09BE\u09B0\u09AA\u09B0",
        "\u09A4\u09BE\u09B0\u09BE",
        "\u09A4\u09BE\u09B0\u09C8",
        "\u09A4\u09BE\u09B9\u09B2\u09C7",
        "\u09A4\u09BE\u09B9\u09BE",
        "\u09A4\u09BE\u09B9\u09BE\u09A4\u09C7",
        "\u09A4\u09BE\u09B9\u09BE\u09B0",
        "\u09A4\u09BF\u09A8\u0990",
        "\u09A4\u09BF\u09A8\u09BF",
        "\u09A4\u09BF\u09A8\u09BF\u0993",
        "\u09A4\u09C1\u09AE\u09BF",
        "\u09A4\u09C1\u09B2\u09C7",
        "\u09A4\u09C7\u09AE\u09A8",
        "\u09A4\u09CB",
        "\u09A4\u09CB\u09AE\u09BE\u09B0",
        "\u09A5\u09BE\u0995\u09AC\u09C7",
        "\u09A5\u09BE\u0995\u09AC\u09C7\u09A8",
        "\u09A5\u09BE\u0995\u09BE",
        "\u09A5\u09BE\u0995\u09BE\u09AF\u09BC",
        "\u09A5\u09BE\u0995\u09C7",
        "\u09A5\u09BE\u0995\u09C7\u09A8",
        "\u09A5\u09C7\u0995\u09C7",
        "\u09A5\u09C7\u0995\u09C7\u0987",
        "\u09A5\u09C7\u0995\u09C7\u0993",
        "\u09A6\u09BF\u0995\u09C7",
        "\u09A6\u09BF\u09A4\u09C7",
        "\u09A6\u09BF\u09A8",
        "\u09A6\u09BF\u09AF\u09BC\u09C7",
        "\u09A6\u09BF\u09AF\u09BC\u09C7\u099B\u09C7",
        "\u09A6\u09BF\u09AF\u09BC\u09C7\u099B\u09C7\u09A8",
        "\u09A6\u09BF\u09B2\u09C7\u09A8",
        "\u09A6\u09C1",
        "\u09A6\u09C1\u0987",
        "\u09A6\u09C1\u099F\u09BF",
        "\u09A6\u09C1\u099F\u09CB",
        "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE",
        "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE\u09B0",
        "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE",
        "\u09A6\u09C7\u0996\u09A4\u09C7",
        "\u09A6\u09C7\u0996\u09BE",
        "\u09A6\u09C7\u0996\u09C7",
        "\u09A6\u09C7\u09A8",
        "\u09A6\u09C7\u09AF\u09BC",
        "\u09A6\u09CD\u09AC\u09BE\u09B0\u09BE",
        "\u09A7\u09B0\u09BE",
        "\u09A7\u09B0\u09C7",
        "\u09A7\u09BE\u09AE\u09BE\u09B0",
        "\u09A8\u09A4\u09C1\u09A8",
        "\u09A8\u09AF\u09BC",
        "\u09A8\u09BE",
        "\u09A8\u09BE\u0987",
        "\u09A8\u09BE\u0995\u09BF",
        "\u09A8\u09BE\u0997\u09BE\u09A6",
        "\u09A8\u09BE\u09A8\u09BE",
        "\u09A8\u09BF\u099C\u09C7",
        "\u09A8\u09BF\u099C\u09C7\u0987",
        "\u09A8\u09BF\u099C\u09C7\u09A6\u09C7\u09B0",
        "\u09A8\u09BF\u099C\u09C7\u09B0",
        "\u09A8\u09BF\u09A4\u09C7",
        "\u09A8\u09BF\u09AF\u09BC\u09C7",
        "\u09A8\u09BF\u09AF\u09BC\u09C7",
        "\u09A8\u09C7\u0987",
        "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE",
        "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE\u09B0",
        "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE",
        "\u09A8\u09AF\u09BC",
        "\u09AA\u0995\u09CD\u09B7\u09C7",
        "\u09AA\u09B0",
        "\u09AA\u09B0\u09C7",
        "\u09AA\u09B0\u09C7\u0987",
        "\u09AA\u09B0\u09C7\u0993",
        "\u09AA\u09B0\u09CD\u09AF\u09A8\u09CD\u09A4",
        "\u09AA\u09BE\u0993\u09AF\u09BC\u09BE",
        "\u09AA\u09BE\u099A",
        "\u09AA\u09BE\u09B0\u09BF",
        "\u09AA\u09BE\u09B0\u09C7",
        "\u09AA\u09BE\u09B0\u09C7\u09A8",
        "\u09AA\u09BF",
        "\u09AA\u09C7\u09AF\u09BC\u09C7",
        "\u09AA\u09C7\u09AF\u09BC\u09CD\u09B0\u09CD",
        "\u09AA\u09CD\u09B0\u09A4\u09BF",
        "\u09AA\u09CD\u09B0\u09A5\u09AE",
        "\u09AA\u09CD\u09B0\u09AD\u09C3\u09A4\u09BF",
        "\u09AA\u09CD\u09B0\u09AF\u09A8\u09CD\u09A4",
        "\u09AA\u09CD\u09B0\u09BE\u09A5\u09AE\u09BF\u0995",
        "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC",
        "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC",
        "\u09AB\u09B2\u09C7",
        "\u09AB\u09BF\u09B0\u09C7",
        "\u09AB\u09C7\u09B0",
        "\u09AC\u0995\u09CD\u09A4\u09AC\u09CD\u09AF",
        "\u09AC\u09A6\u09B2\u09C7",
        "\u09AC\u09A8",
        "\u09AC\u09B0\u0982",
        "\u09AC\u09B2\u09A4\u09C7",
        "\u09AC\u09B2\u09B2",
        "\u09AC\u09B2\u09B2\u09C7\u09A8",
        "\u09AC\u09B2\u09BE",
        "\u09AC\u09B2\u09C7",
        "\u09AC\u09B2\u09C7\u099B\u09C7\u09A8",
        "\u09AC\u09B2\u09C7\u09A8",
        "\u09AC\u09B8\u09C7",
        "\u09AC\u09B9\u09C1",
        "\u09AC\u09BE",
        "\u09AC\u09BE\u09A6\u09C7",
        "\u09AC\u09BE\u09B0",
        "\u09AC\u09BF",
        "\u09AC\u09BF\u09A8\u09BE",
        "\u09AC\u09BF\u09AD\u09BF\u09A8\u09CD\u09A8",
        "\u09AC\u09BF\u09B6\u09C7\u09B7",
        "\u09AC\u09BF\u09B7\u09AF\u09BC\u099F\u09BF",
        "\u09AC\u09C7\u09B6",
        "\u09AC\u09C7\u09B6\u09BF",
        "\u09AC\u09CD\u09AF\u09AC\u09B9\u09BE\u09B0",
        "\u09AC\u09CD\u09AF\u09BE\u09AA\u09BE\u09B0\u09C7",
        "\u09AD\u09BE\u09AC\u09C7",
        "\u09AD\u09BE\u09AC\u09C7\u0987",
        "\u09AE\u09A4\u09CB",
        "\u09AE\u09A4\u09CB\u0987",
        "\u09AE\u09A7\u09CD\u09AF\u09AD\u09BE\u0997\u09C7",
        "\u09AE\u09A7\u09CD\u09AF\u09C7",
        "\u09AE\u09A7\u09CD\u09AF\u09C7\u0987",
        "\u09AE\u09A7\u09CD\u09AF\u09C7\u0993",
        "\u09AE\u09A8\u09C7",
        "\u09AE\u09BE\u09A4\u09CD\u09B0",
        "\u09AE\u09BE\u09A7\u09CD\u09AF\u09AE\u09C7",
        "\u09AE\u09CB\u099F",
        "\u09AE\u09CB\u099F\u09C7\u0987",
        "\u09AF\u0996\u09A8",
        "\u09AF\u09A4",
        "\u09AF\u09A4\u099F\u09BE",
        "\u09AF\u09A5\u09C7\u09B7\u09CD\u099F",
        "\u09AF\u09A6\u09BF",
        "\u09AF\u09A6\u09BF\u0993",
        "\u09AF\u09BE",
        "\u09AF\u09BE\u0981\u09B0",
        "\u09AF\u09BE\u0981\u09B0\u09BE",
        "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE",
        "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE\u09B0",
        "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE",
        "\u09AF\u09BE\u0995\u09C7",
        "\u09AF\u09BE\u099A\u09CD\u099B\u09C7",
        "\u09AF\u09BE\u09A4\u09C7",
        "\u09AF\u09BE\u09A6\u09C7\u09B0",
        "\u09AF\u09BE\u09A8",
        "\u09AF\u09BE\u09AC\u09C7",
        "\u09AF\u09BE\u09AF\u09BC",
        "\u09AF\u09BE\u09B0",
        "\u09AF\u09BE\u09B0\u09BE",
        "\u09AF\u09BF\u09A8\u09BF",
        "\u09AF\u09C7",
        "\u09AF\u09C7\u0996\u09BE\u09A8\u09C7",
        "\u09AF\u09C7\u09A4\u09C7",
        "\u09AF\u09C7\u09A8",
        "\u09AF\u09C7\u09AE\u09A8",
        "\u09B0",
        "\u09B0\u0995\u09AE",
        "\u09B0\u09AF\u09BC\u09C7\u099B\u09C7",
        "\u09B0\u09BE\u0996\u09BE",
        "\u09B0\u09C7\u0996\u09C7",
        "\u09B2\u0995\u09CD\u09B7",
        "\u09B6\u09C1\u09A7\u09C1",
        "\u09B6\u09C1\u09B0\u09C1",
        "\u09B8\u0999\u09CD\u0997\u09C7",
        "\u09B8\u0999\u09CD\u0997\u09C7\u0993",
        "\u09B8\u09AC",
        "\u09B8\u09AC\u09BE\u09B0",
        "\u09B8\u09AE\u09B8\u09CD\u09A4",
        "\u09B8\u09AE\u09CD\u09AA\u09CD\u09B0\u09A4\u09BF",
        "\u09B8\u09B9",
        "\u09B8\u09B9\u09BF\u09A4",
        "\u09B8\u09BE\u09A7\u09BE\u09B0\u09A3",
        "\u09B8\u09BE\u09AE\u09A8\u09C7",
        "\u09B8\u09BF",
        "\u09B8\u09C1\u09A4\u09B0\u09BE\u0982",
        "\u09B8\u09C7",
        "\u09B8\u09C7\u0987",
        "\u09B8\u09C7\u0996\u09BE\u09A8",
        "\u09B8\u09C7\u0996\u09BE\u09A8\u09C7",
        "\u09B8\u09C7\u099F\u09BE",
        "\u09B8\u09C7\u099F\u09BE\u0987",
        "\u09B8\u09C7\u099F\u09BE\u0993",
        "\u09B8\u09C7\u099F\u09BF",
        "\u09B8\u09CD\u09AA\u09B7\u09CD\u099F",
        "\u09B8\u09CD\u09AC\u09AF\u09BC\u0982",
        "\u09B9\u0987\u09A4\u09C7",
        "\u09B9\u0987\u09AC\u09C7",
        "\u09B9\u0987\u09AF\u09BC\u09BE",
        "\u09B9\u0993\u09AF\u09BC\u09BE",
        "\u09B9\u0993\u09AF\u09BC\u09BE\u09AF\u09BC",
        "\u09B9\u0993\u09AF\u09BC\u09BE\u09B0",
        "\u09B9\u099A\u09CD\u099B\u09C7",
        "\u09B9\u09A4",
        "\u09B9\u09A4\u09C7",
        "\u09B9\u09A4\u09C7\u0987",
        "\u09B9\u09A8",
        "\u09B9\u09AC\u09C7",
        "\u09B9\u09AC\u09C7\u09A8",
        "\u09B9\u09AF\u09BC",
        "\u09B9\u09AF\u09BC\u09A4\u09CB",
        "\u09B9\u09AF\u09BC\u09A8\u09BF",
        "\u09B9\u09AF\u09BC\u09C7",
        "\u09B9\u09AF\u09BC\u09C7\u0987",
        "\u09B9\u09AF\u09BC\u09C7\u099B\u09BF\u09B2",
        "\u09B9\u09AF\u09BC\u09C7\u099B\u09C7",
        "\u09B9\u09AF\u09BC\u09C7\u099B\u09C7\u09A8",
        "\u09B9\u09B2",
        "\u09B9\u09B2\u09C7",
        "\u09B9\u09B2\u09C7\u0987",
        "\u09B9\u09B2\u09C7\u0993",
        "\u09B9\u09B2\u09CB",
        "\u09B9\u09BE\u099C\u09BE\u09B0",
        "\u09B9\u09BF\u09B8\u09BE\u09AC\u09C7",
        "\u09B9\u09C8\u09B2\u09C7",
        "\u09B9\u09CB\u0995",
        "\u09B9\u09AF\u09BC"
      ];
      const bre = [
        "a",
        "ainda",
        "alem",
        "ambas",
        "ambos",
        "antes",
        "ao",
        "aonde",
        "aos",
        "apos",
        "aquele",
        "aqueles",
        "as",
        "assim",
        "com",
        "como",
        "contra",
        "contudo",
        "cuja",
        "cujas",
        "cujo",
        "cujos",
        "da",
        "das",
        "de",
        "dela",
        "dele",
        "deles",
        "demais",
        "depois",
        "desde",
        "desta",
        "deste",
        "dispoe",
        "dispoem",
        "diversa",
        "diversas",
        "diversos",
        "do",
        "dos",
        "durante",
        "e",
        "ela",
        "elas",
        "ele",
        "eles",
        "em",
        "entao",
        "entre",
        "essa",
        "essas",
        "esse",
        "esses",
        "esta",
        "estas",
        "este",
        "estes",
        "ha",
        "isso",
        "isto",
        "logo",
        "mais",
        "mas",
        "mediante",
        "menos",
        "mesma",
        "mesmas",
        "mesmo",
        "mesmos",
        "na",
        "nao",
        "nas",
        "nem",
        "nesse",
        "neste",
        "nos",
        "o",
        "os",
        "ou",
        "outra",
        "outras",
        "outro",
        "outros",
        "pelas",
        "pelo",
        "pelos",
        "perante",
        "pois",
        "por",
        "porque",
        "portanto",
        "propios",
        "proprio",
        "quais",
        "qual",
        "qualquer",
        "quando",
        "quanto",
        "que",
        "quem",
        "quer",
        "se",
        "seja",
        "sem",
        "sendo",
        "seu",
        "seus",
        "sob",
        "sobre",
        "sua",
        "suas",
        "tal",
        "tambem",
        "teu",
        "teus",
        "toda",
        "todas",
        "todo",
        "todos",
        "tua",
        "tuas",
        "tudo",
        "um",
        "uma",
        "umas",
        "uns"
      ];
      const bul = [
        "\u0430",
        "\u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0447\u0435\u043D",
        "\u0430\u0437",
        "\u0430\u043A\u043E",
        "\u0430\u043B\u0430",
        "\u0431\u0435",
        "\u0431\u0435\u0437",
        "\u0431\u0435\u0448\u0435",
        "\u0431\u0438",
        "\u0431\u0438\u0432\u0448",
        "\u0431\u0438\u0432\u0448\u0430",
        "\u0431\u0438\u0432\u0448\u043E",
        "\u0431\u0438\u043B",
        "\u0431\u0438\u043B\u0430",
        "\u0431\u0438\u043B\u0438",
        "\u0431\u0438\u043B\u043E",
        "\u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F",
        "\u0431\u043B\u0438\u0437\u043E",
        "\u0431\u044A\u0434\u0430\u0442",
        "\u0431\u044A\u0434\u0435",
        "\u0431\u044F\u0445\u0430",
        "\u0432",
        "\u0432\u0430\u0441",
        "\u0432\u0430\u0448",
        "\u0432\u0430\u0448\u0430",
        "\u0432\u0435\u0440\u043E\u044F\u0442\u043D\u043E",
        "\u0432\u0435\u0447\u0435",
        "\u0432\u0437\u0435\u043C\u0430",
        "\u0432\u0438",
        "\u0432\u0438\u0435",
        "\u0432\u0438\u043D\u0430\u0433\u0438",
        "\u0432\u043D\u0438\u043C\u0430\u0432\u0430",
        "\u0432\u0440\u0435\u043C\u0435",
        "\u0432\u0441\u0435",
        "\u0432\u0441\u0435\u043A\u0438",
        "\u0432\u0441\u0438\u0447\u043A\u0438",
        "\u0432\u0441\u0438\u0447\u043A\u043E",
        "\u0432\u0441\u044F\u043A\u0430",
        "\u0432\u044A\u0432",
        "\u0432\u044A\u043F\u0440\u0435\u043A\u0438",
        "\u0432\u044A\u0440\u0445\u0443",
        "\u0433",
        "\u0433\u0438",
        "\u0433\u043B\u0430\u0432\u0435\u043D",
        "\u0433\u043B\u0430\u0432\u043D\u0430",
        "\u0433\u043B\u0430\u0432\u043D\u043E",
        "\u0433\u043B\u0430\u0441",
        "\u0433\u043E",
        "\u0433\u043E\u0434\u0438\u043D\u0430",
        "\u0433\u043E\u0434\u0438\u043D\u0438",
        "\u0433\u043E\u0434\u0438\u0448\u0435\u043D",
        "\u0434",
        "\u0434\u0430",
        "\u0434\u0430\u043B\u0438",
        "\u0434\u0432\u0430",
        "\u0434\u0432\u0430\u043C\u0430",
        "\u0434\u0432\u0430\u043C\u0430\u0442\u0430",
        "\u0434\u0432\u0435",
        "\u0434\u0432\u0435\u0442\u0435",
        "\u0434\u0435\u043D",
        "\u0434\u043D\u0435\u0441",
        "\u0434\u043D\u0438",
        "\u0434\u043E",
        "\u0434\u043E\u0431\u0440\u0430",
        "\u0434\u043E\u0431\u0440\u0435",
        "\u0434\u043E\u0431\u0440\u043E",
        "\u0434\u043E\u0431\u044A\u0440",
        "\u0434\u043E\u043A\u0430\u0442\u043E",
        "\u0434\u043E\u043A\u043E\u0433\u0430",
        "\u0434\u043E\u0440\u0438",
        "\u0434\u043E\u0441\u0435\u0433\u0430",
        "\u0434\u043E\u0441\u0442\u0430",
        "\u0434\u0440\u0443\u0433",
        "\u0434\u0440\u0443\u0433\u0430",
        "\u0434\u0440\u0443\u0433\u0438",
        "\u0435",
        "\u0435\u0432\u0442\u0438\u043D",
        "\u0435\u0434\u0432\u0430",
        "\u0435\u0434\u0438\u043D",
        "\u0435\u0434\u043D\u0430",
        "\u0435\u0434\u043D\u0430\u043A\u0432\u0430",
        "\u0435\u0434\u043D\u0430\u043A\u0432\u0438",
        "\u0435\u0434\u043D\u0430\u043A\u044A\u0432",
        "\u0435\u0434\u043D\u043E",
        "\u0435\u043A\u0438\u043F",
        "\u0435\u0442\u043E",
        "\u0436\u0438\u0432\u043E\u0442",
        "\u0437\u0430",
        "\u0437\u0430\u0431\u0430\u0432\u044F\u043C",
        "\u0437\u0430\u0434",
        "\u0437\u0430\u0435\u0434\u043D\u043E",
        "\u0437\u0430\u0440\u0430\u0434\u0438",
        "\u0437\u0430\u0441\u0435\u0433\u0430",
        "\u0437\u0430\u0441\u043F\u0430\u043B",
        "\u0437\u0430\u0442\u043E\u0432\u0430",
        "\u0437\u0430\u0449\u043E",
        "\u0437\u0430\u0449\u043E\u0442\u043E",
        "\u0438",
        "\u0438\u0437",
        "\u0438\u043B\u0438",
        "\u0438\u043C",
        "\u0438\u043C\u0430",
        "\u0438\u043C\u0430\u0442",
        "\u0438\u0441\u043A\u0430",
        "\u0439",
        "\u043A\u0430\u0437\u0430",
        "\u043A\u0430\u043A",
        "\u043A\u0430\u043A\u0432\u0430",
        "\u043A\u0430\u043A\u0432\u043E",
        "\u043A\u0430\u043A\u0442\u043E",
        "\u043A\u0430\u043A\u044A\u0432",
        "\u043A\u0430\u0442\u043E",
        "\u043A\u043E\u0433\u0430",
        "\u043A\u043E\u0433\u0430\u0442\u043E",
        "\u043A\u043E\u0435\u0442\u043E",
        "\u043A\u043E\u0438\u0442\u043E",
        "\u043A\u043E\u0439",
        "\u043A\u043E\u0439\u0442\u043E",
        "\u043A\u043E\u043B\u043A\u043E",
        "\u043A\u043E\u044F\u0442\u043E",
        "\u043A\u044A\u0434\u0435",
        "\u043A\u044A\u0434\u0435\u0442\u043E",
        "\u043A\u044A\u043C",
        "\u043B\u0435\u0441\u0435\u043D",
        "\u043B\u0435\u0441\u043D\u043E",
        "\u043B\u0438",
        "\u043B\u043E\u0448",
        "\u043C",
        "\u043C\u0430\u0439",
        "\u043C\u0430\u043B\u043A\u043E",
        "\u043C\u0435",
        "\u043C\u0435\u0436\u0434\u0443",
        "\u043C\u0435\u043A",
        "\u043C\u0435\u043D",
        "\u043C\u0435\u0441\u0435\u0446",
        "\u043C\u0438",
        "\u043C\u043D\u043E\u0433\u043E",
        "\u043C\u043D\u043E\u0437\u0438\u043D\u0430",
        "\u043C\u043E\u0433\u0430",
        "\u043C\u043E\u0433\u0430\u0442",
        "\u043C\u043E\u0436\u0435",
        "\u043C\u043E\u043A\u044A\u0440",
        "\u043C\u043E\u043B\u044F",
        "\u043C\u043E\u043C\u0435\u043D\u0442\u0430",
        "\u043C\u0443",
        "\u043D",
        "\u043D\u0430",
        "\u043D\u0430\u0434",
        "\u043D\u0430\u0437\u0430\u0434",
        "\u043D\u0430\u0439",
        "\u043D\u0430\u043F\u0440\u0430\u0432\u0438",
        "\u043D\u0430\u043F\u0440\u0435\u0434",
        "\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440",
        "\u043D\u0430\u0441",
        "\u043D\u0435",
        "\u043D\u0435\u0433\u043E",
        "\u043D\u0435\u0449\u043E",
        "\u043D\u0435\u044F",
        "\u043D\u0438",
        "\u043D\u0438\u0435",
        "\u043D\u0438\u043A\u043E\u0439",
        "\u043D\u0438\u0442\u043E",
        "\u043D\u0438\u0449\u043E",
        "\u043D\u043E",
        "\u043D\u043E\u0432",
        "\u043D\u043E\u0432\u0430",
        "\u043D\u043E\u0432\u0438",
        "\u043D\u043E\u0432\u0438\u043D\u0430",
        "\u043D\u044F\u043A\u043E\u0438",
        "\u043D\u044F\u043A\u043E\u0439",
        "\u043D\u044F\u043A\u043E\u043B\u043A\u043E",
        "\u043D\u044F\u043C\u0430",
        "\u043E\u0431\u0430\u0447\u0435",
        "\u043E\u043A\u043E\u043B\u043E",
        "\u043E\u0441\u0432\u0435\u043D",
        "\u043E\u0441\u043E\u0431\u0435\u043D\u043E",
        "\u043E\u0442",
        "\u043E\u0442\u0433\u043E\u0440\u0435",
        "\u043E\u0442\u043D\u043E\u0432\u043E",
        "\u043E\u0449\u0435",
        "\u043F\u0430\u043A",
        "\u043F\u043E",
        "\u043F\u043E\u0432\u0435\u0447\u0435",
        "\u043F\u043E\u0432\u0435\u0447\u0435\u0442\u043E",
        "\u043F\u043E\u0434",
        "\u043F\u043E\u043D\u0435",
        "\u043F\u043E\u0440\u0430\u0434\u0438",
        "\u043F\u043E\u0441\u043B\u0435",
        "\u043F\u043E\u0447\u0442\u0438",
        "\u043F\u0440\u0430\u0432\u0438",
        "\u043F\u0440\u0435\u0434",
        "\u043F\u0440\u0435\u0434\u0438",
        "\u043F\u0440\u0435\u0437",
        "\u043F\u0440\u0438",
        "\u043F\u044A\u043A",
        "\u043F\u044A\u0440\u0432\u0430\u0442\u0430",
        "\u043F\u044A\u0440\u0432\u0438",
        "\u043F\u044A\u0440\u0432\u043E",
        "\u043F\u044A\u0442\u0438",
        "\u0440\u0430\u0432\u0435\u043D",
        "\u0440\u0430\u0432\u043D\u0430",
        "\u0441",
        "\u0441\u0430",
        "\u0441\u0430\u043C",
        "\u0441\u0430\u043C\u043E",
        "\u0441\u0435",
        "\u0441\u0435\u0433\u0430",
        "\u0441\u0438",
        "\u0441\u0438\u043D",
        "\u0441\u043A\u043E\u0440\u043E",
        "\u0441\u043B\u0435\u0434",
        "\u0441\u043B\u0435\u0434\u0432\u0430\u0449",
        "\u0441\u043C\u0435",
        "\u0441\u043C\u044F\u0445",
        "\u0441\u043F\u043E\u0440\u0435\u0434",
        "\u0441\u0440\u0435\u0434",
        "\u0441\u0440\u0435\u0449\u0443",
        "\u0441\u0442\u0435",
        "\u0441\u044A\u043C",
        "\u0441\u044A\u0441",
        "\u0441\u044A\u0449\u043E",
        "\u0442",
        "\u0442.\u043D.",
        "\u0442\u0430\u0437\u0438",
        "\u0442\u0430\u043A\u0430",
        "\u0442\u0430\u043A\u0438\u0432\u0430",
        "\u0442\u0430\u043A\u044A\u0432",
        "\u0442\u0430\u043C",
        "\u0442\u0432\u043E\u0439",
        "\u0442\u0435",
        "\u0442\u0435\u0437\u0438",
        "\u0442\u0438",
        "\u0442\u043E",
        "\u0442\u043E\u0432\u0430",
        "\u0442\u043E\u0433\u0430\u0432\u0430",
        "\u0442\u043E\u0437\u0438",
        "\u0442\u043E\u0439",
        "\u0442\u043E\u043B\u043A\u043E\u0432\u0430",
        "\u0442\u043E\u0447\u043D\u043E",
        "\u0442\u0440\u0438",
        "\u0442\u0440\u044F\u0431\u0432\u0430",
        "\u0442\u0443\u043A",
        "\u0442\u044A\u0439",
        "\u0442\u044F",
        "\u0442\u044F\u0445",
        "\u0443",
        "\u0443\u0442\u0440\u0435",
        "\u0445\u0430\u0440\u0435\u0441\u0432\u0430",
        "\u0445\u0438\u043B\u044F\u0434\u0438",
        "\u0447",
        "\u0447\u0430\u0441\u0430",
        "\u0447\u0435",
        "\u0447\u0435\u0441\u0442\u043E",
        "\u0447\u0440\u0435\u0437",
        "\u0449\u0435",
        "\u0449\u043E\u043C",
        "\u044E\u043C\u0440\u0443\u043A",
        "\u044F",
        "\u044F\u043A"
      ];
      const cat = [
        "a",
        "abans",
        "ac\xED",
        "ah",
        "aix\xED",
        "aix\xF2",
        "al",
        "aleshores",
        "algun",
        "alguna",
        "algunes",
        "alguns",
        "alhora",
        "all\xE0",
        "all\xED",
        "all\xF2",
        "als",
        "altra",
        "altre",
        "altres",
        "amb",
        "ambdues",
        "ambd\xF3s",
        "apa",
        "aquell",
        "aquella",
        "aquelles",
        "aquells",
        "aquest",
        "aquesta",
        "aquestes",
        "aquests",
        "aqu\xED",
        "baix",
        "cada",
        "cadascuna",
        "cadascunes",
        "cadascuns",
        "cadasc\xFA",
        "com",
        "contra",
        "d'un",
        "d'una",
        "d'unes",
        "d'uns",
        "dalt",
        "de",
        "del",
        "dels",
        "des",
        "despr\xE9s",
        "dins",
        "dintre",
        "donat",
        "doncs",
        "durant",
        "e",
        "eh",
        "el",
        "els",
        "em",
        "en",
        "encara",
        "ens",
        "entre",
        "eren",
        "es",
        "esta",
        "estaven",
        "esteu",
        "est\xE0",
        "est\xE0vem",
        "est\xE0veu",
        "et",
        "etc",
        "ets",
        "fins",
        "fora",
        "gaireb\xE9",
        "ha",
        "han",
        "has",
        "havia",
        "he",
        "hem",
        "heu",
        "hi",
        "ho",
        "i",
        "igual",
        "iguals",
        "ja",
        "l'hi",
        "la",
        "les",
        "li",
        "li'n",
        "llavors",
        "m'he",
        "ma",
        "mal",
        "malgrat",
        "mateix",
        "mateixa",
        "mateixes",
        "mateixos",
        "me",
        "mentre",
        "meu",
        "meus",
        "meva",
        "meves",
        "molt",
        "molta",
        "moltes",
        "molts",
        "mon",
        "mons",
        "m\xE9s",
        "n'he",
        "n'hi",
        "ne",
        "ni",
        "no",
        "nogensmenys",
        "nom\xE9s",
        "nosaltres",
        "nostra",
        "nostre",
        "nostres",
        "o",
        "oh",
        "oi",
        "on",
        "pas",
        "pel",
        "pels",
        "per",
        "perqu\xE8",
        "per\xF2",
        "poc",
        "poca",
        "pocs",
        "poques",
        "potser",
        "propi",
        "qual",
        "quals",
        "quan",
        "quant",
        "que",
        "quelcom",
        "qui",
        "quin",
        "quina",
        "quines",
        "quins",
        "qu\xE8",
        "s'ha",
        "s'han",
        "sa",
        "semblant",
        "semblants",
        "ses",
        "seu",
        "seus",
        "seva",
        "seves",
        "si",
        "sobre",
        "sobretot",
        "solament",
        "sols",
        "son",
        "sons",
        "sota",
        "sou",
        "s\xF3c",
        "s\xF3n",
        "t'ha",
        "t'han",
        "t'he",
        "ta",
        "tal",
        "tamb\xE9",
        "tampoc",
        "tan",
        "tant",
        "tanta",
        "tantes",
        "teu",
        "teus",
        "teva",
        "teves",
        "ton",
        "tons",
        "tot",
        "tota",
        "totes",
        "tots",
        "un",
        "una",
        "unes",
        "uns",
        "us",
        "va",
        "vaig",
        "vam",
        "van",
        "vas",
        "veu",
        "vosaltres",
        "vostra",
        "vostre",
        "vostres",
        "\xE9rem",
        "\xE9reu",
        "\xE9s"
      ];
      const zho = [
        "\u7684",
        "\u5730",
        "\u5F97",
        "\u548C",
        "\u8DDF",
        "\u4E0E",
        "\u53CA",
        "\u5411",
        "\u5E76",
        "\u7B49",
        "\u66F4",
        "\u5DF2",
        "\u542B",
        "\u505A",
        "\u6211",
        "\u4F60",
        "\u4ED6",
        "\u5979",
        "\u4EEC",
        "\u67D0",
        "\u8BE5",
        "\u5404",
        "\u6BCF",
        "\u8FD9",
        "\u90A3",
        "\u54EA",
        "\u4EC0",
        "\u4E48",
        "\u8C01",
        "\u5E74",
        "\u6708",
        "\u65E5",
        "\u65F6",
        "\u5206",
        "\u79D2",
        "\u51E0",
        "\u591A",
        "\u6765",
        "\u5728",
        "\u5C31",
        "\u53C8",
        "\u5F88",
        "\u5462",
        "\u5427",
        "\u5417",
        "\u4E86",
        "\u561B",
        "\u54C7",
        "\u513F",
        "\u54FC",
        "\u554A",
        "\u55EF",
        "\u662F",
        "\u7740",
        "\u90FD",
        "\u4E0D",
        "\u8BF4",
        "\u4E5F",
        "\u770B",
        "\u628A",
        "\u8FD8",
        "\u4E2A",
        "\u6709",
        "\u5C0F",
        "\u5230",
        "\u4E00",
        "\u4E3A",
        "\u4E2D",
        "\u4E8E",
        "\u5BF9",
        "\u4F1A",
        "\u4E4B",
        "\u7B2C",
        "\u6B64",
        "\u6216",
        "\u5171",
        "\u6309",
        "\u8BF7"
      ];
      const hrv = [
        "a",
        "ako",
        "ali",
        "bi",
        "bih",
        "bila",
        "bili",
        "bilo",
        "bio",
        "bismo",
        "biste",
        "biti",
        "bumo",
        "da",
        "do",
        "du\u017E",
        "ga",
        "ho\u0107e",
        "ho\u0107emo",
        "ho\u0107ete",
        "ho\u0107e\u0161",
        "ho\u0107u",
        "i",
        "iako",
        "ih",
        "ili",
        "iz",
        "ja",
        "je",
        "jedna",
        "jedne",
        "jedno",
        "jer",
        "jesam",
        "jesi",
        "jesmo",
        "jest",
        "jeste",
        "jesu",
        "jim",
        "joj",
        "jo\u0161",
        "ju",
        "kada",
        "kako",
        "kao",
        "koja",
        "koje",
        "koji",
        "kojima",
        "koju",
        "kroz",
        "li",
        "me",
        "mene",
        "meni",
        "mi",
        "mimo",
        "moj",
        "moja",
        "moje",
        "mu",
        "na",
        "nad",
        "nakon",
        "nam",
        "nama",
        "nas",
        "na\u0161",
        "na\u0161a",
        "na\u0161e",
        "na\u0161eg",
        "ne",
        "nego",
        "neka",
        "neki",
        "nekog",
        "neku",
        "nema",
        "netko",
        "ne\u0107e",
        "ne\u0107emo",
        "ne\u0107ete",
        "ne\u0107e\u0161",
        "ne\u0107u",
        "ne\u0161to",
        "ni",
        "nije",
        "nikoga",
        "nikoje",
        "nikoju",
        "nisam",
        "nisi",
        "nismo",
        "niste",
        "nisu",
        "njega",
        "njegov",
        "njegova",
        "njegovo",
        "njemu",
        "njezin",
        "njezina",
        "njezino",
        "njih",
        "njihov",
        "njihova",
        "njihovo",
        "njim",
        "njima",
        "njoj",
        "nju",
        "no",
        "o",
        "od",
        "odmah",
        "on",
        "ona",
        "oni",
        "ono",
        "ova",
        "pa",
        "pak",
        "po",
        "pod",
        "pored",
        "prije",
        "s",
        "sa",
        "sam",
        "samo",
        "se",
        "sebe",
        "sebi",
        "si",
        "smo",
        "ste",
        "su",
        "sve",
        "svi",
        "svog",
        "svoj",
        "svoja",
        "svoje",
        "svom",
        "ta",
        "tada",
        "taj",
        "tako",
        "te",
        "tebe",
        "tebi",
        "ti",
        "to",
        "toj",
        "tome",
        "tu",
        "tvoj",
        "tvoja",
        "tvoje",
        "u",
        "uz",
        "vam",
        "vama",
        "vas",
        "va\u0161",
        "va\u0161a",
        "va\u0161e",
        "ve\u0107",
        "vi",
        "vrlo",
        "za",
        "zar",
        "\u0107e",
        "\u0107emo",
        "\u0107ete",
        "\u0107e\u0161",
        "\u0107u",
        "\u0161to"
      ];
      const ces = [
        "a",
        "aby",
        "ahoj",
        "aj",
        "ale",
        "anebo",
        "ani",
        "ano",
        "asi",
        "aspo\u0148",
        "atd",
        "atp",
        "a\u010Dkoli",
        "a\u017E",
        "bez",
        "beze",
        "bl\xEDzko",
        "bohu\u017Eel",
        "brzo",
        "bude",
        "budem",
        "budeme",
        "budete",
        "bude\u0161",
        "budou",
        "budu",
        "by",
        "byl",
        "byla",
        "byli",
        "bylo",
        "byly",
        "bys",
        "b\xFDt",
        "b\u011Bhem",
        "chce",
        "chceme",
        "chcete",
        "chce\u0161",
        "chci",
        "cht\xEDt",
        "cht\u011Bj\xED",
        "chut'",
        "chuti",
        "co",
        "co\u017E",
        "cz",
        "daleko",
        "dal\u0161\xED",
        "den",
        "deset",
        "devaten\xE1ct",
        "dev\u011Bt",
        "dnes",
        "do",
        "dobr\xFD",
        "docela",
        "dva",
        "dvacet",
        "dvan\xE1ct",
        "dv\u011B",
        "d\xE1l",
        "d\xE1le",
        "d\u011Bkovat",
        "d\u011Bkujeme",
        "d\u011Bkuji",
        "ho",
        "hodn\u011B",
        "i",
        "jak",
        "jakmile",
        "jako",
        "jako\u017E",
        "jde",
        "je",
        "jeden",
        "jeden\xE1ct",
        "jedna",
        "jedno",
        "jednou",
        "jedou",
        "jeho",
        "jeho\u017E",
        "jej",
        "jejich",
        "jej\xED",
        "jeliko\u017E",
        "jemu",
        "jen",
        "jenom",
        "jestli",
        "jestli\u017Ee",
        "je\u0161t\u011B",
        "je\u017E",
        "ji",
        "jich",
        "jimi",
        "jinak",
        "jin\xE9",
        "ji\u017E",
        "jsem",
        "jse\u0161",
        "jsi",
        "jsme",
        "jsou",
        "jste",
        "j\xE1",
        "j\xED",
        "j\xEDm",
        "j\xED\u017E",
        "k",
        "kam",
        "kde",
        "kdo",
        "kdy",
        "kdy\u017E",
        "ke",
        "kolik",
        "krom\u011B",
        "kterou",
        "kter\xE1",
        "kter\xE9",
        "kter\xFD",
        "kte\u0159\xED",
        "kv\u016Fli",
        "maj\xED",
        "mezi",
        "mi",
        "mne",
        "mnou",
        "mn\u011B",
        "moc",
        "mohl",
        "mohou",
        "moje",
        "moji",
        "mo\u017En\xE1",
        "mus\xED",
        "my",
        "m\xE1",
        "m\xE1lo",
        "m\xE1m",
        "m\xE1me",
        "m\xE1te",
        "m\xE1\u0161",
        "m\xE9",
        "m\xED",
        "m\xEDt",
        "m\u011B",
        "m\u016Fj",
        "m\u016F\u017Ee",
        "na",
        "nad",
        "nade",
        "napi\u0161te",
        "naproti",
        "na\u010De\u017E",
        "na\u0161e",
        "na\u0161i",
        "ne",
        "nebo",
        "nebyl",
        "nebyla",
        "nebyli",
        "nebyly",
        "ned\u011Blaj\xED",
        "ned\u011Bl\xE1",
        "ned\u011Bl\xE1m",
        "ned\u011Bl\xE1me",
        "ned\u011Bl\xE1te",
        "ned\u011Bl\xE1\u0161",
        "neg",
        "nejsi",
        "nejsou",
        "nemaj\xED",
        "nem\xE1me",
        "nem\xE1te",
        "nem\u011Bl",
        "nen\xED",
        "nesta\u010D\xED",
        "nevad\xED",
        "ne\u017E",
        "nic",
        "nich",
        "nimi",
        "nov\xE9",
        "nov\xFD",
        "nula",
        "n\xE1m",
        "n\xE1mi",
        "n\xE1s",
        "n\xE1\u0161",
        "n\xEDm",
        "n\u011B",
        "n\u011Bco",
        "n\u011Bjak",
        "n\u011Bkde",
        "n\u011Bkdo",
        "n\u011Bmu",
        "n\u011Bmu\u017E",
        "o",
        "od",
        "ode",
        "on",
        "ona",
        "oni",
        "ono",
        "ony",
        "osm",
        "osmn\xE1ct",
        "pak",
        "patn\xE1ct",
        "po",
        "pod",
        "podle",
        "pokud",
        "potom",
        "pouze",
        "pozd\u011B",
        "po\u0159\xE1d",
        "prav\xE9",
        "pro",
        "prost\u011B",
        "pros\xEDm",
        "proti",
        "proto",
        "proto\u017Ee",
        "pro\u010D",
        "prvn\xED",
        "pta",
        "p\u011Bt",
        "p\u0159ed",
        "p\u0159es",
        "p\u0159ese",
        "p\u0159i",
        "p\u0159i\u010Dem\u017E",
        "re",
        "rovn\u011B",
        "s",
        "se",
        "sedm",
        "sedmn\xE1ct",
        "si",
        "skoro",
        "sm\xED",
        "sm\u011Bj\xED",
        "snad",
        "spolu",
        "sta",
        "sto",
        "strana",
        "st\xE9",
        "sv\xE9",
        "sv\xFDch",
        "sv\xFDm",
        "sv\xFDmi",
        "ta",
        "tady",
        "tak",
        "takhle",
        "taky",
        "tak\xE9",
        "tak\u017Ee",
        "tam",
        "tamhle",
        "tamhleto",
        "tamto",
        "tato",
        "tebe",
        "tebou",
        "ted'",
        "tedy",
        "ten",
        "tento",
        "teto",
        "ti",
        "tipy",
        "tis\xEDc",
        "tis\xEDce",
        "to",
        "tob\u011B",
        "tohle",
        "toho",
        "tohoto",
        "tom",
        "tomto",
        "tomu",
        "tomuto",
        "toto",
        "tro\u0161ku",
        "tu",
        "tuto",
        "tvoje",
        "tv\xE1",
        "tv\xE9",
        "tv\u016Fj",
        "ty",
        "tyto",
        "t\xE9ma",
        "t\xEDm",
        "t\xEDmto",
        "t\u011B",
        "t\u011Bm",
        "t\u011Bmu",
        "t\u0159eba",
        "t\u0159i",
        "t\u0159in\xE1ct",
        "u",
        "ur\u010Dit\u011B",
        "u\u017E",
        "v",
        "va\u0161e",
        "va\u0161i",
        "ve",
        "vedle",
        "ve\u010Der",
        "vlastn\u011B",
        "vy",
        "v\xE1m",
        "v\xE1mi",
        "v\xE1s",
        "v\xE1\u0161",
        "v\xEDce",
        "v\u0161ak",
        "v\u0161echno",
        "v\u0161ichni",
        "v\u016Fbec",
        "v\u017Edy",
        "z",
        "za",
        "zat\xEDmco",
        "za\u010D",
        "zda",
        "zde",
        "ze",
        "zpr\xE1vy",
        "zp\u011Bt",
        "\u010Dau",
        "\u010Di",
        "\u010Dl\xE1nku",
        "\u010Dl\xE1nky",
        "\u010Dtrn\xE1ct",
        "\u010Dty\u0159i",
        "\u0161est",
        "\u0161estn\xE1ct",
        "\u017Ee"
      ];
      const dan = [
        "er",
        "jeg",
        "det",
        "du",
        "ikke",
        "i",
        "at",
        "en",
        "og",
        "har",
        "vi",
        "til",
        "p\xE5",
        "hvad",
        "med",
        "mig",
        "s\xE5",
        "for",
        "de",
        "dig",
        "der",
        "den",
        "han",
        "kan",
        "af",
        "vil",
        "var",
        "her",
        "et",
        "skal",
        "ved",
        "nu",
        "men",
        "om",
        "ja",
        "som",
        "nej",
        "min",
        "noget",
        "ham",
        "hun",
        "bare",
        "kom",
        "v\xE6re",
        "din",
        "hvor",
        "dem",
        "ud",
        "os",
        "hvis",
        "m\xE5",
        "se",
        "godt",
        "have",
        "fra",
        "ville",
        "okay",
        "lige",
        "op",
        "alle",
        "lad",
        "hvorfor",
        "sig",
        "hvordan",
        "f\xE5",
        "kunne",
        "eller",
        "hvem",
        "man",
        "bliver",
        "havde",
        "da",
        "ingen",
        "efter",
        "n\xE5r",
        "alt",
        "jo",
        "to",
        "mit",
        "ind",
        "hej",
        "aldrig",
        "lidt",
        "nogen",
        "over",
        "ogs\xE5",
        "mand",
        "far",
        "skulle",
        "selv",
        "f\xE5r",
        "hans",
        "ser",
        "vores",
        "jer",
        "s\xE5dan",
        "dit",
        "kun",
        "deres",
        "ned",
        "mine",
        "komme",
        "tage",
        "denne",
        "sige",
        "dette",
        "blive",
        "helt",
        "fordi",
        "end",
        "tag",
        "f\xF8r",
        "fik",
        "dine"
      ];
      const nld = [
        "aan",
        "af",
        "al",
        "alles",
        "als",
        "altijd",
        "andere",
        "ben",
        "bij",
        "daar",
        "dan",
        "dat",
        "de",
        "der",
        "deze",
        "die",
        "dit",
        "doch",
        "doen",
        "door",
        "dus",
        "een",
        "eens",
        "en",
        "er",
        "ge",
        "geen",
        "geweest",
        "haar",
        "had",
        "heb",
        "hebben",
        "heeft",
        "hem",
        "het",
        "hier",
        "hij",
        "hoe",
        "hun",
        "iemand",
        "iets",
        "ik",
        "in",
        "is",
        "ja",
        "je ",
        "kan",
        "kon",
        "kunnen",
        "maar",
        "me",
        "meer",
        "men",
        "met",
        "mij",
        "mijn",
        "moet",
        "na",
        "naar",
        "niet",
        "niets",
        "nog",
        "nu",
        "of",
        "om",
        "omdat",
        "ons",
        "ook",
        "op",
        "over",
        "reeds",
        "te",
        "tegen",
        "toch",
        "toen",
        "tot",
        "u",
        "uit",
        "uw",
        "van",
        "veel",
        "voor",
        "want",
        "waren",
        "was",
        "wat",
        "we",
        "wel",
        "werd",
        "wezen",
        "wie",
        "wij",
        "wil",
        "worden",
        "zal",
        "ze",
        "zei",
        "zelf",
        "zich",
        "zij",
        "zijn",
        "zo",
        "zonder",
        "zou"
      ];
      const eng2 = [
        "about",
        "after",
        "all",
        "also",
        "am",
        "an",
        "and",
        "another",
        "any",
        "are",
        "as",
        "at",
        "be",
        "because",
        "been",
        "before",
        "being",
        "between",
        "both",
        "but",
        "by",
        "came",
        "can",
        "come",
        "could",
        "did",
        "do",
        "each",
        "for",
        "from",
        "get",
        "got",
        "has",
        "had",
        "he",
        "have",
        "her",
        "here",
        "him",
        "himself",
        "his",
        "how",
        "if",
        "in",
        "into",
        "is",
        "it",
        "like",
        "make",
        "many",
        "me",
        "might",
        "more",
        "most",
        "much",
        "must",
        "my",
        "never",
        "now",
        "of",
        "on",
        "only",
        "or",
        "other",
        "our",
        "out",
        "over",
        "said",
        "same",
        "should",
        "since",
        "some",
        "still",
        "such",
        "take",
        "than",
        "that",
        "the",
        "their",
        "them",
        "then",
        "there",
        "these",
        "they",
        "this",
        "those",
        "through",
        "to",
        "too",
        "under",
        "up",
        "very",
        "was",
        "way",
        "we",
        "well",
        "were",
        "what",
        "where",
        "which",
        "while",
        "who",
        "with",
        "would",
        "you",
        "your",
        "a",
        "i"
      ];
      const epo = [
        "adia\u016D",
        "ajn",
        "al",
        "ankora\u016D",
        "anta\u016D",
        "a\u016D",
        "bonan",
        "bonvole",
        "bonvolu",
        "bv",
        "ci",
        "cia",
        "cian",
        "cin",
        "d-ro",
        "da",
        "de",
        "dek",
        "deka",
        "do",
        "doktor'",
        "doktoro",
        "du",
        "dua",
        "dum",
        "eble",
        "ekz",
        "ekzemple",
        "en",
        "estas",
        "estis",
        "estos",
        "estu",
        "estus",
        "e\u0109",
        "f-no",
        "feli\u0109an",
        "for",
        "fra\u016Dlino",
        "ha",
        "havas",
        "havis",
        "havos",
        "havu",
        "havus",
        "he",
        "ho",
        "hu",
        "ili",
        "ilia",
        "ilian",
        "ilin",
        "inter",
        "io",
        "ion",
        "iu",
        "iujn",
        "iun",
        "ja",
        "jam",
        "je",
        "jes",
        "k",
        "kaj",
        "ke",
        "kio",
        "kion",
        "kiu",
        "kiujn",
        "kiun",
        "kvankam",
        "kvar",
        "kvara",
        "kvaza\u016D",
        "kvin",
        "kvina",
        "la",
        "li",
        "lia",
        "lian",
        "lin",
        "malanta\u016D",
        "male",
        "malgra\u016D",
        "mem",
        "mi",
        "mia",
        "mian",
        "min",
        "minus",
        "na\u016D",
        "na\u016Da",
        "ne",
        "nek",
        "nenio",
        "nenion",
        "neniu",
        "neniun",
        "nepre",
        "ni",
        "nia",
        "nian",
        "nin",
        "nu",
        "nun",
        "nur",
        "ok",
        "oka",
        "oni",
        "onia",
        "onian",
        "onin",
        "plej",
        "pli",
        "plu",
        "plus",
        "por",
        "post",
        "preter",
        "s-no",
        "s-ro",
        "se",
        "sed",
        "sep",
        "sepa",
        "ses",
        "sesa",
        "si",
        "sia",
        "sian",
        "sin",
        "sinjor'",
        "sinjorino",
        "sinjoro",
        "sub",
        "super",
        "supren",
        "sur",
        "tamen",
        "tio",
        "tion",
        "tiu",
        "tiujn",
        "tiun",
        "tra",
        "tri",
        "tria",
        "tuj",
        "tute",
        "unu",
        "unua",
        "ve",
        "ver\u015Dajne",
        "vi",
        "via",
        "vian",
        "vin",
        "\u0109i",
        "\u0109io",
        "\u0109ion",
        "\u0109iu",
        "\u0109iujn",
        "\u0109iun",
        "\u0109u",
        "\u011Di",
        "\u011Dia",
        "\u011Dian",
        "\u011Din",
        "\u011Dis",
        "\u0135us",
        "\u015Di",
        "\u015Dia",
        "\u015Din"
      ];
      const est = [
        "aga",
        "ei",
        "et",
        "ja",
        "jah",
        "kas",
        "kui",
        "k\xF5ik",
        "ma",
        "me",
        "mida",
        "midagi",
        "mind",
        "minu",
        "mis",
        "mu",
        "mul",
        "mulle",
        "nad",
        "nii",
        "oled",
        "olen",
        "oli",
        "oma",
        "on",
        "pole",
        "sa",
        "seda",
        "see",
        "selle",
        "siin",
        "siis",
        "ta",
        "te",
        "\xE4ra"
      ];
      const fin = [
        "ja",
        "on",
        "oli",
        "h\xE4n",
        "vuonna",
        "my\xF6s",
        "joka",
        "se",
        "sek\xE4",
        "sen",
        "mutta",
        "ei",
        "ovat",
        "h\xE4nen",
        "n",
        "kanssa",
        "vuoden",
        "j\xE4lkeen",
        "ett\xE4",
        "s",
        "tai",
        "jonka",
        "jossa",
        "mukaan",
        "kun",
        "muun",
        "muassa",
        "h\xE4net",
        "olivat",
        "kuitenkin",
        "noin",
        "vuosina",
        "aikana",
        "lis\xE4ksi",
        "kaksi",
        "kuin",
        "ollut",
        "the",
        "my\xF6hemmin",
        "eli",
        "vain",
        "teki",
        "mm",
        "jotka",
        "ennen",
        "ensimm\xE4inen",
        "a",
        "9",
        "jo",
        "kuten",
        "yksi",
        "ensimm\xE4isen",
        "vastaan",
        "t\xE4m\xE4n",
        "vuodesta",
        "sit\xE4",
        "voi",
        "luvun",
        "luvulla",
        "of",
        "ole",
        "kauden",
        "osa",
        "esimerkiksi",
        "jolloin",
        "yli",
        "de",
        "kaudella",
        "eri",
        "sill\xE4",
        "kolme",
        "he",
        "vuotta"
      ];
      const fra = [
        "\xEAtre",
        "avoir",
        "faire",
        "a",
        "au",
        "aux",
        "avec",
        "ce",
        "ces",
        "dans",
        "de",
        "des",
        "du",
        "elle",
        "en",
        "et",
        "eux",
        "il",
        "je",
        "la",
        "le",
        "leur",
        "lui",
        "ma",
        "mais",
        "me",
        "m\xEAme",
        "mes",
        "moi",
        "mon",
        "ne",
        "nos",
        "notre",
        "nous",
        "on",
        "ou",
        "o\xF9",
        "par",
        "pas",
        "pour",
        "qu",
        "que",
        "qui",
        "sa",
        "se",
        "ses",
        "son",
        "sur",
        "ta",
        "te",
        "tes",
        "toi",
        "ton",
        "tu",
        "un",
        "une",
        "vos",
        "votre",
        "vous",
        "c",
        "d",
        "j",
        "l",
        "\xE0",
        "m",
        "n",
        "s",
        "t",
        "y",
        "\xE9t\xE9",
        "\xE9t\xE9e",
        "\xE9t\xE9es",
        "\xE9t\xE9s",
        "\xE9tant",
        "suis",
        "es",
        "est",
        "sommes",
        "\xEAtes",
        "sont",
        "serai",
        "seras",
        "sera",
        "serons",
        "serez",
        "seront",
        "serais",
        "serait",
        "serions",
        "seriez",
        "seraient",
        "\xE9tais",
        "\xE9tait",
        "\xE9tions",
        "\xE9tiez",
        "\xE9taient",
        "fus",
        "fut",
        "f\xFBmes",
        "f\xFBtes",
        "furent",
        "sois",
        "soit",
        "soyons",
        "soyez",
        "soient",
        "fusse",
        "fusses",
        "f\xFBt",
        "fussions",
        "fussiez",
        "fussent",
        "ayant",
        "eu",
        "eue",
        "eues",
        "eus",
        "ai",
        "as",
        "avons",
        "avez",
        "ont",
        "aurai",
        "auras",
        "aura",
        "aurons",
        "aurez",
        "auront",
        "aurais",
        "aurait",
        "aurions",
        "auriez",
        "auraient",
        "avais",
        "avait",
        "avions",
        "aviez",
        "avaient",
        "eut",
        "e\xFBmes",
        "e\xFBtes",
        "eurent",
        "aie",
        "aies",
        "ait",
        "ayons",
        "ayez",
        "aient",
        "eusse",
        "eusses",
        "e\xFBt",
        "eussions",
        "eussiez",
        "eussent",
        "ceci",
        "cela",
        "cet",
        "cette",
        "ici",
        "ils",
        "les",
        "leurs",
        "quel",
        "quels",
        "quelle",
        "quelles",
        "sans",
        "soi"
      ];
      const glg = [
        "a",
        "al\xED",
        "ao",
        "aos",
        "aquel",
        "aquela",
        "aquelas",
        "aqueles",
        "aquilo",
        "aqu\xED",
        "as",
        "as\xED",
        "a\xEDnda",
        "ben",
        "cando",
        "che",
        "co",
        "coa",
        "coas",
        "comigo",
        "con",
        "connosco",
        "contigo",
        "convosco",
        "cos",
        "cun",
        "cunha",
        "cunhas",
        "cuns",
        "da",
        "dalgunha",
        "dalgunhas",
        "dalg\xFAn",
        "dalg\xFAns",
        "das",
        "de",
        "del",
        "dela",
        "delas",
        "deles",
        "desde",
        "deste",
        "do",
        "dos",
        "dun",
        "dunha",
        "dunhas",
        "duns",
        "e",
        "el",
        "ela",
        "elas",
        "eles",
        "en",
        "era",
        "eran",
        "esa",
        "esas",
        "ese",
        "eses",
        "esta",
        "estaba",
        "estar",
        "este",
        "estes",
        "estiven",
        "estou",
        "est\xE1",
        "est\xE1n",
        "eu",
        "facer",
        "foi",
        "foron",
        "fun",
        "hab\xEDa",
        "hai",
        "iso",
        "isto",
        "la",
        "las",
        "lle",
        "lles",
        "lo",
        "los",
        "mais",
        "me",
        "meu",
        "meus",
        "min",
        "mi\xF1a",
        "mi\xF1as",
        "moi",
        "na",
        "nas",
        "neste",
        "nin",
        "no",
        "non",
        "nos",
        "nosa",
        "nosas",
        "noso",
        "nosos",
        "nun",
        "nunha",
        "nunhas",
        "nuns",
        "n\xF3s",
        "o",
        "os",
        "ou",
        "para",
        "pero",
        "pode",
        "pois",
        "pola",
        "polas",
        "polo",
        "polos",
        "por",
        "que",
        "se",
        "sen\xF3n",
        "ser",
        "seu",
        "seus",
        "sexa",
        "sido",
        "sobre",
        "s\xFAa",
        "s\xFAas",
        "tam\xE9n",
        "tan",
        "te",
        "ten",
        "ter",
        "teu",
        "teus",
        "te\xF1en",
        "te\xF1o",
        "ti",
        "tido",
        "tiven",
        "ti\xF1a",
        "t\xFAa",
        "t\xFAas",
        "un",
        "unha",
        "unhas",
        "uns",
        "vos",
        "vosa",
        "vosas",
        "voso",
        "vosos",
        "v\xF3s",
        "\xE1",
        "\xE9",
        "\xF3",
        "\xF3s"
      ];
      const deu = [
        "a",
        "ab",
        "aber",
        "ach",
        "acht",
        "achte",
        "achten",
        "achter",
        "achtes",
        "ag",
        "alle",
        "allein",
        "allem",
        "allen",
        "aller",
        "allerdings",
        "alles",
        "allgemeinen",
        "als",
        "also",
        "am",
        "an",
        "ander",
        "andere",
        "anderem",
        "anderen",
        "anderer",
        "anderes",
        "anderm",
        "andern",
        "anderr",
        "anders",
        "au",
        "auch",
        "auf",
        "aus",
        "ausser",
        "ausserdem",
        "au\xDFer",
        "au\xDFerdem",
        "b",
        "bald",
        "bei",
        "beide",
        "beiden",
        "beim",
        "beispiel",
        "bekannt",
        "bereits",
        "besonders",
        "besser",
        "besten",
        "bin",
        "bis",
        "bisher",
        "bist",
        "c",
        "d",
        "d.h",
        "da",
        "dabei",
        "dadurch",
        "daf\xFCr",
        "dagegen",
        "daher",
        "dahin",
        "dahinter",
        "damals",
        "damit",
        "danach",
        "daneben",
        "dank",
        "dann",
        "daran",
        "darauf",
        "daraus",
        "darf",
        "darfst",
        "darin",
        "darum",
        "darunter",
        "dar\xFCber",
        "das",
        "dasein",
        "daselbst",
        "dass",
        "dasselbe",
        "davon",
        "davor",
        "dazu",
        "dazwischen",
        "da\xDF",
        "dein",
        "deine",
        "deinem",
        "deinen",
        "deiner",
        "deines",
        "dem",
        "dementsprechend",
        "demgegen\xFCber",
        "demgem\xE4ss",
        "demgem\xE4\xDF",
        "demselben",
        "demzufolge",
        "den",
        "denen",
        "denn",
        "denselben",
        "der",
        "deren",
        "derer",
        "derjenige",
        "derjenigen",
        "dermassen",
        "derma\xDFen",
        "derselbe",
        "derselben",
        "des",
        "deshalb",
        "desselben",
        "dessen",
        "deswegen",
        "dich",
        "die",
        "diejenige",
        "diejenigen",
        "dies",
        "diese",
        "dieselbe",
        "dieselben",
        "diesem",
        "diesen",
        "dieser",
        "dieses",
        "dir",
        "doch",
        "dort",
        "drei",
        "drin",
        "dritte",
        "dritten",
        "dritter",
        "drittes",
        "du",
        "durch",
        "durchaus",
        "durfte",
        "durften",
        "d\xFCrfen",
        "d\xFCrft",
        "e",
        "eben",
        "ebenso",
        "ehrlich",
        "ei",
        "ei, ",
        "eigen",
        "eigene",
        "eigenen",
        "eigener",
        "eigenes",
        "ein",
        "einander",
        "eine",
        "einem",
        "einen",
        "einer",
        "eines",
        "einig",
        "einige",
        "einigem",
        "einigen",
        "einiger",
        "einiges",
        "einmal",
        "eins",
        "elf",
        "en",
        "ende",
        "endlich",
        "entweder",
        "er",
        "ernst",
        "erst",
        "erste",
        "ersten",
        "erster",
        "erstes",
        "es",
        "etwa",
        "etwas",
        "euch",
        "euer",
        "eure",
        "eurem",
        "euren",
        "eurer",
        "eures",
        "f",
        "folgende",
        "fr\xFCher",
        "f\xFCnf",
        "f\xFCnfte",
        "f\xFCnften",
        "f\xFCnfter",
        "f\xFCnftes",
        "f\xFCr",
        "g",
        "gab",
        "ganz",
        "ganze",
        "ganzen",
        "ganzer",
        "ganzes",
        "gar",
        "gedurft",
        "gegen",
        "gegen\xFCber",
        "gehabt",
        "gehen",
        "geht",
        "gekannt",
        "gekonnt",
        "gemacht",
        "gemocht",
        "gemusst",
        "genug",
        "gerade",
        "gern",
        "gesagt",
        "geschweige",
        "gewesen",
        "gewollt",
        "geworden",
        "gibt",
        "ging",
        "gleich",
        "gott",
        "gross",
        "grosse",
        "grossen",
        "grosser",
        "grosses",
        "gro\xDF",
        "gro\xDFe",
        "gro\xDFen",
        "gro\xDFer",
        "gro\xDFes",
        "gut",
        "gute",
        "guter",
        "gutes",
        "h",
        "hab",
        "habe",
        "haben",
        "habt",
        "hast",
        "hat",
        "hatte",
        "hatten",
        "hattest",
        "hattet",
        "heisst",
        "her",
        "heute",
        "hier",
        "hin",
        "hinter",
        "hoch",
        "h\xE4tte",
        "h\xE4tten",
        "i",
        "ich",
        "ihm",
        "ihn",
        "ihnen",
        "ihr",
        "ihre",
        "ihrem",
        "ihren",
        "ihrer",
        "ihres",
        "im",
        "immer",
        "in",
        "indem",
        "infolgedessen",
        "ins",
        "irgend",
        "ist",
        "j",
        "ja",
        "jahr",
        "jahre",
        "jahren",
        "je",
        "jede",
        "jedem",
        "jeden",
        "jeder",
        "jedermann",
        "jedermanns",
        "jedes",
        "jedoch",
        "jemand",
        "jemandem",
        "jemanden",
        "jene",
        "jenem",
        "jenen",
        "jener",
        "jenes",
        "jetzt",
        "k",
        "kam",
        "kann",
        "kannst",
        "kaum",
        "kein",
        "keine",
        "keinem",
        "keinen",
        "keiner",
        "keines",
        "kleine",
        "kleinen",
        "kleiner",
        "kleines",
        "kommen",
        "kommt",
        "konnte",
        "konnten",
        "kurz",
        "k\xF6nnen",
        "k\xF6nnt",
        "k\xF6nnte",
        "l",
        "lang",
        "lange",
        "leicht",
        "leide",
        "lieber",
        "los",
        "m",
        "machen",
        "macht",
        "machte",
        "mag",
        "magst",
        "mahn",
        "mal",
        "man",
        "manche",
        "manchem",
        "manchen",
        "mancher",
        "manches",
        "mann",
        "mehr",
        "mein",
        "meine",
        "meinem",
        "meinen",
        "meiner",
        "meines",
        "mensch",
        "menschen",
        "mich",
        "mir",
        "mit",
        "mittel",
        "mochte",
        "mochten",
        "morgen",
        "muss",
        "musst",
        "musste",
        "mussten",
        "mu\xDF",
        "mu\xDFt",
        "m\xF6chte",
        "m\xF6gen",
        "m\xF6glich",
        "m\xF6gt",
        "m\xFCssen",
        "m\xFCsst",
        "m\xFC\xDFt",
        "n",
        "na",
        "nach",
        "nachdem",
        "nahm",
        "nat\xFCrlich",
        "neben",
        "nein",
        "neue",
        "neuen",
        "neun",
        "neunte",
        "neunten",
        "neunter",
        "neuntes",
        "nicht",
        "nichts",
        "nie",
        "niemand",
        "niemandem",
        "niemanden",
        "noch",
        "nun",
        "nur",
        "o",
        "ob",
        "oben",
        "oder",
        "offen",
        "oft",
        "ohne",
        "ordnung",
        "p",
        "q",
        "r",
        "recht",
        "rechte",
        "rechten",
        "rechter",
        "rechtes",
        "richtig",
        "rund",
        "s",
        "sa",
        "sache",
        "sagt",
        "sagte",
        "sah",
        "satt",
        "schlecht",
        "schluss",
        "schon",
        "sechs",
        "sechste",
        "sechsten",
        "sechster",
        "sechstes",
        "sehr",
        "sei",
        "seid",
        "seien",
        "sein",
        "seine",
        "seinem",
        "seinen",
        "seiner",
        "seines",
        "seit",
        "seitdem",
        "selbst",
        "sich",
        "sie",
        "sieben",
        "siebente",
        "siebenten",
        "siebenter",
        "siebentes",
        "sind",
        "so",
        "solang",
        "solche",
        "solchem",
        "solchen",
        "solcher",
        "solches",
        "soll",
        "sollen",
        "sollst",
        "sollt",
        "sollte",
        "sollten",
        "sondern",
        "sonst",
        "soweit",
        "sowie",
        "sp\xE4ter",
        "startseite",
        "statt",
        "steht",
        "suche",
        "t",
        "tag",
        "tage",
        "tagen",
        "tat",
        "teil",
        "tel",
        "tritt",
        "trotzdem",
        "tun",
        "u",
        "uhr",
        "um",
        "und",
        "und?",
        "uns",
        "unse",
        "unsem",
        "unsen",
        "unser",
        "unsere",
        "unserer",
        "unses",
        "unter",
        "v",
        "vergangenen",
        "viel",
        "viele",
        "vielem",
        "vielen",
        "vielleicht",
        "vier",
        "vierte",
        "vierten",
        "vierter",
        "viertes",
        "vom",
        "von",
        "vor",
        "w",
        "wahr?",
        "wann",
        "war",
        "waren",
        "warst",
        "wart",
        "warum",
        "was",
        "weg",
        "wegen",
        "weil",
        "weit",
        "weiter",
        "weitere",
        "weiteren",
        "weiteres",
        "welche",
        "welchem",
        "welchen",
        "welcher",
        "welches",
        "wem",
        "wen",
        "wenig",
        "wenige",
        "weniger",
        "weniges",
        "wenigstens",
        "wenn",
        "wer",
        "werde",
        "werden",
        "werdet",
        "weshalb",
        "wessen",
        "wie",
        "wieder",
        "wieso",
        "will",
        "willst",
        "wir",
        "wird",
        "wirklich",
        "wirst",
        "wissen",
        "wo",
        "woher",
        "wohin",
        "wohl",
        "wollen",
        "wollt",
        "wollte",
        "wollten",
        "worden",
        "wurde",
        "wurden",
        "w\xE4hrend",
        "w\xE4hrenddem",
        "w\xE4hrenddessen",
        "w\xE4re",
        "w\xFCrde",
        "w\xFCrden",
        "x",
        "y",
        "z",
        "z.b",
        "zehn",
        "zehnte",
        "zehnten",
        "zehnter",
        "zehntes",
        "zeit",
        "zu",
        "zuerst",
        "zugleich",
        "zum",
        "zun\xE4chst",
        "zur",
        "zur\xFCck",
        "zusammen",
        "zwanzig",
        "zwar",
        "zwei",
        "zweite",
        "zweiten",
        "zweiter",
        "zweites",
        "zwischen",
        "zw\xF6lf",
        "\xFCber",
        "\xFCberhaupt",
        "\xFCbrigens"
      ];
      const ell = [
        "\u03B1\u03BB\u03BB\u03B1",
        "\u03B1\u03BD",
        "\u03B1\u03BD\u03C4\u03B9",
        "\u03B1\u03C0\u03BF",
        "\u03B1\u03C5\u03C4\u03B1",
        "\u03B1\u03C5\u03C4\u03B5\u03C3",
        "\u03B1\u03C5\u03C4\u03B7",
        "\u03B1\u03C5\u03C4\u03BF",
        "\u03B1\u03C5\u03C4\u03BF\u03B9",
        "\u03B1\u03C5\u03C4\u03BF\u03C3",
        "\u03B1\u03C5\u03C4\u03BF\u03C5\u03C3",
        "\u03B1\u03C5\u03C4\u03C9\u03BD",
        "\u03B3\u03B9\u03B1",
        "\u03B4\u03B5",
        "\u03B4\u03B5\u03BD",
        "\u03B5\u03B1\u03BD",
        "\u03B5\u03B9\u03BC\u03B1\u03B9",
        "\u03B5\u03B9\u03BC\u03B1\u03C3\u03C4\u03B5",
        "\u03B5\u03B9\u03BD\u03B1\u03B9",
        "\u03B5\u03B9\u03C3\u03B1\u03B9",
        "\u03B5\u03B9\u03C3\u03C4\u03B5",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B1",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B5\u03C3",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B7",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03B9",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03C3",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03C5\u03C3",
        "\u03B5\u03BA\u03B5\u03B9\u03BD\u03C9\u03BD",
        "\u03B5\u03BD\u03C9",
        "\u03B5\u03C0\u03B9",
        "\u03B7",
        "\u03B8\u03B1",
        "\u03B9\u03C3\u03C9\u03C3",
        "\u03BA",
        "\u03BA\u03B1\u03B9",
        "\u03BA\u03B1\u03C4\u03B1",
        "\u03BA\u03B9",
        "\u03BC\u03B1",
        "\u03BC\u03B5",
        "\u03BC\u03B5\u03C4\u03B1",
        "\u03BC\u03B7",
        "\u03BC\u03B7\u03BD",
        "\u03BD\u03B1",
        "\u03BF",
        "\u03BF\u03B9",
        "\u03BF\u03BC\u03C9\u03C3",
        "\u03BF\u03C0\u03C9\u03C3",
        "\u03BF\u03C3\u03BF",
        "\u03BF\u03C4\u03B9",
        "\u03C0\u03B1\u03C1\u03B1",
        "\u03C0\u03BF\u03B9\u03B1",
        "\u03C0\u03BF\u03B9\u03B5\u03C3",
        "\u03C0\u03BF\u03B9\u03BF",
        "\u03C0\u03BF\u03B9\u03BF\u03B9",
        "\u03C0\u03BF\u03B9\u03BF\u03C3",
        "\u03C0\u03BF\u03B9\u03BF\u03C5\u03C3",
        "\u03C0\u03BF\u03B9\u03C9\u03BD",
        "\u03C0\u03BF\u03C5",
        "\u03C0\u03C1\u03BF\u03C3",
        "\u03C0\u03C9\u03C3",
        "\u03C3\u03B5",
        "\u03C3\u03C4\u03B7",
        "\u03C3\u03C4\u03B7\u03BD",
        "\u03C3\u03C4\u03BF",
        "\u03C3\u03C4\u03BF\u03BD",
        "\u03C4\u03B1",
        "\u03C4\u03B7\u03BD",
        "\u03C4\u03B7\u03C3",
        "\u03C4\u03BF",
        "\u03C4\u03BF\u03BD",
        "\u03C4\u03BF\u03C4\u03B5",
        "\u03C4\u03BF\u03C5",
        "\u03C4\u03C9\u03BD",
        "\u03C9\u03C3"
      ];
      const guj = [
        "\u0A85\u0A82\u0A97\u0AC7",
        "\u0A85\u0A82\u0AA6\u0AB0",
        "\u0A85\u0AA5\u0AB5\u0ABE",
        "\u0A85\u0AA8\u0AC7",
        "\u0A85\u0AAE\u0AA8\u0AC7",
        "\u0A85\u0AAE\u0ABE\u0AB0\u0AC1\u0A82",
        "\u0A85\u0AAE\u0AC7",
        "\u0A85\u0AB9\u0AC0\u0A82",
        "\u0A86",
        "\u0A86\u0A97\u0AB3",
        "\u0A86\u0AA5\u0AC0",
        "\u0A86\u0AA8\u0AC1\u0A82",
        "\u0A86\u0AA8\u0AC7",
        "\u0A86\u0AAA\u0AA3\u0AA8\u0AC7",
        "\u0A86\u0AAA\u0AA3\u0AC1\u0A82",
        "\u0A86\u0AAA\u0AA3\u0AC7",
        "\u0A86\u0AAA\u0AC0",
        "\u0A86\u0AB0",
        "\u0A86\u0AB5\u0AC0",
        "\u0A86\u0AB5\u0AC7",
        "\u0A89\u0AAA\u0AB0",
        "\u0A89\u0AAD\u0ABE",
        "\u0A8A\u0A82\u0A9A\u0AC7",
        "\u0A8A\u0AAD\u0AC1\u0A82",
        "\u0A8F",
        "\u0A8F\u0A95",
        "\u0A8F\u0AA8",
        "\u0A8F\u0AA8\u0ABE",
        "\u0A8F\u0AA8\u0ABE\u0A82",
        "\u0A8F\u0AA8\u0AC0",
        "\u0A8F\u0AA8\u0AC1\u0A82",
        "\u0A8F\u0AA8\u0AC7",
        "\u0A8F\u0AA8\u0ACB",
        "\u0A8F\u0AAE",
        "\u0A8F\u0AB5\u0ABE",
        "\u0A8F\u0AB5\u0ABE\u0A82",
        "\u0A8F\u0AB5\u0AC0",
        "\u0A8F\u0AB5\u0AC1\u0A82",
        "\u0A8F\u0AB5\u0ACB",
        "\u0A93\u0A9B\u0AC1\u0A82",
        "\u0A95\u0A82\u0A88\u0A95",
        "\u0A95\u0A88",
        "\u0A95\u0AAF\u0AC1\u0A82",
        "\u0A95\u0AAF\u0ACB",
        "\u0A95\u0AB0\u0AA4\u0ABE\u0A82",
        "\u0A95\u0AB0\u0AB5\u0AC1\u0A82",
        "\u0A95\u0AB0\u0AC0",
        "\u0A95\u0AB0\u0AC0\u0A8F",
        "\u0A95\u0AB0\u0AC1\u0A82",
        "\u0A95\u0AB0\u0AC7",
        "\u0A95\u0AB0\u0AC7\u0AB2\u0AC1\u0A82",
        "\u0A95\u0AB0\u0ACD\u0AAF\u0ABE",
        "\u0A95\u0AB0\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0A95\u0AB0\u0ACD\u0AAF\u0AC1\u0A82",
        "\u0A95\u0AB0\u0ACD\u0AAF\u0ACB",
        "\u0A95\u0ABE\u0A82\u0A88",
        "\u0A95\u0AC7",
        "\u0A95\u0AC7\u0A9F\u0AB2\u0AC1\u0A82",
        "\u0A95\u0AC7\u0AAE",
        "\u0A95\u0AC7\u0AB5\u0AC0",
        "\u0A95\u0AC7\u0AB5\u0AC1\u0A82",
        "\u0A95\u0ACB\u0A88",
        "\u0A95\u0ACB\u0A88\u0A95",
        "\u0A95\u0ACB\u0AA3",
        "\u0A95\u0ACB\u0AA3\u0AC7",
        "\u0A95\u0ACB\u0AA8\u0AC7",
        "\u0A95\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0A95\u0ACD\u0AAF\u0ABE\u0AB0\u0AC7",
        "\u0A96\u0AC2\u0AAC",
        "\u0A97\u0A88",
        "\u0A97\u0AAF\u0ABE",
        "\u0A97\u0AAF\u0ABE\u0A82",
        "\u0A97\u0AAF\u0AC1\u0A82",
        "\u0A97\u0AAF\u0ACB",
        "\u0A98\u0AA3\u0AC1\u0A82",
        "\u0A9B",
        "\u0A9B\u0AA4\u0ABE\u0A82",
        "\u0A9B\u0AC0\u0A8F",
        "\u0A9B\u0AC1\u0A82",
        "\u0A9B\u0AC7",
        "\u0A9B\u0AC7\u0A95",
        "\u0A9B\u0ACB",
        "\u0A9C",
        "\u0A9C\u0ABE\u0AAF",
        "\u0A9C\u0AC0",
        "\u0A9C\u0AC7",
        "\u0A9C\u0AC7\u0A9F\u0AB2\u0AC1\u0A82",
        "\u0A9C\u0AC7\u0AA8\u0AC7",
        "\u0A9C\u0AC7\u0AAE",
        "\u0A9C\u0AC7\u0AB5\u0AC0",
        "\u0A9C\u0AC7\u0AB5\u0AC1\u0A82",
        "\u0A9C\u0AC7\u0AB5\u0ACB",
        "\u0A9C\u0ACB",
        "\u0A9C\u0ACB\u0A88\u0A8F",
        "\u0A9C\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0A9C\u0ACD\u0AAF\u0ABE\u0AB0\u0AC7",
        "\u0A9D\u0ABE\u0A9D\u0AC1\u0A82",
        "\u0AA4\u0AA8\u0AC7",
        "\u0AA4\u0AAE\u0AA8\u0AC7",
        "\u0AA4\u0AAE\u0ABE\u0AB0\u0AC1\u0A82",
        "\u0AA4\u0AAE\u0AC7",
        "\u0AA4\u0ABE",
        "\u0AA4\u0ABE\u0AB0\u0ABE\u0AA5\u0AC0",
        "\u0AA4\u0ABE\u0AB0\u0ABE\u0AAE\u0ABE\u0A82",
        "\u0AA4\u0ABE\u0AB0\u0AC1\u0A82",
        "\u0AA4\u0AC1\u0A82",
        "\u0AA4\u0AC7",
        "\u0AA4\u0AC7\u0A82",
        "\u0AA4\u0AC7\u0A93",
        "\u0AA4\u0AC7\u0AA3\u0AC7",
        "\u0AA4\u0AC7\u0AA5\u0AC0",
        "\u0AA4\u0AC7\u0AA8\u0ABE",
        "\u0AA4\u0AC7\u0AA8\u0AC0",
        "\u0AA4\u0AC7\u0AA8\u0AC1\u0A82",
        "\u0AA4\u0AC7\u0AA8\u0AC7",
        "\u0AA4\u0AC7\u0AAE",
        "\u0AA4\u0AC7\u0AAE\u0AA8\u0AC1\u0A82",
        "\u0AA4\u0AC7\u0AAE\u0AA8\u0AC7",
        "\u0AA4\u0AC7\u0AB5\u0AC0",
        "\u0AA4\u0AC7\u0AB5\u0AC1\u0A82",
        "\u0AA4\u0ACB",
        "\u0AA4\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0AA4\u0ACD\u0AAF\u0ABE\u0AB0\u0AC7",
        "\u0AA5\u0A87",
        "\u0AA5\u0A88",
        "\u0AA5\u0A88\u0A8F",
        "\u0AA5\u0AA4\u0ABE",
        "\u0AA5\u0AA4\u0ABE\u0A82",
        "\u0AA5\u0AA4\u0AC0",
        "\u0AA5\u0AA4\u0AC1\u0A82",
        "\u0AA5\u0AA4\u0ACB",
        "\u0AA5\u0AAF\u0ABE",
        "\u0AA5\u0AAF\u0ABE\u0A82",
        "\u0AA5\u0AAF\u0AC1\u0A82",
        "\u0AA5\u0AAF\u0AC7\u0AB2\u0AC1\u0A82",
        "\u0AA5\u0AAF\u0ACB",
        "\u0AA5\u0AB5\u0AC1\u0A82",
        "\u0AA5\u0ABE\u0A89\u0A82",
        "\u0AA5\u0ABE\u0A93",
        "\u0AA5\u0ABE\u0AAF",
        "\u0AA5\u0AC0",
        "\u0AA5\u0ACB\u0AA1\u0AC1\u0A82",
        "\u0AA6\u0AB0\u0AC7\u0A95",
        "\u0AA8",
        "\u0AA8\u0A82",
        "\u0AA8\u0A82.",
        "\u0AA8\u0AA5\u0AC0",
        "\u0AA8\u0AB9\u0ABF",
        "\u0AA8\u0AB9\u0AC0",
        "\u0AA8\u0AB9\u0AC0\u0A82",
        "\u0AA8\u0ABE",
        "\u0AA8\u0AC0",
        "\u0AA8\u0AC0\u0A9A\u0AC7",
        "\u0AA8\u0AC1\u0A82",
        "\u0AA8\u0AC7",
        "\u0AA8\u0ACB",
        "\u0AAA\u0A9B\u0AC0",
        "\u0AAA\u0AA3",
        "\u0AAA\u0AB0",
        "\u0AAA\u0AB0\u0A82\u0AA4\u0AC1",
        "\u0AAA\u0AB9\u0AC7\u0AB2\u0ABE\u0A82",
        "\u0AAA\u0ABE\u0A9B\u0AB3",
        "\u0AAA\u0ABE\u0AB8\u0AC7",
        "\u0AAA\u0ACB\u0AA4\u0ABE\u0AA8\u0AC1\u0A82",
        "\u0AAA\u0ACD\u0AB0\u0AA4\u0ACD\u0AAF\u0AC7\u0A95",
        "\u0AAB\u0A95\u0ACD\u0AA4",
        "\u0AAB\u0AB0\u0AC0",
        "\u0AAB\u0AB0\u0AC0\u0AA5\u0AC0",
        "\u0AAC\u0A82\u0AA8\u0AC7",
        "\u0AAC\u0AA7\u0ABE",
        "\u0AAC\u0AA7\u0AC1\u0A82",
        "\u0AAC\u0AA8\u0AC0",
        "\u0AAC\u0AB9\u0ABE\u0AB0",
        "\u0AAC\u0AB9\u0AC1",
        "\u0AAC\u0ABE\u0AA6",
        "\u0AAC\u0AC7",
        "\u0AAE\u0AA8\u0AC7",
        "\u0AAE\u0ABE",
        "\u0AAE\u0ABE\u0A82",
        "\u0AAE\u0ABE\u0A9F\u0AC7",
        "\u0AAE\u0ABE\u0AA4\u0ACD\u0AB0",
        "\u0AAE\u0ABE\u0AB0\u0AC1\u0A82",
        "\u0AAE\u0AC0",
        "\u0AAE\u0AC2\u0A95\u0AB5\u0AC1\u0A82",
        "\u0AAE\u0AC2\u0A95\u0AC0",
        "\u0AAE\u0AC2\u0A95\u0ACD\u0AAF\u0ABE",
        "\u0AAE\u0AC2\u0A95\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0AAE\u0AC2\u0A95\u0ACD\u0AAF\u0AC1\u0A82",
        "\u0AAE\u0AC7\u0A82",
        "\u0AB0\u0AB9\u0AC0",
        "\u0AB0\u0AB9\u0AC7",
        "\u0AB0\u0AB9\u0AC7\u0AB5\u0AC1\u0A82",
        "\u0AB0\u0AB9\u0ACD\u0AAF\u0ABE",
        "\u0AB0\u0AB9\u0ACD\u0AAF\u0ABE\u0A82",
        "\u0AB0\u0AB9\u0ACD\u0AAF\u0ACB",
        "\u0AB0\u0AC0\u0AA4\u0AC7",
        "\u0AB0\u0AC2.",
        "\u0AB0\u0AC2\u0ABE",
        "\u0AB2\u0AC7\u0AA4\u0ABE",
        "\u0AB2\u0AC7\u0AA4\u0AC1\u0A82",
        "\u0AB2\u0AC7\u0AB5\u0ABE",
        "\u0AB5\u0A97\u0AC7\u0AB0\u0AC7",
        "\u0AB5\u0AA7\u0AC1",
        "\u0AB6\u0A95\u0AC7",
        "\u0AB6\u0ABE",
        "\u0AB6\u0AC1\u0A82",
        "\u0AB8\u0AB0\u0A96\u0AC1\u0A82",
        "\u0AB8\u0ABE\u0AAE\u0AC7",
        "\u0AB8\u0AC1\u0AA7\u0AC0",
        "\u0AB9\u0AA4\u0ABE",
        "\u0AB9\u0AA4\u0ABE\u0A82",
        "\u0AB9\u0AA4\u0AC0",
        "\u0AB9\u0AA4\u0AC1\u0A82",
        "\u0AB9\u0AB5\u0AC7",
        "\u0AB9\u0AB6\u0AC7",
        "\u0AB9\u0AB6\u0ACB",
        "\u0AB9\u0ABE",
        "\u0AB9\u0AC1\u0A82",
        "\u0AB9\u0ACB",
        "\u0AB9\u0ACB\u0A88",
        "\u0AB9\u0ACB\u0A88\u0AB6",
        "\u0AB9\u0ACB\u0A88\u0AB6\u0AC1\u0A82",
        "\u0AB9\u0ACB\u0AAF",
        "\u0AB9\u0ACB\u0AB5\u0ABE"
      ];
      const hau = [
        "ta",
        "da",
        "ya",
        "sai",
        "ba",
        "yi",
        "na",
        "kuma",
        "ma",
        "ji",
        "cikin",
        "in",
        "ni",
        "wata",
        "wani",
        "ce",
        "tana",
        "don",
        "za",
        "sun",
        "amma",
        "ga",
        "ina",
        "ne",
        "tselane",
        "mai",
        "suka",
        "wannan",
        "a",
        "ko",
        "lokacin",
        "su",
        "take",
        "kaka",
        "shi",
        "yake",
        "yana",
        "mulongo",
        "mata",
        "ka",
        "ban",
        "ita",
        "tafi",
        "shanshani",
        "kai",
        "da\u0257i",
        "mi",
        "\u0199ato",
        "fara",
        "rana"
      ];
      const heb = [
        "\u05D0\u05D1\u05DC",
        "\u05D0\u05D5",
        "\u05D0\u05D5\u05DC\u05D9",
        "\u05D0\u05D5\u05EA\u05D4",
        "\u05D0\u05D5\u05EA\u05D5",
        "\u05D0\u05D5\u05EA\u05D9",
        "\u05D0\u05D5\u05EA\u05DA",
        "\u05D0\u05D5\u05EA\u05DD",
        "\u05D0\u05D5\u05EA\u05DF",
        "\u05D0\u05D5\u05EA\u05E0\u05D5",
        "\u05D0\u05D6",
        "\u05D0\u05D7\u05E8",
        "\u05D0\u05D7\u05E8\u05D5\u05EA",
        "\u05D0\u05D7\u05E8\u05D9",
        "\u05D0\u05D7\u05E8\u05D9\u05DB\u05DF",
        "\u05D0\u05D7\u05E8\u05D9\u05DD",
        "\u05D0\u05D7\u05E8\u05EA",
        "\u05D0\u05D9",
        "\u05D0\u05D9\u05D6\u05D4",
        "\u05D0\u05D9\u05DA",
        "\u05D0\u05D9\u05DF",
        "\u05D0\u05D9\u05E4\u05D4",
        "\u05D0\u05D9\u05EA\u05D4",
        "\u05D0\u05D9\u05EA\u05D5",
        "\u05D0\u05D9\u05EA\u05D9",
        "\u05D0\u05D9\u05EA\u05DA",
        "\u05D0\u05D9\u05EA\u05DB\u05DD",
        "\u05D0\u05D9\u05EA\u05DB\u05DF",
        "\u05D0\u05D9\u05EA\u05DD",
        "\u05D0\u05D9\u05EA\u05DF",
        "\u05D0\u05D9\u05EA\u05E0\u05D5",
        "\u05D0\u05DA",
        "\u05D0\u05DC",
        "\u05D0\u05DC\u05D4",
        "\u05D0\u05DC\u05D5",
        "\u05D0\u05DD",
        "\u05D0\u05E0\u05D7\u05E0\u05D5",
        "\u05D0\u05E0\u05D9",
        "\u05D0\u05E1",
        "\u05D0\u05E3",
        "\u05D0\u05E6\u05DC",
        "\u05D0\u05E9\u05E8",
        "\u05D0\u05EA",
        "\u05D0\u05EA\u05D4",
        "\u05D0\u05EA\u05DB\u05DD",
        "\u05D0\u05EA\u05DB\u05DF",
        "\u05D0\u05EA\u05DD",
        "\u05D0\u05EA\u05DF",
        "\u05D1\u05D0\u05D9\u05D6\u05D5\u05DE\u05D9\u05D3\u05D4",
        "\u05D1\u05D0\u05DE\u05E6\u05E2",
        "\u05D1\u05D0\u05DE\u05E6\u05E2\u05D5\u05EA",
        "\u05D1\u05D2\u05DC\u05DC",
        "\u05D1\u05D9\u05DF",
        "\u05D1\u05DC\u05D9",
        "\u05D1\u05DE\u05D9\u05D3\u05D4",
        "\u05D1\u05DE\u05E7\u05D5\u05DD\u05E9\u05D1\u05D5",
        "\u05D1\u05E8\u05DD",
        "\u05D1\u05E9\u05D1\u05D9\u05DC",
        "\u05D1\u05E9\u05E2\u05D4\u05E9",
        "\u05D1\u05EA\u05D5\u05DA",
        "\u05D2\u05DD",
        "\u05D3\u05E8\u05DA",
        "\u05D4\u05D5\u05D0",
        "\u05D4\u05D9\u05D0",
        "\u05D4\u05D9\u05D4",
        "\u05D4\u05D9\u05DB\u05DF",
        "\u05D4\u05D9\u05EA\u05D4",
        "\u05D4\u05D9\u05EA\u05D9",
        "\u05D4\u05DD",
        "\u05D4\u05DF",
        "\u05D4\u05E0\u05D4",
        "\u05D4\u05E1\u05D9\u05D1\u05D4\u05E9\u05D1\u05D2\u05DC\u05DC\u05D4",
        "\u05D4\u05E8\u05D9",
        "\u05D5\u05D0\u05D9\u05DC\u05D5",
        "\u05D5\u05D0\u05EA",
        "\u05D6\u05D0\u05EA",
        "\u05D6\u05D4",
        "\u05D6\u05D5\u05EA",
        "\u05D9\u05D4\u05D9\u05D4",
        "\u05D9\u05D5\u05DB\u05DC",
        "\u05D9\u05D5\u05DB\u05DC\u05D5",
        "\u05D9\u05D5\u05EA\u05E8\u05DE\u05D3\u05D9",
        "\u05D9\u05DB\u05D5\u05DC",
        "\u05D9\u05DB\u05D5\u05DC\u05D4",
        "\u05D9\u05DB\u05D5\u05DC\u05D5\u05EA",
        "\u05D9\u05DB\u05D5\u05DC\u05D9\u05DD",
        "\u05D9\u05DB\u05DC",
        "\u05D9\u05DB\u05DC\u05D4",
        "\u05D9\u05DB\u05DC\u05D5",
        "\u05D9\u05E9",
        "\u05DB\u05D0\u05DF",
        "\u05DB\u05D0\u05E9\u05E8",
        "\u05DB\u05D5\u05DC\u05DD",
        "\u05DB\u05D5\u05DC\u05DF",
        "\u05DB\u05D6\u05D4",
        "\u05DB\u05D9",
        "\u05DB\u05D9\u05E6\u05D3",
        "\u05DB\u05DA",
        "\u05DB\u05DB\u05D4",
        "\u05DB\u05DC",
        "\u05DB\u05DC\u05DC",
        "\u05DB\u05DE\u05D5",
        "\u05DB\u05DF",
        "\u05DB\u05E4\u05D9",
        "\u05DB\u05E9",
        "\u05DC\u05D0",
        "\u05DC\u05D0\u05D5",
        "\u05DC\u05D0\u05D9\u05D6\u05D5\u05EA\u05DB\u05DC\u05D9\u05EA",
        "\u05DC\u05D0\u05DF",
        "\u05DC\u05D1\u05D9\u05DF",
        "\u05DC\u05D4",
        "\u05DC\u05D4\u05D9\u05D5\u05EA",
        "\u05DC\u05D4\u05DD",
        "\u05DC\u05D4\u05DF",
        "\u05DC\u05D5",
        "\u05DC\u05D9",
        "\u05DC\u05DB\u05DD",
        "\u05DC\u05DB\u05DF",
        "\u05DC\u05DE\u05D4",
        "\u05DC\u05DE\u05D8\u05D4",
        "\u05DC\u05DE\u05E2\u05DC\u05D4",
        "\u05DC\u05DE\u05E7\u05D5\u05DD\u05E9\u05D1\u05D5",
        "\u05DC\u05DE\u05E8\u05D5\u05EA",
        "\u05DC\u05E0\u05D5",
        "\u05DC\u05E2\u05D1\u05E8",
        "\u05DC\u05E2\u05D9\u05DB\u05DF",
        "\u05DC\u05E4\u05D9\u05DB\u05DA",
        "\u05DC\u05E4\u05E0\u05D9",
        "\u05DE\u05D0\u05D3",
        "\u05DE\u05D0\u05D7\u05D5\u05E8\u05D9",
        "\u05DE\u05D0\u05D9\u05D6\u05D5\u05E1\u05D9\u05D1\u05D4",
        "\u05DE\u05D0\u05D9\u05DF",
        "\u05DE\u05D0\u05D9\u05E4\u05D4",
        "\u05DE\u05D1\u05DC\u05D9",
        "\u05DE\u05D1\u05E2\u05D3",
        "\u05DE\u05D3\u05D5\u05E2",
        "\u05DE\u05D4",
        "\u05DE\u05D4\u05D9\u05DB\u05DF",
        "\u05DE\u05D5\u05DC",
        "\u05DE\u05D7\u05D5\u05E5",
        "\u05DE\u05D9",
        "\u05DE\u05DB\u05D0\u05DF",
        "\u05DE\u05DB\u05D9\u05D5\u05D5\u05DF",
        "\u05DE\u05DC\u05D1\u05D3",
        "\u05DE\u05DF",
        "\u05DE\u05E0\u05D9\u05DF",
        "\u05DE\u05E1\u05D5\u05D2\u05DC",
        "\u05DE\u05E2\u05D8",
        "\u05DE\u05E2\u05D8\u05D9\u05DD",
        "\u05DE\u05E2\u05DC",
        "\u05DE\u05E6\u05D3",
        "\u05DE\u05E7\u05D5\u05DD\u05D1\u05D5",
        "\u05DE\u05EA\u05D7\u05EA",
        "\u05DE\u05EA\u05D9",
        "\u05E0\u05D2\u05D3",
        "\u05E0\u05D2\u05E8",
        "\u05E0\u05D5",
        "\u05E2\u05D3",
        "\u05E2\u05D6",
        "\u05E2\u05DC",
        "\u05E2\u05DC\u05D9",
        "\u05E2\u05DC\u05D9\u05D4",
        "\u05E2\u05DC\u05D9\u05D4\u05DD",
        "\u05E2\u05DC\u05D9\u05D4\u05DF",
        "\u05E2\u05DC\u05D9\u05D5",
        "\u05E2\u05DC\u05D9\u05DA",
        "\u05E2\u05DC\u05D9\u05DB\u05DD",
        "\u05E2\u05DC\u05D9\u05E0\u05D5",
        "\u05E2\u05DD",
        "\u05E2\u05E6\u05DE\u05D4",
        "\u05E2\u05E6\u05DE\u05D4\u05DD",
        "\u05E2\u05E6\u05DE\u05D4\u05DF",
        "\u05E2\u05E6\u05DE\u05D5",
        "\u05E2\u05E6\u05DE\u05D9",
        "\u05E2\u05E6\u05DE\u05DD",
        "\u05E2\u05E6\u05DE\u05DF",
        "\u05E2\u05E6\u05DE\u05E0\u05D5",
        "\u05E4\u05D4",
        "\u05E8\u05E7",
        "\u05E9\u05D5\u05D1",
        "\u05E9\u05DC",
        "\u05E9\u05DC\u05D4",
        "\u05E9\u05DC\u05D4\u05DD",
        "\u05E9\u05DC\u05D4\u05DF",
        "\u05E9\u05DC\u05D5",
        "\u05E9\u05DC\u05D9",
        "\u05E9\u05DC\u05DA",
        "\u05E9\u05DC\u05DB\u05D4",
        "\u05E9\u05DC\u05DB\u05DD",
        "\u05E9\u05DC\u05DB\u05DF",
        "\u05E9\u05DC\u05E0\u05D5",
        "\u05E9\u05DD",
        "\u05EA\u05D4\u05D9\u05D4",
        "\u05EA\u05D7\u05EA"
      ];
      const hin = [
        "\u0905\u0902\u0926\u0930",
        "\u0905\u0924",
        "\u0905\u0926\u093F",
        "\u0905\u092A",
        "\u0905\u092A\u0928\u093E",
        "\u0905\u092A\u0928\u093F",
        "\u0905\u092A\u0928\u0940",
        "\u0905\u092A\u0928\u0947",
        "\u0905\u092D\u093F",
        "\u0905\u092D\u0940",
        "\u0906\u0926\u093F",
        "\u0906\u092A",
        "\u0907\u0902\u0939\u093F\u0902",
        "\u0907\u0902\u0939\u0947\u0902",
        "\u0907\u0902\u0939\u094B\u0902",
        "\u0907\u0924\u092F\u093E\u0926\u093F",
        "\u0907\u0924\u094D\u092F\u093E\u0926\u093F",
        "\u0907\u0928",
        "\u0907\u0928\u0915\u093E",
        "\u0907\u0928\u094D\u0939\u0940\u0902",
        "\u0907\u0928\u094D\u0939\u0947\u0902",
        "\u0907\u0928\u094D\u0939\u094B\u0902",
        "\u0907\u0938",
        "\u0907\u0938\u0915\u093E",
        "\u0907\u0938\u0915\u093F",
        "\u0907\u0938\u0915\u0940",
        "\u0907\u0938\u0915\u0947",
        "\u0907\u0938\u092E\u0947\u0902",
        "\u0907\u0938\u093F",
        "\u0907\u0938\u0940",
        "\u0907\u0938\u0947",
        "\u0909\u0902\u0939\u093F\u0902",
        "\u0909\u0902\u0939\u0947\u0902",
        "\u0909\u0902\u0939\u094B\u0902",
        "\u0909\u0928",
        "\u0909\u0928\u0915\u093E",
        "\u0909\u0928\u0915\u093F",
        "\u0909\u0928\u0915\u0940",
        "\u0909\u0928\u0915\u0947",
        "\u0909\u0928\u0915\u094B",
        "\u0909\u0928\u094D\u0939\u0940\u0902",
        "\u0909\u0928\u094D\u0939\u0947\u0902",
        "\u0909\u0928\u094D\u0939\u094B\u0902",
        "\u0909\u0938",
        "\u0909\u0938\u0915\u0947",
        "\u0909\u0938\u093F",
        "\u0909\u0938\u0940",
        "\u0909\u0938\u0947",
        "\u090F\u0915",
        "\u090F\u0935\u0902",
        "\u090F\u0938",
        "\u090F\u0938\u0947",
        "\u0910\u0938\u0947",
        "\u0913\u0930",
        "\u0914\u0930",
        "\u0915\u0907",
        "\u0915\u0908",
        "\u0915\u0930",
        "\u0915\u0930\u0924\u093E",
        "\u0915\u0930\u0924\u0947",
        "\u0915\u0930\u0928\u093E",
        "\u0915\u0930\u0928\u0947",
        "\u0915\u0930\u0947\u0902",
        "\u0915\u0939\u0924\u0947",
        "\u0915\u0939\u093E",
        "\u0915\u093E",
        "\u0915\u093E\u092B\u093F",
        "\u0915\u093E\u092B\u093C\u0940",
        "\u0915\u093F",
        "\u0915\u093F\u0902\u0939\u0947\u0902",
        "\u0915\u093F\u0902\u0939\u094B\u0902",
        "\u0915\u093F\u0924\u0928\u093E",
        "\u0915\u093F\u0928\u094D\u0939\u0947\u0902",
        "\u0915\u093F\u0928\u094D\u0939\u094B\u0902",
        "\u0915\u093F\u092F\u093E",
        "\u0915\u093F\u0930",
        "\u0915\u093F\u0938",
        "\u0915\u093F\u0938\u093F",
        "\u0915\u093F\u0938\u0940",
        "\u0915\u093F\u0938\u0947",
        "\u0915\u0940",
        "\u0915\u0941\u091B",
        "\u0915\u0941\u0932",
        "\u0915\u0947",
        "\u0915\u094B",
        "\u0915\u094B\u0907",
        "\u0915\u094B\u0908",
        "\u0915\u094B\u0928",
        "\u0915\u094B\u0928\u0938\u093E",
        "\u0915\u094C\u0928",
        "\u0915\u094C\u0928\u0938\u093E",
        "\u0917\u092F\u093E",
        "\u0918\u0930",
        "\u091C\u092C",
        "\u091C\u0939\u093E\u0901",
        "\u091C\u0939\u093E\u0902",
        "\u091C\u093E",
        "\u091C\u093F\u0902\u0939\u0947\u0902",
        "\u091C\u093F\u0902\u0939\u094B\u0902",
        "\u091C\u093F\u0924\u0928\u093E",
        "\u091C\u093F\u0927\u0930",
        "\u091C\u093F\u0928",
        "\u091C\u093F\u0928\u094D\u0939\u0947\u0902",
        "\u091C\u093F\u0928\u094D\u0939\u094B\u0902",
        "\u091C\u093F\u0938",
        "\u091C\u093F\u0938\u0947",
        "\u091C\u0940\u0927\u0930",
        "\u091C\u0947\u0938\u093E",
        "\u091C\u0947\u0938\u0947",
        "\u091C\u0948\u0938\u093E",
        "\u091C\u0948\u0938\u0947",
        "\u091C\u094B",
        "\u0924\u0915",
        "\u0924\u092C",
        "\u0924\u0930\u0939",
        "\u0924\u093F\u0902\u0939\u0947\u0902",
        "\u0924\u093F\u0902\u0939\u094B\u0902",
        "\u0924\u093F\u0928",
        "\u0924\u093F\u0928\u094D\u0939\u0947\u0902",
        "\u0924\u093F\u0928\u094D\u0939\u094B\u0902",
        "\u0924\u093F\u0938",
        "\u0924\u093F\u0938\u0947",
        "\u0924\u094B",
        "\u0925\u093E",
        "\u0925\u093F",
        "\u0925\u0940",
        "\u0925\u0947",
        "\u0926\u092C\u093E\u0930\u093E",
        "\u0926\u0935\u093E\u0930\u093E",
        "\u0926\u093F\u092F\u093E",
        "\u0926\u0941\u0938\u0930\u093E",
        "\u0926\u0941\u0938\u0930\u0947",
        "\u0926\u0942\u0938\u0930\u0947",
        "\u0926\u094B",
        "\u0926\u094D\u0935\u093E\u0930\u093E",
        "\u0928",
        "\u0928\u0939\u093F\u0902",
        "\u0928\u0939\u0940\u0902",
        "\u0928\u093E",
        "\u0928\u093F\u091A\u0947",
        "\u0928\u093F\u0939\u093E\u092F\u0924",
        "\u0928\u0940\u091A\u0947",
        "\u0928\u0947",
        "\u092A\u0930",
        "\u092A\u0939\u0932\u0947",
        "\u092A\u0941\u0930\u093E",
        "\u092A\u0942\u0930\u093E",
        "\u092A\u0947",
        "\u092B\u093F\u0930",
        "\u092C\u0928\u093F",
        "\u092C\u0928\u0940",
        "\u092C\u0939\u093F",
        "\u092C\u0939\u0940",
        "\u092C\u0939\u0941\u0924",
        "\u092C\u093E\u0926",
        "\u092C\u093E\u0932\u093E",
        "\u092C\u093F\u0932\u0915\u0941\u0932",
        "\u092D\u093F",
        "\u092D\u093F\u0924\u0930",
        "\u092D\u0940",
        "\u092D\u0940\u0924\u0930",
        "\u092E\u0917\u0930",
        "\u092E\u093E\u0928\u094B",
        "\u092E\u0947",
        "\u092E\u0947\u0902",
        "\u092F\u0926\u093F",
        "\u092F\u0939",
        "\u092F\u0939\u093E\u0901",
        "\u092F\u0939\u093E\u0902",
        "\u092F\u0939\u093F",
        "\u092F\u0939\u0940",
        "\u092F\u093E",
        "\u092F\u093F\u0939",
        "\u092F\u0947",
        "\u0930\u0916\u0947\u0902",
        "\u0930\u0935\u093E\u0938\u093E",
        "\u0930\u0939\u093E",
        "\u0930\u0939\u0947",
        "\u0931\u094D\u0935\u093E\u0938\u093E",
        "\u0932\u093F\u090F",
        "\u0932\u093F\u092F\u0947",
        "\u0932\u0947\u0915\u093F\u0928",
        "\u0935",
        "\u0935\u0917\u0947\u0930\u0939",
        "\u0935\u0930\u0917",
        "\u0935\u0930\u094D\u0917",
        "\u0935\u0939",
        "\u0935\u0939\u093E\u0901",
        "\u0935\u0939\u093E\u0902",
        "\u0935\u0939\u093F\u0902",
        "\u0935\u0939\u0940\u0902",
        "\u0935\u093E\u0932\u0947",
        "\u0935\u0941\u0939",
        "\u0935\u0947",
        "\u0935\u0917\u093C\u0948\u0930\u0939",
        "\u0938\u0902\u0917",
        "\u0938\u0915\u0924\u093E",
        "\u0938\u0915\u0924\u0947",
        "\u0938\u092C\u0938\u0947",
        "\u0938\u092D\u093F",
        "\u0938\u092D\u0940",
        "\u0938\u093E\u0925",
        "\u0938\u093E\u092C\u0941\u0924",
        "\u0938\u093E\u092D",
        "\u0938\u093E\u0930\u093E",
        "\u0938\u0947",
        "\u0938\u094B",
        "\u0939\u093F",
        "\u0939\u0940",
        "\u0939\u0941\u0905",
        "\u0939\u0941\u0906",
        "\u0939\u0941\u0907",
        "\u0939\u0941\u0908",
        "\u0939\u0941\u090F",
        "\u0939\u0947",
        "\u0939\u0947\u0902",
        "\u0939\u0948",
        "\u0939\u0948\u0902",
        "\u0939\u094B",
        "\u0939\u094B\u0924\u093E",
        "\u0939\u094B\u0924\u093F",
        "\u0939\u094B\u0924\u0940",
        "\u0939\u094B\u0924\u0947",
        "\u0939\u094B\u0928\u093E",
        "\u0939\u094B\u0928\u0947"
      ];
      const gle = [
        "a",
        "ach",
        "ag",
        "agus",
        "an",
        "aon",
        "ar",
        "arna",
        "as",
        "b'",
        "ba",
        "beirt",
        "bh\xFAr",
        "caoga",
        "ceathair",
        "ceathrar",
        "chomh",
        "cht\xF3",
        "chuig",
        "chun",
        "cois",
        "c\xE9ad",
        "c\xFAig",
        "c\xFAigear",
        "d'",
        "daichead",
        "dar",
        "de",
        "deich",
        "deichni\xFAr",
        "den",
        "dh\xE1",
        "do",
        "don",
        "dt\xED",
        "d\xE1",
        "d\xE1r",
        "d\xF3",
        "faoi",
        "faoin",
        "faoina",
        "faoin\xE1r",
        "fara",
        "fiche",
        "gach",
        "gan",
        "go",
        "gur",
        "haon",
        "hocht",
        "i",
        "iad",
        "idir",
        "in",
        "ina",
        "ins",
        "in\xE1r",
        "is",
        "le",
        "leis",
        "lena",
        "len\xE1r",
        "m'",
        "mar",
        "mo",
        "m\xE9",
        "na",
        "nach",
        "naoi",
        "naon\xFAr",
        "n\xE1",
        "n\xED",
        "n\xEDor",
        "n\xF3",
        "n\xF3cha",
        "ocht",
        "ochtar",
        "os",
        "roimh",
        "sa",
        "seacht",
        "seachtar",
        "seacht\xF3",
        "seasca",
        "seisear",
        "siad",
        "sibh",
        "sinn",
        "sna",
        "s\xE9",
        "s\xED",
        "tar",
        "thar",
        "th\xFA",
        "tri\xFAr",
        "tr\xED",
        "tr\xEDna",
        "tr\xEDn\xE1r",
        "tr\xEDocha",
        "t\xFA",
        "um",
        "\xE1r",
        "\xE9",
        "\xE9is",
        "\xED",
        "\xF3",
        "\xF3n",
        "\xF3na",
        "\xF3n\xE1r"
      ];
      const hun = [
        "a",
        "abba",
        "abban",
        "abb\xF3l",
        "addig",
        "ahhoz",
        "ahogy",
        "ahol",
        "aki",
        "akik",
        "akkor",
        "ak\xE1r",
        "alapj\xE1n",
        "alatt",
        "alatta",
        "alattad",
        "alattam",
        "alattatok",
        "alattuk",
        "alattunk",
        "al\xE1",
        "al\xE1d",
        "al\xE1juk",
        "al\xE1m",
        "al\xE1nk",
        "al\xE1tok",
        "al\xF3l",
        "al\xF3la",
        "al\xF3lad",
        "al\xF3lam",
        "al\xF3latok",
        "al\xF3luk",
        "al\xF3lunk",
        "amely",
        "amelybol",
        "amelyek",
        "amelyekben",
        "amelyeket",
        "amelyet",
        "amelyik",
        "amelynek",
        "ami",
        "amikor",
        "amit",
        "amolyan",
        "amott",
        "am\xEDg",
        "annak",
        "ann\xE1l",
        "arra",
        "arr\xF3l",
        "att\xF3l",
        "az",
        "aznap",
        "azok",
        "azokat",
        "azokba",
        "azokban",
        "azokb\xF3l",
        "azokhoz",
        "azokig",
        "azokkal",
        "azokk\xE1",
        "azoknak",
        "azokn\xE1l",
        "azokon",
        "azokra",
        "azokr\xF3l",
        "azokt\xF3l",
        "azok\xE9rt",
        "azon",
        "azonban",
        "azonnal",
        "azt",
        "azt\xE1n",
        "azut\xE1n",
        "azzal",
        "azz\xE1",
        "az\xE9rt",
        "bal",
        "balra",
        "ban",
        "be",
        "bel\xE9",
        "bel\xE9d",
        "bel\xE9j\xFCk",
        "bel\xE9m",
        "bel\xE9nk",
        "bel\xE9tek",
        "bel\xFCl",
        "bel\u0151le",
        "bel\u0151led",
        "bel\u0151lem",
        "bel\u0151letek",
        "bel\u0151l\xFCk",
        "bel\u0151l\xFCnk",
        "ben",
        "benne",
        "benned",
        "bennem",
        "bennetek",
        "benn\xFCk",
        "benn\xFCnk",
        "b\xE1r",
        "b\xE1rcsak",
        "b\xE1rmilyen",
        "b\xFAcs\xFA",
        "cikk",
        "cikkek",
        "cikkeket",
        "csak",
        "csakhogy",
        "csup\xE1n",
        "de",
        "dehogy",
        "e",
        "ebbe",
        "ebben",
        "ebb\u0151l",
        "eddig",
        "egy",
        "egyebek",
        "egyebet",
        "egyed\xFCl",
        "egyel\u0151re",
        "egyes",
        "egyet",
        "egyetlen",
        "egyik",
        "egym\xE1s",
        "egyre",
        "egyszerre",
        "egy\xE9b",
        "egy\xFCtt",
        "eg\xE9sz",
        "eg\xE9szen",
        "ehhez",
        "ekkor",
        "el",
        "eleinte",
        "ellen",
        "ellenes",
        "elleni",
        "ellen\xE9re",
        "elmondta",
        "els\u0151",
        "els\u0151k",
        "els\u0151sorban",
        "els\u0151t",
        "el\xE9",
        "el\xE9d",
        "el\xE9g",
        "el\xE9j\xFCk",
        "el\xE9m",
        "el\xE9nk",
        "el\xE9tek",
        "el\u0151",
        "el\u0151bb",
        "el\u0151l",
        "el\u0151le",
        "el\u0151led",
        "el\u0151lem",
        "el\u0151letek",
        "el\u0151l\xFCk",
        "el\u0151l\xFCnk",
        "el\u0151sz\xF6r",
        "el\u0151tt",
        "el\u0151tte",
        "el\u0151tted",
        "el\u0151ttem",
        "el\u0151ttetek",
        "el\u0151tt\xFCk",
        "el\u0151tt\xFCnk",
        "el\u0151z\u0151",
        "emilyen",
        "engem",
        "ennek",
        "ennyi",
        "enn\xE9l",
        "eny\xE9m",
        "erre",
        "err\u0151l",
        "esetben",
        "ett\u0151l",
        "ez",
        "ezek",
        "ezekbe",
        "ezekben",
        "ezekb\u0151l",
        "ezeken",
        "ezeket",
        "ezekhez",
        "ezekig",
        "ezekkel",
        "ezekk\xE9",
        "ezeknek",
        "ezekn\xE9l",
        "ezekre",
        "ezekr\u0151l",
        "ezekt\u0151l",
        "ezek\xE9rt",
        "ezen",
        "ezent\xFAl",
        "ezer",
        "ezret",
        "ezt",
        "ezut\xE1n",
        "ezzel",
        "ezz\xE9",
        "ez\xE9rt",
        "fel",
        "fele",
        "felek",
        "felet",
        "felett",
        "fel\xE9",
        "fent",
        "fenti",
        "f\xE9l",
        "f\xF6l\xE9",
        "gyakran",
        "ha",
        "hall\xF3",
        "hamar",
        "hanem",
        "harmadik",
        "harmadikat",
        "harminc",
        "hat",
        "hatodik",
        "hatodikat",
        "hatot",
        "hatvan",
        "helyett",
        "hetedik",
        "hetediket",
        "hetet",
        "hetven",
        "hirtelen",
        "hiszen",
        "hi\xE1ba",
        "hogy",
        "hogyan",
        "hol",
        "holnap",
        "holnapot",
        "honnan",
        "hova",
        "hozz\xE1",
        "hozz\xE1d",
        "hozz\xE1juk",
        "hozz\xE1m",
        "hozz\xE1nk",
        "hozz\xE1tok",
        "hurr\xE1",
        "huszadik",
        "h\xE1ny",
        "h\xE1nyszor",
        "h\xE1rmat",
        "h\xE1rom",
        "h\xE1t",
        "h\xE1tha",
        "h\xE1tuls\xF3",
        "h\xE9t",
        "h\xFAsz",
        "ide",
        "ide-\u043Eda",
        "id\xE9n",
        "igaz\xE1n",
        "igen",
        "ill",
        "illetve",
        "ilyen",
        "ilyenkor",
        "imm\xE1r",
        "ink\xE1bb",
        "is",
        "ism\xE9t",
        "ison",
        "itt",
        "jelenleg",
        "jobban",
        "jobbra",
        "j\xF3",
        "j\xF3l",
        "j\xF3lesik",
        "j\xF3val",
        "j\xF6v\u0151re",
        "kell",
        "kellene",
        "kellett",
        "kelljen",
        "keress\xFCnk",
        "kereszt\xFCl",
        "ketten",
        "kett\u0151",
        "kett\u0151t",
        "kev\xE9s",
        "ki",
        "kiben",
        "kib\u0151l",
        "kicsit",
        "kicsoda",
        "kihez",
        "kik",
        "kikbe",
        "kikben",
        "kikb\u0151l",
        "kiken",
        "kiket",
        "kikhez",
        "kikkel",
        "kikk\xE9",
        "kiknek",
        "kikn\xE9l",
        "kikre",
        "kikr\u0151l",
        "kikt\u0151l",
        "kik\xE9rt",
        "kilenc",
        "kilencedik",
        "kilencediket",
        "kilencet",
        "kilencven",
        "kin",
        "kinek",
        "kin\xE9l",
        "kire",
        "kir\u0151l",
        "kit",
        "kit\u0151l",
        "kivel",
        "kiv\xE9",
        "ki\xE9",
        "ki\xE9rt",
        "kor\xE1bban",
        "k\xE9pest",
        "k\xE9rem",
        "k\xE9rlek",
        "k\xE9sz",
        "k\xE9s\u0151",
        "k\xE9s\u0151bb",
        "k\xE9s\u0151n",
        "k\xE9t",
        "k\xE9tszer",
        "k\xEDv\xFCl",
        "k\xF6r\xFCl",
        "k\xF6sz\xF6nhet\u0151en",
        "k\xF6sz\xF6n\xF6m",
        "k\xF6zben",
        "k\xF6zel",
        "k\xF6zepesen",
        "k\xF6zep\xE9n",
        "k\xF6z\xE9",
        "k\xF6z\xF6tt",
        "k\xF6z\xFCl",
        "k\xFCl\xF6n",
        "k\xFCl\xF6nben",
        "k\xFCl\xF6nb\xF6z\u0151",
        "k\xFCl\xF6nb\xF6z\u0151bb",
        "k\xFCl\xF6nb\xF6z\u0151ek",
        "lassan",
        "le",
        "legal\xE1bb",
        "legyen",
        "lehet",
        "lehetetlen",
        "lehetett",
        "lehet\u0151leg",
        "lehet\u0151s\xE9g",
        "lenne",
        "lenni",
        "lenn\xE9k",
        "lenn\xE9nek",
        "lesz",
        "leszek",
        "lesznek",
        "lesz\xFCnk",
        "lett",
        "lettek",
        "lettem",
        "lett\xFCnk",
        "l\xE9v\u0151",
        "ma",
        "maga",
        "magad",
        "magam",
        "magatokat",
        "magukat",
        "magunkat",
        "mag\xE1t",
        "mai",
        "majd",
        "majdnem",
        "manaps\xE1g",
        "meg",
        "megcsin\xE1l",
        "megcsin\xE1lnak",
        "megint",
        "megvan",
        "mellett",
        "mellette",
        "melletted",
        "mellettem",
        "mellettetek",
        "mellett\xFCk",
        "mellett\xFCnk",
        "mell\xE9",
        "mell\xE9d",
        "mell\xE9j\xFCk",
        "mell\xE9m",
        "mell\xE9nk",
        "mell\xE9tek",
        "mell\u0151l",
        "mell\u0151le",
        "mell\u0151led",
        "mell\u0151lem",
        "mell\u0151letek",
        "mell\u0151l\xFCk",
        "mell\u0151l\xFCnk",
        "mely",
        "melyek",
        "melyik",
        "mennyi",
        "mert",
        "mi",
        "miatt",
        "miatta",
        "miattad",
        "miattam",
        "miattatok",
        "miattuk",
        "miattunk",
        "mibe",
        "miben",
        "mib\u0151l",
        "mihez",
        "mik",
        "mikbe",
        "mikben",
        "mikb\u0151l",
        "miken",
        "miket",
        "mikhez",
        "mikkel",
        "mikk\xE9",
        "miknek",
        "mikn\xE9l",
        "mikor",
        "mikre",
        "mikr\u0151l",
        "mikt\u0151l",
        "mik\xE9rt",
        "milyen",
        "min",
        "mind",
        "mindegyik",
        "mindegyiket",
        "minden",
        "mindenesetre",
        "mindenki",
        "mindent",
        "minden\xFCtt",
        "mindig",
        "mindketten",
        "minek",
        "minket",
        "mint",
        "mintha",
        "min\xE9l",
        "mire",
        "mir\u0151l",
        "mit",
        "mit\u0151l",
        "mivel",
        "miv\xE9",
        "mi\xE9rt",
        "mondta",
        "most",
        "mostan\xE1ig",
        "m\xE1r",
        "m\xE1s",
        "m\xE1sik",
        "m\xE1sikat",
        "m\xE1snap",
        "m\xE1sodik",
        "m\xE1sodszor",
        "m\xE1sok",
        "m\xE1sokat",
        "m\xE1st",
        "m\xE9g",
        "m\xE9gis",
        "m\xEDg",
        "m\xF6g\xE9",
        "m\xF6g\xE9d",
        "m\xF6g\xE9j\xFCk",
        "m\xF6g\xE9m",
        "m\xF6g\xE9nk",
        "m\xF6g\xE9tek",
        "m\xF6g\xF6tt",
        "m\xF6g\xF6tte",
        "m\xF6g\xF6tted",
        "m\xF6g\xF6ttem",
        "m\xF6g\xF6ttetek",
        "m\xF6g\xF6tt\xFCk",
        "m\xF6g\xF6tt\xFCnk",
        "m\xF6g\xFCl",
        "m\xF6g\xFCle",
        "m\xF6g\xFCled",
        "m\xF6g\xFClem",
        "m\xF6g\xFCletek",
        "m\xF6g\xFCl\xFCk",
        "m\xF6g\xFCl\xFCnk",
        "m\xFAltkor",
        "m\xFAlva",
        "na",
        "nagy",
        "nagyobb",
        "nagyon",
        "naponta",
        "napot",
        "ne",
        "negyedik",
        "negyediket",
        "negyven",
        "neked",
        "nekem",
        "neki",
        "nekik",
        "nektek",
        "nek\xFCnk",
        "nem",
        "nemcsak",
        "nemr\xE9g",
        "nincs",
        "nyolc",
        "nyolcadik",
        "nyolcadikat",
        "nyolcat",
        "nyolcvan",
        "n\xE1la",
        "n\xE1lad",
        "n\xE1lam",
        "n\xE1latok",
        "n\xE1luk",
        "n\xE1lunk",
        "n\xE9gy",
        "n\xE9gyet",
        "n\xE9ha",
        "n\xE9h\xE1ny",
        "n\xE9lk\xFCl",
        "o",
        "oda",
        "ok",
        "olyan",
        "onnan",
        "ott",
        "pedig",
        "persze",
        "p\xE1r",
        "p\xE9ld\xE1ul",
        "rajta",
        "rajtad",
        "rajtam",
        "rajtatok",
        "rajtuk",
        "rajtunk",
        "rendben",
        "rosszul",
        "r\xE1",
        "r\xE1d",
        "r\xE1juk",
        "r\xE1m",
        "r\xE1nk",
        "r\xE1tok",
        "r\xE9gen",
        "r\xE9g\xF3ta",
        "r\xE9sz\xE9re",
        "r\xF3la",
        "r\xF3lad",
        "r\xF3lam",
        "r\xF3latok",
        "r\xF3luk",
        "r\xF3lunk",
        "r\xF6gt\xF6n",
        "s",
        "saj\xE1t",
        "se",
        "sem",
        "semmi",
        "semmilyen",
        "semmis\xE9g",
        "senki",
        "soha",
        "sok",
        "sokan",
        "sokat",
        "sokkal",
        "sokszor",
        "sok\xE1ig",
        "sor\xE1n",
        "stb.",
        "szemben",
        "szerbusz",
        "szerint",
        "szerinte",
        "szerinted",
        "szerintem",
        "szerintetek",
        "szerint\xFCk",
        "szerint\xFCnk",
        "szervusz",
        "szinte",
        "sz\xE1m\xE1ra",
        "sz\xE1z",
        "sz\xE1zadik",
        "sz\xE1zat",
        "sz\xE9pen",
        "sz\xE9t",
        "sz\xEDves",
        "sz\xEDvesen",
        "sz\xEDveskedj\xE9k",
        "s\u0151t",
        "tal\xE1n",
        "tavaly",
        "te",
        "tegnap",
        "tegnapel\u0151tt",
        "teh\xE1t",
        "tele",
        "teljes",
        "tess\xE9k",
        "ti",
        "tied",
        "titeket",
        "tizedik",
        "tizediket",
        "tizenegy",
        "tizenegyedik",
        "tizenhat",
        "tizenh\xE1rom",
        "tizenh\xE9t",
        "tizenkettedik",
        "tizenkett\u0151",
        "tizenkilenc",
        "tizenk\xE9t",
        "tizennyolc",
        "tizenn\xE9gy",
        "tizen\xF6t",
        "tizet",
        "tov\xE1bb",
        "tov\xE1bbi",
        "tov\xE1bb\xE1",
        "t\xE1vol",
        "t\xE9ged",
        "t\xE9nyleg",
        "t\xEDz",
        "t\xF6bb",
        "t\xF6bbi",
        "t\xF6bbsz\xF6r",
        "t\xFAl",
        "t\u0151le",
        "t\u0151led",
        "t\u0151lem",
        "t\u0151letek",
        "t\u0151l\xFCk",
        "t\u0151l\xFCnk",
        "ugyanakkor",
        "ugyanez",
        "ugyanis",
        "ugye",
        "urak",
        "uram",
        "urat",
        "utolj\xE1ra",
        "utols\xF3",
        "ut\xE1n",
        "ut\xE1na",
        "vagy",
        "vagyis",
        "vagyok",
        "vagytok",
        "vagyunk",
        "vajon",
        "valahol",
        "valaki",
        "valakit",
        "valamelyik",
        "valami",
        "valamint",
        "val\xF3",
        "van",
        "vannak",
        "vele",
        "veled",
        "velem",
        "veletek",
        "vel\xFCk",
        "vel\xFCnk",
        "vissza",
        "viszl\xE1t",
        "viszont",
        "viszontl\xE1t\xE1sra",
        "volna",
        "voln\xE1nak",
        "voln\xE9k",
        "volt",
        "voltak",
        "voltam",
        "voltunk",
        "v\xE9gre",
        "v\xE9g\xE9n",
        "v\xE9g\xFCl",
        "\xE1ltal",
        "\xE1ltal\xE1ban",
        "\xE1m",
        "\xE1t",
        "\xE9ljen",
        "\xE9n",
        "\xE9ppen",
        "\xE9rte",
        "\xE9rted",
        "\xE9rtem",
        "\xE9rtetek",
        "\xE9rt\xFCk",
        "\xE9rt\xFCnk",
        "\xE9s",
        "\xE9v",
        "\xE9vben",
        "\xE9ve",
        "\xE9vek",
        "\xE9ves",
        "\xE9vi",
        "\xE9vvel",
        "\xEDgy",
        "\xF3ta",
        "\xF6n",
        "\xF6nbe",
        "\xF6nben",
        "\xF6nb\u0151l",
        "\xF6nh\xF6z",
        "\xF6nnek",
        "\xF6nnel",
        "\xF6nn\xE9l",
        "\xF6nre",
        "\xF6nr\u0151l",
        "\xF6nt",
        "\xF6nt\u0151l",
        "\xF6n\xE9rt",
        "\xF6n\xF6k",
        "\xF6n\xF6kbe",
        "\xF6n\xF6kben",
        "\xF6n\xF6kb\u0151l",
        "\xF6n\xF6ket",
        "\xF6n\xF6kh\xF6z",
        "\xF6n\xF6kkel",
        "\xF6n\xF6knek",
        "\xF6n\xF6kn\xE9l",
        "\xF6n\xF6kre",
        "\xF6n\xF6kr\u0151l",
        "\xF6n\xF6kt\u0151l",
        "\xF6n\xF6k\xE9rt",
        "\xF6n\xF6k\xF6n",
        "\xF6n\xF6n",
        "\xF6ssze",
        "\xF6t",
        "\xF6tven",
        "\xF6t\xF6dik",
        "\xF6t\xF6diket",
        "\xF6t\xF6t",
        "\xFAgy",
        "\xFAgyis",
        "\xFAgynevezett",
        "\xFAj",
        "\xFAjabb",
        "\xFAjra",
        "\xFAr",
        "\u0151",
        "\u0151k",
        "\u0151ket",
        "\u0151t"
      ];
      const ind = [
        "ada",
        "adalah",
        "adanya",
        "adapun",
        "agak",
        "agaknya",
        "agar",
        "akan",
        "akankah",
        "akhir",
        "akhiri",
        "akhirnya",
        "aku",
        "akulah",
        "amat",
        "amatlah",
        "anda",
        "andalah",
        "antar",
        "antara",
        "antaranya",
        "apa",
        "apaan",
        "apabila",
        "apakah",
        "apalagi",
        "apatah",
        "artinya",
        "asal",
        "asalkan",
        "atas",
        "atau",
        "ataukah",
        "ataupun",
        "awal",
        "awalnya",
        "bagai",
        "bagaikan",
        "bagaimana",
        "bagaimanakah",
        "bagaimanapun",
        "bagi",
        "bagian",
        "bahkan",
        "bahwa",
        "bahwasanya",
        "bakal",
        "bakalan",
        "balik",
        "banyak",
        "bapak",
        "baru",
        "bawah",
        "beberapa",
        "begini",
        "beginian",
        "beginikah",
        "beginilah",
        "begitu",
        "begitukah",
        "begitulah",
        "begitupun",
        "bekerja",
        "belakang",
        "belakangan",
        "belum",
        "belumlah",
        "benar",
        "benarkah",
        "benarlah",
        "berada",
        "berakhir",
        "berakhirlah",
        "berakhirnya",
        "berapa",
        "berapakah",
        "berapalah",
        "berapapun",
        "berarti",
        "berawal",
        "berbagai",
        "berdatangan",
        "beri",
        "berikan",
        "berikut",
        "berikutnya",
        "berjumlah",
        "berkali-kali",
        "berkata",
        "berkehendak",
        "berkeinginan",
        "berkenaan",
        "berlainan",
        "berlalu",
        "berlangsung",
        "berlebihan",
        "bermacam",
        "bermacam-macam",
        "bermaksud",
        "bermula",
        "bersama",
        "bersama-sama",
        "bersiap",
        "bersiap-siap",
        "bertanya",
        "bertanya-tanya",
        "berturut",
        "berturut-turut",
        "bertutur",
        "berujar",
        "berupa",
        "besar",
        "betul",
        "betulkah",
        "biasa",
        "biasanya",
        "bila",
        "bilakah",
        "bisa",
        "bisakah",
        "boleh",
        "bolehkah",
        "bolehlah",
        "buat",
        "bukan",
        "bukankah",
        "bukanlah",
        "bukannya",
        "bulan",
        "bung",
        "cara",
        "caranya",
        "cukup",
        "cukupkah",
        "cukuplah",
        "cuma",
        "dahulu",
        "dalam",
        "dan",
        "dapat",
        "dari",
        "daripada",
        "datang",
        "dekat",
        "demi",
        "demikian",
        "demikianlah",
        "dengan",
        "depan",
        "di",
        "dia",
        "diakhiri",
        "diakhirinya",
        "dialah",
        "diantara",
        "diantaranya",
        "diberi",
        "diberikan",
        "diberikannya",
        "dibuat",
        "dibuatnya",
        "didapat",
        "didatangkan",
        "digunakan",
        "diibaratkan",
        "diibaratkannya",
        "diingat",
        "diingatkan",
        "diinginkan",
        "dijawab",
        "dijelaskan",
        "dijelaskannya",
        "dikarenakan",
        "dikatakan",
        "dikatakannya",
        "dikerjakan",
        "diketahui",
        "diketahuinya",
        "dikira",
        "dilakukan",
        "dilalui",
        "dilihat",
        "dimaksud",
        "dimaksudkan",
        "dimaksudkannya",
        "dimaksudnya",
        "diminta",
        "dimintai",
        "dimisalkan",
        "dimulai",
        "dimulailah",
        "dimulainya",
        "dimungkinkan",
        "dini",
        "dipastikan",
        "diperbuat",
        "diperbuatnya",
        "dipergunakan",
        "diperkirakan",
        "diperlihatkan",
        "diperlukan",
        "diperlukannya",
        "dipersoalkan",
        "dipertanyakan",
        "dipunyai",
        "diri",
        "dirinya",
        "disampaikan",
        "disebut",
        "disebutkan",
        "disebutkannya",
        "disini",
        "disinilah",
        "ditambahkan",
        "ditandaskan",
        "ditanya",
        "ditanyai",
        "ditanyakan",
        "ditegaskan",
        "ditujukan",
        "ditunjuk",
        "ditunjuki",
        "ditunjukkan",
        "ditunjukkannya",
        "ditunjuknya",
        "dituturkan",
        "dituturkannya",
        "diucapkan",
        "diucapkannya",
        "diungkapkan",
        "dong",
        "dulu",
        "empat",
        "enggak",
        "enggaknya",
        "entah",
        "entahlah",
        "guna",
        "gunakan",
        "hal",
        "hampir",
        "hanya",
        "hanyalah",
        "harus",
        "haruslah",
        "harusnya",
        "hendak",
        "hendaklah",
        "hendaknya",
        "hingga",
        "ia",
        "ialah",
        "ibarat",
        "ibaratkan",
        "ibaratnya",
        "ikut",
        "ingat",
        "ingat-ingat",
        "ingin",
        "inginkah",
        "inginkan",
        "ini",
        "inikah",
        "inilah",
        "itu",
        "itukah",
        "itulah",
        "jadi",
        "jadilah",
        "jadinya",
        "jangan",
        "jangankan",
        "janganlah",
        "jauh",
        "jawab",
        "jawaban",
        "jawabnya",
        "jelas",
        "jelaskan",
        "jelaslah",
        "jelasnya",
        "jika",
        "jikalau",
        "juga",
        "jumlah",
        "jumlahnya",
        "justru",
        "kala",
        "kalau",
        "kalaulah",
        "kalaupun",
        "kalian",
        "kami",
        "kamilah",
        "kamu",
        "kamulah",
        "kan",
        "kapan",
        "kapankah",
        "kapanpun",
        "karena",
        "karenanya",
        "kasus",
        "kata",
        "katakan",
        "katakanlah",
        "katanya",
        "ke",
        "keadaan",
        "kebetulan",
        "kecil",
        "kedua",
        "keduanya",
        "keinginan",
        "kelamaan",
        "kelihatan",
        "kelihatannya",
        "kelima",
        "keluar",
        "kembali",
        "kemudian",
        "kemungkinan",
        "kemungkinannya",
        "kenapa",
        "kepada",
        "kepadanya",
        "kesampaian",
        "keseluruhan",
        "keseluruhannya",
        "keterlaluan",
        "ketika",
        "khususnya",
        "kini",
        "kinilah",
        "kira",
        "kira-kira",
        "kiranya",
        "kita",
        "kitalah",
        "kok",
        "kurang",
        "lagi",
        "lagian",
        "lah",
        "lain",
        "lainnya",
        "lalu",
        "lama",
        "lamanya",
        "lanjut",
        "lanjutnya",
        "lebih",
        "lewat",
        "lima",
        "luar",
        "macam",
        "maka",
        "makanya",
        "makin",
        "malah",
        "malahan",
        "mampu",
        "mampukah",
        "mana",
        "manakala",
        "manalagi",
        "masa",
        "masalah",
        "masalahnya",
        "masih",
        "masihkah",
        "masing",
        "masing-masing",
        "mau",
        "maupun",
        "melainkan",
        "melakukan",
        "melalui",
        "melihat",
        "melihatnya",
        "memang",
        "memastikan",
        "memberi",
        "memberikan",
        "membuat",
        "memerlukan",
        "memihak",
        "meminta",
        "memintakan",
        "memisalkan",
        "memperbuat",
        "mempergunakan",
        "memperkirakan",
        "memperlihatkan",
        "mempersiapkan",
        "mempersoalkan",
        "mempertanyakan",
        "mempunyai",
        "memulai",
        "memungkinkan",
        "menaiki",
        "menambahkan",
        "menandaskan",
        "menanti",
        "menanti-nanti",
        "menantikan",
        "menanya",
        "menanyai",
        "menanyakan",
        "mendapat",
        "mendapatkan",
        "mendatang",
        "mendatangi",
        "mendatangkan",
        "menegaskan",
        "mengakhiri",
        "mengapa",
        "mengatakan",
        "mengatakannya",
        "mengenai",
        "mengerjakan",
        "mengetahui",
        "menggunakan",
        "menghendaki",
        "mengibaratkan",
        "mengibaratkannya",
        "mengingat",
        "mengingatkan",
        "menginginkan",
        "mengira",
        "mengucapkan",
        "mengucapkannya",
        "mengungkapkan",
        "menjadi",
        "menjawab",
        "menjelaskan",
        "menuju",
        "menunjuk",
        "menunjuki",
        "menunjukkan",
        "menunjuknya",
        "menurut",
        "menuturkan",
        "menyampaikan",
        "menyangkut",
        "menyatakan",
        "menyebutkan",
        "menyeluruh",
        "menyiapkan",
        "merasa",
        "mereka",
        "merekalah",
        "merupakan",
        "meski",
        "meskipun",
        "meyakini",
        "meyakinkan",
        "minta",
        "mirip",
        "misal",
        "misalkan",
        "misalnya",
        "mula",
        "mulai",
        "mulailah",
        "mulanya",
        "mungkin",
        "mungkinkah",
        "nah",
        "naik",
        "namun",
        "nanti",
        "nantinya",
        "nyaris",
        "nyatanya",
        "oleh",
        "olehnya",
        "pada",
        "padahal",
        "padanya",
        "paling",
        "panjang",
        "pantas",
        "para",
        "pasti",
        "pastilah",
        "penting",
        "pentingnya",
        "per",
        "percuma",
        "perlu",
        "perlukah",
        "perlunya",
        "pernah",
        "persoalan",
        "pertama",
        "pertama-tama",
        "pertanyaan",
        "pertanyakan",
        "pihak",
        "pihaknya",
        "pukul",
        "pula",
        "pun",
        "punya",
        "rasa",
        "rasanya",
        "rata",
        "rupanya",
        "saat",
        "saatnya",
        "saja",
        "sajalah",
        "saling",
        "sama",
        "sama-sama",
        "sambil",
        "sampai",
        "sampai-sampai",
        "sampaikan",
        "sana",
        "sangat",
        "sangatlah",
        "satu",
        "saya",
        "sayalah",
        "se",
        "sebab",
        "sebabnya",
        "sebagai",
        "sebagaimana",
        "sebagainya",
        "sebagian",
        "sebaik",
        "sebaik-baiknya",
        "sebaiknya",
        "sebaliknya",
        "sebanyak",
        "sebegini",
        "sebegitu",
        "sebelum",
        "sebelumnya",
        "sebenarnya",
        "seberapa",
        "sebesar",
        "sebetulnya",
        "sebisanya",
        "sebuah",
        "sebut",
        "sebutlah",
        "sebutnya",
        "secara",
        "secukupnya",
        "sedang",
        "sedangkan",
        "sedemikian",
        "sedikit",
        "sedikitnya",
        "seenaknya",
        "segala",
        "segalanya",
        "segera",
        "seharusnya",
        "sehingga",
        "seingat",
        "sejak",
        "sejauh",
        "sejenak",
        "sejumlah",
        "sekadar",
        "sekadarnya",
        "sekali",
        "sekali-kali",
        "sekalian",
        "sekaligus",
        "sekalipun",
        "sekarang",
        "sekarang",
        "sekecil",
        "seketika",
        "sekiranya",
        "sekitar",
        "sekitarnya",
        "sekurang-kurangnya",
        "sekurangnya",
        "sela",
        "selain",
        "selaku",
        "selalu",
        "selama",
        "selama-lamanya",
        "selamanya",
        "selanjutnya",
        "seluruh",
        "seluruhnya",
        "semacam",
        "semakin",
        "semampu",
        "semampunya",
        "semasa",
        "semasih",
        "semata",
        "semata-mata",
        "semaunya",
        "sementara",
        "semisal",
        "semisalnya",
        "sempat",
        "semua",
        "semuanya",
        "semula",
        "sendiri",
        "sendirian",
        "sendirinya",
        "seolah",
        "seolah-olah",
        "seorang",
        "sepanjang",
        "sepantasnya",
        "sepantasnyalah",
        "seperlunya",
        "seperti",
        "sepertinya",
        "sepihak",
        "sering",
        "seringnya",
        "serta",
        "serupa",
        "sesaat",
        "sesama",
        "sesampai",
        "sesegera",
        "sesekali",
        "seseorang",
        "sesuatu",
        "sesuatunya",
        "sesudah",
        "sesudahnya",
        "setelah",
        "setempat",
        "setengah",
        "seterusnya",
        "setiap",
        "setiba",
        "setibanya",
        "setidak-tidaknya",
        "setidaknya",
        "setinggi",
        "seusai",
        "sewaktu",
        "siap",
        "siapa",
        "siapakah",
        "siapapun",
        "sini",
        "sinilah",
        "soal",
        "soalnya",
        "suatu",
        "sudah",
        "sudahkah",
        "sudahlah",
        "supaya",
        "tadi",
        "tadinya",
        "tahu",
        "tahun",
        "tak",
        "tambah",
        "tambahnya",
        "tampak",
        "tampaknya",
        "tandas",
        "tandasnya",
        "tanpa",
        "tanya",
        "tanyakan",
        "tanyanya",
        "tapi",
        "tegas",
        "tegasnya",
        "telah",
        "tempat",
        "tengah",
        "tentang",
        "tentu",
        "tentulah",
        "tentunya",
        "tepat",
        "terakhir",
        "terasa",
        "terbanyak",
        "terdahulu",
        "terdapat",
        "terdiri",
        "terhadap",
        "terhadapnya",
        "teringat",
        "teringat-ingat",
        "terjadi",
        "terjadilah",
        "terjadinya",
        "terkira",
        "terlalu",
        "terlebih",
        "terlihat",
        "termasuk",
        "ternyata",
        "tersampaikan",
        "tersebut",
        "tersebutlah",
        "tertentu",
        "tertuju",
        "terus",
        "terutama",
        "tetap",
        "tetapi",
        "tiap",
        "tiba",
        "tiba-tiba",
        "tidak",
        "tidakkah",
        "tidaklah",
        "tiga",
        "tinggi",
        "toh",
        "tunjuk",
        "turut",
        "tutur",
        "tuturnya",
        "ucap",
        "ucapnya",
        "ujar",
        "ujarnya",
        "umum",
        "umumnya",
        "ungkap",
        "ungkapnya",
        "untuk",
        "usah",
        "usai",
        "waduh",
        "wah",
        "wahai",
        "waktu",
        "waktunya",
        "walau",
        "walaupun",
        "wong",
        "yaitu",
        "yakin",
        "yakni",
        "yang"
      ];
      const ita = [
        "ad",
        "al",
        "allo",
        "ai",
        "agli",
        "all",
        "agl",
        "alla",
        "alle",
        "con",
        "col",
        "coi",
        "da",
        "dal",
        "dallo",
        "dai",
        "dagli",
        "dall",
        "dagl",
        "dalla",
        "dalle",
        "di",
        "del",
        "dello",
        "dei",
        "degli",
        "dell",
        "degl",
        "della",
        "delle",
        "in",
        "nel",
        "nello",
        "nei",
        "negli",
        "nell",
        "negl",
        "nella",
        "nelle",
        "su",
        "sul",
        "sullo",
        "sui",
        "sugli",
        "sull",
        "sugl",
        "sulla",
        "sulle",
        "per",
        "tra",
        "contro",
        "io",
        "tu",
        "lui",
        "lei",
        "noi",
        "voi",
        "loro",
        "mio",
        "mia",
        "miei",
        "mie",
        "tuo",
        "tua",
        "tuoi",
        "tue",
        "suo",
        "sua",
        "suoi",
        "sue",
        "nostro",
        "nostra",
        "nostri",
        "nostre",
        "vostro",
        "vostra",
        "vostri",
        "vostre",
        "mi",
        "ti",
        "ci",
        "vi",
        "lo",
        "la",
        "li",
        "le",
        "gli",
        "ne",
        "il",
        "un",
        "uno",
        "una",
        "ma",
        "ed",
        "se",
        "perch\xE9",
        "anche",
        "come",
        "dov",
        "dove",
        "che",
        "chi",
        "cui",
        "non",
        "pi\xF9",
        "quale",
        "quanto",
        "quanti",
        "quanta",
        "quante",
        "quello",
        "quelli",
        "quella",
        "quelle",
        "questo",
        "questi",
        "questa",
        "queste",
        "si",
        "tutto",
        "tutti",
        "a",
        "c",
        "e",
        "i",
        "l",
        "o",
        "ho",
        "hai",
        "ha",
        "abbiamo",
        "avete",
        "hanno",
        "abbia",
        "abbiate",
        "abbiano",
        "avr\xF2",
        "avrai",
        "avr\xE0",
        "avremo",
        "avrete",
        "avranno",
        "avrei",
        "avresti",
        "avrebbe",
        "avremmo",
        "avreste",
        "avrebbero",
        "avevo",
        "avevi",
        "aveva",
        "avevamo",
        "avevate",
        "avevano",
        "ebbi",
        "avesti",
        "ebbe",
        "avemmo",
        "aveste",
        "ebbero",
        "avessi",
        "avesse",
        "avessimo",
        "avessero",
        "avendo",
        "avuto",
        "avuta",
        "avuti",
        "avute",
        "sono",
        "sei",
        "\xE8",
        "siamo",
        "siete",
        "sia",
        "siate",
        "siano",
        "sar\xF2",
        "sarai",
        "sar\xE0",
        "saremo",
        "sarete",
        "saranno",
        "sarei",
        "saresti",
        "sarebbe",
        "saremmo",
        "sareste",
        "sarebbero",
        "ero",
        "eri",
        "era",
        "eravamo",
        "eravate",
        "erano",
        "fui",
        "fosti",
        "fu",
        "fummo",
        "foste",
        "furono",
        "fossi",
        "fosse",
        "fossimo",
        "fossero",
        "essendo",
        "faccio",
        "fai",
        "facciamo",
        "fanno",
        "faccia",
        "facciate",
        "facciano",
        "far\xF2",
        "farai",
        "far\xE0",
        "faremo",
        "farete",
        "faranno",
        "farei",
        "faresti",
        "farebbe",
        "faremmo",
        "fareste",
        "farebbero",
        "facevo",
        "facevi",
        "faceva",
        "facevamo",
        "facevate",
        "facevano",
        "feci",
        "facesti",
        "fece",
        "facemmo",
        "faceste",
        "fecero",
        "facessi",
        "facesse",
        "facessimo",
        "facessero",
        "facendo",
        "sto",
        "stai",
        "sta",
        "stiamo",
        "stanno",
        "stia",
        "stiate",
        "stiano",
        "star\xF2",
        "starai",
        "star\xE0",
        "staremo",
        "starete",
        "staranno",
        "starei",
        "staresti",
        "starebbe",
        "staremmo",
        "stareste",
        "starebbero",
        "stavo",
        "stavi",
        "stava",
        "stavamo",
        "stavate",
        "stavano",
        "stetti",
        "stesti",
        "stette",
        "stemmo",
        "steste",
        "stettero",
        "stessi",
        "stesse",
        "stessimo",
        "stessero",
        "stando"
      ];
      const jpn = [
        "\u306E",
        "\u306B",
        "\u306F",
        "\u3092",
        "\u305F",
        "\u304C",
        "\u3067",
        "\u3066",
        "\u3068",
        "\u3057",
        "\u308C",
        "\u3055",
        "\u3042\u308B",
        "\u3044\u308B",
        "\u3082",
        "\u3059\u308B",
        "\u304B\u3089",
        "\u306A",
        "\u3053\u3068",
        "\u3068\u3057\u3066",
        "\u3044",
        "\u3084",
        "\u308C\u308B",
        "\u306A\u3069",
        "\u306A\u3063",
        "\u306A\u3044",
        "\u3053\u306E",
        "\u305F\u3081",
        "\u305D\u306E",
        "\u3042\u3063",
        "\u3088\u3046",
        "\u307E\u305F",
        "\u3082\u306E",
        "\u3068\u3044\u3046",
        "\u3042\u308A",
        "\u307E\u3067",
        "\u3089\u308C",
        "\u306A\u308B",
        "\u3078",
        "\u304B",
        "\u3060",
        "\u3053\u308C",
        "\u306B\u3088\u3063\u3066",
        "\u306B\u3088\u308A",
        "\u304A\u308A",
        "\u3088\u308A",
        "\u306B\u3088\u308B",
        "\u305A",
        "\u306A\u308A",
        "\u3089\u308C\u308B",
        "\u306B\u304A\u3044\u3066",
        "\u3070",
        "\u306A\u304B\u3063",
        "\u306A\u304F",
        "\u3057\u304B\u3057",
        "\u306B\u3064\u3044\u3066",
        "\u305B",
        "\u3060\u3063",
        "\u305D\u306E\u5F8C",
        "\u3067\u304D\u308B",
        "\u305D\u308C",
        "\u3046",
        "\u306E\u3067",
        "\u306A\u304A",
        "\u306E\u307F",
        "\u3067\u304D",
        "\u304D",
        "\u3064",
        "\u306B\u304A\u3051\u308B",
        "\u304A\u3088\u3073",
        "\u3044\u3046",
        "\u3055\u3089\u306B",
        "\u3067\u3082",
        "\u3089",
        "\u305F\u308A",
        "\u305D\u306E\u4ED6",
        "\u306B\u95A2\u3059\u308B",
        "\u305F\u3061",
        "\u307E\u3059",
        "\u3093",
        "\u306A\u3089",
        "\u306B\u5BFE\u3057\u3066",
        "\u7279\u306B",
        "\u305B\u308B",
        "\u53CA\u3073",
        "\u3053\u308C\u3089",
        "\u3068\u304D",
        "\u3067\u306F",
        "\u306B\u3066",
        "\u307B\u304B",
        "\u306A\u304C\u3089",
        "\u3046\u3061",
        "\u305D\u3057\u3066",
        "\u3068\u3068\u3082\u306B",
        "\u305F\u3060\u3057",
        "\u304B\u3064\u3066",
        "\u305D\u308C\u305E\u308C",
        "\u307E\u305F\u306F",
        "\u304A",
        "\u307B\u3069",
        "\u3082\u306E\u306E",
        "\u306B\u5BFE\u3059\u308B",
        "\u307B\u3068\u3093\u3069",
        "\u3068\u5171\u306B",
        "\u3068\u3044\u3063\u305F",
        "\u3067\u3059",
        "\u3068\u3082",
        "\u3068\u3053\u308D",
        "\u3053\u3053"
      ];
      const kor = [
        "\uAC00",
        "\uAC00\uAE4C\uC2A4\uB85C",
        "\uAC00\uB839",
        "\uAC01",
        "\uAC01\uAC01",
        "\uAC01\uC790",
        "\uAC01\uC885",
        "\uAC16\uACE0\uB9D0\uD558\uC790\uBA74",
        "\uAC19\uB2E4",
        "\uAC19\uC774",
        "\uAC1C\uC758\uCE58\uC54A\uACE0",
        "\uAC70\uB2C8\uC640",
        "\uAC70\uBC14",
        "\uAC70\uC758",
        "\uAC83",
        "\uAC83\uACFC \uAC19\uC774",
        "\uAC83\uB4E4",
        "\uAC8C\uB2E4\uAC00",
        "\uAC8C\uC6B0\uB2E4",
        "\uACA8\uC6B0",
        "\uACAC\uC9C0\uC5D0\uC11C",
        "\uACB0\uACFC\uC5D0 \uC774\uB974\uB2E4",
        "\uACB0\uAD6D",
        "\uACB0\uB860\uC744 \uB0BC \uC218 \uC788\uB2E4",
        "\uACB8\uC0AC\uACB8\uC0AC",
        "\uACE0\uB824\uD558\uBA74",
        "\uACE0\uB85C",
        "\uACE7",
        "\uACF5\uB3D9\uC73C\uB85C",
        "\uACFC",
        "\uACFC\uC5F0",
        "\uAD00\uACC4\uAC00 \uC788\uB2E4",
        "\uAD00\uACC4\uC5C6\uC774",
        "\uAD00\uB828\uC774 \uC788\uB2E4",
        "\uAD00\uD558\uC5EC",
        "\uAD00\uD55C",
        "\uAD00\uD574\uC11C\uB294",
        "\uAD6C",
        "\uAD6C\uCCB4\uC801\uC73C\uB85C",
        "\uAD6C\uD1A0\uD558\uB2E4",
        "\uADF8",
        "\uADF8\uB4E4",
        "\uADF8\uB54C",
        "\uADF8\uB798",
        "\uADF8\uB798\uB3C4",
        "\uADF8\uB798\uC11C",
        "\uADF8\uB7EC\uB098",
        "\uADF8\uB7EC\uB2C8",
        "\uADF8\uB7EC\uB2C8\uAE4C",
        "\uADF8\uB7EC\uBA74",
        "\uADF8\uB7EC\uBBC0\uB85C",
        "\uADF8\uB7EC\uD55C\uC989",
        "\uADF8\uB7F0 \uAE4C\uB2ED\uC5D0",
        "\uADF8\uB7F0\uB370",
        "\uADF8\uB7F0\uC989",
        "\uADF8\uB7FC",
        "\uADF8\uB7FC\uC5D0\uB3C4 \uBD88\uAD6C\uD558\uACE0",
        "\uADF8\uB807\uAC8C \uD568\uC73C\uB85C\uC368",
        "\uADF8\uB807\uC9C0",
        "\uADF8\uB807\uC9C0 \uC54A\uB2E4\uBA74",
        "\uADF8\uB807\uC9C0 \uC54A\uC73C\uBA74",
        "\uADF8\uB807\uC9C0\uB9CC",
        "\uADF8\uB807\uC9C0\uC54A\uC73C\uBA74",
        "\uADF8\uB9AC\uACE0",
        "\uADF8\uB9AC\uD558\uC5EC",
        "\uADF8\uB9CC\uC774\uB2E4",
        "\uADF8\uC5D0 \uB530\uB974\uB294",
        "\uADF8\uC704\uC5D0",
        "\uADF8\uC800",
        "\uADF8\uC911\uC5D0\uC11C",
        "\uADF8\uCE58\uC9C0 \uC54A\uB2E4",
        "\uADFC\uAC70\uB85C",
        "\uADFC\uAC70\uD558\uC5EC",
        "\uAE30\uB300\uC5EC",
        "\uAE30\uC810\uC73C\uB85C",
        "\uAE30\uC900\uC73C\uB85C",
        "\uAE30\uD0C0",
        "\uAE4C\uB2ED\uC73C\uB85C",
        "\uAE4C\uC545",
        "\uAE4C\uC9C0",
        "\uAE4C\uC9C0 \uBBF8\uCE58\uB2E4",
        "\uAE4C\uC9C0\uB3C4",
        "\uAF48\uB2F9",
        "\uB059\uB059",
        "\uB07C\uC775",
        "\uB098",
        "\uB098\uBA38\uC9C0\uB294",
        "\uB0A8\uB4E4",
        "\uB0A8\uC9D3",
        "\uB108",
        "\uB108\uD76C",
        "\uB108\uD76C\uB4E4",
        "\uB124",
        "\uB137",
        "\uB144",
        "\uB17C\uD558\uC9C0 \uC54A\uB2E4",
        "\uB180\uB77C\uB2E4",
        "\uB204\uAC00 \uC54C\uACA0\uB294\uAC00",
        "\uB204\uAD6C",
        "\uB2E4\uB978",
        "\uB2E4\uB978 \uBC29\uBA74\uC73C\uB85C",
        "\uB2E4\uB9CC",
        "\uB2E4\uC12F",
        "\uB2E4\uC18C",
        "\uB2E4\uC218",
        "\uB2E4\uC2DC \uB9D0\uD558\uC790\uBA74",
        "\uB2E4\uC2DC\uB9D0\uD558\uBA74",
        "\uB2E4\uC74C",
        "\uB2E4\uC74C\uC5D0",
        "\uB2E4\uC74C\uC73C\uB85C",
        "\uB2E8\uC9C0",
        "\uB2F5\uB2E4",
        "\uB2F9\uC2E0",
        "\uB2F9\uC7A5",
        "\uB300\uB85C \uD558\uB2E4",
        "\uB300\uD558\uBA74",
        "\uB300\uD558\uC5EC",
        "\uB300\uD574 \uB9D0\uD558\uC790\uBA74",
        "\uB300\uD574\uC11C",
        "\uB315\uADF8",
        "\uB354\uAD6C\uB098",
        "\uB354\uAD70\uB2E4\uB098",
        "\uB354\uB77C\uB3C4",
        "\uB354\uBD88\uC5B4",
        "\uB354\uC6B1\uB354",
        "\uB354\uC6B1\uC774\uB294",
        "\uB3C4\uB2EC\uD558\uB2E4",
        "\uB3C4\uCC29\uD558\uB2E4",
        "\uB3D9\uC2DC\uC5D0",
        "\uB3D9\uC548",
        "\uB41C\uBC14\uC5D0\uC57C",
        "\uB41C\uC774\uC0C1",
        "\uB450\uBC88\uC9F8\uB85C",
        "\uB458",
        "\uB465\uB465",
        "\uB4A4\uB530\uB77C",
        "\uB4A4\uC774\uC5B4",
        "\uB4E0\uAC04\uC5D0",
        "\uB4E4",
        "\uB4F1",
        "\uB4F1\uB4F1",
        "\uB529\uB3D9",
        "\uB530\uB77C",
        "\uB530\uB77C\uC11C",
        "\uB530\uC704",
        "\uB530\uC9C0\uC9C0 \uC54A\uB2E4",
        "\uB531",
        "\uB54C",
        "\uB54C\uAC00 \uB418\uC5B4",
        "\uB54C\uBB38\uC5D0",
        "\uB610",
        "\uB610\uD55C",
        "\uB69D\uB69D",
        "\uB77C \uD574\uB3C4",
        "\uB839",
        "\uB85C",
        "\uB85C \uC778\uD558\uC5EC",
        "\uB85C\uBD80\uD130",
        "\uB85C\uC368",
        "\uB959",
        "\uB97C",
        "\uB9C8\uC74C\uB300\uB85C",
        "\uB9C8\uC800",
        "\uB9C8\uC800\uB3C4",
        "\uB9C8\uCE58",
        "\uB9C9\uB860\uD558\uACE0",
        "\uB9CC \uBABB\uD558\uB2E4",
        "\uB9CC\uC57D",
        "\uB9CC\uC57D\uC5D0",
        "\uB9CC\uC740 \uC544\uB2C8\uB2E4",
        "\uB9CC\uC774 \uC544\uB2C8\uB2E4",
        "\uB9CC\uC77C",
        "\uB9CC\uD07C",
        "\uB9D0\uD558\uC790\uBA74",
        "\uB9D0\uD560\uAC83\uB3C4 \uC5C6\uACE0",
        "\uB9E4",
        "\uB9E4\uBC88",
        "\uBA54\uC4F0\uAC81\uB2E4",
        "\uBA87",
        "\uBAA8",
        "\uBAA8\uB450",
        "\uBB34\uB835",
        "\uBB34\uB98E\uC4F0\uACE0",
        "\uBB34\uC2A8",
        "\uBB34\uC5C7",
        "\uBB34\uC5C7\uB54C\uBB38\uC5D0",
        "\uBB3C\uB860",
        "\uBC0F",
        "\uBC14\uAFB8\uC5B4\uB9D0\uD558\uBA74",
        "\uBC14\uAFB8\uC5B4\uB9D0\uD558\uC790\uBA74",
        "\uBC14\uAFB8\uC5B4\uC11C \uB9D0\uD558\uBA74",
        "\uBC14\uAFB8\uC5B4\uC11C \uD55C\uB2E4\uBA74",
        "\uBC14\uAFD4 \uB9D0\uD558\uBA74",
        "\uBC14\uB85C",
        "\uBC14\uC640\uAC19\uC774",
        "\uBC16\uC5D0 \uC548\uB41C\uB2E4",
        "\uBC18\uB300\uB85C",
        "\uBC18\uB300\uB85C \uB9D0\uD558\uC790\uBA74",
        "\uBC18\uB4DC\uC2DC",
        "\uBC84\uAE08",
        "\uBCF4\uB294\uB370\uC11C",
        "\uBCF4\uB2E4\uB354",
        "\uBCF4\uB4DC\uB4DD",
        "\uBCF8\uB300\uB85C",
        "\uBD10",
        "\uBD10\uB77C",
        "\uBD80\uB958\uC758 \uC0AC\uB78C\uB4E4",
        "\uBD80\uD130",
        "\uBD88\uAD6C\uD558\uACE0",
        "\uBD88\uBB38\uD558\uACE0",
        "\uBD95\uBD95",
        "\uBE44\uAC71\uAC70\uB9AC\uB2E4",
        "\uBE44\uAD50\uC801",
        "\uBE44\uAE38\uC218 \uC5C6\uB2E4",
        "\uBE44\uB85C\uC18C",
        "\uBE44\uB85D",
        "\uBE44\uC2B7\uD558\uB2E4",
        "\uBE44\uCD94\uC5B4 \uBCF4\uC544",
        "\uBE44\uD558\uBA74",
        "\uBFD0\uB9CC \uC544\uB2C8\uB77C",
        "\uBFD0\uB9CC\uC544\uB2C8\uB77C",
        "\uBFD0\uC774\uB2E4",
        "\uC090\uAC71",
        "\uC090\uAC71\uAC70\uB9AC\uB2E4",
        "\uC0AC",
        "\uC0BC",
        "\uC0C1\uB300\uC801\uC73C\uB85C \uB9D0\uD558\uC790\uBA74",
        "\uC0DD\uAC01\uD55C\uB300\uB85C",
        "\uC124\uB839",
        "\uC124\uB9C8",
        "\uC124\uC0AC",
        "\uC14B",
        "\uC18C\uC0DD",
        "\uC18C\uC778",
        "\uC1A8",
        "\uC27F",
        "\uC2B5\uB2C8\uAE4C",
        "\uC2B5\uB2C8\uB2E4",
        "\uC2DC\uAC01",
        "\uC2DC\uAC04",
        "\uC2DC\uC791\uD558\uC5EC",
        "\uC2DC\uCD08\uC5D0",
        "\uC2DC\uD0A4\uB2E4",
        "\uC2E4\uB85C",
        "\uC2EC\uC9C0\uC5B4",
        "\uC544",
        "\uC544\uB2C8",
        "\uC544\uB2C8\uB098\uB2E4\uB97C\uAC00",
        "\uC544\uB2C8\uB77C\uBA74",
        "\uC544\uB2C8\uBA74",
        "\uC544\uB2C8\uC5C8\uB2E4\uBA74",
        "\uC544\uB798\uC717",
        "\uC544\uBB34\uAC70\uB098",
        "\uC544\uBB34\uB3C4",
        "\uC544\uC57C",
        "\uC544\uC6B8\uB7EC",
        "\uC544\uC774",
        "\uC544\uC774\uACE0",
        "\uC544\uC774\uAD6C",
        "\uC544\uC774\uC57C",
        "\uC544\uC774\uCFE0",
        "\uC544\uD558",
        "\uC544\uD649",
        "\uC548 \uADF8\uB7EC\uBA74",
        "\uC54A\uAE30 \uC704\uD558\uC5EC",
        "\uC54A\uAE30 \uC704\uD574\uC11C",
        "\uC54C \uC218 \uC788\uB2E4",
        "\uC54C\uC558\uC5B4",
        "\uC557",
        "\uC55E\uC5D0\uC11C",
        "\uC55E\uC758\uAC83",
        "\uC57C",
        "\uC57D\uAC04",
        "\uC591\uC790",
        "\uC5B4",
        "\uC5B4\uAE30\uC5EC\uCC28",
        "\uC5B4\uB290",
        "\uC5B4\uB290 \uB144\uB3C4",
        "\uC5B4\uB290\uAC83",
        "\uC5B4\uB290\uACF3",
        "\uC5B4\uB290\uB54C",
        "\uC5B4\uB290\uCABD",
        "\uC5B4\uB290\uD574",
        "\uC5B4\uB514",
        "\uC5B4\uB54C",
        "\uC5B4\uB5A0\uD55C",
        "\uC5B4\uB5A4",
        "\uC5B4\uB5A4\uAC83",
        "\uC5B4\uB5A4\uAC83\uB4E4",
        "\uC5B4\uB5BB\uAC8C",
        "\uC5B4\uB5BB\uD574",
        "\uC5B4\uC774",
        "\uC5B4\uC9F8\uC11C",
        "\uC5B4\uCA0B\uB4E0",
        "\uC5B4\uCA54\uC218 \uC5C6\uB2E4",
        "\uC5B4\uCC0C",
        "\uC5B4\uCC0C\uB40F\uB4E0",
        "\uC5B4\uCC0C\uB40F\uC5B4",
        "\uC5B4\uCC0C\uD558\uB4E0\uC9C0",
        "\uC5B4\uCC0C\uD558\uC5EC",
        "\uC5B8\uC81C",
        "\uC5B8\uC820\uAC00",
        "\uC5BC\uB9C8",
        "\uC5BC\uB9C8 \uC548 \uB418\uB294 \uAC83",
        "\uC5BC\uB9C8\uAC04",
        "\uC5BC\uB9C8\uB098",
        "\uC5BC\uB9C8\uB4E0\uC9C0",
        "\uC5BC\uB9C8\uB9CC\uD07C",
        "\uC5BC\uB9C8\uD07C",
        "\uC5C9\uC5C9",
        "\uC5D0",
        "\uC5D0 \uAC00\uC11C",
        "\uC5D0 \uB2EC\uB824 \uC788\uB2E4",
        "\uC5D0 \uB300\uD574",
        "\uC5D0 \uC788\uB2E4",
        "\uC5D0 \uD55C\uD558\uB2E4",
        "\uC5D0\uAC8C",
        "\uC5D0\uC11C",
        "\uC5EC",
        "\uC5EC\uAE30",
        "\uC5EC\uB35F",
        "\uC5EC\uB7EC\uBD84",
        "\uC5EC\uBCF4\uC2DC\uC624",
        "\uC5EC\uBD80",
        "\uC5EC\uC12F",
        "\uC5EC\uC804\uD788",
        "\uC5EC\uCC28",
        "\uC5F0\uAD00\uB418\uB2E4",
        "\uC5F0\uC774\uC11C",
        "\uC601",
        "\uC601\uCC28",
        "\uC606\uC0AC\uB78C",
        "\uC608",
        "\uC608\uB97C \uB4E4\uBA74",
        "\uC608\uB97C \uB4E4\uC790\uBA74",
        "\uC608\uCEE8\uB300",
        "\uC608\uD558\uBA74",
        "\uC624",
        "\uC624\uB85C\uC9C0",
        "\uC624\uB974\uB2E4",
        "\uC624\uC790\uB9C8\uC790",
        "\uC624\uC9C1",
        "\uC624\uD638",
        "\uC624\uD788\uB824",
        "\uC640",
        "\uC640 \uAC19\uC740 \uC0AC\uB78C\uB4E4",
        "\uC640\uB974\uB974",
        "\uC640\uC544",
        "\uC65C",
        "\uC65C\uB0D0\uD558\uBA74",
        "\uC678\uC5D0\uB3C4",
        "\uC694\uB9CC\uD07C",
        "\uC694\uB9CC\uD55C \uAC83",
        "\uC694\uB9CC\uD55C\uAC78",
        "\uC694\uCEE8\uB300",
        "\uC6B0\uB974\uB974",
        "\uC6B0\uB9AC",
        "\uC6B0\uB9AC\uB4E4",
        "\uC6B0\uC120",
        "\uC6B0\uC5D0 \uC885\uD569\uD55C\uAC83\uACFC\uAC19\uC774",
        "\uC6B4\uC6B4",
        "\uC6D4",
        "\uC704\uC5D0\uC11C \uC11C\uC220\uD55C\uBC14\uC640\uAC19\uC774",
        "\uC704\uD558\uC5EC",
        "\uC704\uD574\uC11C",
        "\uC719\uC719",
        "\uC721",
        "\uC73C\uB85C",
        "\uC73C\uB85C \uC778\uD558\uC5EC",
        "\uC73C\uB85C\uC11C",
        "\uC73C\uB85C\uC368",
        "\uC744",
        "\uC751",
        "\uC751\uB2F9",
        "\uC758",
        "\uC758\uAC70\uD558\uC5EC",
        "\uC758\uC9C0\uD558\uC5EC",
        "\uC758\uD574",
        "\uC758\uD574\uB418\uB2E4",
        "\uC758\uD574\uC11C",
        "\uC774",
        "\uC774 \uB418\uB2E4",
        "\uC774 \uB54C\uBB38\uC5D0",
        "\uC774 \uBC16\uC5D0",
        "\uC774 \uC678\uC5D0",
        "\uC774 \uC815\uB3C4\uC758",
        "\uC774\uAC83",
        "\uC774\uACF3",
        "\uC774\uB54C",
        "\uC774\uB77C\uBA74",
        "\uC774\uB798",
        "\uC774\uB7EC\uC774\uB7EC\uD558\uB2E4",
        "\uC774\uB7EC\uD55C",
        "\uC774\uB7F0",
        "\uC774\uB7F4\uC815\uB3C4\uB85C",
        "\uC774\uB807\uAC8C \uB9CE\uC740 \uAC83",
        "\uC774\uB807\uAC8C\uB418\uBA74",
        "\uC774\uB807\uAC8C\uB9D0\uD558\uC790\uBA74",
        "\uC774\uB807\uAD6C\uB098",
        "\uC774\uB85C \uC778\uD558\uC5EC",
        "\uC774\uB974\uAE30\uAE4C\uC9C0",
        "\uC774\uB9AC\uD558\uC5EC",
        "\uC774\uB9CC\uD07C",
        "\uC774\uBC88",
        "\uC774\uBD10",
        "\uC774\uC0C1",
        "\uC774\uC5B4\uC11C",
        "\uC774\uC5C8\uB2E4",
        "\uC774\uC640 \uAC19\uB2E4",
        "\uC774\uC640 \uAC19\uC740",
        "\uC774\uC640 \uBC18\uB300\uB85C",
        "\uC774\uC640\uAC19\uB2E4\uBA74",
        "\uC774\uC678\uC5D0\uB3C4",
        "\uC774\uC6A9\uD558\uC5EC",
        "\uC774\uC720\uB9CC\uC73C\uB85C",
        "\uC774\uC820",
        "\uC774\uC9C0\uB9CC",
        "\uC774\uCABD",
        "\uC774\uCC9C\uAD6C",
        "\uC774\uCC9C\uC721",
        "\uC774\uCC9C\uCE60",
        "\uC774\uCC9C\uD314",
        "\uC778 \uB4EF\uD558\uB2E4",
        "\uC778\uC820",
        "\uC77C",
        "\uC77C\uAC83\uC774\uB2E4",
        "\uC77C\uACF1",
        "\uC77C\uB2E8",
        "\uC77C\uB54C",
        "\uC77C\uBC18\uC801\uC73C\uB85C",
        "\uC77C\uC9C0\uB77C\uB3C4",
        "\uC784\uC5D0 \uD2C0\uB9BC\uC5C6\uB2E4",
        "\uC785\uAC01\uD558\uC5EC",
        "\uC785\uC7A5\uC5D0\uC11C",
        "\uC787\uB530\uB77C",
        "\uC788\uB2E4",
        "\uC790",
        "\uC790\uAE30",
        "\uC790\uAE30\uC9D1",
        "\uC790\uB9C8\uC790",
        "\uC790\uC2E0",
        "\uC7A0\uAE50",
        "\uC7A0\uC2DC",
        "\uC800",
        "\uC800\uAC83",
        "\uC800\uAC83\uB9CC\uD07C",
        "\uC800\uAE30",
        "\uC800\uCABD",
        "\uC800\uD76C",
        "\uC804\uBD80",
        "\uC804\uC790",
        "\uC804\uD6C4",
        "\uC810\uC5D0\uC11C \uBCF4\uC544",
        "\uC815\uB3C4\uC5D0 \uC774\uB974\uB2E4",
        "\uC81C",
        "\uC81C\uAC01\uAE30",
        "\uC81C\uC678\uD558\uACE0",
        "\uC870\uAE08",
        "\uC870\uCC28",
        "\uC870\uCC28\uB3C4",
        "\uC878\uC878",
        "\uC880",
        "\uC88B\uC544",
        "\uC88D\uC88D",
        "\uC8FC\uB8E9\uC8FC\uB8E9",
        "\uC8FC\uC800\uD558\uC9C0 \uC54A\uACE0",
        "\uC904\uC740 \uBAB0\uB78F\uB2E4",
        "\uC904\uC740\uBAA8\uB978\uB2E4",
        "\uC911\uC5D0\uC11C",
        "\uC911\uC758\uD558\uB098",
        "\uC988\uC74C\uD558\uC5EC",
        "\uC989",
        "\uC989\uC2DC",
        "\uC9C0\uB4E0\uC9C0",
        "\uC9C0\uB9CC",
        "\uC9C0\uB9D0\uACE0",
        "\uC9C4\uC9DC\uB85C",
        "\uCABD\uC73C\uB85C",
        "\uCC28\uB77C\uB9AC",
        "\uCC38",
        "\uCC38\uB098",
        "\uCCAB\uBC88\uC9F8\uB85C",
        "\uCCC7",
        "\uCD1D\uC801\uC73C\uB85C",
        "\uCD1D\uC801\uC73C\uB85C \uB9D0\uD558\uBA74",
        "\uCD1D\uC801\uC73C\uB85C \uBCF4\uBA74",
        "\uCE60",
        "\uCF78\uCF78",
        "\uCF85\uCF85",
        "\uCFF5",
        "\uD0C0\uB2E4",
        "\uD0C0\uC778",
        "\uD0D5\uD0D5",
        "\uD1A0\uD558\uB2E4",
        "\uD1B5\uD558\uC5EC",
        "\uD22D",
        "\uD264",
        "\uD2C8\uD0C0",
        "\uD30D",
        "\uD314",
        "\uD37D",
        "\uD384\uB801",
        "\uD558",
        "\uD558\uAC8C\uB420\uAC83\uC774\uB2E4",
        "\uD558\uAC8C\uD558\uB2E4",
        "\uD558\uACA0\uB294\uAC00",
        "\uD558\uACE0 \uC788\uB2E4",
        "\uD558\uACE0\uC788\uC5C8\uB2E4",
        "\uD558\uACE4\uD558\uC600\uB2E4",
        "\uD558\uAD6C\uB098",
        "\uD558\uAE30 \uB54C\uBB38\uC5D0",
        "\uD558\uAE30 \uC704\uD558\uC5EC",
        "\uD558\uAE30\uB294\uD55C\uB370",
        "\uD558\uAE30\uB9CC \uD558\uBA74",
        "\uD558\uAE30\uBCF4\uB2E4\uB294",
        "\uD558\uAE30\uC5D0",
        "\uD558\uB098",
        "\uD558\uB290\uB2C8",
        "\uD558\uB294 \uAE40\uC5D0",
        "\uD558\uB294 \uD3B8\uC774 \uB0AB\uB2E4",
        "\uD558\uB294\uAC83\uB3C4",
        "\uD558\uB294\uAC83\uB9CC \uBABB\uD558\uB2E4",
        "\uD558\uB294\uAC83\uC774 \uB0AB\uB2E4",
        "\uD558\uB294\uBC14",
        "\uD558\uB354\uB77C\uB3C4",
        "\uD558\uB3C4\uB2E4",
        "\uD558\uB3C4\uB85D\uC2DC\uD0A4\uB2E4",
        "\uD558\uB3C4\uB85D\uD558\uB2E4",
        "\uD558\uB4E0\uC9C0",
        "\uD558\uB824\uACE0\uD558\uB2E4",
        "\uD558\uB9C8\uD130\uBA74",
        "\uD558\uBA74 \uD560\uC218\uB85D",
        "\uD558\uBA74\uB41C\uB2E4",
        "\uD558\uBA74\uC11C",
        "\uD558\uBB3C\uBA70",
        "\uD558\uC5EC\uAE08",
        "\uD558\uC5EC\uC57C",
        "\uD558\uC790\uB9C8\uC790",
        "\uD558\uC9C0 \uC54A\uB294\uB2E4\uBA74",
        "\uD558\uC9C0 \uC54A\uB3C4\uB85D",
        "\uD558\uC9C0\uB9C8",
        "\uD558\uC9C0\uB9C8\uB77C",
        "\uD558\uC9C0\uB9CC",
        "\uD558\uD558",
        "\uD55C \uAE4C\uB2ED\uC5D0",
        "\uD55C \uC774\uC720\uB294",
        "\uD55C \uD6C4",
        "\uD55C\uB2E4\uBA74",
        "\uD55C\uB2E4\uBA74 \uBAB0\uB77C\uB3C4",
        "\uD55C\uB370",
        "\uD55C\uB9C8\uB514",
        "\uD55C\uC801\uC774\uC788\uB2E4",
        "\uD55C\uCF20\uC73C\uB85C\uB294",
        "\uD55C\uD56D\uBAA9",
        "\uD560 \uB530\uB984\uC774\uB2E4",
        "\uD560 \uC0DD\uAC01\uC774\uB2E4",
        "\uD560 \uC904 \uC548\uB2E4",
        "\uD560 \uC9C0\uACBD\uC774\uB2E4",
        "\uD560 \uD798\uC774 \uC788\uB2E4",
        "\uD560\uB54C",
        "\uD560\uB9CC\uD558\uB2E4",
        "\uD560\uB9DD\uC815",
        "\uD560\uBFD0",
        "\uD560\uC218\uC788\uB2E4",
        "\uD560\uC218\uC788\uC5B4",
        "\uD560\uC904\uC54C\uB2E4",
        "\uD560\uC9C0\uB77C\uB3C4",
        "\uD560\uC9C0\uC5B8\uC815",
        "\uD568\uAED8",
        "\uD574\uB3C4\uB41C\uB2E4",
        "\uD574\uB3C4\uC88B\uB2E4",
        "\uD574\uBD10\uC694",
        "\uD574\uC11C\uB294 \uC548\uB41C\uB2E4",
        "\uD574\uC57C\uD55C\uB2E4",
        "\uD574\uC694",
        "\uD588\uC5B4\uC694",
        "\uD5A5\uD558\uB2E4",
        "\uD5A5\uD558\uC5EC",
        "\uD5A5\uD574\uC11C",
        "\uD5C8",
        "\uD5C8\uAC71",
        "\uD5C8\uD5C8",
        "\uD5C9",
        "\uD5C9\uD5C9",
        "\uD5D0\uB5A1\uD5D0\uB5A1",
        "\uD615\uC2DD\uC73C\uB85C \uC4F0\uC5EC",
        "\uD639\uC2DC",
        "\uD639\uC740",
        "\uD63C\uC790",
        "\uD6E8\uC52C",
        "\uD718\uC775",
        "\uD734",
        "\uD750\uD750",
        "\uD765",
        "\uD798\uC785\uC5B4",
        "\uFE3F",
        "\uFF5E",
        "\uFFE5"
      ];
      const kur = [
        "\u0626\u06CE\u0645\u06D5",
        "\u0626\u06CE\u0648\u06D5",
        "\u0626\u06D5\u0645",
        "\u0626\u06D5\u0648",
        "\u0626\u06D5\u0648\u0627\u0646",
        "\u0626\u06D5\u0648\u06D5\u06CC",
        "\u0628\u06C6",
        "\u0628\u06CE",
        "\u0628\u06CE\u062C\u06AF\u06D5",
        "\u0628\u06D5",
        "\u0628\u06D5\u0628\u06CE",
        "\u0628\u06D5\u062F\u06D5\u0645",
        "\u0628\u06D5\u0631\u062F\u06D5\u0645",
        "\u0628\u06D5\u0631\u0644\u06D5",
        "\u0628\u06D5\u0631\u06D5\u0648\u06CC",
        "\u0628\u06D5\u0631\u06D5\u0648\u06D5",
        "\u0628\u06D5\u0644\u0627\u06CC",
        "\u0628\u06D5\u067E\u06CE\u06CC",
        "\u062A\u06C6",
        "\u062A\u06CE",
        "\u062C\u06AF\u06D5",
        "\u062F\u0648\u0627\u06CC",
        "\u062F\u0648\u0648",
        "\u062F\u06D5",
        "\u062F\u06D5\u06A9\u0627\u062A",
        "\u062F\u06D5\u06AF\u06D5\u06B5",
        "\u0633\u06D5\u0631",
        "\u0644\u06CE",
        "\u0644\u06D5",
        "\u0644\u06D5\u0628\u0627\u0628\u06D5\u062A",
        "\u0644\u06D5\u0628\u0627\u062A\u06CC",
        "\u0644\u06D5\u0628\u0627\u0631\u06D5\u06CC",
        "\u0644\u06D5\u0628\u0631\u06CE\u062A\u06CC",
        "\u0644\u06D5\u0628\u0646",
        "\u0644\u06D5\u0628\u06D5\u0631",
        "\u0644\u06D5\u0628\u06D5\u06CC\u0646\u06CC",
        "\u0644\u06D5\u062F\u06D5\u0645",
        "\u0644\u06D5\u0631\u06CE",
        "\u0644\u06D5\u0631\u06CE\u06AF\u0627",
        "\u0644\u06D5\u0631\u06D5\u0648\u06CC",
        "\u0644\u06D5\u0633\u06D5\u0631",
        "\u0644\u06D5\u0644\u0627\u06CC\u06D5\u0646",
        "\u0644\u06D5\u0646\u0627\u0648",
        "\u0644\u06D5\u0646\u06CE\u0648",
        "\u0644\u06D5\u0648",
        "\u0644\u06D5\u067E\u06CE\u0646\u0627\u0648\u06CC",
        "\u0644\u06D5\u0698\u06CE\u0631",
        "\u0644\u06D5\u06AF\u06D5\u06B5",
        "\u0645\u0646",
        "\u0646\u0627\u0648",
        "\u0646\u06CE\u0648\u0627\u0646",
        "\u0647\u06D5\u0631",
        "\u0647\u06D5\u0631\u0648\u06D5\u0647\u0627",
        "\u0648",
        "\u0648\u06D5\u06A9",
        "\u067E\u0627\u0634",
        "\u067E\u06CE",
        "\u067E\u06CE\u0634",
        "\u0686\u06D5\u0646\u062F",
        "\u06A9\u0631\u062F",
        "\u06A9\u06D5",
        "\u06CC"
      ];
      const lat = [
        "a",
        "ab",
        "ac",
        "ad",
        "at",
        "atque",
        "aut",
        "autem",
        "cum",
        "de",
        "dum",
        "e",
        "erant",
        "erat",
        "est",
        "et",
        "etiam",
        "ex",
        "haec",
        "hic",
        "hoc",
        "in",
        "ita",
        "me",
        "nec",
        "neque",
        "non",
        "per",
        "qua",
        "quae",
        "quam",
        "qui",
        "quibus",
        "quidem",
        "quo",
        "quod",
        "re",
        "rebus",
        "rem",
        "res",
        "sed",
        "si",
        "sic",
        "sunt",
        "tamen",
        "tandem",
        "te",
        "ut",
        "vel"
      ];
      const lav = [
        "aiz",
        "ap",
        "apak\u0161",
        "apak\u0161pus",
        "ar",
        "ar\u012B",
        "aug\u0161pus",
        "bet",
        "bez",
        "bija",
        "biji",
        "biju",
        "bij\u0101m",
        "bij\u0101t",
        "b\u016Bs",
        "b\u016Bsi",
        "b\u016Bsiet",
        "b\u016Bsim",
        "b\u016Bt",
        "b\u016B\u0161u",
        "caur",
        "diem\u017E\u0113l",
        "diezin",
        "dro\u0161i",
        "d\u0113\u013C",
        "esam",
        "esat",
        "esi",
        "esmu",
        "gan",
        "gar",
        "iekam",
        "iekams",
        "iek\u0101m",
        "iek\u0101ms",
        "iek\u0161",
        "iek\u0161pus",
        "ik",
        "ir",
        "it",
        "itin",
        "iz",
        "ja",
        "jau",
        "jeb",
        "jeb\u0161u",
        "jel",
        "jo",
        "j\u0101",
        "ka",
        "kam\u0113r",
        "kaut",
        "kol\u012Bdz",
        "kop\u0161",
        "k\u0101",
        "k\u013Cuva",
        "k\u013Cuvi",
        "k\u013Cuvu",
        "k\u013Cuv\u0101m",
        "k\u013Cuv\u0101t",
        "k\u013C\u016Bs",
        "k\u013C\u016Bsi",
        "k\u013C\u016Bsiet",
        "k\u013C\u016Bsim",
        "k\u013C\u016Bst",
        "k\u013C\u016Bstam",
        "k\u013C\u016Bstat",
        "k\u013C\u016Bsti",
        "k\u013C\u016Bstu",
        "k\u013C\u016Bt",
        "k\u013C\u016B\u0161u",
        "labad",
        "lai",
        "lejpus",
        "l\u012Bdz",
        "l\u012Bdzko",
        "ne",
        "neb\u016Bt",
        "nedz",
        "nek\u0101",
        "nevis",
        "nezin",
        "no",
        "nu",
        "n\u0113",
        "otrpus",
        "pa",
        "par",
        "pat",
        "pie",
        "pirms",
        "pret",
        "priek\u0161",
        "p\u0101r",
        "p\u0113c",
        "starp",
        "tad",
        "tak",
        "tapi",
        "taps",
        "tapsi",
        "tapsiet",
        "tapsim",
        "tapt",
        "tap\u0101t",
        "tap\u0161u",
        "ta\u010Du",
        "te",
        "tiec",
        "tiek",
        "tiekam",
        "tiekat",
        "tieku",
        "tik",
        "tika",
        "tikai",
        "tiki",
        "tikko",
        "tiklab",
        "tikl\u012Bdz",
        "tiks",
        "tiksiet",
        "tiksim",
        "tikt",
        "tiku",
        "tikvien",
        "tik\u0101m",
        "tik\u0101t",
        "tik\u0161u",
        "tom\u0113r",
        "topat",
        "turpretim",
        "turpret\u012B",
        "t\u0101",
        "t\u0101d\u0113\u013C",
        "t\u0101lab",
        "t\u0101p\u0113c",
        "un",
        "uz",
        "vai",
        "var",
        "varat",
        "var\u0113ja",
        "var\u0113ji",
        "var\u0113ju",
        "var\u0113j\u0101m",
        "var\u0113j\u0101t",
        "var\u0113s",
        "var\u0113si",
        "var\u0113siet",
        "var\u0113sim",
        "var\u0113t",
        "var\u0113\u0161u",
        "vien",
        "virs",
        "virspus",
        "vis",
        "vi\u0146pus",
        "zem",
        "\u0101rpus",
        "\u0161aipus"
      ];
      const lit = [
        "abi",
        "abidvi",
        "abiejose",
        "abiejuose",
        "abiej\xF8",
        "abiem",
        "abigaliai",
        "abipus",
        "abu",
        "abudu",
        "ai",
        "ana",
        "anaiptol",
        "anaisiais",
        "anajai",
        "anajam",
        "anajame",
        "anapus",
        "anas",
        "anasai",
        "anasis",
        "anei",
        "aniedvi",
        "anieji",
        "aniesiems",
        "anoji",
        "anojo",
        "anojoje",
        "anokia",
        "anoks",
        "anosiomis",
        "anosioms",
        "anosios",
        "anosiose",
        "anot",
        "ant",
        "antai",
        "anuodu",
        "anuoju",
        "anuosiuose",
        "anuosius",
        "an\xE0ja",
        "an\xE0j\xE0",
        "an\xE0j\xE1",
        "an\xE0sias",
        "an\xF8j\xF8",
        "apie",
        "aplink",
        "ar",
        "arba",
        "argi",
        "arti",
        "auk\xF0\xE8iau",
        "a\xF0",
        "be",
        "bei",
        "beje",
        "bema\xFE",
        "bent",
        "bet",
        "betgi",
        "beveik",
        "dar",
        "dargi",
        "daugma\xFE",
        "deja",
        "d\xEBka",
        "d\xEBl",
        "d\xEBlei",
        "d\xEBlto",
        "ech",
        "et",
        "gal",
        "galb\xFBt",
        "galgi",
        "gan",
        "gana",
        "gi",
        "greta",
        "idant",
        "iki",
        "ir",
        "irgi",
        "it",
        "itin",
        "i\xF0",
        "i\xF0ilgai",
        "i\xF0vis",
        "jaisiais",
        "jajai",
        "jajam",
        "jajame",
        "jei",
        "jeigu",
        "ji",
        "jiedu",
        "jiedvi",
        "jieji",
        "jiesiems",
        "jinai",
        "jis",
        "jisai",
        "jog",
        "joji",
        "jojo",
        "jojoje",
        "jokia",
        "joks",
        "josiomis",
        "josioms",
        "josios",
        "josiose",
        "judu",
        "judvi",
        "juk",
        "jumis",
        "jums",
        "jumyse",
        "juodu",
        "juoju",
        "juosiuose",
        "juosius",
        "jus",
        "j\xE0ja",
        "j\xE0j\xE0",
        "j\xE0sias",
        "j\xE1j\xE1",
        "j\xF8j\xF8",
        "j\xFBs",
        "j\xFBsi\xF0kis",
        "j\xFBsi\xF0k\xEB",
        "j\xFBs\xF8",
        "kad",
        "kada",
        "kadangi",
        "kai",
        "kaip",
        "kaipgi",
        "kas",
        "katra",
        "katras",
        "katriedvi",
        "katruodu",
        "ka\xFEin",
        "ka\xFEkas",
        "ka\xFEkatra",
        "ka\xFEkatras",
        "ka\xFEkokia",
        "ka\xFEkoks",
        "ka\xFEkuri",
        "ka\xFEkuris",
        "kiaurai",
        "kiek",
        "kiekvienas",
        "kieno",
        "kita",
        "kitas",
        "kitokia",
        "kitoks",
        "kod\xEBl",
        "kokia",
        "koks",
        "kol",
        "kolei",
        "kone",
        "kuomet",
        "kur",
        "kurgi",
        "kuri",
        "kuriedvi",
        "kuris",
        "kuriuodu",
        "lai",
        "lig",
        "ligi",
        "link",
        "lyg",
        "man",
        "manaisiais",
        "manajai",
        "manajam",
        "manajame",
        "manas",
        "manasai",
        "manasis",
        "mane",
        "manieji",
        "maniesiems",
        "manim",
        "manimi",
        "mani\xF0kis",
        "mani\xF0k\xEB",
        "mano",
        "manoji",
        "manojo",
        "manojoje",
        "manosiomis",
        "manosioms",
        "manosios",
        "manosiose",
        "manuoju",
        "manuosiuose",
        "manuosius",
        "manyje",
        "man\xE0ja",
        "man\xE0j\xE0",
        "man\xE0j\xE1",
        "man\xE0sias",
        "man\xE6s",
        "man\xF8j\xF8",
        "mat",
        "ma\xFEdaug",
        "ma\xFEne",
        "mes",
        "mudu",
        "mudvi",
        "mumis",
        "mums",
        "mumyse",
        "mus",
        "m\xFBsi\xF0kis",
        "m\xFBsi\xF0k\xEB",
        "m\xFBs\xF8",
        "na",
        "nagi",
        "ne",
        "nebe",
        "nebent",
        "negi",
        "negu",
        "nei",
        "nejau",
        "nejaugi",
        "nekaip",
        "nelyginant",
        "nes",
        "net",
        "netgi",
        "netoli",
        "neva",
        "nors",
        "nuo",
        "n\xEB",
        "o",
        "ogi",
        "oi",
        "paeiliui",
        "pagal",
        "pakeliui",
        "palaipsniui",
        "palei",
        "pas",
        "pasak",
        "paskos",
        "paskui",
        "paskum",
        "pat",
        "pati",
        "patiems",
        "paties",
        "pats",
        "patys",
        "pat\xE1",
        "pa\xE8iais",
        "pa\xE8iam",
        "pa\xE8iame",
        "pa\xE8iu",
        "pa\xE8iuose",
        "pa\xE8ius",
        "pa\xE8i\xF8",
        "per",
        "pernelyg",
        "pirm",
        "pirma",
        "pirmiau",
        "po",
        "prie",
        "prie\xF0",
        "prie\xF0ais",
        "pro",
        "pusiau",
        "rasi",
        "rodos",
        "sau",
        "savaisiais",
        "savajai",
        "savajam",
        "savajame",
        "savas",
        "savasai",
        "savasis",
        "save",
        "savieji",
        "saviesiems",
        "savimi",
        "savi\xF0kis",
        "savi\xF0k\xEB",
        "savo",
        "savoji",
        "savojo",
        "savojoje",
        "savosiomis",
        "savosioms",
        "savosios",
        "savosiose",
        "savuoju",
        "savuosiuose",
        "savuosius",
        "savyje",
        "sav\xE0ja",
        "sav\xE0j\xE0",
        "sav\xE0j\xE1",
        "sav\xE0sias",
        "sav\xE6s",
        "sav\xF8j\xF8",
        "skersai",
        "skrad\xFEiai",
        "sta\xE8iai",
        "su",
        "sulig",
        "ta",
        "tad",
        "tai",
        "taigi",
        "taip",
        "taipogi",
        "taisiais",
        "tajai",
        "tajam",
        "tajame",
        "tamsta",
        "tarp",
        "tarsi",
        "tartum",
        "tarytum",
        "tas",
        "tasai",
        "tau",
        "tavaisiais",
        "tavajai",
        "tavajam",
        "tavajame",
        "tavas",
        "tavasai",
        "tavasis",
        "tave",
        "tavieji",
        "taviesiems",
        "tavimi",
        "tavi\xF0kis",
        "tavi\xF0k\xEB",
        "tavo",
        "tavoji",
        "tavojo",
        "tavojoje",
        "tavosiomis",
        "tavosioms",
        "tavosios",
        "tavosiose",
        "tavuoju",
        "tavuosiuose",
        "tavuosius",
        "tavyje",
        "tav\xE0ja",
        "tav\xE0j\xE0",
        "tav\xE0j\xE1",
        "tav\xE0sias",
        "tav\xE6s",
        "tav\xF8j\xF8",
        "ta\xE8iau",
        "te",
        "tegu",
        "tegul",
        "tiedvi",
        "tieji",
        "ties",
        "tiesiems",
        "tiesiog",
        "tik",
        "tikriausiai",
        "tiktai",
        "toji",
        "tojo",
        "tojoje",
        "tokia",
        "toks",
        "tol",
        "tolei",
        "toliau",
        "tosiomis",
        "tosioms",
        "tosios",
        "tosiose",
        "tu",
        "tuodu",
        "tuoju",
        "tuosiuose",
        "tuosius",
        "turb\xFBt",
        "t\xE0ja",
        "t\xE0j\xE0",
        "t\xE0j\xE1",
        "t\xE0sias",
        "t\xF8j\xF8",
        "t\xFBlas",
        "u\xFE",
        "u\xFEtat",
        "u\xFEvis",
        "va",
        "vai",
        "viduj",
        "vidury",
        "vien",
        "vienas",
        "vienokia",
        "vienoks",
        "vietoj",
        "vir\xF0",
        "vir\xF0uj",
        "vir\xF0um",
        "vis",
        "vis d\xEBlto",
        "visa",
        "visas",
        "visgi",
        "visokia",
        "visoks",
        "vos",
        "v\xEBl",
        "v\xEBlgi",
        "ypa\xE8",
        "\xE1",
        "\xE1kypai",
        "\xE1stri\xFEai",
        "\xF0alia",
        "\xF0e",
        "\xF0i",
        "\xF0iaisiais",
        "\xF0iajai",
        "\xF0iajam",
        "\xF0iajame",
        "\xF0iapus",
        "\xF0iedvi",
        "\xF0ieji",
        "\xF0iesiems",
        "\xF0ioji",
        "\xF0iojo",
        "\xF0iojoje",
        "\xF0iokia",
        "\xF0ioks",
        "\xF0iosiomis",
        "\xF0iosioms",
        "\xF0iosios",
        "\xF0iosiose",
        "\xF0is",
        "\xF0isai",
        "\xF0it",
        "\xF0ita",
        "\xF0itas",
        "\xF0itiedvi",
        "\xF0itokia",
        "\xF0itoks",
        "\xF0ituodu",
        "\xF0iuodu",
        "\xF0iuoju",
        "\xF0iuosiuose",
        "\xF0iuosius",
        "\xF0i\xE0ja",
        "\xF0i\xE0j\xE0",
        "\xF0i\xE0sias",
        "\xF0i\xF8j\xF8",
        "\xF0tai",
        "\xF0\xE1j\xE1",
        "\xFEemiau"
      ];
      const lgg = [
        "\u0301",
        "\u0300",
        "n\u0268",
        "m\xE0",
        "r\u0268",
        "d\u0268",
        "\u0268",
        "\u0301n\u0268",
        "\xE8r\u0268",
        "\u0301\xE1'",
        "s\u0268",
        "\xE0z\u0268",
        "y\u0268",
        "r\xE1",
        "v\u0268",
        "nga",
        "be",
        "m\u0268",
        "\xE0",
        "d\xE0",
        "k\u0289",
        "b\xE1",
        " \u0301l\xE9",
        "m\xE1",
        "e",
        "yo",
        "\u0300y\u0268",
        "ma",
        "k\u0268",
        "\xE0l\u0289",
        "\u0301m\xE0",
        "r\u0289\u0301",
        "dr\u0268",
        "pat\xED",
        "a",
        "\xE8",
        "y\xF3",
        "te",
        "\u0300\xE1",
        "m\xE0",
        "m\xE2",
        "d\xE1l\xE9",
        "y\xED",
        "\u030C",
        "p\u0268",
        "e'y\xF3",
        "ndr\xE1a",
        "bo",
        "di",
        "dr\xEC\xE1"
      ];
      const lggNd = [
        "ma",
        "ni",
        "ri",
        "eri",
        "di",
        "yi",
        "si",
        "ba",
        "nga",
        "i",
        "ra",
        "ku",
        "be",
        "yo",
        "da",
        "azini",
        "dria",
        "ru",
        "azi",
        "mu",
        "te",
        "ndra",
        "diyi",
        "ima",
        "mi",
        "alu",
        "nde",
        "alia",
        "le",
        "vile",
        "dri",
        "pati",
        "aria",
        "bo",
        "e'yo",
        "tu",
        "kini",
        "dii",
        "ama",
        "eyi",
        "dika",
        "pi",
        "e",
        "angu",
        "e'do",
        "pie",
        "ka",
        "ti",
        "o'du",
        "du"
      ];
      const msa = [
        "abdul",
        "abdullah",
        "acara",
        "ada",
        "adalah",
        "ahmad",
        "air",
        "akan",
        "akhbar",
        "akhir",
        "aktiviti",
        "alam",
        "amat",
        "amerika",
        "anak",
        "anggota",
        "antara",
        "antarabangsa",
        "apa",
        "apabila",
        "april",
        "as",
        "asas",
        "asean",
        "asia",
        "asing",
        "atas",
        "atau",
        "australia",
        "awal",
        "awam",
        "bagaimanapun",
        "bagi",
        "bahagian",
        "bahan",
        "baharu",
        "bahawa",
        "baik",
        "bandar",
        "bank",
        "banyak",
        "barangan",
        "baru",
        "baru-baru",
        "bawah",
        "beberapa",
        "bekas",
        "beliau",
        "belum",
        "berada",
        "berakhir",
        "berbanding",
        "berdasarkan",
        "berharap",
        "berikutan",
        "berjaya",
        "berjumlah",
        "berkaitan",
        "berkata",
        "berkenaan",
        "berlaku",
        "bermula",
        "bernama",
        "bernilai",
        "bersama",
        "berubah",
        "besar",
        "bhd",
        "bidang",
        "bilion",
        "bn",
        "boleh",
        "bukan",
        "bulan",
        "bursa",
        "cadangan",
        "china",
        "dagangan",
        "dalam",
        "dan",
        "dana",
        "dapat",
        "dari",
        "daripada",
        "dasar",
        "datang",
        "datuk",
        "demikian",
        "dengan",
        "depan",
        "derivatives",
        "dewan",
        "di",
        "diadakan",
        "dibuka",
        "dicatatkan",
        "dijangka",
        "diniagakan",
        "dis",
        "disember",
        "ditutup",
        "dolar",
        "dr",
        "dua",
        "dunia",
        "ekonomi",
        "eksekutif",
        "eksport",
        "empat",
        "enam",
        "faedah",
        "feb",
        "global",
        "hadapan",
        "hanya",
        "harga",
        "hari",
        "hasil",
        "hingga",
        "hubungan",
        "ia",
        "iaitu",
        "ialah",
        "indeks",
        "india",
        "indonesia",
        "industri",
        "ini",
        "islam",
        "isnin",
        "isu",
        "itu",
        "jabatan",
        "jalan",
        "jan",
        "jawatan",
        "jawatankuasa",
        "jepun",
        "jika",
        "jualan",
        "juga",
        "julai",
        "jumaat",
        "jumlah",
        "jun",
        "juta",
        "kadar",
        "kalangan",
        "kali",
        "kami",
        "kata",
        "katanya",
        "kaunter",
        "kawasan",
        "ke",
        "keadaan",
        "kecil",
        "kedua",
        "kedua-dua",
        "kedudukan",
        "kekal",
        "kementerian",
        "kemudahan",
        "kenaikan",
        "kenyataan",
        "kepada",
        "kepentingan",
        "keputusan",
        "kerajaan",
        "kerana",
        "kereta",
        "kerja",
        "kerjasama",
        "kes",
        "keselamatan",
        "keseluruhan",
        "kesihatan",
        "ketika",
        "ketua",
        "keuntungan",
        "kewangan",
        "khamis",
        "kini",
        "kira-kira",
        "kita",
        "klci",
        "klibor",
        "komposit",
        "kontrak",
        "kos",
        "kuala",
        "kuasa",
        "kukuh",
        "kumpulan",
        "lagi",
        "lain",
        "langkah",
        "laporan",
        "lebih",
        "lepas",
        "lima",
        "lot",
        "luar",
        "lumpur",
        "mac",
        "mahkamah",
        "mahu",
        "majlis",
        "makanan",
        "maklumat",
        "malam",
        "malaysia",
        "mana",
        "manakala",
        "masa",
        "masalah",
        "masih",
        "masing-masing",
        "masyarakat",
        "mata",
        "media",
        "mei",
        "melalui",
        "melihat",
        "memandangkan",
        "memastikan",
        "membantu",
        "membawa",
        "memberi",
        "memberikan",
        "membolehkan",
        "membuat",
        "mempunyai",
        "menambah",
        "menarik",
        "menawarkan",
        "mencapai",
        "mencatatkan",
        "mendapat",
        "mendapatkan",
        "menerima",
        "menerusi",
        "mengadakan",
        "mengambil",
        "mengenai",
        "menggalakkan",
        "menggunakan",
        "mengikut",
        "mengumumkan",
        "mengurangkan",
        "meningkat",
        "meningkatkan",
        "menjadi",
        "menjelang",
        "menokok",
        "menteri",
        "menunjukkan",
        "menurut",
        "menyaksikan",
        "menyediakan",
        "mereka",
        "merosot",
        "merupakan",
        "mesyuarat",
        "minat",
        "minggu",
        "minyak",
        "modal",
        "mohd",
        "mudah",
        "mungkin",
        "naik",
        "najib",
        "nasional",
        "negara",
        "negara-negara",
        "negeri",
        "niaga",
        "nilai",
        "nov",
        "ogos",
        "okt",
        "oleh",
        "operasi",
        "orang",
        "pada",
        "pagi",
        "paling",
        "pameran",
        "papan",
        "para",
        "paras",
        "parlimen",
        "parti",
        "pasaran",
        "pasukan",
        "pegawai",
        "pejabat",
        "pekerja",
        "pelabur",
        "pelaburan",
        "pelancongan",
        "pelanggan",
        "pelbagai",
        "peluang",
        "pembangunan",
        "pemberita",
        "pembinaan",
        "pemimpin",
        "pendapatan",
        "pendidikan",
        "penduduk",
        "penerbangan",
        "pengarah",
        "pengeluaran",
        "pengerusi",
        "pengguna",
        "pengurusan",
        "peniaga",
        "peningkatan",
        "penting",
        "peratus",
        "perdagangan",
        "perdana",
        "peringkat",
        "perjanjian",
        "perkara",
        "perkhidmatan",
        "perladangan",
        "perlu",
        "permintaan",
        "perniagaan",
        "persekutuan",
        "persidangan",
        "pertama",
        "pertubuhan",
        "pertumbuhan",
        "perusahaan",
        "peserta",
        "petang",
        "pihak",
        "pilihan",
        "pinjaman",
        "polis",
        "politik",
        "presiden",
        "prestasi",
        "produk",
        "program",
        "projek",
        "proses",
        "proton",
        "pukul",
        "pula",
        "pusat",
        "rabu",
        "rakan",
        "rakyat",
        "ramai",
        "rantau",
        "raya",
        "rendah",
        "ringgit",
        "rumah",
        "sabah",
        "sahaja",
        "saham",
        "sama",
        "sarawak",
        "satu",
        "sawit",
        "saya",
        "sdn",
        "sebagai",
        "sebahagian",
        "sebanyak",
        "sebarang",
        "sebelum",
        "sebelumnya",
        "sebuah",
        "secara",
        "sedang",
        "segi",
        "sehingga",
        "sejak",
        "sekarang",
        "sektor",
        "sekuriti",
        "selain",
        "selama",
        "selasa",
        "selatan",
        "selepas",
        "seluruh",
        "semakin",
        "semalam",
        "semasa",
        "sementara",
        "semua",
        "semula",
        "sen",
        "sendiri",
        "seorang",
        "sepanjang",
        "seperti",
        "sept",
        "september",
        "serantau",
        "seri",
        "serta",
        "sesi",
        "setiap",
        "setiausaha",
        "sidang",
        "singapura",
        "sini",
        "sistem",
        "sokongan",
        "sri",
        "sudah",
        "sukan",
        "suku",
        "sumber",
        "supaya",
        "susut",
        "syarikat",
        "syed",
        "tahap",
        "tahun",
        "tan",
        "tanah",
        "tanpa",
        "tawaran",
        "teknologi",
        "telah",
        "tempat",
        "tempatan",
        "tempoh",
        "tenaga",
        "tengah",
        "tentang",
        "terbaik",
        "terbang",
        "terbesar",
        "terbuka",
        "terdapat",
        "terhadap",
        "termasuk",
        "tersebut",
        "terus",
        "tetapi",
        "thailand",
        "tiada",
        "tidak",
        "tiga",
        "timbalan",
        "timur",
        "tindakan",
        "tinggi",
        "tun",
        "tunai",
        "turun",
        "turut",
        "umno",
        "unit",
        "untuk",
        "untung",
        "urus",
        "usaha",
        "utama",
        "walaupun",
        "wang",
        "wanita",
        "wilayah",
        "yang"
      ];
      const mar = [
        "\u0905\u0927\u093F\u0915",
        "\u0905\u0928\u0947\u0915",
        "\u0905\u0936\u0940",
        "\u0905\u0938\u0932\u092F\u093E\u091A\u0947",
        "\u0905\u0938\u0932\u0947\u0932\u094D\u092F\u093E",
        "\u0905\u0938\u093E",
        "\u0905\u0938\u0942\u0928",
        "\u0905\u0938\u0947",
        "\u0906\u091C",
        "\u0906\u0923\u093F",
        "\u0906\u0924\u093E",
        "\u0906\u092A\u0932\u094D\u092F\u093E",
        "\u0906\u0932\u093E",
        "\u0906\u0932\u0940",
        "\u0906\u0932\u0947",
        "\u0906\u0939\u0947",
        "\u0906\u0939\u0947\u0924",
        "\u090F\u0915",
        "\u090F\u0915\u093E",
        "\u0915\u092E\u0940",
        "\u0915\u0930\u0923\u092F\u093E\u0924",
        "\u0915\u0930\u0942\u0928",
        "\u0915\u093E",
        "\u0915\u093E\u092E",
        "\u0915\u093E\u092F",
        "\u0915\u093E\u0939\u0940",
        "\u0915\u093F\u0935\u093E",
        "\u0915\u0940",
        "\u0915\u0947\u0932\u093E",
        "\u0915\u0947\u0932\u0940",
        "\u0915\u0947\u0932\u0947",
        "\u0915\u094B\u091F\u0940",
        "\u0917\u0947\u0932\u094D\u092F\u093E",
        "\u0918\u0947\u090A\u0928",
        "\u091C\u093E\u0924",
        "\u091D\u093E\u0932\u093E",
        "\u091D\u093E\u0932\u0940",
        "\u091D\u093E\u0932\u0947",
        "\u091D\u093E\u0932\u0947\u0932\u094D\u092F\u093E",
        "\u091F\u093E",
        "\u0921\u0949",
        "\u0924\u0930",
        "\u0924\u0930\u0940",
        "\u0924\u0938\u0947\u091A",
        "\u0924\u093E",
        "\u0924\u0940",
        "\u0924\u0940\u0928",
        "\u0924\u0947",
        "\u0924\u094B",
        "\u0924\u094D\u092F\u093E",
        "\u0924\u094D\u092F\u093E\u091A\u093E",
        "\u0924\u094D\u092F\u093E\u091A\u0940",
        "\u0924\u094D\u092F\u093E\u091A\u094D\u092F\u093E",
        "\u0924\u094D\u092F\u093E\u0928\u093E",
        "\u0924\u094D\u092F\u093E\u0928\u0940",
        "\u0924\u094D\u092F\u093E\u092E\u0941\u0933\u0947",
        "\u0924\u094D\u0930\u0940",
        "\u0926\u093F\u0932\u0940",
        "\u0926\u094B\u0928",
        "\u0928",
        "\u0928\u093E\u0939\u0940",
        "\u0928\u093F\u0930\u094D\u0923\u094D\u092F",
        "\u092A\u0923",
        "\u092A\u092E",
        "\u092A\u0930\u092F\u0924\u0928",
        "\u092A\u093E\u091F\u0940\u0932",
        "\u092E",
        "\u092E\u093E\u0924\u094D\u0930",
        "\u092E\u093E\u0939\u093F\u0924\u0940",
        "\u092E\u0940",
        "\u092E\u0941\u092C\u0940",
        "\u092E\u094D\u0939\u0923\u091C\u0947",
        "\u092E\u094D\u0939\u0923\u093E\u0932\u0947",
        "\u092E\u094D\u0939\u0923\u0942\u0928",
        "\u092F\u093E",
        "\u092F\u093E\u091A\u093E",
        "\u092F\u093E\u091A\u0940",
        "\u092F\u093E\u091A\u094D\u092F\u093E",
        "\u092F\u093E\u0928\u093E",
        "\u092F\u093E\u0928\u0940",
        "\u092F\u0947\u0923\u093E\u0930",
        "\u092F\u0947\u0924",
        "\u092F\u0947\u0925\u0940\u0932",
        "\u092F\u0947\u0925\u0947",
        "\u0932\u093E\u0916",
        "\u0935",
        "\u0935\u094D\u092F\u0915\u0924",
        "\u0938\u0930\u094D\u0935",
        "\u0938\u093E\u0917\u093F\u0924\u094D\u0932\u0947",
        "\u0938\u0941\u0930\u0942",
        "\u0939\u091C\u093E\u0930",
        "\u0939\u093E",
        "\u0939\u0940",
        "\u0939\u0947",
        "\u0939\u094B\u0923\u093E\u0930",
        "\u0939\u094B\u0924",
        "\u0939\u094B\u0924\u093E",
        "\u0939\u094B\u0924\u0940",
        "\u0939\u094B\u0924\u0947"
      ];
      const mya = [
        "\u1021\u1015\u1031\u102B\u103A",
        "\u1021\u1014\u1000\u103A",
        "\u1021\u1019\u103C\u1032\u1010\u1019\u103A\u1038",
        "\u1021\u1010\u103D\u1004\u103A\u1038\u1010\u103D\u1004\u103A",
        "\u1019\u1000\u103C\u102C\u1019\u102E",
        "\u1019\u1010\u102D\u102F\u1004\u103A\u1019\u102E",
        "\u1012\u102B\u1037\u1021\u1015\u103C\u1004\u103A",
        "\u1021\u1031\u102C\u1000\u103A\u1019\u103E\u102C",
        "\u1021\u1011\u1032\u1019\u103E\u102C",
        "\u1018\u101A\u103A\u1010\u1031\u102C\u1037\u1019\u103B\u103E",
        "\u1019\u1000\u103C\u102C\u1001\u100F",
        "\u1010\u1031\u102C\u103A\u1010\u1031\u102C\u103A\u101C\u1031\u1038",
        "\u1005\u1009\u103A\u1010\u103D\u1004\u103A",
        "\u1014\u103E\u1004\u103A\u1037\u1021\u1010\u1030",
        "\u1014\u103E\u1004\u103A\u1037",
        "\u1014\u103E\u1004\u103A\u1037\u1010\u1000\u103D",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A",
        "\u1000\u103B\u103D\u1014\u103A\u1019",
        "\u1004\u102B",
        "\u1000\u103B\u102F\u1015\u103A",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A",
        "\u1000\u103B\u1014\u1031\u102C\u103A",
        "\u1000\u103B\u1019",
        "\u101E\u1030",
        "\u101E\u1030\u1019",
        "\u1011\u102D\u102F\u101F\u102C",
        "\u1011\u102D\u102F\u1021\u101B\u102C",
        "\u1024\u1021\u101B\u102C",
        "\u1011\u102D\u102F",
        "\u1044\u1004\u103A\u1038",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037",
        "\u1004\u102B\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u102F\u1015\u103A\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u1014\u1031\u102C\u103A\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u1019\u1010\u102D\u102F\u1037",
        "\u101E\u1004\u103A",
        "\u101E\u1004\u103A\u1010\u102D\u102F\u1037",
        "\u1014\u1004\u103A\u1010\u102D\u102F\u1037",
        "\u1019\u1004\u103A\u1038",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037",
        "\u101E\u1030\u1010\u102D\u102F\u1037",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1021\u102C\u1038",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1000\u102D\u102F",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u1000\u102D\u102F",
        "\u1004\u102B\u1000\u102D\u102F",
        "\u1000\u103B\u102F\u1015\u103A\u1000\u102D\u102F",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1000\u102D\u102F",
        "\u101E\u1030\u1037\u1000\u102D\u102F",
        "\u101E\u1030\u1019\u1000\u102D\u102F",
        "\u1011\u102D\u102F\u1021\u101B\u102C\u1000\u102D\u102F",
        "\u101E\u1004\u103A\u1037\u1000\u102D\u102F",
        "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1014\u1004\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1019\u1004\u103A\u1038\u1000\u102D\u102F",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1004\u102B\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1000\u103B\u102F\u1015\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F",
        "\u1019\u102D\u1019\u102D\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u1019\u102D\u1019\u102D\u1018\u102C\u101E\u102C",
        "\u1019\u1004\u103A\u1038\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u1019\u1004\u103A\u1038\u1018\u102C\u101E\u102C",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1018\u102C\u101E\u102C",
        "\u101E\u1030\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u101E\u1030\u1019\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A",
        "\u101E\u1030\u1037\u1018\u102C\u101E\u102C",
        "\u101E\u1030\u1037\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F",
        "\u1000\u102D\u102F\u101A\u103A\u1037\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F",
        "\u1019\u102D\u1019\u102D\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F",
        "\u1044\u1004\u103A\u1038\u1015\u1004\u103A",
        "\u1011\u102D\u102F\u1021\u101B\u102C\u1015\u1004\u103A",
        "\u101E\u100A\u103A\u1037",
        "\u1019\u100A\u103A\u1037",
        "\u1010\u1032\u1037",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u104F",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u104F",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u104F",
        "\u1000\u103B\u1014\u1031\u102C\u103A\u104F",
        "\u1000\u103B\u1019\u104F",
        "\u101E\u1030\u104F",
        "\u101E\u1030\u1019\u104F",
        "\u1011\u102D\u102F\u1021\u101B\u102C\u104F",
        "\u1011\u102D\u102F\u101F\u102C\u104F",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u104F",
        "\u1004\u102B\u1010\u102D\u102F\u1037\u104F",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u104F",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037\u104F",
        "\u1000\u103B\u1014\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u104F",
        "\u1000\u103B\u1019\u1010\u102D\u102F\u1037\u104F",
        "\u101E\u1004\u103A\u104F",
        "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u104F",
        "\u1019\u1004\u103A\u1038\u104F",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u104F",
        "\u101E\u1030\u1010\u102D\u102F\u1037\u104F",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1037\u101F\u102C",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u101F\u102C",
        "\u1000\u103B\u1014\u1031\u102C\u103A\u104F\u101F\u102C",
        "\u1000\u103B\u1019\u104F\u101F\u102C",
        "\u1000\u103B\u1019\u101F\u102C",
        "\u1000\u103B\u1014\u1031\u102C\u103A\u101F\u102C",
        "\u101E\u1030\u101F\u102C",
        "\u101E\u1030\u1019\u101F\u102C",
        "\u101E\u1030\u1037\u101F\u102C",
        "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u101E\u1030\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u101E\u1030\u1019\u1010\u102D\u102F\u1037\u101F\u102C",
        "\u1024\u1021\u101B\u102C",
        "\u101F\u1031\u102C\u1012\u102B",
        "\u101F\u1031\u102C\u1012\u102E",
        "\u101F\u1031\u102C\u1012\u102E\u101F\u102C",
        "\u1012\u102E\u101F\u102C",
        "\u1012\u102B",
        "\u1011\u102D\u102F\u1021\u101B\u102C",
        "\u1044\u1004\u103A\u1038\u1021\u101B\u102C",
        "\u101A\u1004\u103A\u1038\u1021\u101B\u102C",
        "\u1021\u1032\u1012\u102B",
        "\u101F\u102D\u102F\u101F\u102C",
        "\u1021\u1001\u103B\u102D\u102F\u1037",
        "\u1010\u1005\u103A\u1001\u102F\u1001\u102F",
        "\u1021\u1018\u101A\u103A\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u1021\u101B\u102C\u1019\u1006\u102D\u102F",
        "\u1021\u1018\u101A\u103A\u1019\u100A\u103A\u101E\u1031\u102C",
        "\u1021\u1000\u103C\u1004\u103A",
        "\u1021\u101B\u102C\u101B\u102C\u1010\u102D\u102F\u1004\u103A\u1038",
        "\u1005\u102D\u102F\u1038\u1005\u1009\u103A\u1019\u103B\u103E",
        "\u1005\u102D\u102F\u1038\u1005\u1009\u103A\u1038\u1019\u103B\u103E",
        "\u1018\u101A\u103A\u101C\u1031\u102C\u1000\u103A\u1019\u1006\u102D\u102F",
        "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101B\u102C",
        "\u1010\u1005\u102F\u1036\u1010\u101B\u102C",
        "\u1021\u101C\u103B\u1009\u103A\u1038\u1019\u101F\u102F\u1010\u103A",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037\u1019\u103B\u103E\u1019\u101F\u102F\u1010\u103A",
        "\u1021\u101C\u103B\u1009\u103A\u1038\u1019\u101B\u103E\u102D\u101E\u1031\u102C",
        "\u1021\u1001\u103C\u102C\u1038\u1016\u103C\u1005\u103A\u101E\u1031\u102C",
        "\u1021\u1001\u103C\u102C\u1038\u101E\u1031\u102C",
        "\u1021\u1001\u103C\u102C\u1038\u1010\u1005\u103A\u1001\u102F",
        "\u1021\u1001\u103C\u102C\u1038\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A",
        "\u1021\u102C\u1038\u101C\u102F\u1036\u1038",
        "\u1021\u101B\u102C\u101B\u102C\u1010\u102D\u102F\u1004\u103A\u1038",
        "\u1021\u1000\u102F\u1014\u103A\u101C\u102F\u1036\u1038",
        "\u1021\u101C\u102F\u1036\u1038\u1005\u102F\u1036",
        "\u1021\u101B\u102C\u1001\u1015\u103A\u101E\u102D\u1019\u103A\u1038",
        "\u1010\u1005\u103A\u1001\u102F\u1005\u102E",
        "\u1021\u101E\u102E\u1038\u101E\u102E\u1038",
        "\u1010\u1005\u103A\u1026\u1038\u1026\u1038",
        "\u1010\u1005\u103A\u1001\u102F\u1001\u102F",
        "\u1000\u102D\u102F\u101A\u103A\u1005\u102E\u1000\u102D\u102F\u101A\u103A\u1004\u103E",
        "\u1000\u102D\u102F\u101A\u103A\u1005\u102E",
        "\u1010\u1005\u103A\u1026\u1038\u1005\u102E",
        "\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u1005\u102E",
        "\u1010\u1005\u103A\u1001\u102F\u1005\u102E",
        "\u1021\u1000\u102F\u1014\u103A",
        "\u1021\u1015\u103C\u100A\u103A\u1037\u1021\u1005\u102F\u1036",
        "\u101C\u102F\u1036\u1038\u101C\u102F\u1036\u1038",
        "\u1014\u103E\u1005\u103A\u1001\u102F\u101C\u102F\u1036\u1038",
        "\u1014\u103E\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u101C\u102F\u1036\u1038",
        "\u1014\u103E\u1005\u103A\u1018\u1000\u103A\u101C\u102F\u1036\u1038",
        "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101B\u102C",
        "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u1001\u102F",
        "\u1010\u1005\u102F\u1036\u1010\u1001\u102F",
        "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A",
        "\u1010\u1005\u102F\u1036\u1010\u101A\u1031\u102C\u1000\u103A",
        "\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u101A\u1031\u102C\u1000\u103A",
        "\u1019\u100A\u103A\u101E\u1030\u1019\u1006\u102D\u102F",
        "\u1018\u102C\u1019\u103B\u103E\u1019\u101B\u103E\u102D",
        "\u1018\u102C\u1019\u103E\u1019\u101B\u103E\u102D",
        "\u1021\u1018\u101A\u103A\u1021\u101B\u102C\u1019\u103B\u103E\u1019\u101B\u103E\u102D",
        "\u101C\u1030\u1010\u102D\u102F\u1004\u103A\u1038",
        "\u101C\u1030\u1010\u1000\u102C",
        "\u1014\u103E\u1004\u103A\u1037",
        "\u1015\u103C\u102E\u1038\u101C\u103B\u103E\u1004\u103A",
        "\u1044\u1004\u103A\u1038\u1014\u1031\u102C\u1000\u103A",
        "\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A",
        "\u101E\u102D\u102F\u1037\u1010\u100A\u103A\u1038\u1019\u101F\u102F\u1010\u103A",
        "\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A\u101C\u103B\u103E\u1004\u103A",
        "\u1012\u102B\u1019\u103E\u1019\u101F\u102F\u1010\u103A",
        "\u1016\u103C\u1005\u103A\u1005\u1031",
        "\u101E\u102D\u102F\u1037\u1005\u1031\u1000\u102C\u1019\u1030",
        "\u1012\u102B\u1015\u1031\u1019\u101A\u103A\u1037",
        "\u1012\u102B\u1015\u1031\u1019\u1032\u1037",
        "\u1019\u103E\u1010\u1005\u103A\u1015\u102B\u1038",
        "\u1019\u103E\u101C\u103D\u1032\u101C\u103B\u103E\u1004\u103A",
        "\u1021\u1018\u101A\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037\u1006\u102D\u102F\u101E\u1031\u102C\u103A",
        "\u101E\u1031\u102C\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u101E\u1016\u103C\u1004\u103A\u1037",
        "\u104D",
        "\u101E\u100A\u103A\u1037\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u101C\u103B\u103E\u1004\u103A",
        "\u1015\u102B\u1000",
        "\u1021\u1000\u101A\u103A\u104D",
        "\u101E\u1031\u102C\u103A\u1004\u103C\u102C\u1038\u101C\u100A\u103A\u1038",
        "\u1005\u1031\u1000\u102C\u1019\u1030",
        "\u1014\u100A\u103A\u1038\u1010\u1030",
        "\u1015\u1031\u1019\u101A\u103A\u1037",
        "\u1015\u1031\u1019\u1032\u1037",
        "\u1011\u102D\u102F\u1014\u100A\u103A\u1038\u1010\u1030\u1005\u103D\u102C",
        "\u1011\u102D\u102F\u1014\u100A\u103A\u1038\u1010\u1030",
        "\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u101E\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u101A\u1004\u103A\u1038\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u1011\u102D\u102F\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u1014\u103E\u1004\u103A\u1037\u1005\u1015\u103A\u101C\u103B\u1009\u103A\u1038\u104D",
        "\u1024\u1019\u103B\u103E",
        "\u1024\u1019\u103B\u103E\u101C\u1031\u102C\u1000\u103A",
        "\u1024\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u1021\u1001\u102F\u101C\u1031\u102C\u1000\u103A\u1011\u102D",
        "\u1012\u102B\u1000\u1010\u1031\u102C\u1037",
        "\u1021\u1018\u101A\u103A\u1000\u1032\u1037\u101E\u101C\u102D\u102F\u1037",
        "\u1019\u100A\u103A\u1000\u1032\u1037\u101E\u102D\u102F\u1037",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1016\u103C\u1004\u103A\u1037",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1037\u1014\u103E\u1004\u103A\u1037\u1019\u1006\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1016\u103C\u1004\u103A\u1037\u1019\u1006\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u102D\u102F\u1037",
        "\u1018\u101A\u103A\u101C\u102D\u102F\u101C\u1032",
        "\u101E\u102D\u102F\u1037\u1015\u1031\u1010\u100A\u103A\u1037",
        "\u101E\u102D\u102F\u1037\u1015\u1031\u1019\u100A\u103A\u1037",
        "\u1018\u101A\u103A\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037",
        "\u1019\u100A\u103A\u101B\u103D\u1031\u1037\u1019\u100A\u103A\u1019\u103B\u103E",
        "\u1021\u1018\u101A\u103A\u1019\u103B\u103E\u101C\u1031\u102C\u1000\u103A",
        "\u1018\u101A\u103A\u101C\u1031\u102C\u1000\u103A",
        "\u1019\u100A\u103A\u101E\u1030",
        "\u1018\u101A\u103A\u101E\u1030",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1000\u103C\u1031\u102C\u1004\u103A\u1038\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u1018\u102C\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u1021\u1018\u101A\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u1018\u102C\u1000\u103C\u1031\u102C\u1004\u103A\u1037",
        "\u1018\u102C\u1021\u1010\u103D\u1000\u103A\u1014\u1032\u1037\u101C\u1032",
        "\u1019\u100A\u103A\u101E\u100A\u103A",
        "\u1018\u102C\u101C\u1032",
        "\u1021\u1018\u101A\u103A\u1021\u101B\u102C\u1014\u100A\u103A\u1038",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u1015\u103A\u1019\u103E\u102C",
        "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u1010\u103D\u1004\u103A",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u1010\u103D\u1004\u103A",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u101E\u102D\u102F\u1037",
        "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u101E\u102D\u102F\u1037",
        "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u1019\u103E\u102C",
        "\u1018\u101A\u103A\u101E\u1030\u104F",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u104F",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1001\u102B",
        "\u1018\u101A\u103A\u1021\u1001\u103B\u102D\u1014\u103A",
        "\u1018\u101A\u103A\u1021\u1001\u102B",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1001\u103B\u102D\u1014\u103A",
        "\u1018\u101A\u103A\u1010\u1031\u102C\u1037",
        "\u1019\u100A\u103A\u101E\u1030\u1000\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u1030\u1000",
        "\u1018\u101A\u103A\u101E\u1030\u1037\u1000\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u1030\u1019\u100A\u103A\u101D\u102B",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C",
        "\u1018\u101A\u103A\u1021\u101B\u102C",
        "\u1019\u100A\u103A\u101E\u102D\u102F\u1037\u1015\u1004\u103A\u1016\u103C\u1005\u103A\u1005\u1031",
        "\u1018\u101A\u103A\u101C\u102D\u102F\u1015\u1032\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A",
        "\u1019\u100A\u103A\u101B\u103D\u1031\u1037\u1019\u100A\u103A\u1019\u103B\u103E\u1016\u103C\u1005\u103A\u1005\u1031",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u1014\u100A\u103A\u1038\u1014\u1032\u1037\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A",
        "\u1019\u100A\u103A\u101E\u1030\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u101E\u1030\u1019\u1006\u102D\u102F",
        "\u1021\u1018\u101A\u103A\u101E\u1030\u1019\u1006\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u1019\u1006\u102D\u102F",
        "\u1018\u102C\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u1015\u103A\u104C\u1019\u1006\u102D\u102F",
        "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u1021\u1001\u102B\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u1021\u1001\u103B\u102D\u1014\u103A\u1019\u1006\u102D\u102F",
        "\u1018\u101A\u103A\u1021\u1001\u102B\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A",
        "\u1021\u1001\u103B\u102D\u1014\u103A\u1021\u1001\u102B\u1019\u101B\u103D\u1031\u1038"
      ];
      const nob = [
        "og",
        "i",
        "jeg",
        "det",
        "at",
        "en",
        "et",
        "den",
        "til",
        "er",
        "som",
        "p\xE5",
        "de",
        "med",
        "han",
        "av",
        "ikke",
        "der",
        "s\xE5",
        "var",
        "meg",
        "seg",
        "men",
        "ett",
        "har",
        "om",
        "vi",
        "min",
        "mitt",
        "ha",
        "hadde",
        "hun",
        "n\xE5",
        "over",
        "da",
        "ved",
        "fra",
        "du",
        "ut",
        "sin",
        "dem",
        "oss",
        "opp",
        "man",
        "kan",
        "hans",
        "hvor",
        "eller",
        "hva",
        "skal",
        "selv",
        "sj\xF8l",
        "her",
        "alle",
        "vil",
        "bli",
        "ble",
        "blitt",
        "kunne",
        "inn",
        "n\xE5r",
        "kom",
        "noen",
        "noe",
        "ville",
        "dere",
        "som",
        "deres",
        "kun",
        "ja",
        "etter",
        "ned",
        "skulle",
        "denne",
        "for",
        "deg",
        "si",
        "sine",
        "sitt",
        "mot",
        "\xE5",
        "meget",
        "hvorfor",
        "dette",
        "disse",
        "uten",
        "hvordan",
        "ingen",
        "din",
        "ditt",
        "blir",
        "samme",
        "hvilken",
        "hvilke",
        "s\xE5nn",
        "inni",
        "mellom",
        "v\xE5r",
        "hver",
        "hvem",
        "vors",
        "hvis",
        "b\xE5de",
        "bare",
        "enn",
        "fordi",
        "f\xF8r",
        "mange",
        "ogs\xE5",
        "slik",
        "v\xE6rt",
        "v\xE6re",
        "begge",
        "siden",
        "henne",
        "hennar",
        "hennes"
      ];
      const panGu = [
        "\u0A26\u0A47",
        "\u0A35\u0A3F\u0A71\u0A1A",
        "\u0A26\u0A3E",
        "\u0A05\u0A24\u0A47",
        "\u0A26\u0A40",
        "\u0A07\u0A71\u0A15",
        "\u0A28\u0A42\u0A70",
        "\u0A39\u0A48",
        "\u0A24\u0A4B\u0A02",
        "\u0A07\u0A38",
        "\u0A07\u0A39",
        "\u0A28\u0A47",
        "\u0A24\u0A47",
        "\u0A28\u0A3E\u0A32",
        "\u0A32\u0A08",
        "\u0A35\u0A40",
        "\u0A38\u0A40",
        "\u0A35\u0A3F\u0A1A",
        "\u0A15\u0A3F",
        "\u0A1C\u0A4B",
        "\u0A09\u0A39",
        "\u0A09\u0A38",
        "\u0A39\u0A28",
        "\u0A1C\u0A3E\u0A02\u0A26\u0A3E",
        "\u0A15\u0A40\u0A24\u0A3E",
        "\u0A17\u0A3F\u0A06",
        "\u0A39\u0A40",
        "\u0A15\u0A47",
        "\u0A1C\u0A3E\u0A02",
        "\u0A26\u0A40\u0A06\u0A02",
        "\u0A1C\u0A3F\u0A38",
        "\u0A15\u0A30\u0A28",
        "\u0A39\u0A4B",
        "\u0A15\u0A30",
        "\u0A06\u0A2A\u0A23\u0A47",
        "\u0A15\u0A40\u0A24\u0A40",
        "\u0A24\u0A4C\u0A30",
        "\u0A2C\u0A3E\u0A05\u0A26",
        "\u0A28\u0A39\u0A40\u0A02",
        "\u0A2D\u0A3E\u0A30\u0A24\u0A40",
        "\u0A2A\u0A3F\u0A70\u0A21",
        "\u0A38\u0A3F\u0A70\u0A18",
        "\u0A09\u0A71\u0A24\u0A47",
        "\u0A38\u0A3E\u0A32",
        "\u0964",
        "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C",
        "\u0A38\u0A2D",
        "\u0A2D\u0A3E\u0A30\u0A24",
        "\u0A09\u0A28\u0A4D\u0A39\u0A3E\u0A02",
        "\u0A39\u0A41\u0A70\u0A26\u0A3E",
        "\u0A24\u0A71\u0A15",
        "\u0A07\u0A15",
        "\u0A39\u0A4B\u0A07\u0A06",
        "\u0A1C\u0A28\u0A2E",
        "\u0A2C\u0A39\u0A41\u0A24",
        "\u0A2A\u0A30",
        "\u0A26\u0A41\u0A06\u0A30\u0A3E",
        "\u0A30\u0A42\u0A2A",
        "\u0A39\u0A4B\u0A30",
        "\u0A15\u0A70\u0A2E",
        "\u0A06\u0A2A\u0A23\u0A40",
        "\u0A24\u0A3E\u0A02",
        "\u0A38\u0A2E\u0A47\u0A02",
        "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",
        "\u0A17\u0A08",
        "\u0A26\u0A3F\u0A71\u0A24\u0A3E",
        "\u0A26\u0A4B",
        "\u0A15\u0A3F\u0A38\u0A47",
        "\u0A15\u0A08",
        "\u0A1C\u0A3E",
        "\u0A35\u0A3E\u0A32\u0A47",
        "\u0A38\u0A3C\u0A41\u0A30\u0A42",
        "\u0A09\u0A38\u0A28\u0A47",
        "\u0A15\u0A3F\u0A39\u0A3E",
        "\u0A39\u0A4B\u0A23",
        "\u0A32\u0A4B\u0A15",
        "\u0A1C\u0A3E\u0A02\u0A26\u0A40",
        "\u0A35\u0A3F\u0A71\u0A1A\u0A4B\u0A02",
        "\u0A28\u0A3E\u0A2E",
        "\u0A1C\u0A26\u0A4B\u0A02",
        "\u0A2A\u0A39\u0A3F\u0A32\u0A3E\u0A02",
        "\u0A15\u0A30\u0A26\u0A3E",
        "\u0A39\u0A41\u0A70\u0A26\u0A40",
        "\u0A39\u0A4B\u0A0F",
        "\u0A38\u0A28",
        "\u0A35\u0A1C\u0A4B\u0A02",
        "\u0A30\u0A3E\u0A1C",
        "\u0A2E\u0A41\u0A71\u0A16",
        "\u0A15\u0A30\u0A26\u0A47",
        "\u0A15\u0A41\u0A1D",
        "\u0A38\u0A3E\u0A30\u0A47",
        "\u0A39\u0A41\u0A70\u0A26\u0A47",
        "\u0A38\u0A3C\u0A39\u0A3F\u0A30",
        "\u0A2D\u0A3E\u0A38\u0A3C\u0A3E",
        "\u0A39\u0A4B\u0A08",
        "\u0A05\u0A28\u0A41\u0A38\u0A3E\u0A30",
        "\u0A38\u0A15\u0A26\u0A3E",
        "\u0A06\u0A2E",
        "\u0A35\u0A71\u0A16",
        "\u0A15\u0A4B\u0A08",
        "\u0A35\u0A3E\u0A30",
        "\u0A17\u0A0F",
        "\u0A16\u0A47\u0A24\u0A30",
        "\u0A1C\u0A40",
        "\u0A15\u0A3E\u0A30\u0A28",
        "\u0A15\u0A30\u0A15\u0A47",
        "\u0A1C\u0A3F\u0A35\u0A47\u0A02",
        "\u0A1C\u0A3C\u0A3F\u0A32\u0A4D\u0A39\u0A47",
        "\u0A32\u0A4B\u0A15\u0A3E\u0A02",
        "\u0A1A",
        "\u0A38\u0A3E\u0A39\u0A3F\u0A24",
        "\u0A38\u0A26\u0A40",
        "\u0A2C\u0A3E\u0A30\u0A47",
        "\u0A1C\u0A3E\u0A02\u0A26\u0A47",
        "\u0A35\u0A3E\u0A32\u0A3E",
        "\u0A1C\u0A3E\u0A23",
        "\u0A2A\u0A39\u0A3F\u0A32\u0A40",
        "\u0A2A\u0A4D\u0A30\u0A3E\u0A2A\u0A24",
        "\u0A30\u0A3F\u0A39\u0A3E",
        "\u0A35\u0A3E\u0A32\u0A40",
        "\u0A28\u0A3E\u0A02",
        "\u0A26\u0A4C\u0A30\u0A3E\u0A28",
        "\u0A24\u0A30\u0A4D\u0A39\u0A3E\u0A02",
        "\u0A2F\u0A42\u0A28\u0A40\u0A35\u0A30\u0A38\u0A3F\u0A1F\u0A40",
        "\u0A28\u0A3E",
        "\u0A0F",
        "\u0A24\u0A3F\u0A70\u0A28",
        "\u0A07\u0A28\u0A4D\u0A39\u0A3E\u0A02",
        "\u0A17\u0A41\u0A30\u0A42",
        "\u0A07\u0A38\u0A28\u0A42\u0A70",
        "\u0A07\u0A39\u0A28\u0A3E\u0A02",
        "\u0A2A\u0A3F\u0A24\u0A3E",
        "\u0A32\u0A3F\u0A06",
        "\u0A38\u0A3C\u0A3E\u0A2E\u0A32",
        "\u0A38\u0A3C\u0A2C\u0A26",
        "\u0A05\u0A70\u0A17\u0A30\u0A47\u0A1C\u0A3C\u0A40",
        "\u0A09\u0A38\u0A28\u0A42\u0A70",
        "\u0A09\u0A39\u0A28\u0A3E\u0A02",
        "\u0A38\u0A25\u0A3F\u0A24",
        "\u0A2B\u0A3F\u0A30",
        "\u0A1C\u0A40\u0A35\u0A28",
        "\u0A38\u0A15\u0A42\u0A32",
        "\u0A39\u0A41\u0A23",
        "\u0A26\u0A3F\u0A28",
        "\u0A15\u0A40\u0A24\u0A47",
        "\u0A06\u0A26\u0A3F",
        "\u0A35\u0A71\u0A27",
        "\u0A32\u0A48",
        "\u0A18\u0A30",
        "\u0A35\u0A71\u0A32",
        "\u0A26\u0A47\u0A38\u0A3C",
        "\u0A35\u0A32\u0A4B\u0A02",
        "\u0A2C\u0A23",
        "\u0A35\u0A40\u0A02",
        "\u0A2B\u0A3F\u0A32\u0A2E",
        "\u0A09\u0A2E\u0A30",
        "\u0A2C\u0A32\u0A3E\u0A15",
        "\u0A30\u0A39\u0A47",
        "\u0A38\u0A3E\u0A39\u0A3F\u0A2C",
        "\u0A15\u0A30\u0A26\u0A40",
        "\u0A39\u0A30",
        "\u0A2A\u0A48\u0A26\u0A3E",
        "\u0A18\u0A71\u0A1F",
        "\u0A32\u0A47\u0A16\u0A15",
        "\u0A39\u0A3F\u0A71\u0A38\u0A3E",
        "\u0A2B\u0A3C\u0A3F\u0A32\u0A2E",
        "\u0A2E\u0A4C\u0A24",
        "\u0A1C\u0A3F\u0A71\u0A25\u0A47",
        "\u0A35\u0A71\u0A21\u0A3E",
        "\u0A35\u0A3F\u0A16\u0A47",
        "\u0A06\u0A2A\u0A23\u0A3E",
        "\u0A2A\u0A39\u0A3F\u0A32\u0A3E",
        "\u0A35\u0A30\u0A24\u0A4B\u0A02",
        "\u0A06\u0A2A",
        "\u0A15\u0A30\u0A28\u0A3E",
        "\u0A35\u0A3F\u0A06\u0A39",
        "\u0A30\u0A39\u0A40",
        "\u0A30\u0A3E\u0A39\u0A40\u0A02",
        "\u0A26\u0A3F\u0A71\u0A24\u0A40",
        "\u0A09\u0A38\u0A26\u0A47",
        "\u0A2A\u0A30\u0A3F\u0A35\u0A3E\u0A30",
        "\u0A06",
        "\u0A26\u0A42\u0A1C\u0A47",
        "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A3E",
        "\u0A2E\u0A70\u0A28\u0A3F\u0A06",
        "\u0A07\u0A38\u0A26\u0A47",
        "\u0A08",
        "\u0A15\u0A3E\u0A32\u0A1C",
        "\u0A38\u0A30\u0A15\u0A3E\u0A30",
        "\u0A07\u0A71\u0A25\u0A47",
        "\u0A2A\u0A3E\u0A15\u0A3F\u0A38\u0A24\u0A3E\u0A28",
        "\u0A38\u0A3C\u0A3E\u0A2E\u0A3F\u0A32",
        "\u0A35\u0A3F\u0A17\u0A3F\u0A06\u0A28",
        "\u0A09\u0A38\u0A26\u0A40",
        "\u0A2A\u0A47\u0A38\u0A3C",
        "\u0A15\u0A3F\u0A09\u0A02\u0A15\u0A3F",
        "\u0A2A\u0A39\u0A3F\u0A32\u0A47",
        "\u0A27\u0A30\u0A2E",
        "\u0A2E\u0A38\u0A3C\u0A39\u0A42\u0A30",
        "\u0A05\u0A70\u0A26\u0A30",
        "\u0A35\u0A3F\u0A1A\u0A4B\u0A02",
        "\u0A1C\u0A3F\u0A28\u0A4D\u0A39\u0A3E\u0A02",
        "\u0A1C\u0A3E\u0A23\u0A3F\u0A06",
        "\u0A2A\u0A3E\u0A23\u0A40",
        "\u0A07\u0A32\u0A3E\u0A35\u0A3E",
        "\u0A05\u0A30\u0A25",
        "\u0A1A\u0A3E\u0A30",
        "\u0A2A\u0A4D\u0A30\u0A38\u0A3F\u0A71\u0A27",
        "\u0A28\u0A3E\u0A35\u0A32",
        "\u0A35\u0A71\u0A21\u0A47",
        "\u0A35\u0A71\u0A32\u0A4B\u0A02",
        "\u0A15\u0A39\u0A3E\u0A23\u0A40",
        "\u0A35\u0A3F\u0A38\u0A3C\u0A35",
        "\u0A2E\u0A42\u0A32",
        "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40",
        "\u0A38\u0A25\u0A3E\u0A28",
        "\u0A07\u0A24\u0A3F\u0A39\u0A3E\u0A38",
        "\u0A15\u0A41\u0A71\u0A1D",
        "\u0A35\u0A3F\u0A15\u0A3E\u0A38",
        "\u0A09\u0A71\u0A24\u0A30",
        "\u0A38\u0A3F\u0A71\u0A16\u0A3F\u0A06",
        "\u0A39\u0A3F\u0A70\u0A26\u0A40",
        "\u0A2A\u0A4D\u0A30\u0A2E\u0A41\u0A71\u0A16",
        "\u0A30\u0A1A\u0A28\u0A3E",
        "\u0A2C\u0A23\u0A3E\u0A07\u0A06",
        "\u0A35\u0A3F\u0A38\u0A3C\u0A47\u0A38\u0A3C",
        "\u0A21\u0A3E",
        "\u0A09\u0A71\u0A2A\u0A30",
        "\u0A2A\u0A71\u0A1B\u0A2E\u0A40",
        "\u0A26\u0A47\u0A23",
        "\u0A07\u0A38\u0A26\u0A3E",
        "\u0A38\u0A15\u0A26\u0A47",
        "\u0A30\u0A71\u0A16\u0A3F\u0A06",
        "\u0A15\u0A35\u0A40",
        "\u0A26\u0A3F\u0A71\u0A32\u0A40",
        "\u0A35\u0A71\u0A21\u0A40",
        "\u0A2D\u0A42\u0A2E\u0A3F\u0A15\u0A3E",
        "\u0A38\u0A2E\u0A3E\u0A1C",
        "\u0A15\u0A3E\u0A35\u0A3F",
        "\u0A15\u0A40",
        "\u0A15\u0A4B\u0A32",
        "\u0A26",
        "\u0A17\u0A71\u0A32",
        "\u0A38\u0A70\u0A38\u0A3E\u0A30",
        "\u0A2D\u0A3E\u0A17",
        "\u0A06\u0A08",
        "\u0A26\u0A71\u0A16\u0A23",
        "\u0A05\u0A71\u0A1C",
        "\u0A38\u0A3F\u0A71\u0A16",
        "\u0A15\u0A39\u0A3F\u0A70\u0A26\u0A47",
        "\u0A38\u0A70\u0A17\u0A40\u0A24",
        "\u0A15\u0A3F\u0A32\u0A4B\u0A2E\u0A40\u0A1F\u0A30",
        "\u0A1C\u0A3F\u0A39\u0A28\u0A3E\u0A02",
        "\u0A38\u0A2D\u0A3E",
        "\u0A1C\u0A3F\u0A38\u0A26\u0A3E",
        "\u0A1C\u0A28\u0A35\u0A30\u0A40",
        "\u0A15\u0A35\u0A3F\u0A24\u0A3E",
        "\u0A2E\u0A48\u0A02\u0A2C\u0A30",
        "\u0A32\u0A3F\u0A16\u0A3F\u0A06",
        "\u0A2E\u0A3E\u0A02",
        "\u0A15\u0A32\u0A3E",
        "\u0A2A\u0A70\u0A1C",
        "\u0A25\u0A3E\u0A02",
        "\u0A39\u0A47\u0A20",
        "\u0A1C\u0A3F\u0A06\u0A26\u0A3E",
        "\u0A35\u0A30\u0A24\u0A3F\u0A06",
        "\u0A2E\u0A3E\u0A30\u0A1A",
        "\u0A21\u0A40",
        "\u0A05\u0A15\u0A24\u0A42\u0A2C\u0A30",
        "\u0A24\u0A15",
        "\u0A28\u0A3E\u0A1F\u0A15",
        "\u0A2C\u0A40",
        "\u0A16\u0A3E\u0A38",
        "\u0A07\u0A38\u0A47",
        "\u0A06\u0A27\u0A41\u0A28\u0A3F\u0A15",
        "\u0A05\u0A17\u0A38\u0A24",
        "\u0A24\u0A3F\u0A06\u0A30",
        "\u0A2E\u0A3E\u0A24\u0A3E",
        "\u0A2C\u0A23\u0A3E\u0A09\u0A23",
        "\u0A28\u0A35\u0A70\u0A2C\u0A30",
        "\u0A35\u0A3F\u0A05\u0A15\u0A24\u0A40",
        "\u0A26\u0A71\u0A16\u0A23\u0A40",
        "\u0A26\u0A38\u0A70\u0A2C\u0A30",
        "\u0A06\u0A2B",
        "\u0A17\u0A40\u0A24",
        "\u0A17\u0A3F\u0A23\u0A24\u0A40",
        "\u0A15\u0A3E\u0A32",
        "\u0A16\u0A4B\u0A1C",
        "\u0A38\u0A3E\u0A32\u0A3E\u0A02",
        "\u0A2A\u0A42\u0A30\u0A40",
        "\u0A38\u0A2E\u0A3E\u0A02",
        "\u0A1C\u0A3C\u0A3F\u0A06\u0A26\u0A3E",
        "\u0A07\u0A38\u0A26\u0A40",
        "\u0A38\u0A15\u0A26\u0A40",
        "\u0A35\u0A3F\u0A1A\u0A15\u0A3E\u0A30",
        "\u0A30\u0A3E\u0A1C\u0A27\u0A3E\u0A28\u0A40",
        "\u0A09\u0A38\u0A26\u0A3E",
        "\u0A1C\u0A41\u0A32\u0A3E\u0A08",
        "\u0A1C\u0A42\u0A28",
        "\u0A05\u0A27\u0A40\u0A28",
        "\u0A38\u0A25\u0A3E\u0A2A\u0A28\u0A3E",
        "\u0A38\u0A47\u0A35\u0A3E",
        "\u0A2D\u0A3E\u0A35",
        "\u0A35\u0A30\u0A17",
        "\u0A1B\u0A4B\u0A1F\u0A47",
        "\u0A26\u0A3F\u0A70\u0A26\u0A3E",
        "\u0A38\u0A2E\u0A3E\u0A1C\u0A3F\u0A15",
        "\u0A39\u0A41\u0A70\u0A26\u0A40\u0A06\u0A02",
        "\u0A1F\u0A40\u0A2E",
        "\u0A14\u0A30\u0A24\u0A3E\u0A02",
        "\u0A05\u0A15\u0A38\u0A30",
        "\u0A2A\u0A4D\u0A30\u0A15\u0A3E\u0A38\u0A3C\u0A3F\u0A24",
        "\u0A09\u0A30\u0A26\u0A42",
        "\u0A30\u0A70\u0A17",
        "\u0A2A\u0A3E\u0A30\u0A1F\u0A40",
        "\u0A2C\u0A23\u0A3E",
        "\u0A2A\u0A4D\u0A30\u0A2D\u0A3E\u0A35",
        "\u0A38\u0A3C\u0A41\u0A30\u0A42\u0A06\u0A24",
        "\u0A32\u0A17\u0A2D\u0A17",
        "\u0A2E\u0A08",
        "\u0A38\u0A3F\u0A30\u0A2B",
        "\u0A28\u0A47\u0A5C\u0A47",
        "\u0A1C\u0A3F\u0A38\u0A28\u0A42\u0A70",
        "\u0A39\u0A3E\u0A32\u0A3E\u0A02\u0A15\u0A3F",
        "\u0A26\u0A42\u0A30",
        "\u0A38\u0A24\u0A70\u0A2C\u0A30",
        "\u0A15\u0A3F\u0A24\u0A3E\u0A2C",
        "\u0A15\u0A26\u0A47",
        "\u0A09\u0A71\u0A24\u0A30\u0A40",
        "\u0A2A\u0A4D\u0A30\u0A15\u0A3E\u0A30",
        "\u0A07\u0A38\u0A28\u0A47",
        "\u0A2A\u0A4D\u0A30\u0A26\u0A47\u0A38\u0A3C",
        "\u0A05\u0A71\u0A17\u0A47",
        "\u0A38\u0A70\u0A2F\u0A41\u0A15\u0A24",
        "\u0A2A\u0A5C\u0A4D\u0A39\u0A3E\u0A08",
        "\u0A35\u0A27\u0A47\u0A30\u0A47",
        "\u0A28\u0A3E\u0A32\u0A3C",
        "\u0A2E\u0A28\u0A41\u0A71\u0A16",
        "\u0A2C\u0A3E\u0A15\u0A40",
        "\u0A2A\u0A4D\u0A30\u0A27\u0A3E\u0A28",
        "\u0A26\u0A42\u0A1C\u0A40",
        "\u0A15\u0A41\u0A71\u0A32",
        "\u0A06\u0A2B\u0A3C",
        "\u0A05\u0A27\u0A3F\u0A10\u0A28",
        "\u0A30\u0A3E\u0A38\u0A3C\u0A1F\u0A30\u0A40",
        "\u0A2A\u0A41\u0A71\u0A24\u0A30",
        "\u0A05\u0A70\u0A24\u0A30\u0A30\u0A3E\u0A38\u0A3C\u0A1F\u0A30\u0A40",
        "\u0A27\u0A30\u0A24\u0A40",
        "\u0A15\u0A47\u0A02\u0A26\u0A30",
        "\u0A26\u0A47\u0A38\u0A3C\u0A3E\u0A02",
        "\u0A2E\u0A71\u0A27",
        "\u0A1C\u0A3C\u0A3F\u0A32\u0A4D\u0A39\u0A3E",
        "\u0A38\u0A3E\u0A30\u0A40\u0A06\u0A02",
        "\u0A2A\u0A71\u0A27\u0A30",
        "\u0A39\u0A4B\u0A35\u0A47",
        "\u0A1C\u0A47",
        "\u0A2D\u0A3E\u0A08",
        "\u0A30\u0A39\u0A3F\u0A23",
        "\u0A2A\u0A41\u0A30\u0A38\u0A15\u0A3E\u0A30",
        "\u0A38\u0A2D\u0A3F\u0A06\u0A1A\u0A3E\u0A30",
        "\u0A2A\u0A24\u0A3E",
        "\u0A2A\u0A3E\u0A38\u0A47",
        "\u0A28\u0A35\u0A47\u0A02",
        "\u0A15\u0A70\u0A2A\u0A28\u0A40",
        "\u0A2C\u0A3E\u0A39\u0A30",
        "\u0A35\u0A47\u0A32\u0A47",
        "\u0A38\u0A70\u0A28",
        "\u0A2A\u0A42\u0A30\u0A2C\u0A40",
        "\u0A35\u0A3F\u0A1A\u0A3E\u0A30",
        "\u0A15\u0A3E\u0A30\u0A1C",
        "\u0A2A\u0A40",
        "\u0A2E\u0A39\u0A71\u0A24\u0A35\u0A2A\u0A42\u0A30\u0A28",
        "\u0A26\u0A41\u0A28\u0A40\u0A06\u0A02",
        "\u0A27\u0A3E\u0A30\u0A2E\u0A3F\u0A15",
        "\u0A2E\u0A28\u0A41\u0A71\u0A16\u0A40",
        "\u0A38\u0A2E\u0A42\u0A39",
        "\u0A05\u0A1C\u0A3F\u0A39\u0A47",
        "\u0A32\u0A3E\u0A32",
        "\u0A26\u0A42\u0A1C\u0A3E",
        "\u0A2D\u0A30\u0A3E",
        "\u0A38\u0A4D\u0A30\u0A40",
        "\u0A05\u0A70\u0A24",
        "\u0A1C\u0A3E\u0A02\u0A26\u0A40\u0A06\u0A02",
        "\u0A38\u0A3C\u0A3E\u0A39",
        "\u0A30\u0A39\u0A3F\u0A70\u0A26\u0A47",
        "\u0A2E\u0A39\u0A3E\u0A28",
        "\u0A1A\u0A40\u0A28",
        "\u0A2E\u0A40\u0A1F\u0A30",
        "\u0A35\u0A30\u0A17\u0A47",
        "\u0A28\u0A3E\u0A32\u0A4B\u0A02",
        "\u0A39\u0A3E\u0A38\u0A32",
        "\u0A15\u0A3F\u0A38\u0A2E",
        "\u0A05\u0A1C\u0A3F\u0A39\u0A3E",
        "\u0A2C\u0A23\u0A3F\u0A06",
        "\u0A2D\u0A30",
        "\u0A1B\u0A71\u0A21",
        "\u0A32\u0A48\u0A23",
        "\u0A39\u0A3F\u0A71\u0A38\u0A47",
        "\u0A1F\u0A40",
        "\u0A32\u0A3F\u0A16\u0A47",
        "\u0A2E\u0A3F\u0A32",
        "\u0A2E\u0A4C\u0A1C\u0A42\u0A26",
        "\u0A26\u0A3F\u0A71\u0A24\u0A47",
        "\u0A35\u0A3E\u0A38\u0A24\u0A47",
        "\u0A35\u0A3E\u0A32\u0A40\u0A06\u0A02",
        "\u0A35\u0A27\u0A40\u0A06",
        "\u0A30\u0A42\u0A38\u0A40",
        "\u0A1C\u0A3E\u0A30\u0A40",
        "\u0A38\u0A30\u0A15\u0A3E\u0A30\u0A40",
        "\u0A21\u0A3F\u0A17\u0A30\u0A40",
        "\u0A2A\u0A71\u0A1B\u0A2E",
        "\u0A32\u0A5C\u0A3E\u0A08",
        "\u0A2D\u0A3E\u0A38\u0A3C\u0A3E\u0A35\u0A3E\u0A02",
        "\u0A30\u0A3E\u0A1C\u0A3E",
        "\u0A1C\u0A32\u0A70\u0A27\u0A30",
        "\u0A39\u0A3F\u0A70\u0A26\u0A42",
        "\u0A14\u0A30\u0A24",
        "\u0A1C\u0A70\u0A17",
        "\u0A2C\u0A3E\u0A2C\u0A3E",
        "\u0A2C\u0A71\u0A1A\u0A3F\u0A06\u0A02",
        "\u0A2E\u0A70\u0A24\u0A30\u0A40",
        "\u0A2A\u0A1F\u0A3F\u0A06\u0A32\u0A3E",
        "\u0A35\u0A3E\u0A02\u0A17",
        "\u0A06\u0A09\u0A23",
        "\u0A2D\u0A3E\u0A35\u0A47\u0A02",
        "\u0A15\u0A47\u0A35\u0A32",
        "\u0A10\u0A38",
        "\u0A2A\u0A4D\u0A30\u0A3E\u0A1A\u0A40\u0A28",
        "\u0A30\u0A39\u0A3F\u0A70\u0A26\u0A3E",
        "\u0A2C\u0A4B\u0A32\u0A40",
        "\u0A05\u0A35\u0A3E\u0A30\u0A21",
        "\u0A28\u0A17\u0A30",
        "\u0A16\u0A47\u0A21\u0A3E\u0A02",
        "\u0A2B\u0A3F\u0A32\u0A2E\u0A3E\u0A02",
        "\u0A2C\u0A71\u0A1A\u0A47",
        "\u0A15\u0A4C\u0A30",
        "\u0A24\u0A4B",
        "\u0A2A\u0A4D\u0A30\u0A24\u0A40",
        "\u0A15\u0A41\u0A06\u0A02\u0A1F\u0A2E",
        "\u0A05\u0A2C\u0A3E\u0A26\u0A40",
        "\u0A2A\u0A41\u0A38\u0A24\u0A15",
        "\u0A10\u0A2E",
        "\u0A30\u0A3E\u0A2E",
        "\u0A16\u0A47\u0A24\u0A30\u0A3E\u0A02",
        "\u0A2B\u0A30\u0A35\u0A30\u0A40",
        "\u0A15\u0A4D\u0A30\u0A3F\u0A15\u0A1F",
        "\u0A2A\u0A48\u0A02\u0A26\u0A3E",
        "\u0A07\u0A24\u0A3F\u0A39\u0A3E\u0A38\u0A15",
        "\u0A32\u0A71\u0A17",
        "\u0A2C\u0A4D\u0A30\u0A3F\u0A1F\u0A3F\u0A38\u0A3C",
        "\u0A06\u0A07\u0A06",
        "\u0A2E\u0A3F\u0A32\u0A26\u0A3E"
      ];
      const fas = [
        "\u0627\u0632",
        "\u0628\u0627",
        "\u0628\u0647",
        "\u0628\u0631\u0627\u06CC",
        "\u0648",
        "\u0628\u0627\u06CC\u062F",
        "\u0634\u0627\u06CC\u062F",
        "\u0627\u06A9\u0646\u0648\u0646",
        "\u0627\u06AF\u0631",
        "\u0627\u06AF\u0631\u0686\u0647",
        "\u0627\u0644\u0627",
        "\u0627\u0645\u0627",
        "\u0627\u0646\u062F\u0631",
        "\u0627\u06CC\u0646\u06A9\u0647",
        "\u0628\u0627\u0631\u06CC",
        "\u0628\u0627\u0644\u0639\u06A9\u0633",
        "\u0628\u062F\u0648\u0646",
        "\u0628\u0631",
        "\u0628\u0644\u06A9\u0647",
        "\u0628\u0646\u0627\u0628\u0631\u0627\u06CC\u0646",
        "\u0628\u06CC",
        "\u067E\u0633",
        "\u062A\u0627",
        "\u062C\u0632",
        "\u0686\u0646\u0627\u0646\u0686\u0647",
        "\u0686\u0647",
        "\u0686\u0648\u0646",
        "\u062F\u0631",
        "\u0631\u0627",
        "\u0631\u0648\u06CC",
        "\u0632\u06CC\u0631\u0627",
        "\u0633\u067E\u0633",
        "\u063A\u06CC\u0631",
        "\u06A9\u0647",
        "\u0644\u06CC\u06A9\u0646",
        "\u0645\u0627\u0646\u0646\u062F",
        "\u0645\u062B\u0644",
        "\u0645\u06AF\u0631",
        "\u0646\u0647",
        "\u0646\u06CC\u0632",
        "\u0647\u0631\u0686\u0646\u062F",
        "\u0647\u0645",
        "\u0647\u0645\u0627\u0646",
        "\u0648\u0627\u0646\u06AF\u0647\u06CC",
        "\u0648\u0644\u06CC",
        "\u0648\u0644\u0648",
        "\u0647\u0645\u0627\u0646\u0646\u062F",
        "\u0647\u0645\u0686\u0648"
      ];
      const pol = [
        "a",
        "aby",
        "ach",
        "acz",
        "aczkolwiek",
        "aj",
        "albo",
        "ale",
        "ale\u017C",
        "ani",
        "a\u017C",
        "bardziej",
        "bardzo",
        "bo",
        "bowiem",
        "by",
        "byli",
        "bynajmniej",
        "by\u0107",
        "by\u0142",
        "by\u0142a",
        "by\u0142o",
        "by\u0142y",
        "b\u0119dzie",
        "b\u0119d\u0105",
        "cali",
        "ca\u0142a",
        "ca\u0142y",
        "ci",
        "ci\u0119",
        "ciebie",
        "co",
        "cokolwiek",
        "co\u015B",
        "czasami",
        "czasem",
        "czemu",
        "czy",
        "czyli",
        "daleko",
        "dla",
        "dlaczego",
        "dlatego",
        "do",
        "dobrze",
        "dok\u0105d",
        "do\u015B\u0107",
        "du\u017Co",
        "dwa",
        "dwaj",
        "dwie",
        "dwoje",
        "dzi\u015B",
        "dzisiaj",
        "gdy",
        "gdyby",
        "gdy\u017C",
        "gdzie",
        "gdziekolwiek",
        "gdzie\u015B",
        "i",
        "ich",
        "ile",
        "im",
        "inna",
        "inne",
        "inny",
        "innych",
        "i\u017C",
        "ja",
        "j\u0105",
        "jak",
        "jaka\u015B",
        "jakby",
        "jaki",
        "jakich\u015B",
        "jakie",
        "jaki\u015B",
        "jaki\u017C",
        "jakkolwiek",
        "jako",
        "jako\u015B",
        "je",
        "jeden",
        "jedna",
        "jedno",
        "jednak",
        "jednak\u017Ce",
        "jego",
        "jej",
        "jemu",
        "jest",
        "jestem",
        "jeszcze",
        "je\u015Bli",
        "je\u017Celi",
        "ju\u017C",
        "j\u0105",
        "ka\u017Cdy",
        "kiedy",
        "kilka",
        "kim\u015B",
        "kto",
        "ktokolwiek",
        "kto\u015B",
        "kt\xF3ra",
        "kt\xF3re",
        "kt\xF3rego",
        "kt\xF3rej",
        "kt\xF3ry",
        "kt\xF3rych",
        "kt\xF3rym",
        "kt\xF3rzy",
        "ku",
        "lat",
        "lecz",
        "lub",
        "ma",
        "maj\u0105",
        "ma\u0142o",
        "mam",
        "mi",
        "mimo",
        "mi\u0119dzy",
        "mn\u0105",
        "mnie",
        "mog\u0105",
        "moi",
        "moim",
        "moja",
        "moje",
        "mo\u017Ce",
        "mo\u017Cliwe",
        "mo\u017Cna",
        "m\xF3j",
        "mu",
        "musi",
        "my",
        "na",
        "nad",
        "nam",
        "nami",
        "nas",
        "nasi",
        "nasz",
        "nasza",
        "nasze",
        "naszego",
        "naszych",
        "natomiast",
        "natychmiast",
        "nawet",
        "ni\u0105",
        "nic",
        "nich",
        "nie",
        "niech",
        "niego",
        "niej",
        "niemu",
        "nigdy",
        "nim",
        "nimi",
        "ni\u017C",
        "no",
        "o",
        "obok",
        "od",
        "oko\u0142o",
        "on",
        "ona",
        "one",
        "oni",
        "ono",
        "oraz",
        "oto",
        "owszem",
        "pan",
        "pana",
        "pani",
        "po",
        "pod",
        "podczas",
        "pomimo",
        "ponad",
        "poniewa\u017C",
        "powinien",
        "powinna",
        "powinni",
        "powinno",
        "poza",
        "prawie",
        "przecie\u017C",
        "przed",
        "przede",
        "przedtem",
        "przez",
        "przy",
        "roku",
        "r\xF3wnie\u017C",
        "sam",
        "sama",
        "s\u0105",
        "si\u0119",
        "sk\u0105d",
        "sobie",
        "sob\u0105",
        "spos\xF3b",
        "swoje",
        "ta",
        "tak",
        "taka",
        "taki",
        "takie",
        "tak\u017Ce",
        "tam",
        "te",
        "tego",
        "tej",
        "temu",
        "ten",
        "teraz",
        "te\u017C",
        "to",
        "tob\u0105",
        "tobie",
        "tote\u017C",
        "trzeba",
        "tu",
        "tutaj",
        "twoi",
        "twoim",
        "twoja",
        "twoje",
        "twym",
        "tw\xF3j",
        "ty",
        "tych",
        "tylko",
        "tym",
        "u",
        "w",
        "wam",
        "wami",
        "was",
        "wasz",
        "za\u015B",
        "wasza",
        "wasze",
        "we",
        "wed\u0142ug",
        "wiele",
        "wielu",
        "wi\u0119c",
        "wi\u0119cej",
        "t\u0119",
        "wszyscy",
        "wszystkich",
        "wszystkie",
        "wszystkim",
        "wszystko",
        "wtedy",
        "wy",
        "w\u0142a\u015Bnie",
        "z",
        "za",
        "zapewne",
        "zawsze",
        "ze",
        "z\u0142",
        "znowu",
        "zn\xF3w",
        "zosta\u0142",
        "\u017Caden",
        "\u017Cadna",
        "\u017Cadne",
        "\u017Cadnych",
        "\u017Ce",
        "\u017Ceby"
      ];
      const por = [
        "a",
        "\xE0",
        "ao",
        "aos",
        "aquela",
        "aquelas",
        "aquele",
        "aqueles",
        "aquilo",
        "as",
        "\xE0s",
        "at\xE9",
        "com",
        "como",
        "da",
        "das",
        "de",
        "dela",
        "delas",
        "dele",
        "deles",
        "depois",
        "do",
        "dos",
        "e",
        "ela",
        "elas",
        "ele",
        "eles",
        "em",
        "entre",
        "essa",
        "essas",
        "esse",
        "esses",
        "esta",
        "estas",
        "este",
        "estes",
        "eu",
        "isso",
        "isto",
        "j\xE1",
        "lhe",
        "lhes",
        "mais",
        "mas",
        "me",
        "mesmo",
        "meu",
        "meus",
        "minha",
        "minhas",
        "muito",
        "muitos",
        "na",
        "n\xE3o",
        "nas",
        "nem",
        "no",
        "nos",
        "n\xF3s",
        "nossa",
        "nossas",
        "nosso",
        "nossos",
        "num",
        "nuns",
        "numa",
        "numas",
        "o",
        "os",
        "ou",
        "para",
        "pela",
        "pelas",
        "pelo",
        "pelos",
        "por",
        "quais",
        "qual",
        "quando",
        "que",
        "quem",
        "se",
        "sem",
        "seu",
        "seus",
        "s\xF3",
        "sua",
        "suas",
        "tamb\xE9m",
        "te",
        "teu",
        "teus",
        "tu",
        "tua",
        "tuas",
        "um",
        "uma",
        "umas",
        "voc\xEA",
        "voc\xEAs",
        "vos",
        "vosso",
        "vossos"
      ];
      const porBr = [
        "a",
        "\xE0",
        "adeus",
        "agora",
        "a\xED",
        "ainda",
        "al\xE9m",
        "algo",
        "algu\xE9m",
        "algum",
        "alguma",
        "algumas",
        "alguns",
        "ali",
        "ampla",
        "amplas",
        "amplo",
        "amplos",
        "ano",
        "anos",
        "ante",
        "antes",
        "ao",
        "aos",
        "apenas",
        "apoio",
        "ap\xF3s",
        "aquela",
        "aquelas",
        "aquele",
        "aqueles",
        "aqui",
        "aquilo",
        "\xE1rea",
        "as",
        "\xE0s",
        "assim",
        "at\xE9",
        "atr\xE1s",
        "atrav\xE9s",
        "baixo",
        "bastante",
        "bem",
        "boa",
        "boas",
        "bom",
        "bons",
        "breve",
        "c\xE1",
        "cada",
        "catorze",
        "cedo",
        "cento",
        "certamente",
        "certeza",
        "cima",
        "cinco",
        "coisa",
        "coisas",
        "com",
        "como",
        "conselho",
        "contra",
        "contudo",
        "custa",
        "da",
        "d\xE1",
        "d\xE3o",
        "daquela",
        "daquelas",
        "daquele",
        "daqueles",
        "dar",
        "das",
        "de",
        "debaixo",
        "dela",
        "delas",
        "dele",
        "deles",
        "demais",
        "dentro",
        "depois",
        "desde",
        "dessa",
        "dessas",
        "desse",
        "desses",
        "desta",
        "destas",
        "deste",
        "destes",
        "deve",
        "devem",
        "devendo",
        "dever",
        "dever\xE1",
        "dever\xE3o",
        "deveria",
        "deveriam",
        "devia",
        "deviam",
        "dez",
        "dezenove",
        "dezesseis",
        "dezessete",
        "dezoito",
        "dia",
        "diante",
        "disse",
        "disso",
        "disto",
        "dito",
        "diz",
        "dizem",
        "dizer",
        "do",
        "dois",
        "dos",
        "doze",
        "duas",
        "d\xFAvida",
        "e",
        "\xE9",
        "ela",
        "elas",
        "ele",
        "eles",
        "em",
        "embora",
        "enquanto",
        "entre",
        "era",
        "eram",
        "\xE9ramos",
        "\xE9s",
        "essa",
        "essas",
        "esse",
        "esses",
        "esta",
        "est\xE1",
        "estamos",
        "est\xE3o",
        "estar",
        "estas",
        "est\xE1s",
        "estava",
        "estavam",
        "est\xE1vamos",
        "este",
        "esteja",
        "estejam",
        "estejamos",
        "estes",
        "esteve",
        "estive",
        "estivemos",
        "estiver",
        "estivera",
        "estiveram",
        "estiv\xE9ramos",
        "estiverem",
        "estivermos",
        "estivesse",
        "estivessem",
        "estiv\xE9ssemos",
        "estiveste",
        "estivestes",
        "estou",
        "etc",
        "eu",
        "exemplo",
        "fa\xE7o",
        "falta",
        "favor",
        "faz",
        "fazeis",
        "fazem",
        "fazemos",
        "fazendo",
        "fazer",
        "fazes",
        "feita",
        "feitas",
        "feito",
        "feitos",
        "fez",
        "fim",
        "final",
        "foi",
        "fomos",
        "for",
        "fora",
        "foram",
        "f\xF4ramos",
        "forem",
        "forma",
        "formos",
        "fosse",
        "fossem",
        "f\xF4ssemos",
        "foste",
        "fostes",
        "fui",
        "geral",
        "grande",
        "grandes",
        "grupo",
        "h\xE1",
        "haja",
        "hajam",
        "hajamos",
        "h\xE3o",
        "havemos",
        "havia",
        "hei",
        "hoje",
        "hora",
        "horas",
        "houve",
        "houvemos",
        "houver",
        "houvera",
        "houver\xE1",
        "houveram",
        "houv\xE9ramos",
        "houver\xE3o",
        "houverei",
        "houverem",
        "houveremos",
        "houveria",
        "houveriam",
        "houver\xEDamos",
        "houvermos",
        "houvesse",
        "houvessem",
        "houv\xE9ssemos",
        "isso",
        "isto",
        "j\xE1",
        "la",
        "l\xE1",
        "lado",
        "lhe",
        "lhes",
        "lo",
        "local",
        "logo",
        "longe",
        "lugar",
        "maior",
        "maioria",
        "mais",
        "mal",
        "mas",
        "m\xE1ximo",
        "me",
        "meio",
        "menor",
        "menos",
        "m\xEAs",
        "meses",
        "mesma",
        "mesmas",
        "mesmo",
        "mesmos",
        "meu",
        "meus",
        "mil",
        "minha",
        "minhas",
        "momento",
        "muita",
        "muitas",
        "muito",
        "muitos",
        "na",
        "nada",
        "n\xE3o",
        "naquela",
        "naquelas",
        "naquele",
        "naqueles",
        "nas",
        "nem",
        "nenhum",
        "nenhuma",
        "nessa",
        "nessas",
        "nesse",
        "nesses",
        "nesta",
        "nestas",
        "neste",
        "nestes",
        "ningu\xE9m",
        "n\xEDvel",
        "no",
        "noite",
        "nome",
        "nos",
        "n\xF3s",
        "nossa",
        "nossas",
        "nosso",
        "nossos",
        "nova",
        "novas",
        "nove",
        "novo",
        "novos",
        "num",
        "numa",
        "n\xFAmero",
        "nunca",
        "o",
        "obra",
        "obrigada",
        "obrigado",
        "oitava",
        "oitavo",
        "oito",
        "onde",
        "ontem",
        "onze",
        "os",
        "ou",
        "outra",
        "outras",
        "outro",
        "outros",
        "para",
        "parece",
        "parte",
        "partir",
        "paucas",
        "pela",
        "pelas",
        "pelo",
        "pelos",
        "pequena",
        "pequenas",
        "pequeno",
        "pequenos",
        "per",
        "perante",
        "perto",
        "pode",
        "pude",
        "p\xF4de",
        "podem",
        "podendo",
        "poder",
        "poderia",
        "poderiam",
        "podia",
        "podiam",
        "p\xF5e",
        "p\xF5em",
        "pois",
        "ponto",
        "pontos",
        "por",
        "por\xE9m",
        "porque",
        "porqu\xEA",
        "posi\xE7\xE3o",
        "poss\xEDvel",
        "possivelmente",
        "posso",
        "pouca",
        "poucas",
        "pouco",
        "poucos",
        "primeira",
        "primeiras",
        "primeiro",
        "primeiros",
        "pr\xF3pria",
        "pr\xF3prias",
        "pr\xF3prio",
        "pr\xF3prios",
        "pr\xF3xima",
        "pr\xF3ximas",
        "pr\xF3ximo",
        "pr\xF3ximos",
        "pude",
        "puderam",
        "quais",
        "qu\xE1is",
        "qual",
        "quando",
        "quanto",
        "quantos",
        "quarta",
        "quarto",
        "quatro",
        "que",
        "qu\xEA",
        "quem",
        "quer",
        "quereis",
        "querem",
        "queremas",
        "queres",
        "quero",
        "quest\xE3o",
        "quinta",
        "quinto",
        "quinze",
        "rela\xE7\xE3o",
        "sabe",
        "sabem",
        "s\xE3o",
        "se",
        "segunda",
        "segundo",
        "sei",
        "seis",
        "seja",
        "sejam",
        "sejamos",
        "sem",
        "sempre",
        "sendo",
        "ser",
        "ser\xE1",
        "ser\xE3o",
        "serei",
        "seremos",
        "seria",
        "seriam",
        "ser\xEDamos",
        "sete",
        "s\xE9tima",
        "s\xE9timo",
        "seu",
        "seus",
        "sexta",
        "sexto",
        "si",
        "sido",
        "sim",
        "sistema",
        "s\xF3",
        "sob",
        "sobre",
        "sois",
        "somos",
        "sou",
        "sua",
        "suas",
        "tal",
        "talvez",
        "tamb\xE9m",
        "tampouco",
        "tanta",
        "tantas",
        "tanto",
        "t\xE3o",
        "tarde",
        "te",
        "tem",
        "t\xE9m",
        "t\xEAm",
        "temos",
        "tendes",
        "tendo",
        "tenha",
        "tenham",
        "tenhamos",
        "tenho",
        "tens",
        "ter",
        "ter\xE1",
        "ter\xE3o",
        "terceira",
        "terceiro",
        "terei",
        "teremos",
        "teria",
        "teriam",
        "ter\xEDamos",
        "teu",
        "teus",
        "teve",
        "ti",
        "tido",
        "tinha",
        "tinham",
        "t\xEDnhamos",
        "tive",
        "tivemos",
        "tiver",
        "tivera",
        "tiveram",
        "tiv\xE9ramos",
        "tiverem",
        "tivermos",
        "tivesse",
        "tivessem",
        "tiv\xE9ssemos",
        "tiveste",
        "tivestes",
        "toda",
        "todas",
        "todavia",
        "todo",
        "todos",
        "trabalho",
        "tr\xEAs",
        "treze",
        "tu",
        "tua",
        "tuas",
        "tudo",
        "\xFAltima",
        "\xFAltimas",
        "\xFAltimo",
        "\xFAltimos",
        "um",
        "uma",
        "umas",
        "uns",
        "vai",
        "vais",
        "v\xE3o",
        "v\xE1rios",
        "vem",
        "v\xEAm",
        "vendo",
        "vens",
        "ver",
        "vez",
        "vezes",
        "viagem",
        "vindo",
        "vinte",
        "vir",
        "voc\xEA",
        "voc\xEAs",
        "vos",
        "v\xF3s",
        "vossa",
        "vossas",
        "vosso",
        "vossos",
        "zero"
      ];
      const ron = [
        "acea",
        "aceasta",
        "aceast\u0103",
        "aceea",
        "acei",
        "aceia",
        "acel",
        "acela",
        "acele",
        "acelea",
        "acest",
        "acesta",
        "aceste",
        "acestea",
        "ace\u015Fti",
        "ace\u015Ftia",
        "acolo",
        "acord",
        "acum",
        "ai",
        "aia",
        "aib\u0103",
        "aici",
        "al",
        "ale",
        "alea",
        "altceva",
        "altcineva",
        "am",
        "ar",
        "are",
        "asemenea",
        "asta",
        "astea",
        "ast\u0103zi",
        "asupra",
        "au",
        "avea",
        "avem",
        "ave\u0163i",
        "azi",
        "a\u015F",
        "a\u015Fadar",
        "a\u0163i",
        "bine",
        "bucur",
        "bun\u0103",
        "ca",
        "care",
        "caut",
        "ce",
        "cel",
        "ceva",
        "chiar",
        "cinci",
        "cine",
        "cineva",
        "contra",
        "cu",
        "cum",
        "cumva",
        "cur\xE2nd",
        "cur\xEEnd",
        "c\xE2nd",
        "c\xE2t",
        "c\xE2te",
        "c\xE2tva",
        "c\xE2\u0163i",
        "c\xEEnd",
        "c\xEEt",
        "c\xEEte",
        "c\xEEtva",
        "c\xEE\u0163i",
        "c\u0103",
        "c\u0103ci",
        "c\u0103rei",
        "c\u0103ror",
        "c\u0103rui",
        "c\u0103tre",
        "da",
        "dac\u0103",
        "dar",
        "datorit\u0103",
        "dat\u0103",
        "dau",
        "de",
        "deci",
        "deja",
        "deoarece",
        "departe",
        "de\u015Fi",
        "din",
        "dinaintea",
        "dintr-",
        "dintre",
        "doi",
        "doilea",
        "dou\u0103",
        "drept",
        "dup\u0103",
        "d\u0103",
        "ea",
        "ei",
        "el",
        "ele",
        "eram",
        "este",
        "eu",
        "e\u015Fti",
        "face",
        "fata",
        "fi",
        "fie",
        "fiecare",
        "fii",
        "fim",
        "fiu",
        "fi\u0163i",
        "frumos",
        "f\u0103r\u0103",
        "gra\u0163ie",
        "halb\u0103",
        "iar",
        "ieri",
        "la",
        "le",
        "li",
        "lor",
        "lui",
        "l\xE2ng\u0103",
        "l\xEEng\u0103",
        "mai",
        "mea",
        "mei",
        "mele",
        "mereu",
        "meu",
        "mi",
        "mie",
        "mine",
        "mult",
        "mult\u0103",
        "mul\u0163i",
        "mul\u0163umesc",
        "m\xE2ine",
        "m\xEEine",
        "m\u0103",
        "ne",
        "nevoie",
        "nici",
        "nic\u0103ieri",
        "nimeni",
        "nimeri",
        "nimic",
        "ni\u015Fte",
        "noastre",
        "noastr\u0103",
        "noi",
        "noroc",
        "nostru",
        "nou\u0103",
        "no\u015Ftri",
        "nu",
        "opt",
        "ori",
        "oricare",
        "orice",
        "oricine",
        "oricum",
        "oric\xE2nd",
        "oric\xE2t",
        "oric\xEEnd",
        "oric\xEEt",
        "oriunde",
        "patra",
        "patru",
        "patrulea",
        "pe",
        "pentru",
        "peste",
        "pic",
        "poate",
        "pot",
        "prea",
        "prima",
        "primul",
        "prin",
        "printr-",
        "pu\u0163in",
        "pu\u0163ina",
        "pu\u0163in\u0103",
        "p\xE2n\u0103",
        "p\xEEn\u0103",
        "rog",
        "sa",
        "sale",
        "sau",
        "se",
        "spate",
        "spre",
        "sub",
        "sunt",
        "suntem",
        "sunte\u0163i",
        "sut\u0103",
        "s\xEEnt",
        "s\xEEntem",
        "s\xEEnte\u0163i",
        "s\u0103",
        "s\u0103i",
        "s\u0103u",
        "ta",
        "tale",
        "te",
        "timp",
        "tine",
        "toate",
        "toat\u0103",
        "tot",
        "totu\u015Fi",
        "to\u0163i",
        "trei",
        "treia",
        "treilea",
        "tu",
        "t\u0103i",
        "t\u0103u",
        "un",
        "una",
        "unde",
        "undeva",
        "unei",
        "uneia",
        "unele",
        "uneori",
        "unii",
        "unor",
        "unora",
        "unu",
        "unui",
        "unuia",
        "unul",
        "vi",
        "voastre",
        "voastr\u0103",
        "voi",
        "vostru",
        "vou\u0103",
        "vo\u015Ftri",
        "vreme",
        "vreo",
        "vreun",
        "v\u0103",
        "zece",
        "zero",
        "zi",
        "zice",
        "\xEEi",
        "\xEEl",
        "\xEEmi",
        "\xEEmpotriva",
        "\xEEn",
        "\xEEnainte",
        "\xEEnaintea",
        "\xEEncotro",
        "\xEEnc\xE2t",
        "\xEEnc\xEEt",
        "\xEEntre",
        "\xEEntruc\xE2t",
        "\xEEntruc\xEEt",
        "\xEE\u0163i",
        "\u0103la",
        "\u0103lea",
        "\u0103sta",
        "\u0103stea",
        "\u0103\u015Ftia",
        "\u015Fapte",
        "\u015Fase",
        "\u015Fi",
        "\u015Ftiu",
        "\u0163i",
        "\u0163ie"
      ];
      const rus = [
        "\u0438",
        "\u0432",
        "\u0432\u043E",
        "\u043D\u0435",
        "\u0447\u0442\u043E",
        "\u043E\u043D",
        "\u043D\u0430",
        "\u044F",
        "\u0441",
        "\u0441\u043E",
        "\u043A\u0430\u043A",
        "\u0430",
        "\u0442\u043E",
        "\u0432\u0441\u0435",
        "\u043E\u043D\u0430",
        "\u0442\u0430\u043A",
        "\u0435\u0433\u043E",
        "\u043D\u043E",
        "\u0434\u0430",
        "\u0442\u044B",
        "\u043A",
        "\u0443",
        "\u0436\u0435",
        "\u0432\u044B",
        "\u0437\u0430",
        "\u0431\u044B",
        "\u043F\u043E",
        "\u0442\u043E\u043B\u044C\u043A\u043E",
        "\u0435\u0435",
        "\u043C\u043D\u0435",
        "\u0431\u044B\u043B\u043E",
        "\u0432\u043E\u0442",
        "\u043E\u0442",
        "\u043C\u0435\u043D\u044F",
        "\u0435\u0449\u0435",
        "\u043D\u0435\u0442",
        "\u043E",
        "\u0438\u0437",
        "\u0435\u043C\u0443",
        "\u0442\u0435\u043F\u0435\u0440\u044C",
        "\u043A\u043E\u0433\u0434\u0430",
        "\u0434\u0430\u0436\u0435",
        "\u043D\u0443",
        "\u043B\u0438",
        "\u0435\u0441\u043B\u0438",
        "\u0443\u0436\u0435",
        "\u0438\u043B\u0438",
        "\u043D\u0438",
        "\u0431\u044B\u0442\u044C",
        "\u0431\u044B\u043B",
        "\u043D\u0435\u0433\u043E",
        "\u0434\u043E",
        "\u0432\u0430\u0441",
        "\u043D\u0438\u0431\u0443\u0434\u044C",
        "\u0443\u0436",
        "\u0432\u0430\u043C",
        "\u0441\u043A\u0430\u0437\u0430\u043B",
        "\u0432\u0435\u0434\u044C",
        "\u0442\u0430\u043C",
        "\u043F\u043E\u0442\u043E\u043C",
        "\u0441\u0435\u0431\u044F",
        "\u043D\u0438\u0447\u0435\u0433\u043E",
        "\u0435\u0439",
        "\u043C\u043E\u0436\u0435\u0442",
        "\u043E\u043D\u0438",
        "\u0442\u0443\u0442",
        "\u0433\u0434\u0435",
        "\u0435\u0441\u0442\u044C",
        "\u043D\u0430\u0434\u043E",
        "\u043D\u0435\u0439",
        "\u0434\u043B\u044F",
        "\u043C\u044B",
        "\u0442\u0435\u0431\u044F",
        "\u0438\u0445",
        "\u0447\u0435\u043C",
        "\u0431\u044B\u043B\u0430",
        "\u0441\u0430\u043C",
        "\u0447\u0442\u043E\u0431",
        "\u0431\u0435\u0437",
        "\u0431\u0443\u0434\u0442\u043E",
        "\u0447\u0435\u0433\u043E",
        "\u0440\u0430\u0437",
        "\u0442\u043E\u0436\u0435",
        "\u0441\u0435\u0431\u0435",
        "\u043F\u043E\u0434",
        "\u0431\u0443\u0434\u0435\u0442",
        "\u0436",
        "\u0442\u043E\u0433\u0434\u0430",
        "\u043A\u0442\u043E",
        "\u044D\u0442\u043E\u0442",
        "\u0442\u043E\u0433\u043E",
        "\u043F\u043E\u0442\u043E\u043C\u0443",
        "\u044D\u0442\u043E\u0433\u043E",
        "\u043A\u0430\u043A\u043E\u0439",
        "\u0441\u043E\u0432\u0441\u0435\u043C",
        "\u043D\u0438\u043C",
        "\u044D\u0442\u043E\u043C",
        "\u043F\u043E\u0447\u0442\u0438",
        "\u043C\u043E\u0439",
        "\u0442\u0435\u043C",
        "\u0447\u0442\u043E\u0431\u044B",
        "\u043D\u0435\u0435",
        "\u0431\u044B\u043B\u0438",
        "\u043A\u0443\u0434\u0430",
        "\u0432\u0441\u0435\u0445",
        "\u043D\u0438\u043A\u043E\u0433\u0434\u0430",
        "\u0441\u0435\u0433\u043E\u0434\u043D\u044F",
        "\u043C\u043E\u0436\u043D\u043E",
        "\u043F\u0440\u0438",
        "\u043E\u0431",
        "\u0434\u0440\u0443\u0433\u043E\u0439",
        "\u0445\u043E\u0442\u044C",
        "\u043F\u043E\u0441\u043B\u0435",
        "\u043D\u0430\u0434",
        "\u0431\u043E\u043B\u044C\u0448\u0435",
        "\u0442\u043E\u0442",
        "\u0447\u0435\u0440\u0435\u0437",
        "\u044D\u0442\u0438",
        "\u043D\u0430\u0441",
        "\u043F\u0440\u043E",
        "\u0432\u0441\u0435\u0433\u043E",
        "\u043D\u0438\u0445",
        "\u043A\u0430\u043A\u0430\u044F",
        "\u043C\u043D\u043E\u0433\u043E",
        "\u0440\u0430\u0437\u0432\u0435",
        "\u044D\u0442\u0443",
        "\u043C\u043E\u044F",
        "\u0441\u0432\u043E\u044E",
        "\u044D\u0442\u043E\u0439",
        "\u043F\u0435\u0440\u0435\u0434",
        "\u0438\u043D\u043E\u0433\u0434\u0430",
        "\u043B\u0443\u0447\u0448\u0435",
        "\u0447\u0443\u0442\u044C",
        "\u0442\u043E\u043C",
        "\u043D\u0435\u043B\u044C\u0437\u044F",
        "\u0442\u0430\u043A\u043E\u0439",
        "\u0438\u043C",
        "\u0431\u043E\u043B\u0435\u0435",
        "\u0432\u0441\u0435\u0433\u0434\u0430",
        "\u043A\u043E\u043D\u0435\u0447\u043D\u043E",
        "\u0432\u0441\u044E",
        "\u043C\u0435\u0436\u0434\u0443",
        "\u044D\u0442\u043E",
        "\u043B\u0438\u0448\u044C"
      ];
      const slk = [
        "a",
        "aby",
        "aj",
        "ako",
        "ak\xFD",
        "ale",
        "alebo",
        "ani",
        "av\u0161ak",
        "ba",
        "bez",
        "bu\xEF",
        "cez",
        "do",
        "ho",
        "hoci",
        "i",
        "ich",
        "im",
        "ja",
        "jeho",
        "jej",
        "jemu",
        "ju",
        "k",
        "kam",
        "kde",
        "ked\u017Ee",
        "ke\xEF",
        "kto",
        "ktor\xFD",
        "ku",
        "lebo",
        "ma",
        "mi",
        "mne",
        "mnou",
        "mu",
        "my",
        "m\xF2a",
        "m\xF4j",
        "na",
        "nad",
        "nami",
        "neho",
        "nej",
        "nemu",
        "nich",
        "nielen",
        "nim",
        "no",
        "n\xE1m",
        "n\xE1s",
        "n\xE1\u0161",
        "n\xEDm",
        "o",
        "od",
        "on",
        "ona",
        "oni",
        "ono",
        "ony",
        "po",
        "pod",
        "pre",
        "pred",
        "pri",
        "s",
        "sa",
        "seba",
        "sem",
        "so",
        "svoj",
        "tak\xFD",
        "tam",
        "teba",
        "tebe",
        "tebou",
        "tej",
        "ten",
        "ti",
        "tie",
        "to",
        "toho",
        "tomu",
        "tou",
        "tvoj",
        "ty",
        "t\xE1",
        "t\xFDm",
        "v",
        "vami",
        "ve\xEF",
        "vo",
        "vy",
        "v\xE1m",
        "v\xE1s",
        "v\xE1\u0161",
        "v\u0161ak",
        "z",
        "za",
        "zo",
        "\x9Da",
        "\xE8i",
        "\xE8o",
        "\xE8\xED",
        "\xF2om",
        "\xF2ou",
        "\xF2u",
        "\u017Ee"
      ];
      const slv = [
        "a",
        "ali",
        "april",
        "avgust",
        "b",
        "bi",
        "bil",
        "bila",
        "bile",
        "bili",
        "bilo",
        "biti",
        "blizu",
        "bo",
        "bodo",
        "bojo",
        "bolj",
        "bom",
        "bomo",
        "boste",
        "bova",
        "bo\u0161",
        "brez",
        "c",
        "cel",
        "cela",
        "celi",
        "celo",
        "d",
        "da",
        "dale\u010D",
        "dan",
        "danes",
        "datum",
        "december",
        "deset",
        "deseta",
        "deseti",
        "deseto",
        "devet",
        "deveta",
        "deveti",
        "deveto",
        "do",
        "dober",
        "dobra",
        "dobri",
        "dobro",
        "dokler",
        "dol",
        "dolg",
        "dolga",
        "dolgi",
        "dovolj",
        "drug",
        "druga",
        "drugi",
        "drugo",
        "dva",
        "dve",
        "e",
        "eden",
        "en",
        "ena",
        "ene",
        "eni",
        "enkrat",
        "eno",
        "etc.",
        "f",
        "februar",
        "g",
        "g.",
        "ga",
        "ga.",
        "gor",
        "gospa",
        "gospod",
        "h",
        "halo",
        "i",
        "idr.",
        "ii",
        "iii",
        "in",
        "iv",
        "ix",
        "iz",
        "j",
        "januar",
        "jaz",
        "je",
        "ji",
        "jih",
        "jim",
        "jo",
        "julij",
        "junij",
        "jutri",
        "k",
        "kadarkoli",
        "kaj",
        "kajti",
        "kako",
        "kakor",
        "kamor",
        "kamorkoli",
        "kar",
        "karkoli",
        "katerikoli",
        "kdaj",
        "kdo",
        "kdorkoli",
        "ker",
        "ki",
        "kje",
        "kjer",
        "kjerkoli",
        "ko",
        "koder",
        "koderkoli",
        "koga",
        "komu",
        "kot",
        "kratek",
        "kratka",
        "kratke",
        "kratki",
        "l",
        "lahka",
        "lahke",
        "lahki",
        "lahko",
        "le",
        "lep",
        "lepa",
        "lepe",
        "lepi",
        "lepo",
        "leto",
        "m",
        "maj",
        "majhen",
        "majhna",
        "majhni",
        "malce",
        "malo",
        "manj",
        "marec",
        "me",
        "med",
        "medtem",
        "mene",
        "mesec",
        "mi",
        "midva",
        "midve",
        "mnogo",
        "moj",
        "moja",
        "moje",
        "mora",
        "morajo",
        "moram",
        "moramo",
        "morate",
        "mora\u0161",
        "morem",
        "mu",
        "n",
        "na",
        "nad",
        "naj",
        "najina",
        "najino",
        "najmanj",
        "naju",
        "najve\u010D",
        "nam",
        "narobe",
        "nas",
        "nato",
        "nazaj",
        "na\u0161",
        "na\u0161a",
        "na\u0161e",
        "ne",
        "nedavno",
        "nedelja",
        "nek",
        "neka",
        "nekaj",
        "nekatere",
        "nekateri",
        "nekatero",
        "nekdo",
        "neke",
        "nekega",
        "neki",
        "nekje",
        "neko",
        "nekoga",
        "neko\u010D",
        "ni",
        "nikamor",
        "nikdar",
        "nikjer",
        "nikoli",
        "ni\u010D",
        "nje",
        "njega",
        "njegov",
        "njegova",
        "njegovo",
        "njej",
        "njemu",
        "njen",
        "njena",
        "njeno",
        "nji",
        "njih",
        "njihov",
        "njihova",
        "njihovo",
        "njiju",
        "njim",
        "njo",
        "njun",
        "njuna",
        "njuno",
        "no",
        "nocoj",
        "november",
        "npr.",
        "o",
        "ob",
        "oba",
        "obe",
        "oboje",
        "od",
        "odprt",
        "odprta",
        "odprti",
        "okoli",
        "oktober",
        "on",
        "onadva",
        "one",
        "oni",
        "onidve",
        "osem",
        "osma",
        "osmi",
        "osmo",
        "oz.",
        "p",
        "pa",
        "pet",
        "peta",
        "petek",
        "peti",
        "peto",
        "po",
        "pod",
        "pogosto",
        "poleg",
        "poln",
        "polna",
        "polni",
        "polno",
        "ponavadi",
        "ponedeljek",
        "ponovno",
        "potem",
        "povsod",
        "pozdravljen",
        "pozdravljeni",
        "prav",
        "prava",
        "prave",
        "pravi",
        "pravo",
        "prazen",
        "prazna",
        "prazno",
        "prbl.",
        "precej",
        "pred",
        "prej",
        "preko",
        "pri",
        "pribl.",
        "pribli\u017Eno",
        "primer",
        "pripravljen",
        "pripravljena",
        "pripravljeni",
        "proti",
        "prva",
        "prvi",
        "prvo",
        "r",
        "ravno",
        "redko",
        "res",
        "re\u010D",
        "s",
        "saj",
        "sam",
        "sama",
        "same",
        "sami",
        "samo",
        "se",
        "sebe",
        "sebi",
        "sedaj",
        "sedem",
        "sedma",
        "sedmi",
        "sedmo",
        "sem",
        "september",
        "seveda",
        "si",
        "sicer",
        "skoraj",
        "skozi",
        "slab",
        "smo",
        "so",
        "sobota",
        "spet",
        "sreda",
        "srednja",
        "srednji",
        "sta",
        "ste",
        "stran",
        "stvar",
        "sva",
        "t",
        "ta",
        "tak",
        "taka",
        "take",
        "taki",
        "tako",
        "takoj",
        "tam",
        "te",
        "tebe",
        "tebi",
        "tega",
        "te\u017Eak",
        "te\u017Eka",
        "te\u017Eki",
        "te\u017Eko",
        "ti",
        "tista",
        "tiste",
        "tisti",
        "tisto",
        "tj.",
        "tja",
        "to",
        "toda",
        "torek",
        "tretja",
        "tretje",
        "tretji",
        "tri",
        "tu",
        "tudi",
        "tukaj",
        "tvoj",
        "tvoja",
        "tvoje",
        "u",
        "v",
        "vaju",
        "vam",
        "vas",
        "va\u0161",
        "va\u0161a",
        "va\u0161e",
        "ve",
        "vedno",
        "velik",
        "velika",
        "veliki",
        "veliko",
        "vendar",
        "ves",
        "ve\u010D",
        "vi",
        "vidva",
        "vii",
        "viii",
        "visok",
        "visoka",
        "visoke",
        "visoki",
        "vsa",
        "vsaj",
        "vsak",
        "vsaka",
        "vsakdo",
        "vsake",
        "vsaki",
        "vsakomur",
        "vse",
        "vsega",
        "vsi",
        "vso",
        "v\u010Dasih",
        "v\u010Deraj",
        "x",
        "z",
        "za",
        "zadaj",
        "zadnji",
        "zakaj",
        "zaprta",
        "zaprti",
        "zaprto",
        "zdaj",
        "zelo",
        "zunaj",
        "\u010D",
        "\u010De",
        "\u010Desto",
        "\u010Detrta",
        "\u010Detrtek",
        "\u010Detrti",
        "\u010Detrto",
        "\u010Dez",
        "\u010Digav",
        "\u0161",
        "\u0161est",
        "\u0161esta",
        "\u0161esti",
        "\u0161esto",
        "\u0161tiri",
        "\u017E",
        "\u017Ee"
      ];
      const som = [
        "oo",
        "atabo",
        "ay",
        "ku",
        "waxeey",
        "uu",
        "lakin",
        "si",
        "ayuu",
        "soo",
        "waa",
        "ka",
        "kasoo",
        "kale",
        "waxuu",
        "ayee",
        "ayaa",
        "kuu",
        "isku",
        "ugu",
        "jiray",
        "dhan",
        "dambeestii",
        "inuu",
        "in",
        "jirtay",
        "uheestay",
        "aad",
        "uga",
        "hadana",
        "timaado",
        "timaaday"
      ];
      const sot = [
        "a",
        "le",
        "o",
        "ba",
        "ho",
        "oa",
        "ea",
        "ka",
        "hae",
        "tselane",
        "eaba",
        "ke",
        "hore",
        "ha",
        "e",
        "ne",
        "re",
        "bona",
        "me",
        "limo",
        "tsa",
        "haholo",
        "la",
        "empa",
        "ngoanake",
        "se",
        "moo",
        "m'e",
        "bane",
        "mo",
        "tse",
        "sa",
        "li",
        "ena",
        "bina",
        "pina",
        "hape"
      ];
      const spa = [
        "a",
        "un",
        "el",
        "ella",
        "y",
        "sobre",
        "de",
        "la",
        "que",
        "en",
        "los",
        "del",
        "se",
        "las",
        "por",
        "un",
        "para",
        "con",
        "no",
        "una",
        "su",
        "al",
        "lo",
        "como",
        "m\xE1s",
        "pero",
        "sus",
        "le",
        "ya",
        "o",
        "porque",
        "cuando",
        "muy",
        "sin",
        "sobre",
        "tambi\xE9n",
        "me",
        "hasta",
        "donde",
        "quien",
        "desde",
        "nos",
        "durante",
        "uno",
        "ni",
        "contra",
        "ese",
        "eso",
        "m\xED",
        "qu\xE9",
        "otro",
        "\xE9l",
        "cual",
        "poco",
        "mi",
        "t\xFA",
        "te",
        "ti",
        "s\xED"
      ];
      const swa = [
        "na",
        "ya",
        "wa",
        "kwa",
        "ni",
        "za",
        "katika",
        "la",
        "kuwa",
        "kama",
        "kwamba",
        "cha",
        "hiyo",
        "lakini",
        "yake",
        "hata",
        "wakati",
        "hivyo",
        "sasa",
        "wake",
        "au",
        "watu",
        "hii",
        "zaidi",
        "vya",
        "huo",
        "tu",
        "kwenye",
        "si",
        "pia",
        "ili",
        "moja",
        "kila",
        "baada",
        "ambao",
        "ambayo",
        "yao",
        "wao",
        "kuna",
        "hilo",
        "kutoka",
        "kubwa",
        "pamoja",
        "bila",
        "huu",
        "hayo",
        "sana",
        "ndani",
        "mkuu",
        "hizo",
        "kufanya",
        "wengi",
        "hadi",
        "mmoja",
        "hili",
        "juu",
        "kwanza",
        "wetu",
        "kuhusu",
        "baadhi",
        "wote",
        "yetu",
        "hivi",
        "kweli",
        "mara",
        "wengine",
        "nini",
        "ndiyo",
        "zao",
        "kati",
        "hao",
        "hapa",
        "kutokana",
        "muda",
        "habari",
        "ambaye",
        "wenye",
        "nyingine",
        "hakuna",
        "tena",
        "hatua",
        "bado",
        "nafasi",
        "basi",
        "kabisa",
        "hicho",
        "nje",
        "huyo",
        "vile",
        "yote",
        "mkubwa",
        "alikuwa",
        "zote",
        "leo",
        "haya",
        "huko",
        "kutoa",
        "mwa",
        "kiasi",
        "hasa",
        "nyingi",
        "kabla",
        "wale",
        "chini",
        "gani",
        "hapo",
        "lazima",
        "mwingine",
        "bali",
        "huku",
        "zake",
        "ilikuwa",
        "tofauti",
        "kupata",
        "mbalimbali",
        "pale",
        "kusema",
        "badala",
        "wazi",
        "yeye",
        "alisema",
        "hawa",
        "ndio",
        "hizi",
        "tayari",
        "wala",
        "muhimu",
        "ile",
        "mpya",
        "ambazo",
        "dhidi",
        "kwenda",
        "sisi",
        "kwani",
        "jinsi",
        "binafsi",
        "kutumia",
        "mbili",
        "mbali",
        "kuu",
        "mengine",
        "mbele",
        "namna",
        "mengi",
        "upande"
      ];
      const swe = [
        "jag",
        "det",
        "\xE4r",
        "du",
        "inte",
        "att",
        "en",
        "och",
        "har",
        "vi",
        "p\xE5",
        "i",
        "f\xF6r",
        "han",
        "vad",
        "med",
        "mig",
        "som",
        "h\xE4r",
        "om",
        "dig",
        "var",
        "den",
        "s\xE5",
        "till",
        "kan",
        "de",
        "ni",
        "ska",
        "ett",
        "men",
        "av",
        "vill",
        "nu",
        "ja",
        "nej",
        "bara",
        "hon",
        "hur",
        "min",
        "d\xE4r",
        "honom",
        "kom",
        "din",
        "d\xE5",
        "n\xE4r",
        "ha",
        "er",
        "ta",
        "ut",
        "f\xE5r",
        "man",
        "vara",
        "oss",
        "dem",
        "eller",
        "varf\xF6r",
        "alla",
        "fr\xE5n",
        "upp",
        "igen",
        "sa",
        "hade",
        "allt",
        "in",
        "sig",
        "ingen",
        "henne",
        "vem",
        "mitt",
        "n\xE5t",
        "blir",
        "\xE4n",
        "bli",
        "ju",
        "tv\xE5",
        "tar",
        "hans",
        "ditt",
        "mina",
        "\xE5t",
        "v\xE4l",
        "ocks\xE5",
        "n\xE5n",
        "l\xE5t",
        "detta",
        "va",
        "dina",
        "dom",
        "blev",
        "inga",
        "sin",
        "just",
        "m\xE5nga",
        "vart",
        "vilken",
        "ur",
        "ens",
        "sitt",
        "e",
        "jo",
        "era",
        "deras",
        "fem",
        "sex",
        "denna",
        "vilket",
        "fyra",
        "v\xE5rt",
        "emot",
        "tio",
        "ert",
        "sju",
        "\xE5tta",
        "n\xE5nting",
        "ned",
        "ers",
        "nio",
        "mej"
      ];
      const tha = [
        "\u0E01\u0E25\u0E48\u0E32\u0E27",
        "\u0E01\u0E27\u0E48\u0E32",
        "\u0E01\u0E31\u0E19",
        "\u0E01\u0E31\u0E1A",
        "\u0E01\u0E32\u0E23",
        "\u0E01\u0E47",
        "\u0E01\u0E48\u0E2D\u0E19",
        "\u0E02\u0E13\u0E30",
        "\u0E02\u0E2D",
        "\u0E02\u0E2D\u0E07",
        "\u0E02\u0E36\u0E49\u0E19",
        "\u0E04\u0E07",
        "\u0E04\u0E23\u0E31\u0E49\u0E07",
        "\u0E04\u0E27\u0E32\u0E21",
        "\u0E04\u0E37\u0E2D",
        "\u0E08\u0E30",
        "\u0E08\u0E31\u0E14",
        "\u0E08\u0E32\u0E01",
        "\u0E08\u0E36\u0E07",
        "\u0E0A\u0E48\u0E27\u0E07",
        "\u0E0B\u0E36\u0E48\u0E07",
        "\u0E14\u0E31\u0E07",
        "\u0E14\u0E49\u0E27\u0E22",
        "\u0E14\u0E49\u0E32\u0E19",
        "\u0E15\u0E31\u0E49\u0E07",
        "\u0E15\u0E31\u0E49\u0E07\u0E41\u0E15\u0E48",
        "\u0E15\u0E32\u0E21",
        "\u0E15\u0E48\u0E2D",
        "\u0E15\u0E48\u0E32\u0E07",
        "\u0E15\u0E48\u0E32\u0E07\u0E46",
        "\u0E15\u0E49\u0E2D\u0E07",
        "\u0E16\u0E36\u0E07",
        "\u0E16\u0E39\u0E01",
        "\u0E16\u0E49\u0E32",
        "\u0E17\u0E31\u0E49\u0E07",
        "\u0E17\u0E31\u0E49\u0E07\u0E19\u0E35\u0E49",
        "\u0E17\u0E32\u0E07",
        "\u0E17\u0E35\u0E48",
        "\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14",
        "\u0E17\u0E38\u0E01",
        "\u0E17\u0E4D\u0E32",
        "\u0E17\u0E4D\u0E32\u0E43\u0E2B\u0E49",
        "\u0E19\u0E2D\u0E01\u0E08\u0E32\u0E01",
        "\u0E19\u0E31\u0E01",
        "\u0E19\u0E31\u0E49\u0E19",
        "\u0E19\u0E35\u0E49",
        "\u0E19\u0E48\u0E32",
        "\u0E19\u0E4D\u0E32",
        "\u0E1A\u0E32\u0E07",
        "\u0E1C\u0E25",
        "\u0E1C\u0E48\u0E32\u0E19",
        "\u0E1E\u0E1A",
        "\u0E1E\u0E23\u0E49\u0E2D\u0E21",
        "\u0E21\u0E32",
        "\u0E21\u0E32\u0E01",
        "\u0E21\u0E35",
        "\u0E22\u0E31\u0E07",
        "\u0E23\u0E27\u0E21",
        "\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07",
        "\u0E23\u0E31\u0E1A",
        "\u0E23\u0E32\u0E22",
        "\u0E23\u0E48\u0E27\u0E21",
        "\u0E25\u0E07",
        "\u0E27\u0E31\u0E19",
        "\u0E27\u0E48\u0E32",
        "\u0E2A\u0E38\u0E14",
        "\u0E2A\u0E48\u0E07",
        "\u0E2A\u0E48\u0E27\u0E19",
        "\u0E2A\u0E4D\u0E32\u0E2B\u0E23\u0E31\u0E1A",
        "\u0E2B\u0E19\u0E36\u0E48\u0E07",
        "\u0E2B\u0E23\u0E37\u0E2D",
        "\u0E2B\u0E25\u0E31\u0E07",
        "\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01",
        "\u0E2B\u0E25\u0E32\u0E22",
        "\u0E2B\u0E32\u0E01",
        "\u0E2D\u0E22\u0E32\u0E01",
        "\u0E2D\u0E22\u0E39\u0E48",
        "\u0E2D\u0E22\u0E48\u0E32\u0E07",
        "\u0E2D\u0E2D\u0E01",
        "\u0E2D\u0E30\u0E44\u0E23",
        "\u0E2D\u0E32\u0E08",
        "\u0E2D\u0E35\u0E01",
        "\u0E40\u0E02\u0E32",
        "\u0E40\u0E02\u0E49\u0E32",
        "\u0E40\u0E04\u0E22",
        "\u0E40\u0E09\u0E1E\u0E32\u0E30",
        "\u0E40\u0E0A\u0E48\u0E19",
        "\u0E40\u0E14\u0E35\u0E22\u0E27",
        "\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19",
        "\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01",
        "\u0E40\u0E1B\u0E34\u0E14",
        "\u0E40\u0E1B\u0E34\u0E14\u0E40\u0E1C\u0E22",
        "\u0E40\u0E1B\u0E47\u0E19",
        "\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23",
        "\u0E40\u0E1E\u0E23\u0E32\u0E30",
        "\u0E40\u0E1E\u0E37\u0E48\u0E2D",
        "\u0E40\u0E21\u0E37\u0E48\u0E2D",
        "\u0E40\u0E23\u0E32",
        "\u0E40\u0E23\u0E34\u0E48\u0E21",
        "\u0E40\u0E25\u0E22",
        "\u0E40\u0E2B\u0E47\u0E19",
        "\u0E40\u0E2D\u0E07",
        "\u0E41\u0E15\u0E48",
        "\u0E41\u0E1A\u0E1A",
        "\u0E41\u0E23\u0E01",
        "\u0E41\u0E25\u0E30",
        "\u0E41\u0E25\u0E49\u0E27",
        "\u0E41\u0E2B\u0E48\u0E07",
        "\u0E42\u0E14\u0E22",
        "\u0E43\u0E19",
        "\u0E43\u0E2B\u0E49",
        "\u0E44\u0E14\u0E49",
        "\u0E44\u0E1B",
        "\u0E44\u0E21\u0E48",
        "\u0E44\u0E27\u0E49"
      ];
      const tgl = [
        "akin",
        "aking",
        "ako",
        "alin",
        "am",
        "amin",
        "aming",
        "ang",
        "ano",
        "anumang",
        "apat",
        "at",
        "atin",
        "ating",
        "ay",
        "bababa",
        "bago",
        "bakit",
        "bawat",
        "bilang",
        "dahil",
        "dalawa",
        "dapat",
        "din",
        "dito",
        "doon",
        "gagawin",
        "gayunman",
        "ginagawa",
        "ginawa",
        "ginawang",
        "gumawa",
        "gusto",
        "habang",
        "hanggang",
        "hindi",
        "huwag",
        "iba",
        "ibaba",
        "ibabaw",
        "ibig",
        "ikaw",
        "ilagay",
        "ilalim",
        "ilan",
        "inyong",
        "isa",
        "isang",
        "itaas",
        "ito",
        "iyo",
        "iyon",
        "iyong",
        "ka",
        "kahit",
        "kailangan",
        "kailanman",
        "kami",
        "kanila",
        "kanilang",
        "kanino",
        "kanya",
        "kanyang",
        "kapag",
        "kapwa",
        "karamihan",
        "katiyakan",
        "katulad",
        "kaya",
        "kaysa",
        "ko",
        "kong",
        "kulang",
        "kumuha",
        "kung",
        "laban",
        "lahat",
        "lamang",
        "likod",
        "lima",
        "maaari",
        "maaaring",
        "maging",
        "mahusay",
        "makita",
        "marami",
        "marapat",
        "masyado",
        "may",
        "mayroon",
        "mga",
        "minsan",
        "mismo",
        "mula",
        "muli",
        "na",
        "nabanggit",
        "naging",
        "nagkaroon",
        "nais",
        "nakita",
        "namin",
        "napaka",
        "narito",
        "nasaan",
        "ng",
        "ngayon",
        "ni",
        "nila",
        "nilang",
        "nito",
        "niya",
        "niyang",
        "noon",
        "o",
        "pa",
        "paano",
        "pababa",
        "paggawa",
        "pagitan",
        "pagkakaroon",
        "pagkatapos",
        "palabas",
        "pamamagitan",
        "panahon",
        "pangalawa",
        "para",
        "paraan",
        "pareho",
        "pataas",
        "pero",
        "pumunta",
        "pumupunta",
        "sa",
        "saan",
        "sabi",
        "sabihin",
        "sarili",
        "sila",
        "sino",
        "siya",
        "tatlo",
        "tayo",
        "tulad",
        "tungkol",
        "una",
        "walang"
      ];
      const tur = [
        "acaba",
        "acep",
        "adeta",
        "altm\u0131\u015F",
        "altm\u0131\u015F",
        "alt\u0131",
        "alt\u0131",
        "ama",
        "ancak",
        "arada",
        "art\u0131k",
        "asl\u0131nda",
        "aynen",
        "ayr\u0131ca",
        "az",
        "bana",
        "bari",
        "bazen",
        "baz\u0131",
        "baz\u0131",
        "ba\u015Fka",
        "belki",
        "ben",
        "benden",
        "beni",
        "benim",
        "beri",
        "be\u015F",
        "be\u015F",
        "be\u015F",
        "bile",
        "bin",
        "bir",
        "biraz",
        "biri",
        "birka\xE7",
        "birkez",
        "bir\xE7ok",
        "bir\u015Fey",
        "bir\u015Feyi",
        "bir\u015Fey",
        "bir\u015Feyi",
        "bir\u015Fey",
        "biz",
        "bizden",
        "bize",
        "bizi",
        "bizim",
        "bu",
        "buna",
        "bunda",
        "bundan",
        "bunlar",
        "bunlar\u0131",
        "bunlar\u0131n",
        "bunu",
        "bunun",
        "burada",
        "b\xF6yle",
        "b\xF6ylece",
        "b\xFCt\xFCn",
        "da",
        "daha",
        "dahi",
        "dahil",
        "daima",
        "dair",
        "dayanarak",
        "de",
        "defa",
        "de\u0111il",
        "de\u011Fil",
        "diye",
        "di\u0111er",
        "di\u011Fer",
        "doksan",
        "dokuz",
        "dolay\u0131",
        "dolay\u0131s\u0131yla",
        "d\xF6rt",
        "edecek",
        "eden",
        "ederek",
        "edilecek",
        "ediliyor",
        "edilmesi",
        "ediyor",
        "elli",
        "en",
        "etmesi",
        "etti",
        "etti\u011Fi",
        "etti\u011Fini",
        "e\u0111er",
        "e\u011Fer",
        "fakat",
        "gibi",
        "g\xF6re",
        "halbuki",
        "halen",
        "hangi",
        "hani",
        "hari\xE7",
        "hatta",
        "hele",
        "hem",
        "hen\xFCz",
        "hep",
        "hepsi",
        "her",
        "herhangi",
        "herkes",
        "herkesin",
        "hi\xE7",
        "hi\xE7bir",
        "iken",
        "iki",
        "ila",
        "ile",
        "ilgili",
        "ilk",
        "illa",
        "ise",
        "itibaren",
        "itibariyle",
        "iyi",
        "iyice",
        "i\xE7in",
        "i\u015Fte",
        "i\u015Fte",
        "kadar",
        "kan\u0131mca",
        "kar\u015F\u0131n",
        "katrilyon",
        "kendi",
        "kendilerine",
        "kendini",
        "kendisi",
        "kendisine",
        "kendisini",
        "kere",
        "kez",
        "ke\u015Fke",
        "ki",
        "kim",
        "kimden",
        "kime",
        "kimi",
        "kimse",
        "k\u0131rk",
        "k\u0131saca",
        "k\u0131rk",
        "lakin",
        "madem",
        "me\u0111er",
        "milyar",
        "milyon",
        "mu",
        "m\xFC",
        "m\u0131",
        "m\u0131",
        "nas\u0131l",
        "nas\u0131l",
        "ne",
        "neden",
        "nedenle",
        "nerde",
        "nere",
        "nerede",
        "nereye",
        "nitekim",
        "niye",
        "ni\xE7in",
        "o",
        "olan",
        "olarak",
        "oldu",
        "olduklar\u0131n\u0131",
        "oldu\u011Fu",
        "oldu\u011Funu",
        "olmad\u0131",
        "olmad\u0131\u011F\u0131",
        "olmak",
        "olmas\u0131",
        "olmayan",
        "olmaz",
        "olsa",
        "olsun",
        "olup",
        "olur",
        "olursa",
        "oluyor",
        "on",
        "ona",
        "ondan",
        "onlar",
        "onlardan",
        "onlari",
        "onlar\u0131n",
        "onlar\u0131",
        "onlar\u0131n",
        "onu",
        "onun",
        "otuz",
        "oysa",
        "pek",
        "ra\u011Fmen",
        "sadece",
        "sanki",
        "sekiz",
        "seksen",
        "sen",
        "senden",
        "seni",
        "senin",
        "siz",
        "sizden",
        "sizi",
        "sizin",
        "sonra",
        "taraf\u0131ndan",
        "trilyon",
        "t\xFCm",
        "var",
        "vard\u0131",
        "ve",
        "veya",
        "veyahut",
        "ya",
        "yahut",
        "yani",
        "yapacak",
        "yapmak",
        "yapt\u0131",
        "yapt\u0131klar\u0131",
        "yapt\u0131\u011F\u0131",
        "yapt\u0131\u011F\u0131n\u0131",
        "yap\u0131lan",
        "yap\u0131lmas\u0131",
        "yap\u0131yor",
        "yedi",
        "yerine",
        "yetmi\u015F",
        "yetmi\u015F",
        "yetmi\u015F",
        "yine",
        "yirmi",
        "yoksa",
        "y\xFCz",
        "zaten",
        "\xE7ok",
        "\xE7\xFCnk\xFC",
        "\xF6yle",
        "\xFCzere",
        "\xFC\xE7",
        "\u015Fey",
        "\u015Feyden",
        "\u015Feyi",
        "\u015Feyler",
        "\u015Fu",
        "\u015Funa",
        "\u015Funda",
        "\u015Fundan",
        "\u015Funu",
        "\u015Fey",
        "\u015Feyden",
        "\u015Feyi",
        "\u015Feyler",
        "\u015Fu",
        "\u015Funa",
        "\u015Funda",
        "\u015Fundan",
        "\u015Funlar\u0131",
        "\u015Funu",
        "\u015F\xF6yle",
        "\u015Fayet",
        "\u015Fimdi",
        "\u015Fu",
        "\u015F\xF6yle"
      ];
      const ukr = [
        "\u0430\u0432\u0436\u0435\u0436",
        "\u0430\u0434\u0436\u0435",
        "\u0430\u043B\u0435",
        "\u0431",
        "\u0431\u0435\u0437",
        "\u0431\u0443\u0432",
        "\u0431\u0443\u043B\u0430",
        "\u0431\u0443\u043B\u0438",
        "\u0431\u0443\u043B\u043E",
        "\u0431\u0443\u0442\u0438",
        "\u0431\u0456\u043B\u044C\u0448",
        "\u0432\u0430\u043C",
        "\u0432\u0430\u0441",
        "\u0432\u0435\u0441\u044C",
        "\u0432\u0437\u0434\u043E\u0432\u0436",
        "\u0432\u0438",
        "\u0432\u043D\u0438\u0437",
        "\u0432\u043D\u0438\u0437\u0443",
        "\u0432\u043E\u043D\u0430",
        "\u0432\u043E\u043D\u0438",
        "\u0432\u043E\u043D\u043E",
        "\u0432\u0441\u0435",
        "\u0432\u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0456",
        "\u0432\u0441\u0456\u0445",
        "\u0432\u0456\u0434",
        "\u0432\u0456\u043D",
        "\u0434\u0430",
        "\u0434\u0430\u0432\u0430\u0439",
        "\u0434\u0430\u0432\u0430\u0442\u0438",
        "\u0434\u0435",
        "\u0434\u0435\u0449\u043E",
        "\u0434\u043B\u044F",
        "\u0434\u043E",
        "\u0437",
        "\u0437\u0430\u0432\u0436\u0434\u0438",
        "\u0437\u0430\u043C\u0456\u0441\u0442\u044C",
        "\u0439",
        "\u043A\u043E\u043B\u0438",
        "\u043B\u0435\u0434\u0432\u0435",
        "\u043C\u0430\u0439\u0436\u0435",
        "\u043C\u0438",
        "\u043D\u0430\u0432\u043A\u043E\u043B\u043E",
        "\u043D\u0430\u0432\u0456\u0442\u044C",
        "\u043D\u0430\u043C",
        "\u043E\u0442",
        "\u043E\u0442\u0436\u0435",
        "\u043E\u0442\u043E\u0436",
        "\u043F\u043E\u0437\u0430",
        "\u043F\u0440\u043E",
        "\u043F\u0456\u0434",
        "\u0442\u0430",
        "\u0442\u0430\u043A",
        "\u0442\u0430\u043A\u0438\u0439",
        "\u0442\u0430\u043A\u043E\u0436",
        "\u0442\u0435",
        "\u0442\u0438",
        "\u0442\u043E\u0431\u0442\u043E",
        "\u0442\u043E\u0436",
        "\u0442\u043E\u0449\u043E",
        "\u0445\u043E\u0447\u0430",
        "\u0446\u0435",
        "\u0446\u0435\u0439",
        "\u0447\u0438",
        "\u0447\u043E\u0433\u043E",
        "\u0449\u043E",
        "\u044F\u043A",
        "\u044F\u043A\u0438\u0439",
        "\u044F\u043A\u043E\u0457",
        "\u0454",
        "\u0456\u0437",
        "\u0456\u043D\u0448\u0438\u0445",
        "\u0457\u0445",
        "\u0457\u0457"
      ];
      const urd = [
        "\u0622\u0626\u06CC",
        "\u0622\u0626\u06D2",
        "\u0622\u062C",
        "\u0622\u062E\u0631",
        "\u0622\u062E\u0631\u06A9\u0628\u0631",
        "\u0622\u062F\u0647\u06CC",
        "\u0622\u064B\u0628",
        "\u0622\u0679\u06BE",
        "\u0622\u06CC\u0628",
        "\u0627\u0629",
        "\u0627\u062E\u0628\u0632\u062A",
        "\u0627\u062E\u062A\u062A\u0628\u0645",
        "\u0627\u062F\u06BE\u0631",
        "\u0627\u0631\u062F",
        "\u0627\u0631\u062F\u06AF\u0631\u062F",
        "\u0627\u0631\u06A9\u0628\u0649",
        "\u0627\u0634",
        "\u0627\u0636\u062A\u0639\u0648\u0628\u0644",
        "\u0627\u0636\u062A\u0639\u0648\u0628\u0644\u0627\u062A",
        "\u0627\u0636\u0637\u0631\u0630",
        "\u0627\u0636\u06A9\u0628",
        "\u0627\u0636\u06A9\u06CC",
        "\u0627\u0636\u06A9\u06D2",
        "\u0627\u0637\u0631\u0627\u0641",
        "\u0627\u063A\u06CC\u0628",
        "\u0627\u0641\u0631\u0627\u062F",
        "\u0627\u0644\u06AF",
        "\u0627\u0648\u0631",
        "\u0627\u0648\u064B\u0686\u0628",
        "\u0627\u0648\u064B\u0686\u0628\u0626\u06CC",
        "\u0627\u0648\u064B\u0686\u06CC",
        "\u0627\u0648\u064B\u0686\u06D2",
        "\u0627\u0649",
        "\u0627\u064B",
        "\u0627\u064B\u0630\u0631",
        "\u0627\u064B\u06C1\u06CC\u06BA",
        "\u0627\u0679\u06BE\u0628\u064B\u0628",
        "\u0627\u067E\u064C\u0628",
        "\u0627\u067E\u064C\u06D2",
        "\u0627\u0686\u06BE\u0628",
        "\u0627\u0686\u06BE\u06CC",
        "\u0627\u0686\u06BE\u06D2",
        "\u0627\u06A9\u062B\u0631",
        "\u0627\u06A9\u0679\u06BE\u0628",
        "\u0627\u06A9\u0679\u06BE\u06CC",
        "\u0627\u06A9\u0679\u06BE\u06D2",
        "\u0627\u06A9\u06CC\u0644\u0627",
        "\u0627\u06A9\u06CC\u0644\u06CC",
        "\u0627\u06A9\u06CC\u0644\u06D2",
        "\u0627\u06AF\u0631\u0686\u06C1",
        "\u0627\u06C1\u0646",
        "\u0627\u06CC\u0637\u06D2",
        "\u0627\u06CC\u06A9",
        "\u0628",
        "\u062A",
        "\u062A\u0628\u0632\u064D",
        "\u062A\u062A",
        "\u062A\u0631",
        "\u062A\u0631\u062A\u06CC\u062A",
        "\u062A\u0631\u06CC\u064A",
        "\u062A\u0639\u0630\u0627\u062F",
        "\u062A\u0646",
        "\u062A\u0648",
        "\u062A\u0648\u0628\u0645",
        "\u062A\u0648\u06C1\u06CC",
        "\u062A\u0648\u06C1\u06CC\u06BA",
        "\u062A\u064C\u06C1\u0628",
        "\u062A\u06A9",
        "\u062A\u06BE\u0628",
        "\u062A\u06BE\u0648\u0691\u0627",
        "\u062A\u06BE\u0648\u0691\u06CC",
        "\u062A\u06BE\u0648\u0691\u06D2",
        "\u062A\u06BE\u06CC",
        "\u062A\u06BE\u06D2",
        "\u062A\u06CC\u064A",
        "\u062B\u0628",
        "\u062B\u0628\u0626\u06CC\u06BA",
        "\u062B\u0628\u062A\u0631\u062A\u06CC\u062A",
        "\u062B\u0628\u0631\u06CC",
        "\u062B\u0628\u0631\u06D2",
        "\u062B\u0628\u0639\u062B",
        "\u062B\u0628\u0644\u0627",
        "\u062B\u0628\u0644\u062A\u0631\u062A\u06CC\u062A",
        "\u062B\u0628\u06C1\u0631",
        "\u062B\u062F\u0628\u0626\u06D2",
        "\u062B\u0631\u0622\u06BA",
        "\u062B\u0631\u0627\u06BA",
        "\u062B\u0631\u0634",
        "\u062B\u0639\u0630",
        "\u062B\u063A\u06CC\u0631",
        "\u062B\u0644\u064C\u0630",
        "\u062B\u0644\u064C\u0630\u0648\u062B\u0628\u0644\u0627",
        "\u062B\u0644\u06A9\u06C1",
        "\u062B\u064A",
        "\u062B\u064C\u0628",
        "\u062B\u064C\u0628\u0631\u06C1\u0628",
        "\u062B\u064C\u0628\u0631\u06C1\u06CC",
        "\u062B\u064C\u0628\u0631\u06C1\u06D2",
        "\u062B\u064C\u0628\u064B\u0628",
        "\u062B\u064C\u0630",
        "\u062B\u064C\u0630\u06A9\u0631\u0648",
        "\u062B\u064C\u0630\u06A9\u0631\u064B\u0628",
        "\u062B\u064C\u0630\u06CC",
        "\u062B\u0691\u0627",
        "\u062B\u0691\u0648\u06BA",
        "\u062B\u0691\u06CC",
        "\u062B\u0691\u06D2",
        "\u062B\u06BE\u0631",
        "\u062B\u06BE\u0631\u0627",
        "\u062B\u06BE\u0631\u0627\u06C1\u0648\u0627",
        "\u062B\u06BE\u0631\u067E\u0648\u0631",
        "\u062B\u06BE\u06CC",
        "\u062B\u06C1\u062A",
        "\u062B\u06C1\u062A\u0631",
        "\u062B\u06C1\u062A\u0631\u06CC",
        "\u062B\u06C1\u062A\u0631\u06CC\u064A",
        "\u062B\u06CC\u0686",
        "\u062C",
        "\u062E\u0628",
        "\u062E\u0628\u0631\u06C1\u0628",
        "\u062E\u0628\u0631\u06C1\u06CC",
        "\u062E\u0628\u0631\u06C1\u06D2",
        "\u062E\u0628\u0647\u0648\u0638",
        "\u062E\u0628\u064B\u0628",
        "\u062E\u0628\u064B\u062A\u0628",
        "\u062E\u0628\u064B\u062A\u06CC",
        "\u062E\u0628\u064B\u062A\u06D2",
        "\u062E\u0628\u064B\u064C\u0628",
        "\u062E\u062A",
        "\u062E\u062A\u0646",
        "\u062E\u062C\u06A9\u06C1",
        "\u062E\u0635",
        "\u062E\u0637\u0637\u0631\u0630",
        "\u062E\u0644\u0630\u06CC",
        "\u062E\u0648",
        "\u062E\u0648\u0627\u0649",
        "\u062E\u0648\u064B\u06C1\u06CC",
        "\u062E\u0648\u06A9\u06C1",
        "\u062E\u064C\u0628\u0629",
        "\u062E\u06AF\u06C1",
        "\u062E\u06AF\u06C1\u0648\u06BA",
        "\u062E\u06AF\u06C1\u06CC\u06BA",
        "\u062E\u06CC\u0637\u0628",
        "\u062E\u06CC\u0637\u0628\u06A9\u06C1",
        "\u062F\u0631",
        "\u062F\u0631\u062E\u0628\u062A",
        "\u062F\u0631\u062E\u06C1",
        "\u062F\u0631\u062E\u06D2",
        "\u062F\u0631\u0632\u0642\u06CC\u0642\u062A",
        "\u062F\u0631\u0636\u062A",
        "\u062F\u0634",
        "\u062F\u0641\u0639\u06C1",
        "\u062F\u0644\u0686\u0637\u067E",
        "\u062F\u0644\u0686\u0637\u067E\u06CC",
        "\u062F\u0644\u0686\u0637\u067E\u06CC\u0628\u06BA",
        "\u062F\u0648",
        "\u062F\u0648\u0631",
        "\u062F\u0648\u0631\u0627\u0649",
        "\u062F\u0648\u0636\u0631\u0627",
        "\u062F\u0648\u0636\u0631\u0648\u06BA",
        "\u062F\u0648\u0636\u0631\u06CC",
        "\u062F\u0648\u0636\u0631\u06D2",
        "\u062F\u0648\u064B\u0648\u06BA",
        "\u062F\u06A9\u06BE\u0628\u0626\u06CC\u06BA",
        "\u062F\u06A9\u06BE\u0628\u062A\u0628",
        "\u062F\u06A9\u06BE\u0628\u062A\u06CC",
        "\u062F\u06A9\u06BE\u0628\u062A\u06D2",
        "\u062F\u06A9\u06BE\u0628\u0648",
        "\u062F\u06A9\u06BE\u0628\u064B\u0628",
        "\u062F\u06A9\u06BE\u0628\u06CC\u0628",
        "\u062F\u06CC",
        "\u062F\u06CC\u0628",
        "\u062F\u06CC\u062A\u0628",
        "\u062F\u06CC\u062A\u06CC",
        "\u062F\u06CC\u062A\u06D2",
        "\u062F\u06CC\u0631",
        "\u062F\u06CC\u064C\u0628",
        "\u062F\u06CC\u06A9\u06BE\u0648",
        "\u062F\u06CC\u06A9\u06BE\u064C\u0628",
        "\u062F\u06CC\u06A9\u06BE\u06CC",
        "\u062F\u06CC\u06A9\u06BE\u06CC\u06BA",
        "\u062F\u06D2",
        "\u0631",
        "\u0631\u0627\u0636\u062A\u0648\u06BA",
        "\u0631\u0627\u0636\u062A\u06C1",
        "\u0631\u0627\u0636\u062A\u06D2",
        "\u0631\u0631\u06CC\u0639\u06C1",
        "\u0631\u0631\u06CC\u0639\u06D2",
        "\u0631\u06A9\u064A",
        "\u0631\u06A9\u06BE",
        "\u0631\u06A9\u06BE\u0628",
        "\u0631\u06A9\u06BE\u062A\u0628",
        "\u0631\u06A9\u06BE\u062A\u0628\u06C1\u0648\u06BA",
        "\u0631\u06A9\u06BE\u062A\u06CC",
        "\u0631\u06A9\u06BE\u062A\u06D2",
        "\u0631\u06A9\u06BE\u06CC",
        "\u0631\u06A9\u06BE\u06D2",
        "\u0631\u06C1\u0628",
        "\u0631\u06C1\u06CC",
        "\u0631\u06C1\u06D2",
        "\u0632",
        "\u0632\u0628\u0635\u0644",
        "\u0632\u0628\u0636\u0631",
        "\u0632\u0628\u0644",
        "\u0632\u0628\u0644\u0627\u062A",
        "\u0632\u0628\u0644\u06CC\u06C1",
        "\u0632\u0635\u0648\u06BA",
        "\u0632\u0635\u06C1",
        "\u0632\u0635\u06D2",
        "\u0632\u0642\u0628\u0626\u0642",
        "\u0632\u0642\u06CC\u062A\u06CC\u06BA",
        "\u0632\u0642\u06CC\u0642\u062A",
        "\u0632\u06A9\u0646",
        "\u0632\u06A9\u0648\u06CC\u06C1",
        "\u0632\u06CC\u0628\u062F\u064D",
        "\u0635\u0628\u0641",
        "\u0635\u0633\u06CC\u0631",
        "\u0635\u0641\u0631",
        "\u0635\u0648\u0631\u062A",
        "\u0635\u0648\u0631\u062A\u0633\u0628\u0644",
        "\u0635\u0648\u0631\u062A\u0648\u06BA",
        "\u0635\u0648\u0631\u062A\u06CC\u06BA",
        "\u0636",
        "\u0636\u0628\u062A",
        "\u0636\u0628\u062A\u06BE",
        "\u0636\u0628\u062F\u064D",
        "\u0636\u0628\u0631\u0627",
        "\u0636\u0628\u0631\u06D2",
        "\u0636\u0628\u0644",
        "\u0636\u0628\u0644\u0648\u06BA",
        "\u0636\u062A",
        "\u0636\u0631\u0648\u0631",
        "\u0636\u0631\u0648\u0631\u062A",
        "\u0636\u0631\u0648\u0631\u06CC",
        "\u0636\u0644\u0637\u0644\u06C1",
        "\u0636\u0648\u0686",
        "\u0636\u0648\u0686\u0628",
        "\u0636\u0648\u0686\u062A\u0628",
        "\u0636\u0648\u0686\u062A\u06CC",
        "\u0636\u0648\u0686\u062A\u06D2",
        "\u0636\u0648\u0686\u0648",
        "\u0636\u0648\u0686\u064C\u0628",
        "\u0636\u0648\u0686\u06CC",
        "\u0636\u0648\u0686\u06CC\u06BA",
        "\u0636\u06A9\u0628",
        "\u0636\u06A9\u062A\u0628",
        "\u0636\u06A9\u062A\u06CC",
        "\u0636\u06A9\u062A\u06D2",
        "\u0636\u06A9\u064C\u0628",
        "\u0636\u06A9\u06CC",
        "\u0636\u06A9\u06D2",
        "\u0636\u06CC\u0630\u06BE\u0628",
        "\u0636\u06CC\u0630\u06BE\u06CC",
        "\u0636\u06CC\u0630\u06BE\u06D2",
        "\u0636\u06CC\u06A9\u064C\u0688",
        "\u0636\u06D2",
        "\u0637\u0631\u0641",
        "\u0637\u0631\u06CC\u0642",
        "\u0637\u0631\u06CC\u0642\u0648\u06BA",
        "\u0637\u0631\u06CC\u0642\u06C1",
        "\u0637\u0631\u06CC\u0642\u06D2",
        "\u0637\u0648\u0631",
        "\u0637\u0648\u0631\u067E\u0631",
        "\u0638\u0628\u06C1\u0631",
        "\u0639",
        "\u0639\u0630\u062F",
        "\u0639\u0638\u06CC\u0646",
        "\u0639\u0644\u0627\u0642\u0648\u06BA",
        "\u0639\u0644\u0627\u0642\u06C1",
        "\u0639\u0644\u0627\u0642\u06D2",
        "\u0639\u0644\u0627\u0648\u064D",
        "\u0639\u0648\u0648\u0647\u06CC",
        "\u063A\u0628\u06CC\u0630",
        "\u063A\u062E\u0635",
        "\u063A\u0630",
        "\u063A\u0631\u0648\u0639",
        "\u063A\u0631\u0648\u0639\u0628\u062A",
        "\u063A\u06D2",
        "\u0641\u0631\u062F",
        "\u0641\u06CC",
        "\u0642",
        "\u0642\u062C\u0644",
        "\u0642\u062C\u06CC\u0644\u06C1",
        "\u0642\u0637\u0646",
        "\u0644\u0626\u06D2",
        "\u0644\u0627",
        "\u0644\u0627\u0632\u0647\u06CC",
        "\u0644\u0648",
        "\u0644\u0648\u062C\u0628",
        "\u0644\u0648\u062C\u06CC",
        "\u0644\u0648\u062C\u06D2",
        "\u0644\u0648\u0633\u0628\u062A",
        "\u0644\u0648\u0633\u06C1",
        "\u0644\u0648\u06AF",
        "\u0644\u0648\u06AF\u0648\u06BA",
        "\u0644\u0691\u06A9\u067E\u064A",
        "\u0644\u06AF\u062A\u0628",
        "\u0644\u06AF\u062A\u06CC",
        "\u0644\u06AF\u062A\u06D2",
        "\u0644\u06AF\u064C\u0628",
        "\u0644\u06AF\u06CC",
        "\u0644\u06AF\u06CC\u06BA",
        "\u0644\u06AF\u06D2",
        "\u0644\u06CC",
        "\u0644\u06CC\u0628",
        "\u0644\u06CC\u064C\u0628",
        "\u0644\u06CC\u06BA",
        "\u0644\u06D2",
        "\u0647",
        "\u0647\u062A\u0639\u0644\u0642",
        "\u0647\u062E\u062A\u0644\u0641",
        "\u0647\u0633\u062A\u0631\u0645",
        "\u0647\u0633\u062A\u0631\u0647\u06C1",
        "\u0647\u0633\u0637\u0648\u0634",
        "\u0647\u0633\u06CC\u0630",
        "\u0647\u0637\u0626\u0644\u06C1",
        "\u0647\u0637\u0626\u0644\u06D2",
        "\u0647\u0637\u0628\u0626\u0644",
        "\u0647\u0637\u062A\u0639\u0648\u0644",
        "\u0647\u0637\u0644\u0642",
        "\u0647\u0639\u0644\u0648\u0645",
        "\u0647\u063B\u062A\u0648\u0644",
        "\u0647\u0644\u0627",
        "\u0647\u0648\u06A9\u064A",
        "\u0647\u0648\u06A9\u064C\u0628\u062A",
        "\u0647\u0648\u06A9\u064C\u06C1",
        "\u0647\u064C\u0628\u0636\u062A",
        "\u0647\u0691\u0627",
        "\u0647\u0691\u064B\u0628",
        "\u0647\u0691\u06D2",
        "\u0647\u06A9\u0648\u0644",
        "\u0647\u06AF\u0631",
        "\u0647\u06C1\u0631\u062B\u0628\u0649",
        "\u0647\u06CC\u0631\u0627",
        "\u0647\u06CC\u0631\u06CC",
        "\u0647\u06CC\u0631\u06D2",
        "\u0647\u06CC\u06BA",
        "\u0648",
        "\u0648\u0627\u0631",
        "\u0648\u0627\u0644\u06D2",
        "\u0648\u064D",
        "\u064B\u0626\u06CC",
        "\u064B\u0626\u06D2",
        "\u064B\u0628",
        "\u064B\u0628\u067E\u0637\u064C\u0630",
        "\u064B\u0628\u06AF\u0633\u06CC\u0631",
        "\u064B\u0637\u062C\u062A",
        "\u064B\u0642\u0637\u06C1",
        "\u064B\u0648",
        "\u064B\u0648\u062E\u0648\u0627\u0649",
        "\u064B\u06A9\u0628\u0644\u064C\u0628",
        "\u064B\u06A9\u062A\u06C1",
        "\u064B\u06C1",
        "\u064B\u06C1\u06CC\u06BA",
        "\u064B\u06CC\u0628",
        "\u064B\u06D2",
        "\u0653 \u0622\u0634",
        "\u0679\u06BE\u06CC\u06A9",
        "\u067E\u0628\u0626\u06D2",
        "\u067E\u0628\u0634",
        "\u067E\u0628\u064B\u0628",
        "\u067E\u0628\u064B\u0686",
        "\u067E\u0631",
        "\u067E\u0631\u0627\u064B\u0628",
        "\u067E\u0637\u064C\u0630",
        "\u067E\u0644",
        "\u067E\u0648\u0631\u0627",
        "\u067E\u0648\u0686\u06BE\u0628",
        "\u067E\u0648\u0686\u06BE\u062A\u0628",
        "\u067E\u0648\u0686\u06BE\u062A\u06CC",
        "\u067E\u0648\u0686\u06BE\u062A\u06D2",
        "\u067E\u0648\u0686\u06BE\u0648",
        "\u067E\u0648\u0686\u06BE\u0648\u06BA",
        "\u067E\u0648\u0686\u06BE\u064C\u0628",
        "\u067E\u0648\u0686\u06BE\u06CC\u06BA",
        "\u067E\u0686\u06BE\u0644\u0627",
        "\u067E\u06BE\u0631",
        "\u067E\u06C1\u0644\u0627",
        "\u067E\u06C1\u0644\u06CC",
        "\u067E\u06C1\u0644\u06D2\u0636\u06CC",
        "\u067E\u06C1\u0644\u06D2\u0636\u06D2",
        "\u067E\u06C1\u0644\u06D2\u0636\u06D2\u06C1\u06CC",
        "\u067E\u06CC\u0639",
        "\u0686\u0628\u0631",
        "\u0686\u0628\u06C1\u0628",
        "\u0686\u0628\u06C1\u064C\u0628",
        "\u0686\u0628\u06C1\u06D2",
        "\u0686\u0644\u0627",
        "\u0686\u0644\u0648",
        "\u0686\u0644\u06CC\u06BA",
        "\u0686\u0644\u06D2",
        "\u0686\u06A9\u0628",
        "\u0686\u06A9\u06CC",
        "\u0686\u06A9\u06CC\u06BA",
        "\u0686\u06A9\u06D2",
        "\u0686\u06BE\u0648\u0679\u0628",
        "\u0686\u06BE\u0648\u0679\u0648\u06BA",
        "\u0686\u06BE\u0648\u0679\u06CC",
        "\u0686\u06BE\u0648\u0679\u06D2",
        "\u0686\u06BE\u06C1",
        "\u0686\u06CC\u0633\u06CC\u06BA",
        "\u0688\u06BE\u0648\u064B\u0688\u0627",
        "\u0688\u06BE\u0648\u064B\u0688\u0644\u06CC\u0628",
        "\u0688\u06BE\u0648\u064B\u0688\u0648",
        "\u0688\u06BE\u0648\u064B\u0688\u064B\u0628",
        "\u0688\u06BE\u0648\u064B\u0688\u06CC",
        "\u0688\u06BE\u0648\u064B\u0688\u06CC\u06BA",
        "\u06A9",
        "\u06A9\u0626\u06CC",
        "\u06A9\u0626\u06D2",
        "\u06A9\u0628",
        "\u06A9\u0628\u0641\u06CC",
        "\u06A9\u0628\u0645",
        "\u06A9\u062A",
        "\u06A9\u062C\u06BE\u06CC",
        "\u06A9\u0631\u0627",
        "\u06A9\u0631\u062A\u0628",
        "\u06A9\u0631\u062A\u0628\u06C1\u0648\u06BA",
        "\u06A9\u0631\u062A\u06CC",
        "\u06A9\u0631\u062A\u06D2",
        "\u06A9\u0631\u062A\u06D2\u06C1\u0648",
        "\u06A9\u0631\u0631\u06C1\u0628",
        "\u06A9\u0631\u0631\u06C1\u06CC",
        "\u06A9\u0631\u0631\u06C1\u06D2",
        "\u06A9\u0631\u0648",
        "\u06A9\u0631\u064B\u0628",
        "\u06A9\u0631\u06CC\u06BA",
        "\u06A9\u0631\u06D2",
        "\u06A9\u0637\u06CC",
        "\u06A9\u0644",
        "\u06A9\u0646",
        "\u06A9\u0648\u0626\u06CC",
        "\u06A9\u0648\u062A\u0631",
        "\u06A9\u0648\u0631\u0627",
        "\u06A9\u0648\u0631\u0648\u06BA",
        "\u06A9\u0648\u0631\u064D",
        "\u06A9\u0648\u0631\u06D2",
        "\u06A9\u0648\u0637\u064A",
        "\u06A9\u0648\u0649",
        "\u06A9\u0648\u064B\u0637\u0628",
        "\u06A9\u0648\u064B\u0637\u06CC",
        "\u06A9\u0648\u064B\u0637\u06D2",
        "\u06A9\u06BE\u0648\u0644\u0627",
        "\u06A9\u06BE\u0648\u0644\u0648",
        "\u06A9\u06BE\u0648\u0644\u064C\u0628",
        "\u06A9\u06BE\u0648\u0644\u06CC",
        "\u06A9\u06BE\u0648\u0644\u06CC\u06BA",
        "\u06A9\u06BE\u0648\u0644\u06D2",
        "\u06A9\u06C1",
        "\u06A9\u06C1\u0628",
        "\u06A9\u06C1\u062A\u0628",
        "\u06A9\u06C1\u062A\u06CC",
        "\u06A9\u06C1\u062A\u06D2",
        "\u06A9\u06C1\u0648",
        "\u06A9\u06C1\u0648\u06BA",
        "\u06A9\u06C1\u064C\u0628",
        "\u06A9\u06C1\u06CC",
        "\u06A9\u06C1\u06CC\u06BA",
        "\u06A9\u06C1\u06D2",
        "\u06A9\u06CC",
        "\u06A9\u06CC\u0628",
        "\u06A9\u06CC\u0637\u0628",
        "\u06A9\u06CC\u0637\u0631\u0641",
        "\u06A9\u06CC\u0637\u06D2",
        "\u06A9\u06CC\u0644\u0626\u06D2",
        "\u06A9\u06CC\u0648\u064B\u06A9\u06C1",
        "\u06A9\u06CC\u0648\u06BA",
        "\u06A9\u06CC\u06D2",
        "\u06A9\u06D2",
        "\u06A9\u06D2\u062B\u0639\u0630",
        "\u06A9\u06D2\u0631\u0631\u06CC\u0639\u06D2",
        "\u06AF\u0626\u06CC",
        "\u06AF\u0626\u06D2",
        "\u06AF\u0628",
        "\u06AF\u0631\u062F",
        "\u06AF\u0631\u0648\u064D",
        "\u06AF\u0631\u0648\u067E",
        "\u06AF\u0631\u0648\u06C1\u0648\u06BA",
        "\u06AF\u064C\u062A\u06CC",
        "\u06AF\u06CC",
        "\u06AF\u06CC\u0628",
        "\u06AF\u06D2",
        "\u06C1\u0631",
        "\u06C1\u0646",
        "\u06C1\u0648",
        "\u06C1\u0648\u0626\u06CC",
        "\u06C1\u0648\u0626\u06D2",
        "\u06C1\u0648\u0627",
        "\u06C1\u0648\u0628\u0631\u0627",
        "\u06C1\u0648\u0628\u0631\u06CC",
        "\u06C1\u0648\u0628\u0631\u06D2",
        "\u06C1\u0648\u062A\u0628",
        "\u06C1\u0648\u062A\u06CC",
        "\u06C1\u0648\u062A\u06D2",
        "\u06C1\u0648\u0631\u06C1\u0628",
        "\u06C1\u0648\u0631\u06C1\u06CC",
        "\u06C1\u0648\u0631\u06C1\u06D2",
        "\u06C1\u0648\u0636\u06A9\u062A\u0628",
        "\u06C1\u0648\u0636\u06A9\u062A\u06CC",
        "\u06C1\u0648\u0636\u06A9\u062A\u06D2",
        "\u06C1\u0648\u064B\u0628",
        "\u06C1\u0648\u064B\u06CC",
        "\u06C1\u0648\u064B\u06D2",
        "\u06C1\u0648\u0686\u06A9\u0628",
        "\u06C1\u0648\u0686\u06A9\u06CC",
        "\u06C1\u0648\u0686\u06A9\u06D2",
        "\u06C1\u0648\u06AF\u0626\u06CC",
        "\u06C1\u0648\u06AF\u0626\u06D2",
        "\u06C1\u0648\u06AF\u06CC\u0628",
        "\u06C1\u0648\u06BA",
        "\u06C1\u06CC",
        "\u06C1\u06CC\u06BA",
        "\u06C1\u06D2",
        "\u06CC",
        "\u06CC\u0642\u06CC\u064C\u06CC",
        "\u06CC\u06C1",
        "\u06CC\u06C1\u0628\u06BA"
      ];
      const vie = [
        "b\u1ECB",
        "b\u1EDFi",
        "c\u1EA3",
        "c\xE1c",
        "c\xE1i",
        "c\u1EA7n",
        "c\xE0ng",
        "ch\u1EC9",
        "chi\u1EBFc",
        "cho",
        "ch\u1EE9",
        "ch\u01B0a",
        "chuy\u1EC7n",
        "c\xF3",
        "c\xF3 th\u1EC3",
        "c\u1EE9",
        "c\u1EE7a",
        "c\xF9ng",
        "c\u0169ng",
        "\u0111\xE3",
        "\u0111ang",
        "\u0111\u1EC3",
        "\u0111\u1EBFn n\u1ED7i",
        "\u0111\u1EC1u",
        "\u0111i\u1EC1u",
        "do",
        "\u0111\xF3",
        "\u0111\u01B0\u1EE3c",
        "d\u01B0\u1EDBi",
        "g\xEC",
        "khi",
        "kh\xF4ng",
        "l\xE0",
        "l\u1EA1i",
        "l\xEAn",
        "l\xFAc",
        "m\xE0",
        "m\u1ED7i",
        "m\u1ED9t c\xE1ch",
        "n\xE0y",
        "n\xEAn",
        "n\u1EBFu",
        "ngay",
        "nhi\u1EC1u",
        "nh\u01B0",
        "nh\u01B0ng",
        "nh\u1EEFng",
        "n\u01A1i",
        "n\u1EEFa",
        "ph\u1EA3i",
        "qua",
        "ra",
        "r\u1EB1ng",
        "r\u1EA5t",
        "r\u1ED3i",
        "sau",
        "s\u1EBD",
        "so",
        "s\u1EF1",
        "t\u1EA1i",
        "theo",
        "th\xEC",
        "tr\xEAn",
        "tr\u01B0\u1EDBc",
        "t\u1EEB",
        "t\u1EEBng",
        "v\xE0",
        "v\u1EABn",
        "v\xE0o",
        "v\u1EADy",
        "v\xEC",
        "vi\u1EC7c",
        "v\u1EDBi",
        "v\u1EEBa",
        "v\xE2ng",
        "\xE0",
        "\u1EEB",
        "t\u1EEB"
      ];
      const yor = [
        "\xF3",
        "n\xED",
        "\xECj\xE0p\xE1",
        "\u1E63e",
        "r\u1EB9\u0300",
        "t\xED",
        "\xE0w\u1ECDn",
        "s\xED",
        "ni",
        "n\xE1\xE0",
        "anansi",
        "l\xE1ti",
        "kan",
        "ti",
        "\u0144",
        "l\u1ECD",
        "o",
        "b\xED",
        "pad\xE0",
        "s\xEC",
        "w\xE1",
        "wangari",
        "l\xE8",
        "w\xE0",
        "k\xED",
        "p\xFAp\u1ECD\u0300",
        "od\xF2",
        "mi",
        "w\u1ECD\u0301n",
        "p\u1EB9\u0300l\xFA",
        "a",
        "\u1E63\xF9gb\u1ECD\u0301n",
        "f\xFAn",
        "j\u1EB9\u0301",
        "f\u1EB9\u0301",
        "o\xFAnj\u1EB9",
        "r\xED",
        "igi",
        "k\xF2",
        "il\xE9",
        "j\xF9",
        "ol\xF3\u0144gb\xF2",
        "p\xE9",
        "\xE9",
        "gbogbo",
        "i\u1E63u",
        "in\xFA",
        "b\u1EB9\u0300r\u1EB9\u0300",
        "j\u1EB9",
        "fi",
        "d\xFAr\xF3",
        "al\u1EB9\u0301",
        "\u1ECDj\u1ECD\u0301",
        "n\xEDtor\xED",
        "n\u01F9kan",
        "\u1ECD\u0300r\u1EB9\u0301",
        "\xE0k\xF3k\xF2",
        "s\xEDn\xFA",
        "s\u0323",
        "y\xEC\xED"
      ];
      const zul = [
        "ukuthi",
        "kodwa",
        "futhi",
        "kakhulu",
        "wakhe",
        "kusho",
        "uma",
        "wathi",
        "umama",
        "kanye",
        "phansi",
        "ngesikhathi",
        "lapho",
        "u",
        "zakhe",
        "khona",
        "ukuba",
        "nje",
        "phezulu",
        "yakhe",
        "kungani",
        "wase",
        "la",
        "mina",
        "wami",
        "ukuze",
        "unonkungu",
        "wabona",
        "wahamba",
        "lakhe",
        "yami",
        "kanjani",
        "kwakukhona",
        "ngelinye"
      ];
      const defaultStopwords = eng2;
      const removeStopwords = function(tokens, stopwords) {
        stopwords = stopwords || defaultStopwords;
        if (typeof tokens !== "object" || typeof stopwords !== "object") {
          throw new Error("expected Arrays try: removeStopwords(Array[, Array])");
        }
        return tokens.filter(function(value) {
          return stopwords.indexOf(value.toLowerCase()) === -1;
        });
      };
      exports2._123 = _123;
      exports2.afr = afr;
      exports2.ara = ara;
      exports2.ben = ben;
      exports2.bre = bre;
      exports2.bul = bul;
      exports2.cat = cat;
      exports2.ces = ces;
      exports2.dan = dan;
      exports2.deu = deu;
      exports2.ell = ell;
      exports2.eng = eng2;
      exports2.epo = epo;
      exports2.est = est;
      exports2.eus = eus;
      exports2.fas = fas;
      exports2.fin = fin;
      exports2.fra = fra;
      exports2.gle = gle;
      exports2.glg = glg;
      exports2.guj = guj;
      exports2.hau = hau;
      exports2.heb = heb;
      exports2.hin = hin;
      exports2.hrv = hrv;
      exports2.hun = hun;
      exports2.hye = hye;
      exports2.ind = ind;
      exports2.ita = ita;
      exports2.jpn = jpn;
      exports2.kor = kor;
      exports2.kur = kur;
      exports2.lat = lat;
      exports2.lav = lav;
      exports2.lgg = lgg;
      exports2.lggNd = lggNd;
      exports2.lit = lit;
      exports2.mar = mar;
      exports2.msa = msa;
      exports2.mya = mya;
      exports2.nld = nld;
      exports2.nob = nob;
      exports2.panGu = panGu;
      exports2.pol = pol;
      exports2.por = por;
      exports2.porBr = porBr;
      exports2.removeStopwords = removeStopwords;
      exports2.ron = ron;
      exports2.rus = rus;
      exports2.slk = slk;
      exports2.slv = slv;
      exports2.som = som;
      exports2.sot = sot;
      exports2.spa = spa;
      exports2.swa = swa;
      exports2.swe = swe;
      exports2.tgl = tgl;
      exports2.tha = tha;
      exports2.tur = tur;
      exports2.ukr = ukr;
      exports2.urd = urd;
      exports2.vie = vie;
      exports2.yor = yor;
      exports2.zho = zho;
      exports2.zul = zul;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// dist/$server_build/chunks/pages/_user_.astro.6dadf111.mjs
var user_astro_6dadf111_exports = {};
__export(user_astro_6dadf111_exports, {
  default: () => $$user,
  file: () => $$file15,
  prerender: () => prerender18,
  url: () => $$url15
});
function removewords(str) {
  const urlRegex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/gi;
  const userRegex = /@[a-zA-Z]*/g;
  const hashTags = /#[a-zA-Z]*/g;
  const expressions = /\b’[a-zA-Z]+\b/gi;
  const expressions2 = /\b'[a-zA-Z]+\b/gi;
  const stopWordRegex = new RegExp(`\\b(${import_stopword.eng.join("|")})\\b`, "gi");
  const processedSentence = str.replace(expressions, (match) => `--=${match}=--`).replace(expressions2, (match) => `--=${match}=--`).replace(stopWordRegex, (match) => `--=${match}=--`).replace(hashTags, (match) => `--=${match}=--`).replace(userRegex, (match) => `--=${match}=--`).replace(urlRegex, (match) => `--=${match}=--`);
  return processedSentence;
}
function templatizeline(str) {
  const filtered = removewords(str);
  const keywordRegex = /--=(.*?)=--/g;
  const substrings = filtered.split(keywordRegex);
  const keywordMatch = filtered.match(keywordRegex)?.map((x2) => x2.replace("--=", "").replace("=--", ""));
  return { substrings, keywordMatch };
}
function normalizestr(str) {
  return str.replace("@", "").replaceAll("'", "").replaceAll("/", "").replaceAll(".", "").replaceAll(":", "");
}
var import_stopword, import_cookie34, import_mime34, $$Astro$15, $$TwitterTemplatize, $$Astro15, prerender18, $$user, $$file15, $$url15;
var init_user_astro_6dadf111 = __esm({
  "dist/$server_build/chunks/pages/_user_.astro.6dadf111.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    init_jokecat_astro_c1b39e73();
    import_stopword = __toESM(require_stopword_umd(), 1);
    import_cookie34 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime34 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro$15 = createAstro();
    $$TwitterTemplatize = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$15, $$props, $$slots);
      Astro2.self = $$TwitterTemplatize;
      const { obj } = Astro2.props;
      let str = obj;
      if (Array.isArray(str)) {
        str = str.map((x2) => x2.text).join("\n");
      }
      const lines = str.split("\n").map((line) => templatizeline(line));
      return renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": ($$result2) => renderTemplate`${lines.map(
        ({
          substrings,
          keywordMatch
        }) => {
          return renderTemplate`${maybeRenderHead()}<p class="ml-14">
						${substrings.map((substring) => {
            if (keywordMatch?.includes(substring)) {
              return renderTemplate`<span${addAttribute(
                "pseudo" + normalizestr(substring),
                "class"
              )}></span>`;
            }
            return substring;
          })}
					</p>`;
        }
      )}` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/components/TwitterTemplatize.astro", void 0);
    $$Astro15 = createAstro();
    prerender18 = false;
    $$user = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro15, $$props, $$slots);
      Astro2.self = $$user;
      const { user } = Astro2.params;
      const datax = await db.get(user + "_tw");
      const data = datax;
      if (data.error) {
        return new Response("Not Found", {
          status: 404,
          statusText: "Not Found"
        });
      }
      const cssx = templatizeline(JSON.stringify(data.tweets)).keywordMatch?.map(
        (x2) => `.pseudo${normalizestr(x2)}::before { content: "${x2}";}`
      ).join("\n");
      const reposts = Array.from(
        new Set(
          data.tweets.filter((item) => item.originalPoster).map(
            (user2) => `${user2.originalPoster?.screenName}_tw`
          )
        )
      );
      console.log(reposts);
      const existget = await db.view("twitter/exist", {
        update: "lazy",
        keys: JSON.stringify(reposts),
        cache: 864e3
      });
      const exist = existget.rows?.map(
        (it) => it.id.replace("_tw", "")
      );
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": `${user} public tweets on twitter`, "description": data.description.toString(), "hideFooter": true }, { "default": ($$result2) => renderTemplate`${data.tweets.map((t, i2) => renderTemplate`${maybeRenderHead()}<div class="bg-gray-800 dark:bg-white mb-2 rounded-md border boder-1 dark:border-gray-500 pb-2">
				${i2 === 5 && renderTemplate`${renderComponent($$result2, "RudSense", $$RudSense, {})}`}
				${i2 === 11 && renderTemplate`${renderComponent($$result2, "RudSense", $$RudSense, { "main": true })}`}
				<div class="flex flex-shrink-0 p-2 pb-0">
					<div class="flex-shrink-0 group block">
						<div class="flex items-center">
							${renderComponent($$result2, "amp-img", "amp-img", { "width": "48", "height": "48", "class": "inline-block   rounded-full", "src": data.profileImageUrl, "alt": "", "layout": "fixed" })}

							<div class="ml-2">
								<div class="leading-6 font-light text-xl">
									${data.name}
									<div class="text-xs leading-5 font-light">
										${t.createdAt}${" "}
										${t.originalPoster ? "| retweeted:" : "| tweeted:"}
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<div>
					${t.originalPoster && renderTemplate`<a class="flex items-center  bg-black w-fit"${addAttribute(
        exist?.includes(t.originalPoster.screenName) ? "/tw/u/" + t.originalPoster.screenName : "https://twitter.com/" + t.originalPoster.screenName,
        "href"
      )} rel="prefetch">
							<img width="24" height="24" class="inline-block   rounded-full ml-14"${addAttribute(t.originalPoster.profileImageUrl.replace("=--", "").replace("--=", ""), "src")} alt="">
							<div class="text-base leading-6 font-bold pl-2">
								${t.originalPoster.name} :
							</div>
						</a>`}
					<div class="flex flex-col">
						${renderComponent($$result2, "TwitterTemplatize", $$TwitterTemplatize, { "obj": t.text })}
					</div>
				</div>
			</div>`)}` })}
<style>${unescapeHTML(cssx)}</style>`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/tw/u/[user].astro", void 0);
    $$file15 = "/home/runner/work/monext/monext/apps/kloun/src/pages/tw/u/[user].astro";
    $$url15 = "/tw/u/[user]";
  }
});

// dist/$server_build/chunks/_user_@_@astro.64b12bbe.mjs
var user_astro_64b12bbe_exports = {};
__export(user_astro_64b12bbe_exports, {
  onRequest: () => onRequest,
  page: () => page20,
  renderers: () => renderers
});
var import_cookie35, import_mime35, import_react22, import_server21, page20;
var init_user_astro_64b12bbe = __esm({
  "dist/$server_build/chunks/_user_@_@astro.64b12bbe.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie35 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime35 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react22 = __toESM(require_react(), 1);
    import_server21 = __toESM(require_server_browser(), 1);
    page20 = () => Promise.resolve().then(() => (init_user_astro_6dadf111(), user_astro_6dadf111_exports));
  }
});

// dist/$server_build/chunks/pages/_...twitter_.astro.07d0104a.mjs
var twitter_astro_07d0104a_exports = {};
__export(twitter_astro_07d0104a_exports, {
  default: () => $$4,
  file: () => $$file16,
  prerender: () => prerender19,
  url: () => $$url16
});
var import_cookie36, import_mime36, $$Astro16, prerender19, $$4, $$file16, $$url16;
var init_twitter_astro_07d0104a = __esm({
  "dist/$server_build/chunks/pages/_...twitter_.astro.07d0104a.mjs"() {
    init_astro_0fa599e7();
    init_business_astro_1d423138();
    import_cookie36 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime36 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    $$Astro16 = createAstro();
    prerender19 = false;
    $$4 = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro16, $$props, $$slots);
      Astro2.self = $$4;
      const alphabet = [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z"
      ];
      const { twitter } = Astro2.params;
      const x2 = twitter ? twitter.split("_") : ["a"];
      const pagenum = x2[1] ? Number(x2[1]) : 1;
      const skip = pagenum * 100 - 100;
      const datax = db.view("twitter/byletter", {
        reduce: false,
        key: x2[0] || "a",
        limit: 100,
        skip,
        update: "lazy",
        cache: 864e3
      });
      const itemsx = db.view("twitter/byletter", {
        reduce: true,
        key: x2[0] || "a",
        limit: 1,
        group: false,
        update: "lazy",
        cache: 864e3
      });
      const resp = await Promise.all([datax, itemsx]).then((values) => {
        return {
          users: values[0].rows,
          items: values[1].value
        };
      });
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": ` Twitter ecosphere ${pagenum}`, "description": `Twitter ecosphere   ` }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead()}<div class="flex flex-wrap justify-center items-center gap-1 mb-3">
		${alphabet.map((x22) => renderTemplate`<a${addAttribute("/tw/" + x22.toLowerCase() + "_1", "href")} class="bg-slate-900 p-2 font-bold text-white dark:bg-white dark:text-slate-900 rounded-md">
					${x22}
				</a>`)}
	</div>
	<div class="flex flex-row flex-wrap justify-center p-0 gap-2">
		${resp.users.map(({ id }) => renderTemplate`<a class="active flex  bg-slate-900 font-bold text-white dark:bg-white dark:text-slate-900 px-3 rounded-xl text-sm"${addAttribute("/tw/u/" + id.replace("_tw", ""), "href")}>
					${" "}
					${id.replace("_tw", "")}${" "}
				</a>`)}
	</div>
	${renderComponent($$result2, "Pagination", $$Pagination, { "items": resp.items, "currentPage": pagenum, "pageSize": 100, "prefix": "/tw/" + x2[0] + "_" })}
` })}`;
    }, "/home/runner/work/monext/monext/apps/kloun/src/pages/tw/[...twitter].astro", void 0);
    $$file16 = "/home/runner/work/monext/monext/apps/kloun/src/pages/tw/[...twitter].astro";
    $$url16 = "/tw/[...twitter]";
  }
});

// dist/$server_build/chunks/_...ece7fc16.mjs
var ece7fc16_exports = {};
__export(ece7fc16_exports, {
  onRequest: () => onRequest,
  page: () => page21,
  renderers: () => renderers
});
var import_cookie37, import_mime37, import_react23, import_server22, page21;
var init_ece7fc16 = __esm({
  "dist/$server_build/chunks/_...ece7fc16.mjs"() {
    init_renderers();
    init_middleware2();
    init_astro_0fa599e7();
    import_cookie37 = __toESM(require_cookie(), 1);
    init_path();
    init_colors();
    import_mime37 = __toESM(require_mime(), 1);
    init_string_width();
    init_esm();
    import_react23 = __toESM(require_react(), 1);
    import_server22 = __toESM(require_server_browser(), 1);
    page21 = () => Promise.resolve().then(() => (init_twitter_astro_07d0104a(), twitter_astro_07d0104a_exports));
  }
});

// dist/$server_build/_worker.mjs
init_astro_0fa599e7();
init_renderers();
var import_mime38 = __toESM(require_mime(), 1);
var import_cookie38 = __toESM(require_cookie(), 1);
init_colors();
init_path();
init_string_width();
init_esm();
var import_react24 = __toESM(require_react(), 1);
var import_server23 = __toESM(require_server_browser(), 1);
var isNode = typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";
function getProcessEnvProxy() {
  return new Proxy(
    {},
    {
      get: (target, prop) => {
        console.warn(
          // NOTE: \0 prevents Vite replacement
          `Unable to access \`import.meta\0.env.${prop.toString()}\` on initialization as the Cloudflare platform only provides the environment variables per request. Please move the environment variable access inside a function that's only called after a request has been received.`
        );
      }
    }
  );
}
if (!isNode) {
  process.env = getProcessEnvProxy();
}
function createExports(manifest) {
  const app = new App(manifest);
  const fetch2 = async (request, env, context) => {
    process.env = env;
    const { pathname } = new URL(request.url);
    if (manifest.assets.has(pathname)) {
      return env.ASSETS.fetch(request);
    }
    let routeData = app.match(request, { matchNotFound: true });
    if (routeData) {
      Reflect.set(
        request,
        Symbol.for("astro.clientAddress"),
        request.headers.get("cf-connecting-ip")
      );
      Reflect.set(request, Symbol.for("runtime"), {
        env,
        name: "cloudflare",
        caches,
        cf: request.cf,
        ...context,
        waitUntil: (promise) => {
          context.waitUntil(promise);
        }
      });
      const locals = {
        runtime: {
          waitUntil: (promise) => {
            context.waitUntil(promise);
          },
          env,
          cf: request.cf,
          caches
        }
      };
      let response = await app.render(request, routeData, locals);
      if (app.setCookieHeaders) {
        for (const setCookieHeader of app.setCookieHeaders(response)) {
          response.headers.append("Set-Cookie", setCookieHeader);
        }
      }
      return response;
    }
    return new Response(null, {
      status: 404,
      statusText: "Not found"
    });
  };
  return { default: { fetch: fetch2 } };
}
var adapter = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createExports
}, Symbol.toStringTag, { value: "Module" }));
var _page0 = () => Promise.resolve().then(() => (init_index_astro_3cb80dac(), index_astro_3cb80dac_exports));
var _page1 = () => Promise.resolve().then(() => (init_ca6a0e1d(), ca6a0e1d_exports));
var _page2 = () => Promise.resolve().then(() => (init_index1_html_094e159c(), index1_html_094e159c_exports));
var _page3 = () => Promise.resolve().then(() => (init_vicove_astro_558815c1(), vicove_astro_558815c1_exports));
var _page4 = () => Promise.resolve().then(() => (init_index_astro_419a0c3c(), index_astro_419a0c3c_exports));
var _page5 = () => Promise.resolve().then(() => (init_memes_astro_1783bfec(), memes_astro_1783bfec_exports));
var _page6 = () => Promise.resolve().then(() => (init_contact_astro_3aef25a8(), contact_astro_3aef25a8_exports));
var _page7 = () => Promise.resolve().then(() => (init_privacy_astro_80e33f93(), privacy_astro_80e33f93_exports));
var _page8 = () => Promise.resolve().then(() => (init_about_astro_f96fb4c7(), about_astro_f96fb4c7_exports));
var _page9 = () => Promise.resolve().then(() => (init_terms_astro_64790a1b(), terms_astro_64790a1b_exports));
var _page10 = () => Promise.resolve().then(() => (init_jokeid_astro_bbd880b0(), jokeid_astro_bbd880b0_exports));
var _page11 = () => Promise.resolve().then(() => (init_test_astro_bf8a2e67(), test_astro_bf8a2e67_exports));
var _page12 = () => Promise.resolve().then(() => (init_id_astro_5deedc8a(), id_astro_5deedc8a_exports));
var _page13 = () => Promise.resolve().then(() => (init_newsid_astro_e83516b8(), newsid_astro_e83516b8_exports));
var _page14 = () => Promise.resolve().then(() => (init_c6054889(), c6054889_exports));
var _page15 = () => Promise.resolve().then(() => (init_cache_ts_ddeb5264(), cache_ts_ddeb5264_exports));
var _page16 = () => Promise.resolve().then(() => (init_id_178e0813(), id_178e0813_exports));
var _page17 = () => Promise.resolve().then(() => (init_id_ts_2a2ad695(), id_ts_2a2ad695_exports));
var _page18 = () => Promise.resolve().then(() => (init_eeff6a31(), eeff6a31_exports));
var _page19 = () => Promise.resolve().then(() => (init_user_astro_64b12bbe(), user_astro_64b12bbe_exports));
var _page20 = () => Promise.resolve().then(() => (init_ece7fc16(), ece7fc16_exports));
var pageMap = /* @__PURE__ */ new Map([["src/pages/index.astro", _page0], ["src/pages/business/[...business].astro", _page1], ["src/pages/index1.html", _page2], ["src/pages/vicove.astro", _page3], ["src/pages/admix/index.astro", _page4], ["src/pages/memes.astro", _page5], ["src/pages/other/contact.astro", _page6], ["src/pages/other/privacy.astro", _page7], ["src/pages/other/about.astro", _page8], ["src/pages/other/terms.astro", _page9], ["src/pages/joke/[jokeid].astro", _page10], ["src/pages/news/test.astro", _page11], ["src/pages/news/tr/[id].astro", _page12], ["src/pages/news/i/[slug]/[newsid].astro", _page13], ["src/pages/news/[...newspage].astro", _page14], ["src/pages/api/cache.ts", _page15], ["src/pages/api/img/[id].jpg.ts", _page16], ["src/pages/api/db/[id].ts", _page17], ["src/pages/cat/[...jokecat].astro", _page18], ["src/pages/tw/u/[user].astro", _page19], ["src/pages/tw/[...twitter].astro", _page20]]);
var _manifest2 = Object.assign(deserializeManifest({ "adapterName": "@astrojs/cloudflare", "routes": [{ "file": "index1/index.html", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/index1", "type": "page", "pattern": "^\\/index1\\/?$", "segments": [[{ "content": "index1", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/index1.html", "pathname": "/index1", "prerender": true, "_meta": { "trailingSlash": "ignore" } } }, { "file": "admix/index.html", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/admix", "type": "page", "pattern": "^\\/admix\\/?$", "segments": [[{ "content": "admix", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/admix/index.astro", "pathname": "/admix", "prerender": true, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/", "type": "page", "pattern": "^\\/$", "segments": [], "params": [], "component": "src/pages/index.astro", "pathname": "/", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/business/[...business]", "type": "page", "pattern": "^\\/business(?:\\/(.*?))?\\/?$", "segments": [[{ "content": "business", "dynamic": false, "spread": false }], [{ "content": "...business", "dynamic": true, "spread": true }]], "params": ["...business"], "component": "src/pages/business/[...business].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/vicove", "type": "page", "pattern": "^\\/vicove\\/?$", "segments": [[{ "content": "vicove", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/vicove.astro", "pathname": "/vicove", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/memes", "type": "page", "pattern": "^\\/memes\\/?$", "segments": [[{ "content": "memes", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/memes.astro", "pathname": "/memes", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/other/contact", "type": "page", "pattern": "^\\/other\\/contact\\/?$", "segments": [[{ "content": "other", "dynamic": false, "spread": false }], [{ "content": "contact", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/other/contact.astro", "pathname": "/other/contact", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/other/privacy", "type": "page", "pattern": "^\\/other\\/privacy\\/?$", "segments": [[{ "content": "other", "dynamic": false, "spread": false }], [{ "content": "privacy", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/other/privacy.astro", "pathname": "/other/privacy", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/other/about", "type": "page", "pattern": "^\\/other\\/about\\/?$", "segments": [[{ "content": "other", "dynamic": false, "spread": false }], [{ "content": "about", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/other/about.astro", "pathname": "/other/about", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/other/terms", "type": "page", "pattern": "^\\/other\\/terms\\/?$", "segments": [[{ "content": "other", "dynamic": false, "spread": false }], [{ "content": "terms", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/other/terms.astro", "pathname": "/other/terms", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }, { "type": "external", "src": "/_astro/_...jokecat_.de0b1a92.css" }], "routeData": { "route": "/joke/[jokeid]", "type": "page", "pattern": "^\\/joke\\/([^/]+?)\\/?$", "segments": [[{ "content": "joke", "dynamic": false, "spread": false }], [{ "content": "jokeid", "dynamic": true, "spread": false }]], "params": ["jokeid"], "component": "src/pages/joke/[jokeid].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/news/test", "type": "page", "pattern": "^\\/news\\/test\\/?$", "segments": [[{ "content": "news", "dynamic": false, "spread": false }], [{ "content": "test", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/news/test.astro", "pathname": "/news/test", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/news/tr/[id]", "type": "page", "pattern": "^\\/news\\/tr\\/([^/]+?)\\/?$", "segments": [[{ "content": "news", "dynamic": false, "spread": false }], [{ "content": "tr", "dynamic": false, "spread": false }], [{ "content": "id", "dynamic": true, "spread": false }]], "params": ["id"], "component": "src/pages/news/tr/[id].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/news/i/[slug]/[newsid]", "type": "page", "pattern": "^\\/news\\/i\\/([^/]+?)\\/([^/]+?)\\/?$", "segments": [[{ "content": "news", "dynamic": false, "spread": false }], [{ "content": "i", "dynamic": false, "spread": false }], [{ "content": "slug", "dynamic": true, "spread": false }], [{ "content": "newsid", "dynamic": true, "spread": false }]], "params": ["slug", "newsid"], "component": "src/pages/news/i/[slug]/[newsid].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/news/[...newspage]", "type": "page", "pattern": "^\\/news(?:\\/(.*?))?\\/?$", "segments": [[{ "content": "news", "dynamic": false, "spread": false }], [{ "content": "...newspage", "dynamic": true, "spread": true }]], "params": ["...newspage"], "component": "src/pages/news/[...newspage].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/cache", "type": "endpoint", "pattern": "^\\/api\\/cache$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "cache", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/api/cache.ts", "pathname": "/api/cache", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/img/[id]", "type": "endpoint", "pattern": "^\\/api\\/img\\/([^/]+?)\\.jpg$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "img", "dynamic": false, "spread": false }], [{ "content": "id", "dynamic": true, "spread": false }, { "content": ".jpg", "dynamic": false, "spread": false }]], "params": ["id"], "component": "src/pages/api/img/[id].jpg.ts", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/db/[id]", "type": "endpoint", "pattern": "^\\/api\\/db\\/([^/]+?)$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "db", "dynamic": false, "spread": false }], [{ "content": "id", "dynamic": true, "spread": false }]], "params": ["id"], "component": "src/pages/api/db/[id].ts", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...jokecat_.de0b1a92.css" }, { "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/cat/[...jokecat]", "type": "page", "pattern": "^\\/cat(?:\\/(.*?))?\\/?$", "segments": [[{ "content": "cat", "dynamic": false, "spread": false }], [{ "content": "...jokecat", "dynamic": true, "spread": true }]], "params": ["...jokecat"], "component": "src/pages/cat/[...jokecat].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/tw/u/[user]", "type": "page", "pattern": "^\\/tw\\/u\\/([^/]+?)\\/?$", "segments": [[{ "content": "tw", "dynamic": false, "spread": false }], [{ "content": "u", "dynamic": false, "spread": false }], [{ "content": "user", "dynamic": true, "spread": false }]], "params": ["user"], "component": "src/pages/tw/u/[user].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [{ "type": "external", "src": "/_astro/_...business_.630ebc26.css" }, { "type": "external", "src": "/_astro/_...business_.df49aaa8.css" }], "routeData": { "route": "/tw/[...twitter]", "type": "page", "pattern": "^\\/tw(?:\\/(.*?))?\\/?$", "segments": [[{ "content": "tw", "dynamic": false, "spread": false }], [{ "content": "...twitter", "dynamic": true, "spread": true }]], "params": ["...twitter"], "component": "src/pages/tw/[...twitter].astro", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }], "base": "/", "compressHTML": false, "markdown": { "drafts": false, "syntaxHighlight": "shiki", "shikiConfig": { "langs": [], "theme": "github-dark", "wrap": false }, "remarkPlugins": [], "rehypePlugins": [], "remarkRehype": {}, "gfm": true, "smartypants": true }, "componentMetadata": [["/home/runner/work/monext/monext/apps/kloun/src/pages/business/[...business].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/cat/[...jokecat].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/index.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/joke/[jokeid].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/memes.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/news/[...newspage].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/news/i/[slug]/[newsid].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/other/about.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/other/contact.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/other/privacy.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/other/terms.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/tw/[...twitter].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/tw/u/[user].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/vicove.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/kloun/src/pages/news/tr/[id].astro", { "propagation": "none", "containsHead": true }]], "renderers": [], "clientDirectives": [["idle", '(()=>{var i=t=>{let e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)};(self.Astro||(self.Astro={})).idle=i;window.dispatchEvent(new Event("astro:idle"));})();'], ["load", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();'], ["media", '(()=>{var s=(i,t)=>{let a=async()=>{await(await i())()};if(t.value){let e=matchMedia(t.value);e.matches?a():e.addEventListener("change",a,{once:!0})}};(self.Astro||(self.Astro={})).media=s;window.dispatchEvent(new Event("astro:media"));})();'], ["only", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();'], ["visible", '(()=>{var r=(i,c,n)=>{let s=async()=>{await(await i())()},t=new IntersectionObserver(e=>{for(let o of e)if(o.isIntersecting){t.disconnect(),s();break}});for(let e of n.children)t.observe(e)};(self.Astro||(self.Astro={})).visible=r;window.dispatchEvent(new Event("astro:visible"));})();']], "entryModules": { "/home/runner/work/monext/monext/apps/kloun/src/middleware.ts": "middleware2.mjs", "\0@astrojs-ssr-virtual-entry": "_@astrojs-ssr-virtual-entry.mjs", "\0@astro-renderers": "renderers.mjs", "/src/pages/tw/[...twitter].astro": "chunks/pages/_...twitter_.astro.07d0104a.mjs", "/src/pages/news/tr/[id].astro": "chunks/pages/_id_.astro.076ad324.mjs", "/src/pages/api/img/[id].jpg.ts": "chunks/pages/_id_.jpg.ts.f04f8160.mjs", "/src/pages/api/db/[id].ts": "chunks/pages/_id_.ts.042f95a1.mjs", "/src/pages/joke/[jokeid].astro": "chunks/pages/_jokeid_.astro.f4cfe593.mjs", "/src/pages/news/i/[slug]/[newsid].astro": "chunks/pages/_newsid_.astro.5d878528.mjs", "/src/pages/tw/u/[user].astro": "chunks/pages/_user_.astro.6dadf111.mjs", "/src/pages/other/about.astro": "chunks/pages/about.astro.c8c6357c.mjs", "/src/pages/api/cache.ts": "chunks/pages/cache.ts.53e97078.mjs", "/src/pages/other/contact.astro": "chunks/pages/contact.astro.8d5d260d.mjs", "/src/pages/index.astro": "chunks/pages/index.astro.cf839c2d.mjs", "/src/pages/memes.astro": "chunks/pages/memes.astro.6273e49b.mjs", "/src/pages/other/privacy.astro": "chunks/pages/privacy.astro.84359dc5.mjs", "/src/pages/other/terms.astro": "chunks/pages/terms.astro.01e05786.mjs", "/src/pages/news/test.astro": "chunks/pages/test.astro.d1b04451.mjs", "/src/pages/vicove.astro": "chunks/pages/vicove.astro.22009a50.mjs", "/home/runner/work/monext/monext/node_modules/@astrojs/react/vnode-children.js": "chunks/vnode-children.5a6df93a.mjs", "\0@astro-page:src/pages/index@_@astro": "chunks/index@_@astro.3cb80dac.mjs", "\0@astro-page:src/pages/business/[...business]@_@astro": "chunks/_...ca6a0e1d.mjs", "\0@astro-page:src/pages/index1@_@html": "chunks/index1@_@html.094e159c.mjs", "\0@astro-page:src/pages/vicove@_@astro": "chunks/vicove@_@astro.558815c1.mjs", "\0@astro-page:src/pages/admix/index@_@astro": "chunks/index@_@astro.419a0c3c.mjs", "\0@astro-page:src/pages/memes@_@astro": "chunks/memes@_@astro.1783bfec.mjs", "\0@astro-page:src/pages/other/contact@_@astro": "chunks/contact@_@astro.3aef25a8.mjs", "\0@astro-page:src/pages/other/privacy@_@astro": "chunks/privacy@_@astro.80e33f93.mjs", "\0@astro-page:src/pages/other/about@_@astro": "chunks/about@_@astro.f96fb4c7.mjs", "\0@astro-page:src/pages/other/terms@_@astro": "chunks/terms@_@astro.64790a1b.mjs", "\0@astro-page:src/pages/joke/[jokeid]@_@astro": "chunks/_jokeid_@_@astro.bbd880b0.mjs", "\0@astro-page:src/pages/news/test@_@astro": "chunks/test@_@astro.bf8a2e67.mjs", "\0@astro-page:src/pages/news/tr/[id]@_@astro": "chunks/_id_@_@astro.5deedc8a.mjs", "\0@astro-page:src/pages/news/i/[slug]/[newsid]@_@astro": "chunks/_newsid_@_@astro.e83516b8.mjs", "\0@astro-page:src/pages/news/[...newspage]@_@astro": "chunks/_...c6054889.mjs", "\0@astro-page:src/pages/api/cache@_@ts": "chunks/cache@_@ts.ddeb5264.mjs", "\0@astro-page:src/pages/api/img/[id].jpg@_@ts": "chunks/_id_.178e0813.mjs", "\0@astro-page:src/pages/api/db/[id]@_@ts": "chunks/_id_@_@ts.2a2ad695.mjs", "\0@astro-page:src/pages/cat/[...jokecat]@_@astro": "chunks/_...eeff6a31.mjs", "\0@astro-page:src/pages/tw/u/[user]@_@astro": "chunks/_user_@_@astro.64b12bbe.mjs", "\0@astro-page:src/pages/tw/[...twitter]@_@astro": "chunks/_...ece7fc16.mjs", "/home/runner/work/monext/monext/apps/kloun/src/components/Admin": "_astro/Admin.9fd7f3d1.js", "@astrojs/react/client.js": "_astro/client.729345ab.js", "astro:scripts/before-hydration.js": "" }, "assets": ["/_astro/_...business_.df49aaa8.css", "/_astro/_...business_.630ebc26.css", "/_astro/_...jokecat_.de0b1a92.css", "/1.txt", "/[id].jpg.txt", "/_routes.json", "/ads.js", "/ads.txt", "/amp.js", "/favicon.ico", "/favicon.svg", "/kache.ts", "/modal.js", "/prefetch.js", "/satori.js", "/style.css", "/test.html", "/test.js", "/test.ts", "/$server_build/middleware.mjs", "/$server_build/middleware2.mjs", "/$server_build/renderers.mjs", "/_astro/Admin.9fd7f3d1.js", "/_astro/client.729345ab.js", "/_astro/index.d92747a1.js", "/fb/[...facebook].astro", "/fbapps/untitled file", "/images/2023.jpg", "/images/2023.webp", "/images/apple-touch-icon.png", "/images/arrow.svg", "/images/bgg.svg", "/images/botwave-white.svg", "/images/botwave.svg", "/images/cmass2022.jpg", "/images/cmass2022.webp", "/images/facebook.svg", "/images/favicon-16x16.png", "/images/favicon-32x32.ico", "/images/favicon.ico", "/images/logobottom.png", "/images/logobottomsmall.png", "/images/logobottomwhite.png", "/images/logodark.png", "/images/logosvg.svg", "/images/logowhite.png", "/images/pixel.png", "/images/placeholderfb.png", "/images/powered-white.png", "/images/powered-white.svg", "/images/powered.png", "/images/powered.sketch", "/images/powered.svg", "/images/program.svg", "/images/readmore.png", "/images/readmore.svg", "/images/upwave-white.svg", "/images/upwave.svg", "/ml/test.js", "/ml/test.txt", "/ml/xx", "/ramdisk/ramdisk.js", "/ramdisk/server.js", "/rudixops/rudixops.png", "/sitemaps/sitemap.mjs", "/sitemaps/subpages.mjs", "/$server_build/_astro/_...business_.630ebc26.css", "/$server_build/_astro/_...business_.df49aaa8.css", "/$server_build/_astro/_...jokecat_.de0b1a92.css", "/$server_build/chunks/_...c6054889.mjs", "/$server_build/chunks/_...ca6a0e1d.mjs", "/$server_build/chunks/_...ece7fc16.mjs", "/$server_build/chunks/_...eeff6a31.mjs", "/$server_build/chunks/_id_.178e0813.mjs", "/$server_build/chunks/_id_@_@astro.5deedc8a.mjs", "/$server_build/chunks/_id_@_@ts.2a2ad695.mjs", "/$server_build/chunks/_jokeid_@_@astro.bbd880b0.mjs", "/$server_build/chunks/_newsid_@_@astro.e83516b8.mjs", "/$server_build/chunks/_user_@_@astro.64b12bbe.mjs", "/$server_build/chunks/about@_@astro.f96fb4c7.mjs", "/$server_build/chunks/astro.0fa599e7.mjs", "/$server_build/chunks/cache@_@ts.ddeb5264.mjs", "/$server_build/chunks/contact@_@astro.3aef25a8.mjs", "/$server_build/chunks/index1@_@html.094e159c.mjs", "/$server_build/chunks/index@_@astro.3cb80dac.mjs", "/$server_build/chunks/index@_@astro.419a0c3c.mjs", "/$server_build/chunks/memes@_@astro.1783bfec.mjs", "/$server_build/chunks/prerender.8fbeeaca.mjs", "/$server_build/chunks/privacy@_@astro.80e33f93.mjs", "/$server_build/chunks/terms@_@astro.64790a1b.mjs", "/$server_build/chunks/test@_@astro.bf8a2e67.mjs", "/$server_build/chunks/vicove@_@astro.558815c1.mjs", "/$server_build/chunks/vnode-children.5a6df93a.mjs", "/efs/git/ecosystem.config.js", "/efs/git/package-lock.json", "/efs/git/package.json", "/efs/git/ramdisk.js", "/efs/git/server.js", "/efs/node/ec2.txt", "/efs/node/package-lock.json", "/efs/node/package.json", "/efs/node/sqs.js", "/efs/node/sqslocal.js", "/efs/tmp/default.ini", "/efs/tmp/docker-compose.yml", "/efs/tmp/init.sh", "/efs/tmp/local.ini", "/efs/tmp/nginx.conf", "/fbapps/asciiprepare/dev.html", "/fbapps/asciiprepare/jq.js", "/fbapps/ass/app.js", "/fbapps/ass/app.json", "/fbapps/ass/dev.html", "/fbapps/ass/jq.js", "/fbapps/assbg_BG/app.json", "/fbapps/assbg_BG/bacl.jpg", "/fbapps/assbg_BG/dev.html", "/fbapps/assbg_BG/jq.js", "/fbapps/assen/dev.html", "/fbapps/assen_US/app.json", "/fbapps/assen_US/back.jpg", "/fbapps/assen_US/dev.html", "/fbapps/assen_US/jq.js", "/fbapps/banica2023/back.png", "/fbapps/banica2023/items.json", "/fbapps/banica2023/react.svg", "/fbapps/banica2023/svg.svg", "/fbapps/banicak2022/app.json", "/fbapps/banicak2022/back.jpg", "/fbapps/banicak2022/cover111x.jpg", "/fbapps/banicak2022/cover2.jpg", "/fbapps/banicak2022/dev.html", "/fbapps/banicak2022/items.json", "/fbapps/banicak2022/jq.js", "/fbapps/banicak2022/kolednabanica.json", "/fbapps/cars/app.json", "/fbapps/cars/cover.jpg", "/fbapps/cars/dev.html", "/fbapps/carss/app.json", "/fbapps/carss/cover.jpg", "/fbapps/carss/dev.html", "/fbapps/celeb/app.json", "/fbapps/celeb/back.jpg", "/fbapps/celeb/cover.jpg", "/fbapps/celeb/dev.html", "/fbapps/celebus/app.json", "/fbapps/celebus/cover.jpg", "/fbapps/celebus/dev.html", "/fbapps/denposleden/denposleden.json", "/fbapps/denposleden/script.js", "/fbapps/godini/app.json", "/fbapps/godini/cover.jpg", "/fbapps/godini/dev.html", "/fbapps/godini/script.js", "/fbapps/godini/vazrast.json", "/fbapps/goodbad/angular.html", "/fbapps/goodbad/app.json", "/fbapps/goodbad/back.png", "/fbapps/goodbad/items.json", "/fbapps/goodbad/svg.svg", "/fbapps/iaponsko/app.json", "/fbapps/iaponsko/bacl.jpg", "/fbapps/iaponsko/cover.jpg", "/fbapps/iaponsko/dev.html", "/fbapps/iaponsko/jq.js", "/fbapps/iaponskoime/app.json", "/fbapps/iaponskoime/back.jpg", "/fbapps/iaponskoime/dev.html", "/fbapps/iaponskoime/iaponskoime.json", "/fbapps/iaponskoime/script.js", "/fbapps/imetoti/imetoti.json", "/fbapps/imetoti/script.js", "/fbapps/indianskoime/app.json", "/fbapps/indianskoime/cover.jpg", "/fbapps/indianskoime/dev.html", "/fbapps/indianskoime/indianskoime.json", "/fbapps/japan/app.json", "/fbapps/japan/bacl.jpg", "/fbapps/japan/cover.jpg", "/fbapps/japan/dev.html", "/fbapps/japan/jq.js", "/fbapps/japanen/dev.html", "/fbapps/kolednaimg/1.jpg", "/fbapps/kolednaimg/10.jpg", "/fbapps/kolednaimg/11.jpg", "/fbapps/kolednaimg/12.jpg", "/fbapps/kolednaimg/13.jpg", "/fbapps/kolednaimg/14.jpg", "/fbapps/kolednaimg/15.jpg", "/fbapps/kolednaimg/16.jpg", "/fbapps/kolednaimg/17.jpg", "/fbapps/kolednaimg/18.jpg", "/fbapps/kolednaimg/19.jpg", "/fbapps/kolednaimg/2.jpg", "/fbapps/kolednaimg/20.jpg", "/fbapps/kolednaimg/21.jpg", "/fbapps/kolednaimg/22.jpg", "/fbapps/kolednaimg/23.jpg", "/fbapps/kolednaimg/24.jpg", "/fbapps/kolednaimg/25.jpg", "/fbapps/kolednaimg/26.jpg", "/fbapps/kolednaimg/27.jpg", "/fbapps/kolednaimg/28.jpg", "/fbapps/kolednaimg/29.jpg", "/fbapps/kolednaimg/3.jpg", "/fbapps/kolednaimg/30.jpg", "/fbapps/kolednaimg/4.jpg", "/fbapps/kolednaimg/5.jpg", "/fbapps/kolednaimg/6.jpg", "/fbapps/kolednaimg/7.jpg", "/fbapps/kolednaimg/8.jpg", "/fbapps/kolednaimg/9.jpg", "/fbapps/match/app.json", "/fbapps/match/back.jpg", "/fbapps/match/cover.jpg", "/fbapps/match/dev.html", "/fbapps/moiatazodia/app.json", "/fbapps/moiatazodia/script.js", "/fbapps/podhojda/app.json", "/fbapps/podhojda/back.jpg", "/fbapps/podhojda/cover.jpg", "/fbapps/podhojda/dev.html", "/fbapps/predishenjivot/app.json", "/fbapps/predishenjivot/back.jpg", "/fbapps/predishenjivot/back1.jpg", "/fbapps/predishenjivot/cover.jpg", "/fbapps/predishenjivot/dev.html", "/fbapps/vazrast/app.json", "/fbapps/vazrast/script.js", "/images/font/Nunito-Black.ttf", "/images/font/Nunito-Black.woff", "/images/font/Nunito-Black.woff2", "/images/font/Nunito-BlackItalic.ttf", "/images/font/Nunito-BlackItalic.woff", "/images/font/Nunito-BlackItalic.woff2", "/images/font/Nunito-Bold.ttf", "/images/font/Nunito-Bold.woff", "/images/font/Nunito-Bold.woff2", "/images/font/Nunito-BoldItalic.ttf", "/images/font/Nunito-BoldItalic.woff", "/images/font/Nunito-BoldItalic.woff2", "/images/font/Nunito-ExtraBold.ttf", "/images/font/Nunito-ExtraBold.woff", "/images/font/Nunito-ExtraBold.woff2", "/images/font/Nunito-ExtraBoldItalic.ttf", "/images/font/Nunito-ExtraBoldItalic.woff", "/images/font/Nunito-ExtraBoldItalic.woff2", "/images/font/Nunito-ExtraLight.ttf", "/images/font/Nunito-ExtraLight.woff", "/images/font/Nunito-ExtraLight.woff2", "/images/font/Nunito-ExtraLightItalic.ttf", "/images/font/Nunito-ExtraLightItalic.woff", "/images/font/Nunito-ExtraLightItalic.woff2", "/images/font/Nunito-Italic.ttf", "/images/font/Nunito-Italic.woff", "/images/font/Nunito-Italic.woff2", "/images/font/Nunito-Light.ttf", "/images/font/Nunito-Light.woff", "/images/font/Nunito-Light.woff2", "/images/font/Nunito-LightItalic.ttf", "/images/font/Nunito-LightItalic.woff", "/images/font/Nunito-LightItalic.woff2", "/images/font/Nunito-Medium.ttf", "/images/font/Nunito-Medium.woff", "/images/font/Nunito-Medium.woff2", "/images/font/Nunito-MediumItalic.ttf", "/images/font/Nunito-MediumItalic.woff", "/images/font/Nunito-MediumItalic.woff2", "/images/font/Nunito-Regular.ttf", "/images/font/Nunito-Regular.woff", "/images/font/Nunito-Regular.woff2", "/images/font/Nunito-SemiBold.ttf", "/images/font/Nunito-SemiBold.woff", "/images/font/Nunito-SemiBold.woff2", "/images/font/Nunito-SemiBoldItalic.ttf", "/images/font/Nunito-SemiBoldItalic.woff", "/images/font/Nunito-SemiBoldItalic.woff2", "/images/font/woff.woff2", "/rudixops/bg/about.webarchive", "/rudixops/bg/contact.webarchive", "/rudixops/bg/index.webarchive", "/rudixops/bg/services.webarchive", "/rudixops/en/about.webarchive", "/rudixops/en/contact.webarchive", "/rudixops/en/index.webarchive", "/rudixops/en/services.webarchive", "/$server_build/chunks/pages/_...business_.astro.1d423138.mjs", "/$server_build/chunks/pages/_...jokecat_.astro.c1b39e73.mjs", "/$server_build/chunks/pages/_...newspage_.astro.a5d1ddf3.mjs", "/$server_build/chunks/pages/_...twitter_.astro.07d0104a.mjs", "/$server_build/chunks/pages/_id_.astro.076ad324.mjs", "/$server_build/chunks/pages/_id_.jpg.ts.f04f8160.mjs", "/$server_build/chunks/pages/_id_.ts.042f95a1.mjs", "/$server_build/chunks/pages/_jokeid_.astro.f4cfe593.mjs", "/$server_build/chunks/pages/_newsid_.astro.5d878528.mjs", "/$server_build/chunks/pages/_user_.astro.6dadf111.mjs", "/$server_build/chunks/pages/about.astro.c8c6357c.mjs", "/$server_build/chunks/pages/cache.ts.53e97078.mjs", "/$server_build/chunks/pages/contact.astro.8d5d260d.mjs", "/$server_build/chunks/pages/index.astro.cf839c2d.mjs", "/$server_build/chunks/pages/memes.astro.6273e49b.mjs", "/$server_build/chunks/pages/privacy.astro.84359dc5.mjs", "/$server_build/chunks/pages/terms.astro.01e05786.mjs", "/$server_build/chunks/pages/test.astro.d1b04451.mjs", "/$server_build/chunks/pages/vicove.astro.22009a50.mjs", "/efs/node/test/_replicator.1675279681.couch", "/efs/node/test/db.1675279527.couch", "/fbapps/cars/cars/alfa-romeo_spider.jpg", "/fbapps/cars/cars/audi_r8.jpg", "/fbapps/cars/cars/audi_s5.jpg", "/fbapps/cars/cars/bmw_m5.jpg", "/fbapps/cars/cars/bugatti_veyron.jpg", "/fbapps/cars/cars/cadillac_deville.jpg", "/fbapps/cars/cars/citroen_ds.jpg", "/fbapps/cars/cars/dodge_chalenger.jpg", "/fbapps/cars/cars/dodge_viper.jpg", "/fbapps/cars/cars/ferrari_enzo.jpg", "/fbapps/cars/cars/jaguar_xj.jpg", "/fbapps/cars/cars/jeep_wrangler.jpg", "/fbapps/cars/cars/land_rover.jpg", "/fbapps/cars/cars/mazda_3_sport.jpg", "/fbapps/cars/cars/mercedes_g_class.jpg", "/fbapps/cars/cars/mercedes_maybach.jpg", "/fbapps/cars/cars/mini_cooper.jpg", "/fbapps/cars/cars/mitsubishi_lancer.jpg", "/fbapps/cars/cars/nissan_GTR.jpg", "/fbapps/cars/cars/opel_calibra.jpg", "/fbapps/cars/cars/porsche_panamera.jpg", "/fbapps/cars/cars/toyota_supra.jpg", "/fbapps/cars/cars/volvo_xc90.jpg", "/fbapps/carss/cars/alfa-romeo_spider.jpg", "/fbapps/carss/cars/audi_r8.jpg", "/fbapps/carss/cars/audi_s5.jpg", "/fbapps/carss/cars/bmw_m5.jpg", "/fbapps/carss/cars/bugatti_veyron.jpg", "/fbapps/carss/cars/cadillac_deville.jpg", "/fbapps/carss/cars/citroen_ds.jpg", "/fbapps/carss/cars/dodge_chalenger.jpg", "/fbapps/carss/cars/dodge_viper.jpg", "/fbapps/carss/cars/ferrari_enzo.jpg", "/fbapps/carss/cars/jaguar_xj.jpg", "/fbapps/carss/cars/jeep_wrangler.jpg", "/fbapps/carss/cars/land_rover.jpg", "/fbapps/carss/cars/mazda_3_sport.jpg", "/fbapps/carss/cars/mercedes_g_class.jpg", "/fbapps/carss/cars/mercedes_maybach.jpg", "/fbapps/carss/cars/mini_cooper.jpg", "/fbapps/carss/cars/mitsubishi_lancer.jpg", "/fbapps/carss/cars/nissan_GTR.jpg", "/fbapps/carss/cars/opel_calibra.jpg", "/fbapps/carss/cars/porsche_panamera.jpg", "/fbapps/carss/cars/toyota_supra.jpg", "/fbapps/carss/cars/volvo_xc90.jpg", "/fbapps/celeb/images/female-Katharine-McPhee.jpg", "/fbapps/celeb/images/female-adele-300.jpg", "/fbapps/celeb/images/female-ali-larter1_300.jpg", "/fbapps/celeb/images/female-alicia-keys300.jpg", "/fbapps/celeb/images/female-amanda-bynes300.jpg", "/fbapps/celeb/images/female-amanda-seyfried-300.jpg", "/fbapps/celeb/images/female-america-ferrera300.jpg", "/fbapps/celeb/images/female-amy-adams300.jpg", "/fbapps/celeb/images/female-anna-nicole300.jpg", "/fbapps/celeb/images/female-anne-hathaway300.jpg", "/fbapps/celeb/images/female-ashlee-simpson300.jpg", "/fbapps/celeb/images/female-ashley-greene-300.jpg", "/fbapps/celeb/images/female-ashley-olsen300.jpg", "/fbapps/celeb/images/female-ashley-tisdale300.jpg", "/fbapps/celeb/images/female-audrina-patridge300.jpg", "/fbapps/celeb/images/female-avril-lavigne300.jpg", "/fbapps/celeb/images/female-beyonce-knowles.jpg", "/fbapps/celeb/images/female-brooke-shields300.jpg", "/fbapps/celeb/images/female-cameron-diaz.jpg", "/fbapps/celeb/images/female-carmen_electra.jpg", "/fbapps/celeb/images/female-cate-blanchett.jpg", "/fbapps/celeb/images/female-catherine-jones.jpg", "/fbapps/celeb/images/female-celine-dion.jpg", "/fbapps/celeb/images/female-charlize-theron.jpg", "/fbapps/celeb/images/female-cheryl-burke.jpg", "/fbapps/celeb/images/female-christina-aguilera.jpg", "/fbapps/celeb/images/female-christina-applegate300.jpg", "/fbapps/celeb/images/female-claire-danes300a.jpg", "/fbapps/celeb/images/female-courtney-cox300.jpg", "/fbapps/celeb/images/female-demi-lovato300.jpg", "/fbapps/celeb/images/female-demi-moore.jpg", "/fbapps/celeb/images/female-denise-richards.jpg", "/fbapps/celeb/images/female-drew-barrymore.jpg", "/fbapps/celeb/images/female-ed-westwick300.jpg", "/fbapps/celeb/images/female-elin-nordegren-300.jpg", "/fbapps/celeb/images/female-elisebeth-hasselback300.jpg", "/fbapps/celeb/images/female-emily-blunt300.jpg", "/fbapps/celeb/images/female-emma-stone-300.jpg", "/fbapps/celeb/images/female-emma-watson-300.jpg", "/fbapps/celeb/images/female-eva-longoria.jpg", "/fbapps/celeb/images/female-eva-mendes.jpg", "/fbapps/celeb/images/female-evan-rachelwood300.jpg", "/fbapps/celeb/images/female-evangeline-lilly300.jpg", "/fbapps/celeb/images/female-gisele-bundchen300.jpg", "/fbapps/celeb/images/female-gwen-stefani.jpg", "/fbapps/celeb/images/female-heidi-montag.jpg", "/fbapps/celeb/images/female-hilary-duff.jpg", "/fbapps/celeb/images/female-january-jones-300.jpg", "/fbapps/celeb/images/female-jennifer-aniston.jpg", "/fbapps/celeb/images/female-jennifer-lawrence-300.jpg", "/fbapps/celeb/images/female-jennifer-lopez.jpg", "/fbapps/celeb/images/female-jessica-alba.jpg", "/fbapps/celeb/images/female-jessica-biel.jpg", "/fbapps/celeb/images/female-jessica-simpson.jpg", "/fbapps/celeb/images/female-jessica-szohr-300.jpg", "/fbapps/celeb/images/female-julia-roberts.jpg", "/fbapps/celeb/images/female-julianne-hough.jpg", "/fbapps/celeb/images/female-kate-beckinsale.jpg", "/fbapps/celeb/images/female-kate-hudson.jpg", "/fbapps/celeb/images/female-kate-moss.jpg", "/fbapps/celeb/images/female-katherine-heig.jpg", "/fbapps/celeb/images/female-katie-holmes-300.jpg", "/fbapps/celeb/images/female-keira-knightley.jpg", "/fbapps/celeb/images/female-kevin-federline300.jpg", "/fbapps/celeb/images/female-kim-kardashian300b.jpg", "/fbapps/celeb/images/female-kristen-stewart300.jpg", "/fbapps/celeb/images/female-kristin-cavallari.jpg", "/fbapps/celeb/images/female-lauren-conrad300.jpg", "/fbapps/celeb/images/female-leighton-meester300.jpg", "/fbapps/celeb/images/female-lindsay-lohan.jpg", "/fbapps/celeb/images/female-mandy-moore.jpg", "/fbapps/celeb/images/female-megan-fox.jpg", "/fbapps/celeb/images/female-mila-kunis-300.jpg", "/fbapps/celeb/images/female-mischa-barton.jpg", "/fbapps/celeb/images/female-natalie-portman300.jpg", "/fbapps/celeb/images/female-penelope-cruz300.jpg", "/fbapps/celeb/images/female-pink300.jpg", "/fbapps/celeb/images/female-rachel-bilson300.jpg", "/fbapps/celeb/images/female-salma-hayek.jpg", "/fbapps/celeb/images/female-sandra-bullock.jpg", "/fbapps/celeb/images/female-scarett-johansson.jpg", "/fbapps/celeb/images/female-selena-gomez.jpg", "/fbapps/celeb/images/female-shakira.jpg", "/fbapps/celeb/images/female-shania-twain300.jpg", "/fbapps/celeb/images/female-sheryl-crow300.jpg", "/fbapps/celeb/images/female-sienna-miller.jpg", "/fbapps/celeb/images/female-taylor-momsen300.jpg", "/fbapps/celeb/images/male-adam-levine-300.jpg", "/fbapps/celeb/images/male-alexander-skarsgard-300.jpg", "/fbapps/celeb/images/male-andrew-garfield-300.jpg", "/fbapps/celeb/images/male-ashton-kutcher300.jpg", "/fbapps/celeb/images/male-ben-affleck-300.jpg", "/fbapps/celeb/images/male-brad-pitt.jpg", "/fbapps/celeb/images/male-bradley-cooper.jpg", "/fbapps/celeb/images/male-brody-jenner300.jpg", "/fbapps/celeb/images/male-bruce-willis300.jpg", "/fbapps/celeb/images/male-chace-crawford300.jpg", "/fbapps/celeb/images/male-channing-tatum.jpg", "/fbapps/celeb/images/male-charlie-sheen-300.jpg", "/fbapps/celeb/images/male-chris-hemsworth.jpg", "/fbapps/celeb/images/male-chris-pine-300.jpg", "/fbapps/celeb/images/male-christian-bale-300.jpg", "/fbapps/celeb/images/male-clay-aiken.jpg", "/fbapps/celeb/images/male-colin-farrell300.jpg", "/fbapps/celeb/images/male-cory-monteith.jpg", "/fbapps/celeb/images/male-daniel-radcliffe300.jpg", "/fbapps/celeb/images/male-david-archuleta.jpg", "/fbapps/celeb/images/male-david-beckham.jpg", "/fbapps/celeb/images/male-david-cook.jpg", "/fbapps/celeb/images/male-ed-westwick300.jpg", "/fbapps/celeb/images/male-george-clooney.jpg", "/fbapps/celeb/images/male-gerard-butler300.jpg", "/fbapps/celeb/images/male-heath-ledger.jpg", "/fbapps/celeb/images/male-hugh-jackman.jpg", "/fbapps/celeb/images/male-jake-gyllenhaal.jpg", "/fbapps/celeb/images/male-james-franco300.jpg", "/fbapps/celeb/images/male-john-krasinski300.jpg", "/fbapps/celeb/images/male-john-mayer300.jpg", "/fbapps/celeb/images/male-johnny-depp.jpg", "/fbapps/celeb/images/male-jon-hamm-300.jpg", "/fbapps/celeb/images/male-josh-duhamel.jpg", "/fbapps/celeb/images/male-jude-law300.jpg", "/fbapps/celeb/images/male-justin-timberlake.jpg", "/fbapps/celeb/images/male-keanu-reeves300.jpg", "/fbapps/celeb/images/male-keith-urban.jpg", "/fbapps/celeb/images/male-kellan-lutz-300.jpg", "/fbapps/celeb/images/male-kelly-clarkson.jpg", "/fbapps/celeb/images/male-kenny-chesney300.jpg", "/fbapps/celeb/images/male-kris-allen-300.jpg", "/fbapps/celeb/images/male-leo-dicaprio.jpg", "/fbapps/celeb/images/male-liam-hemsworth-300.jpg", "/fbapps/celeb/images/male-mario-lopez-300.jpg", "/fbapps/celeb/images/male-mark-ballas300.jpg", "/fbapps/celeb/images/male-mark-wahlberg-300.jpg", "/fbapps/celeb/images/male-matt-damon300.jpg", "/fbapps/celeb/images/male-matthew-mcconaughey.jpg", "/fbapps/celeb/images/male-milo-ventimiglia300.jpg", "/fbapps/celeb/images/male-nick-lachey300.jpg", "/fbapps/celeb/images/male-orlando-bloom300.jpg", "/fbapps/celeb/images/male-patrick-dempsey.jpg", "/fbapps/celeb/images/male-penn-badgley300.jpg", "/fbapps/celeb/images/male-prince-harry300.jpg", "/fbapps/celeb/images/male-prince-william300.jpg", "/fbapps/celeb/images/male-robert-pattinson300.jpg", "/fbapps/celeb/images/male-robert-pattinson300a.jpg", "/fbapps/celeb/images/male-ryan-gosling-300.jpg", "/fbapps/celeb/images/male-ryan-phillippe300.jpg", "/fbapps/celeb/images/male-ryan-reynoldsa300.jpg", "/fbapps/celeb/images/male-shia-labeouf300.jpg", "/fbapps/celeb/images/male-taylor-hicks.jpg", "/fbapps/celeb/images/male-taylor-lautner300.jpg", "/fbapps/celeb/images/male-tim-mcgraw.jpg", "/fbapps/celeb/images/male-tom-brady300.jpg", "/fbapps/celeb/images/male-tom-cruise.jpg", "/fbapps/celebus/images/female-Katharine-McPhee.jpg", "/fbapps/celebus/images/female-adele-300.jpg", "/fbapps/celebus/images/female-ali-larter1_300.jpg", "/fbapps/celebus/images/female-alicia-keys300.jpg", "/fbapps/celebus/images/female-amanda-bynes300.jpg", "/fbapps/celebus/images/female-amanda-seyfried-300.jpg", "/fbapps/celebus/images/female-america-ferrera300.jpg", "/fbapps/celebus/images/female-amy-adams300.jpg", "/fbapps/celebus/images/female-anna-nicole300.jpg", "/fbapps/celebus/images/female-anne-hathaway300.jpg", "/fbapps/celebus/images/female-ashlee-simpson300.jpg", "/fbapps/celebus/images/female-ashley-greene-300.jpg", "/fbapps/celebus/images/female-ashley-olsen300.jpg", "/fbapps/celebus/images/female-ashley-tisdale300.jpg", "/fbapps/celebus/images/female-audrina-patridge300.jpg", "/fbapps/celebus/images/female-avril-lavigne300.jpg", "/fbapps/celebus/images/female-beyonce-knowles.jpg", "/fbapps/celebus/images/female-brooke-shields300.jpg", "/fbapps/celebus/images/female-cameron-diaz.jpg", "/fbapps/celebus/images/female-carmen_electra.jpg", "/fbapps/celebus/images/female-cate-blanchett.jpg", "/fbapps/celebus/images/female-catherine-jones.jpg", "/fbapps/celebus/images/female-celine-dion.jpg", "/fbapps/celebus/images/female-charlize-theron.jpg", "/fbapps/celebus/images/female-cheryl-burke.jpg", "/fbapps/celebus/images/female-christina-aguilera.jpg", "/fbapps/celebus/images/female-christina-applegate300.jpg", "/fbapps/celebus/images/female-claire-danes300a.jpg", "/fbapps/celebus/images/female-courtney-cox300.jpg", "/fbapps/celebus/images/female-demi-lovato300.jpg", "/fbapps/celebus/images/female-demi-moore.jpg", "/fbapps/celebus/images/female-denise-richards.jpg", "/fbapps/celebus/images/female-drew-barrymore.jpg", "/fbapps/celebus/images/female-ed-westwick300.jpg", "/fbapps/celebus/images/female-elin-nordegren-300.jpg", "/fbapps/celebus/images/female-elisebeth-hasselback300.jpg", "/fbapps/celebus/images/female-emily-blunt300.jpg", "/fbapps/celebus/images/female-emma-stone-300.jpg", "/fbapps/celebus/images/female-emma-watson-300.jpg", "/fbapps/celebus/images/female-eva-longoria.jpg", "/fbapps/celebus/images/female-eva-mendes.jpg", "/fbapps/celebus/images/female-evan-rachelwood300.jpg", "/fbapps/celebus/images/female-evangeline-lilly300.jpg", "/fbapps/celebus/images/female-gisele-bundchen300.jpg", "/fbapps/celebus/images/female-gwen-stefani.jpg", "/fbapps/celebus/images/female-heidi-montag.jpg", "/fbapps/celebus/images/female-hilary-duff.jpg", "/fbapps/celebus/images/female-january-jones-300.jpg", "/fbapps/celebus/images/female-jennifer-aniston.jpg", "/fbapps/celebus/images/female-jennifer-lawrence-300.jpg", "/fbapps/celebus/images/female-jennifer-lopez.jpg", "/fbapps/celebus/images/female-jessica-alba.jpg", "/fbapps/celebus/images/female-jessica-biel.jpg", "/fbapps/celebus/images/female-jessica-simpson.jpg", "/fbapps/celebus/images/female-jessica-szohr-300.jpg", "/fbapps/celebus/images/female-julia-roberts.jpg", "/fbapps/celebus/images/female-julianne-hough.jpg", "/fbapps/celebus/images/female-kate-beckinsale.jpg", "/fbapps/celebus/images/female-kate-hudson.jpg", "/fbapps/celebus/images/female-kate-moss.jpg", "/fbapps/celebus/images/female-katherine-heig.jpg", "/fbapps/celebus/images/female-katie-holmes-300.jpg", "/fbapps/celebus/images/female-keira-knightley.jpg", "/fbapps/celebus/images/female-kevin-federline300.jpg", "/fbapps/celebus/images/female-kim-kardashian300b.jpg", "/fbapps/celebus/images/female-kristen-stewart300.jpg", "/fbapps/celebus/images/female-kristin-cavallari.jpg", "/fbapps/celebus/images/female-lauren-conrad300.jpg", "/fbapps/celebus/images/female-leighton-meester300.jpg", "/fbapps/celebus/images/female-lindsay-lohan.jpg", "/fbapps/celebus/images/female-mandy-moore.jpg", "/fbapps/celebus/images/female-megan-fox.jpg", "/fbapps/celebus/images/female-mila-kunis-300.jpg", "/fbapps/celebus/images/female-mischa-barton.jpg", "/fbapps/celebus/images/female-natalie-portman300.jpg", "/fbapps/celebus/images/female-penelope-cruz300.jpg", "/fbapps/celebus/images/female-pink300.jpg", "/fbapps/celebus/images/female-rachel-bilson300.jpg", "/fbapps/celebus/images/female-salma-hayek.jpg", "/fbapps/celebus/images/female-sandra-bullock.jpg", "/fbapps/celebus/images/female-scarett-johansson.jpg", "/fbapps/celebus/images/female-selena-gomez.jpg", "/fbapps/celebus/images/female-shakira.jpg", "/fbapps/celebus/images/female-shania-twain300.jpg", "/fbapps/celebus/images/female-sheryl-crow300.jpg", "/fbapps/celebus/images/female-sienna-miller.jpg", "/fbapps/celebus/images/female-taylor-momsen300.jpg", "/fbapps/celebus/images/male-adam-levine-300.jpg", "/fbapps/celebus/images/male-alexander-skarsgard-300.jpg", "/fbapps/celebus/images/male-andrew-garfield-300.jpg", "/fbapps/celebus/images/male-ashton-kutcher300.jpg", "/fbapps/celebus/images/male-ben-affleck-300.jpg", "/fbapps/celebus/images/male-brad-pitt.jpg", "/fbapps/celebus/images/male-bradley-cooper.jpg", "/fbapps/celebus/images/male-brody-jenner300.jpg", "/fbapps/celebus/images/male-bruce-willis300.jpg", "/fbapps/celebus/images/male-chace-crawford300.jpg", "/fbapps/celebus/images/male-channing-tatum.jpg", "/fbapps/celebus/images/male-charlie-sheen-300.jpg", "/fbapps/celebus/images/male-chris-hemsworth.jpg", "/fbapps/celebus/images/male-chris-pine-300.jpg", "/fbapps/celebus/images/male-christian-bale-300.jpg", "/fbapps/celebus/images/male-clay-aiken.jpg", "/fbapps/celebus/images/male-colin-farrell300.jpg", "/fbapps/celebus/images/male-cory-monteith.jpg", "/fbapps/celebus/images/male-daniel-radcliffe300.jpg", "/fbapps/celebus/images/male-david-archuleta.jpg", "/fbapps/celebus/images/male-david-beckham.jpg", "/fbapps/celebus/images/male-david-cook.jpg", "/fbapps/celebus/images/male-ed-westwick300.jpg", "/fbapps/celebus/images/male-george-clooney.jpg", "/fbapps/celebus/images/male-gerard-butler300.jpg", "/fbapps/celebus/images/male-heath-ledger.jpg", "/fbapps/celebus/images/male-hugh-jackman.jpg", "/fbapps/celebus/images/male-jake-gyllenhaal.jpg", "/fbapps/celebus/images/male-james-franco300.jpg", "/fbapps/celebus/images/male-john-krasinski300.jpg", "/fbapps/celebus/images/male-john-mayer300.jpg", "/fbapps/celebus/images/male-johnny-depp.jpg", "/fbapps/celebus/images/male-jon-hamm-300.jpg", "/fbapps/celebus/images/male-josh-duhamel.jpg", "/fbapps/celebus/images/male-jude-law300.jpg", "/fbapps/celebus/images/male-justin-timberlake.jpg", "/fbapps/celebus/images/male-keanu-reeves300.jpg", "/fbapps/celebus/images/male-keith-urban.jpg", "/fbapps/celebus/images/male-kellan-lutz-300.jpg", "/fbapps/celebus/images/male-kelly-clarkson.jpg", "/fbapps/celebus/images/male-kenny-chesney300.jpg", "/fbapps/celebus/images/male-kris-allen-300.jpg", "/fbapps/celebus/images/male-leo-dicaprio.jpg", "/fbapps/celebus/images/male-liam-hemsworth-300.jpg", "/fbapps/celebus/images/male-mario-lopez-300.jpg", "/fbapps/celebus/images/male-mark-ballas300.jpg", "/fbapps/celebus/images/male-mark-wahlberg-300.jpg", "/fbapps/celebus/images/male-matt-damon300.jpg", "/fbapps/celebus/images/male-matthew-mcconaughey.jpg", "/fbapps/celebus/images/male-milo-ventimiglia300.jpg", "/fbapps/celebus/images/male-nick-lachey300.jpg", "/fbapps/celebus/images/male-orlando-bloom300.jpg", "/fbapps/celebus/images/male-patrick-dempsey.jpg", "/fbapps/celebus/images/male-penn-badgley300.jpg", "/fbapps/celebus/images/male-prince-harry300.jpg", "/fbapps/celebus/images/male-prince-william300.jpg", "/fbapps/celebus/images/male-robert-pattinson300a.jpg", "/fbapps/celebus/images/male-ryan-gosling-300.jpg", "/fbapps/celebus/images/male-ryan-phillippe300.jpg", "/fbapps/celebus/images/male-ryan-reynoldsa300.jpg", "/fbapps/celebus/images/male-shia-labeouf300.jpg", "/fbapps/celebus/images/male-taylor-hicks.jpg", "/fbapps/celebus/images/male-taylor-lautner300.jpg", "/fbapps/celebus/images/male-tim-mcgraw.jpg", "/fbapps/celebus/images/male-tom-brady300.jpg", "/fbapps/celebus/images/male-tom-cruise.jpg", "/fbapps/godini/godini/0.jpg", "/fbapps/godini/godini/1.jpg", "/fbapps/godini/godini/2.jpg", "/fbapps/godini/godini/3.jpg", "/fbapps/godini/godini/4.jpg", "/fbapps/godini/godini/5.jpg", "/fbapps/godini/godini/6.jpg", "/fbapps/godini/godini/7.jpg", "/fbapps/goodbad/src/fonts.txt", "/fbapps/goodbad/src/jquery.percentageloader-0.1.css", "/fbapps/goodbad/src/jquery.percentageloader-0.1.js", "/fbapps/goodbad/src/jquery.percentageloader-0.1.min.js", "/fbapps/match/images/female-Katharine-McPhee.jpg", "/fbapps/match/images/female-adele-300.jpg", "/fbapps/match/images/female-ali-larter1_300.jpg", "/fbapps/match/images/female-alicia-keys300.jpg", "/fbapps/match/images/female-amanda-bynes300.jpg", "/fbapps/match/images/female-amanda-seyfried-300.jpg", "/fbapps/match/images/female-america-ferrera300.jpg", "/fbapps/match/images/female-amy-adams300.jpg", "/fbapps/match/images/female-anna-nicole300.jpg", "/fbapps/match/images/female-anne-hathaway300.jpg", "/fbapps/match/images/female-ashlee-simpson300.jpg", "/fbapps/match/images/female-ashley-greene-300.jpg", "/fbapps/match/images/female-ashley-olsen300.jpg", "/fbapps/match/images/female-ashley-tisdale300.jpg", "/fbapps/match/images/female-audrina-patridge300.jpg", "/fbapps/match/images/female-avril-lavigne300.jpg", "/fbapps/match/images/female-beyonce-knowles.jpg", "/fbapps/match/images/female-brooke-shields300.jpg", "/fbapps/match/images/female-cameron-diaz.jpg", "/fbapps/match/images/female-carmen_electra.jpg", "/fbapps/match/images/female-cate-blanchett.jpg", "/fbapps/match/images/female-catherine-jones.jpg", "/fbapps/match/images/female-celine-dion.jpg", "/fbapps/match/images/female-charlize-theron.jpg", "/fbapps/match/images/female-cheryl-burke.jpg", "/fbapps/match/images/female-christina-aguilera.jpg", "/fbapps/match/images/female-christina-applegate300.jpg", "/fbapps/match/images/female-claire-danes300a.jpg", "/fbapps/match/images/female-courtney-cox300.jpg", "/fbapps/match/images/female-demi-lovato300.jpg", "/fbapps/match/images/female-demi-moore.jpg", "/fbapps/match/images/female-denise-richards.jpg", "/fbapps/match/images/female-drew-barrymore.jpg", "/fbapps/match/images/female-ed-westwick300.jpg", "/fbapps/match/images/female-elin-nordegren-300.jpg", "/fbapps/match/images/female-elisebeth-hasselback300.jpg", "/fbapps/match/images/female-emily-blunt300.jpg", "/fbapps/match/images/female-emma-stone-300.jpg", "/fbapps/match/images/female-emma-watson-300.jpg", "/fbapps/match/images/female-eva-longoria.jpg", "/fbapps/match/images/female-eva-mendes.jpg", "/fbapps/match/images/female-evan-rachelwood300.jpg", "/fbapps/match/images/female-evangeline-lilly300.jpg", "/fbapps/match/images/female-gisele-bundchen300.jpg", "/fbapps/match/images/female-gwen-stefani.jpg", "/fbapps/match/images/female-heidi-montag.jpg", "/fbapps/match/images/female-hilary-duff.jpg", "/fbapps/match/images/female-january-jones-300.jpg", "/fbapps/match/images/female-jennifer-aniston.jpg", "/fbapps/match/images/female-jennifer-lawrence-300.jpg", "/fbapps/match/images/female-jennifer-lopez.jpg", "/fbapps/match/images/female-jessica-alba.jpg", "/fbapps/match/images/female-jessica-biel.jpg", "/fbapps/match/images/female-jessica-simpson.jpg", "/fbapps/match/images/female-jessica-szohr-300.jpg", "/fbapps/match/images/female-julia-roberts.jpg", "/fbapps/match/images/female-julianne-hough.jpg", "/fbapps/match/images/female-kate-beckinsale.jpg", "/fbapps/match/images/female-kate-hudson.jpg", "/fbapps/match/images/female-kate-moss.jpg", "/fbapps/match/images/female-katherine-heig.jpg", "/fbapps/match/images/female-katie-holmes-300.jpg", "/fbapps/match/images/female-keira-knightley.jpg", "/fbapps/match/images/female-kevin-federline300.jpg", "/fbapps/match/images/female-kim-kardashian300b.jpg", "/fbapps/match/images/female-kristen-stewart300.jpg", "/fbapps/match/images/female-kristin-cavallari.jpg", "/fbapps/match/images/female-lauren-conrad300.jpg", "/fbapps/match/images/female-leighton-meester300.jpg", "/fbapps/match/images/female-lindsay-lohan.jpg", "/fbapps/match/images/female-mandy-moore.jpg", "/fbapps/match/images/female-megan-fox.jpg", "/fbapps/match/images/female-mila-kunis-300.jpg", "/fbapps/match/images/female-mischa-barton.jpg", "/fbapps/match/images/female-natalie-portman300.jpg", "/fbapps/match/images/female-penelope-cruz300.jpg", "/fbapps/match/images/female-pink300.jpg", "/fbapps/match/images/female-rachel-bilson300.jpg", "/fbapps/match/images/female-salma-hayek.jpg", "/fbapps/match/images/female-sandra-bullock.jpg", "/fbapps/match/images/female-scarett-johansson.jpg", "/fbapps/match/images/female-selena-gomez.jpg", "/fbapps/match/images/female-shakira.jpg", "/fbapps/match/images/female-shania-twain300.jpg", "/fbapps/match/images/female-sheryl-crow300.jpg", "/fbapps/match/images/female-sienna-miller.jpg", "/fbapps/match/images/female-taylor-momsen300.jpg", "/fbapps/match/images/male-adam-levine-300.jpg", "/fbapps/match/images/male-alexander-skarsgard-300.jpg", "/fbapps/match/images/male-andrew-garfield-300.jpg", "/fbapps/match/images/male-ashton-kutcher300.jpg", "/fbapps/match/images/male-ben-affleck-300.jpg", "/fbapps/match/images/male-brad-pitt.jpg", "/fbapps/match/images/male-bradley-cooper.jpg", "/fbapps/match/images/male-brody-jenner300.jpg", "/fbapps/match/images/male-bruce-willis300.jpg", "/fbapps/match/images/male-chace-crawford300.jpg", "/fbapps/match/images/male-channing-tatum.jpg", "/fbapps/match/images/male-charlie-sheen-300.jpg", "/fbapps/match/images/male-chris-hemsworth.jpg", "/fbapps/match/images/male-chris-pine-300.jpg", "/fbapps/match/images/male-christian-bale-300.jpg", "/fbapps/match/images/male-clay-aiken.jpg", "/fbapps/match/images/male-colin-farrell300.jpg", "/fbapps/match/images/male-cory-monteith.jpg", "/fbapps/match/images/male-daniel-radcliffe300.jpg", "/fbapps/match/images/male-david-archuleta.jpg", "/fbapps/match/images/male-david-beckham.jpg", "/fbapps/match/images/male-david-cook.jpg", "/fbapps/match/images/male-ed-westwick300.jpg", "/fbapps/match/images/male-george-clooney.jpg", "/fbapps/match/images/male-gerard-butler300.jpg", "/fbapps/match/images/male-heath-ledger.jpg", "/fbapps/match/images/male-hugh-jackman.jpg", "/fbapps/match/images/male-jake-gyllenhaal.jpg", "/fbapps/match/images/male-james-franco300.jpg", "/fbapps/match/images/male-john-krasinski300.jpg", "/fbapps/match/images/male-john-mayer300.jpg", "/fbapps/match/images/male-johnny-depp.jpg", "/fbapps/match/images/male-jon-hamm-300.jpg", "/fbapps/match/images/male-josh-duhamel.jpg", "/fbapps/match/images/male-jude-law300.jpg", "/fbapps/match/images/male-justin-timberlake.jpg", "/fbapps/match/images/male-keanu-reeves300.jpg", "/fbapps/match/images/male-keith-urban.jpg", "/fbapps/match/images/male-kellan-lutz-300.jpg", "/fbapps/match/images/male-kelly-clarkson.jpg", "/fbapps/match/images/male-kenny-chesney300.jpg", "/fbapps/match/images/male-kris-allen-300.jpg", "/fbapps/match/images/male-leo-dicaprio.jpg", "/fbapps/match/images/male-liam-hemsworth-300.jpg", "/fbapps/match/images/male-mario-lopez-300.jpg", "/fbapps/match/images/male-mark-ballas300.jpg", "/fbapps/match/images/male-mark-wahlberg-300.jpg", "/fbapps/match/images/male-matt-damon300.jpg", "/fbapps/match/images/male-matthew-mcconaughey.jpg", "/fbapps/match/images/male-milo-ventimiglia300.jpg", "/fbapps/match/images/male-nick-lachey300.jpg", "/fbapps/match/images/male-orlando-bloom300.jpg", "/fbapps/match/images/male-patrick-dempsey.jpg", "/fbapps/match/images/male-penn-badgley300.jpg", "/fbapps/match/images/male-prince-harry300.jpg", "/fbapps/match/images/male-prince-william300.jpg", "/fbapps/match/images/male-robert-pattinson300.jpg", "/fbapps/match/images/male-robert-pattinson300a.jpg", "/fbapps/match/images/male-ryan-gosling-300.jpg", "/fbapps/match/images/male-ryan-phillippe300.jpg", "/fbapps/match/images/male-ryan-reynoldsa300.jpg", "/fbapps/match/images/male-shia-labeouf300.jpg", "/fbapps/match/images/male-taylor-hicks.jpg", "/fbapps/match/images/male-taylor-lautner300.jpg", "/fbapps/match/images/male-tim-mcgraw.jpg", "/fbapps/match/images/male-tom-brady300.jpg", "/fbapps/match/images/male-tom-cruise.jpg", "/fbapps/podhojda/images/female-Katharine-McPhee.jpg", "/fbapps/podhojda/images/female-adele-300.jpg", "/fbapps/podhojda/images/female-ali-larter1_300.jpg", "/fbapps/podhojda/images/female-alicia-keys300.jpg", "/fbapps/podhojda/images/female-amanda-bynes300.jpg", "/fbapps/podhojda/images/female-amanda-seyfried-300.jpg", "/fbapps/podhojda/images/female-america-ferrera300.jpg", "/fbapps/podhojda/images/female-amy-adams300.jpg", "/fbapps/podhojda/images/female-anna-nicole300.jpg", "/fbapps/podhojda/images/female-anne-hathaway300.jpg", "/fbapps/podhojda/images/female-ashlee-simpson300.jpg", "/fbapps/podhojda/images/female-ashley-greene-300.jpg", "/fbapps/podhojda/images/female-ashley-olsen300.jpg", "/fbapps/podhojda/images/female-ashley-tisdale300.jpg", "/fbapps/podhojda/images/female-audrina-patridge300.jpg", "/fbapps/podhojda/images/female-avril-lavigne300.jpg", "/fbapps/podhojda/images/female-beyonce-knowles.jpg", "/fbapps/podhojda/images/female-brooke-shields300.jpg", "/fbapps/podhojda/images/female-cameron-diaz.jpg", "/fbapps/podhojda/images/female-carmen_electra.jpg", "/fbapps/podhojda/images/female-cate-blanchett.jpg", "/fbapps/podhojda/images/female-catherine-jones.jpg", "/fbapps/podhojda/images/female-celine-dion.jpg", "/fbapps/podhojda/images/female-charlize-theron.jpg", "/fbapps/podhojda/images/female-cheryl-burke.jpg", "/fbapps/podhojda/images/female-christina-aguilera.jpg", "/fbapps/podhojda/images/female-christina-applegate300.jpg", "/fbapps/podhojda/images/female-claire-danes300a.jpg", "/fbapps/podhojda/images/female-courtney-cox300.jpg", "/fbapps/podhojda/images/female-demi-lovato300.jpg", "/fbapps/podhojda/images/female-demi-moore.jpg", "/fbapps/podhojda/images/female-denise-richards.jpg", "/fbapps/podhojda/images/female-drew-barrymore.jpg", "/fbapps/podhojda/images/female-ed-westwick300.jpg", "/fbapps/podhojda/images/female-elin-nordegren-300.jpg", "/fbapps/podhojda/images/female-elisebeth-hasselback300.jpg", "/fbapps/podhojda/images/female-emily-blunt300.jpg", "/fbapps/podhojda/images/female-emma-stone-300.jpg", "/fbapps/podhojda/images/female-emma-watson-300.jpg", "/fbapps/podhojda/images/female-eva-longoria.jpg", "/fbapps/podhojda/images/female-eva-mendes.jpg", "/fbapps/podhojda/images/female-evan-rachelwood300.jpg", "/fbapps/podhojda/images/female-evangeline-lilly300.jpg", "/fbapps/podhojda/images/female-gisele-bundchen300.jpg", "/fbapps/podhojda/images/female-gwen-stefani.jpg", "/fbapps/podhojda/images/female-heidi-montag.jpg", "/fbapps/podhojda/images/female-hilary-duff.jpg", "/fbapps/podhojda/images/female-january-jones-300.jpg", "/fbapps/podhojda/images/female-jennifer-aniston.jpg", "/fbapps/podhojda/images/female-jennifer-lawrence-300.jpg", "/fbapps/podhojda/images/female-jennifer-lopez.jpg", "/fbapps/podhojda/images/female-jessica-alba.jpg", "/fbapps/podhojda/images/female-jessica-biel.jpg", "/fbapps/podhojda/images/female-jessica-simpson.jpg", "/fbapps/podhojda/images/female-jessica-szohr-300.jpg", "/fbapps/podhojda/images/female-julia-roberts.jpg", "/fbapps/podhojda/images/female-julianne-hough.jpg", "/fbapps/podhojda/images/female-kate-beckinsale.jpg", "/fbapps/podhojda/images/female-kate-hudson.jpg", "/fbapps/podhojda/images/female-kate-moss.jpg", "/fbapps/podhojda/images/female-katherine-heig.jpg", "/fbapps/podhojda/images/female-katie-holmes-300.jpg", "/fbapps/podhojda/images/female-keira-knightley.jpg", "/fbapps/podhojda/images/female-kevin-federline300.jpg", "/fbapps/podhojda/images/female-kim-kardashian300b.jpg", "/fbapps/podhojda/images/female-kristen-stewart300.jpg", "/fbapps/podhojda/images/female-kristin-cavallari.jpg", "/fbapps/podhojda/images/female-lauren-conrad300.jpg", "/fbapps/podhojda/images/female-leighton-meester300.jpg", "/fbapps/podhojda/images/female-lindsay-lohan.jpg", "/fbapps/podhojda/images/female-mandy-moore.jpg", "/fbapps/podhojda/images/female-megan-fox.jpg", "/fbapps/podhojda/images/female-mila-kunis-300.jpg", "/fbapps/podhojda/images/female-mischa-barton.jpg", "/fbapps/podhojda/images/female-natalie-portman300.jpg", "/fbapps/podhojda/images/female-penelope-cruz300.jpg", "/fbapps/podhojda/images/female-pink300.jpg", "/fbapps/podhojda/images/female-rachel-bilson300.jpg", "/fbapps/podhojda/images/female-salma-hayek.jpg", "/fbapps/podhojda/images/female-sandra-bullock.jpg", "/fbapps/podhojda/images/female-scarett-johansson.jpg", "/fbapps/podhojda/images/female-selena-gomez.jpg", "/fbapps/podhojda/images/female-shakira.jpg", "/fbapps/podhojda/images/female-shania-twain300.jpg", "/fbapps/podhojda/images/female-sheryl-crow300.jpg", "/fbapps/podhojda/images/female-sienna-miller.jpg", "/fbapps/podhojda/images/female-taylor-momsen300.jpg", "/fbapps/podhojda/images/male-adam-levine-300.jpg", "/fbapps/podhojda/images/male-alexander-skarsgard-300.jpg", "/fbapps/podhojda/images/male-andrew-garfield-300.jpg", "/fbapps/podhojda/images/male-ashton-kutcher300.jpg", "/fbapps/podhojda/images/male-ben-affleck-300.jpg", "/fbapps/podhojda/images/male-brad-pitt.jpg", "/fbapps/podhojda/images/male-bradley-cooper.jpg", "/fbapps/podhojda/images/male-brody-jenner300.jpg", "/fbapps/podhojda/images/male-bruce-willis300.jpg", "/fbapps/podhojda/images/male-chace-crawford300.jpg", "/fbapps/podhojda/images/male-channing-tatum.jpg", "/fbapps/podhojda/images/male-charlie-sheen-300.jpg", "/fbapps/podhojda/images/male-chris-hemsworth.jpg", "/fbapps/podhojda/images/male-chris-pine-300.jpg", "/fbapps/podhojda/images/male-christian-bale-300.jpg", "/fbapps/podhojda/images/male-clay-aiken.jpg", "/fbapps/podhojda/images/male-colin-farrell300.jpg", "/fbapps/podhojda/images/male-cory-monteith.jpg", "/fbapps/podhojda/images/male-daniel-radcliffe300.jpg", "/fbapps/podhojda/images/male-david-archuleta.jpg", "/fbapps/podhojda/images/male-david-beckham.jpg", "/fbapps/podhojda/images/male-david-cook.jpg", "/fbapps/podhojda/images/male-ed-westwick300.jpg", "/fbapps/podhojda/images/male-george-clooney.jpg", "/fbapps/podhojda/images/male-gerard-butler300.jpg", "/fbapps/podhojda/images/male-heath-ledger.jpg", "/fbapps/podhojda/images/male-hugh-jackman.jpg", "/fbapps/podhojda/images/male-jake-gyllenhaal.jpg", "/fbapps/podhojda/images/male-james-franco300.jpg", "/fbapps/podhojda/images/male-john-krasinski300.jpg", "/fbapps/podhojda/images/male-john-mayer300.jpg", "/fbapps/podhojda/images/male-johnny-depp.jpg", "/fbapps/podhojda/images/male-jon-hamm-300.jpg", "/fbapps/podhojda/images/male-josh-duhamel.jpg", "/fbapps/podhojda/images/male-jude-law300.jpg", "/fbapps/podhojda/images/male-justin-timberlake.jpg", "/fbapps/podhojda/images/male-keanu-reeves300.jpg", "/fbapps/podhojda/images/male-keith-urban.jpg", "/fbapps/podhojda/images/male-kellan-lutz-300.jpg", "/fbapps/podhojda/images/male-kelly-clarkson.jpg", "/fbapps/podhojda/images/male-kenny-chesney300.jpg", "/fbapps/podhojda/images/male-kris-allen-300.jpg", "/fbapps/podhojda/images/male-leo-dicaprio.jpg", "/fbapps/podhojda/images/male-liam-hemsworth-300.jpg", "/fbapps/podhojda/images/male-mario-lopez-300.jpg", "/fbapps/podhojda/images/male-mark-ballas300.jpg", "/fbapps/podhojda/images/male-mark-wahlberg-300.jpg", "/fbapps/podhojda/images/male-matt-damon300.jpg", "/fbapps/podhojda/images/male-matthew-mcconaughey.jpg", "/fbapps/podhojda/images/male-milo-ventimiglia300.jpg", "/fbapps/podhojda/images/male-nick-lachey300.jpg", "/fbapps/podhojda/images/male-orlando-bloom300.jpg", "/fbapps/podhojda/images/male-patrick-dempsey.jpg", "/fbapps/podhojda/images/male-penn-badgley300.jpg", "/fbapps/podhojda/images/male-prince-harry300.jpg", "/fbapps/podhojda/images/male-prince-william300.jpg", "/fbapps/podhojda/images/male-robert-pattinson300.jpg", "/fbapps/podhojda/images/male-robert-pattinson300a.jpg", "/fbapps/podhojda/images/male-ryan-gosling-300.jpg", "/fbapps/podhojda/images/male-ryan-phillippe300.jpg", "/fbapps/podhojda/images/male-ryan-reynoldsa300.jpg", "/fbapps/podhojda/images/male-shia-labeouf300.jpg", "/fbapps/podhojda/images/male-taylor-hicks.jpg", "/fbapps/podhojda/images/male-taylor-lautner300.jpg", "/fbapps/podhojda/images/male-tim-mcgraw.jpg", "/fbapps/podhojda/images/male-tom-brady300.jpg", "/fbapps/podhojda/images/male-tom-cruise.jpg", "/fbapps/vazrast/godini/0.jpg", "/fbapps/vazrast/godini/1.jpg", "/fbapps/vazrast/godini/2.jpg", "/fbapps/vazrast/godini/3.jpg", "/fbapps/vazrast/godini/4.jpg", "/fbapps/vazrast/godini/5.jpg", "/fbapps/vazrast/godini/6.jpg", "/fbapps/vazrast/godini/7.jpg", "/facebook/[appid]/[type]/[refreshid]/img.txt", "/facebook/[appid]/[type]/[refreshid]/res/[svgresultid].txt", "/index1/index.html", "/admix/index.html"] }), {
  pageMap,
  renderers
});
var _args = void 0;
var _exports = createExports(_manifest2);
var _default = _exports["default"];
var _start = "start";
if (_start in adapter) {
  adapter[_start](_manifest2, _args);
}
export {
  _default as default,
  pageMap
};
/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
/*! Bundled license information:

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.browser.development.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.development.js:
  (**
   * @license React
   * react-dom-server.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
