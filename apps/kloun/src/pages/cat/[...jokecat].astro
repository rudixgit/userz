---
export const prerender = false
import db from "../../../data/client.js";
import JokeThumbnail, { Doc } from "../../components/JokeThumbnail.astro";
import Pagination from "../../components/Pagination.astro";
import RudSense from "../../components/RudSense.astro";
import { jokecats } from "../../components/utils/data/jokecats";
import Layout from "../../layouts/Layout.astro";
const { jokecat } = Astro.params as { jokecat: string };
const x = jokecat.split("/") as string[];
const cat = jokecats.find((xx) => xx.slug === x[0])?.cat;
const pagenum = x[1] ? Number(x[1]) : 1;

const skip = pagenum * 30 - 30;


 
const datax = db.view("joke/cat", {
	key: 'JOK'+encodeURI(cat || ''),
	limit: 30,
	update: "lazy",
	reduce: "false",
	skip,
	cache: 864000,
});

const countx = db.view("joke/cat", {
	key: 'JOK'+encodeURI(cat || ''),
	limit: 1,
	update: "lazy",
	reduce: true,
	cache: 864000,
});

const resp = await Promise.all([datax, countx]).then((values) => {
	return {
		jokes: values[0].rows,
		items: values[1].value,
	};
});

const { jokes, items } = resp;
---
<Layout
	title={`Вицове от ${cat} на страница ${pagenum}`}
	description={`Вицове от ${cat}  `}
>
	<div class="text-sm font-bold">
		<ul class="flex gap-2 items-center">
			<li>
				<a href={"/vicove"}>Вицове</a>{" "}
			</li>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width={1.5}
				stroke="currentColor"
				class="w-5 h-5"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					d="M8.25 4.5l7.5 7.5-7.5 7.5"></path>
			</svg>
			<li>
				<a href={`/cat/${x[0]}`}>{cat}</a>
			</li>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width={1.5}
				stroke="currentColor"
				class="w-5 h-5"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					d="M8.25 4.5l7.5 7.5-7.5 7.5"></path>
			</svg>
			<li>
				<a href={`/cat/${x[0]}/${pagenum}`}>{pagenum}</a>
			</li>
		</ul>
	</div>
	<div class="flex flex-wrap">
		<div class="joke">
			<RudSense />
		</div>
		{
			jokes.map((item: Doc) => (
				<JokeThumbnail item={item} showcats={false} short={true} />
			))
		}
		<div class="joke">
			<RudSense main={true} />
		</div>
	</div>
	<Pagination
		items={items}
		currentPage={pagenum}
		pageSize={30}
		prefix={`/cat/${x[0]}/`}
	/>
</Layout>
