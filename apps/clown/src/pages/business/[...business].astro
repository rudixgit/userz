---
import db from "../../../../kloun/data/client";
import CatButton from "../../components/CatButton.astro";
import Pagination from "../../components/Pagination.astro";
import { businesses } from "../../components/utils/data/business";
import Layout from "../../layouts/Layout.astro";

const { business } = Astro.params as { business?: string };
console.log(business);

const x = business ? business.split("/") : (["a"] as string[]);
let resp;
let pagenum = 1;
let items = 0;
let slug = "";
let cats;
let firms;

if (business?.includes("/")) {
	pagenum = x[1] ? Number(x[1].replace(/\//g, "")) : 1;
	slug = x[0];
	const skip = pagenum * 100 - 100;
	const key = businesses.find((xx) => xx.slug === x[0])?.key || "София";

	const datax = db.view("company/companiesbg", {
		reduce: false,
		key,
		limit: 100,
		skip: skip,
		update: "lazy",
	});
	const itemsx = db.view("company/companiesbg", {
		reduce: true,
		key,
		limit: 1,
		group: false,
		update: "lazy",
	});
	resp = await Promise.all([datax, itemsx]).then((values) => {
		return {
			firms: values[0].rows,
			items: values[1].value,
		};
	});
	items = resp.items;
	firms = resp.firms;
} else {
	cats = businesses
		.filter((i) => i.value > 1200)
		.sort((a, z) => z.value - a.value);
}
---

<Layout
	title={` Twitter ecosphere ${pagenum}`}
	description={`Twitter ecosphere   `}
>
	{
		!business ? (
			<div class="flex w-full flex-wrap gap-3">
				{cats?.map((city) => (
					<CatButton
						title={city.key}
						url={"/business/" + city.slug + "/1"}
						count={city.value}
					/>
				))}
			</div>
		) : (
			<div>
				<div class="my-5 flex w-full flex-wrap gap-2">
					{firms.map(({ value }: { value: string }) => (
						<CatButton title={value} url={"#" + value} />
					))}
				</div>
				<Pagination
					items={items}
					currentPage={pagenum}
					pageSize={100}
					prefix={"/business/" + slug + "/"}
				/>
			</div>
		)
	}
</Layout>
