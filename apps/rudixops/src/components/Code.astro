---
import hljs from "highlight.js/lib/core";
import javascript from "highlight.js/lib/languages/json";
import "highlight.js/styles/nord.css";
const { code } = Astro.props;
hljs.registerLanguage("javascript", javascript);
const stringx = JSON.stringify(code, null, 2);

const codex = hljs.highlight(stringx, {
    language: "javascript",
}).value;
const lines = Array.from(Array(codex.split("\n").length).keys());
---

<div class="relative lg:static xl:pl-10">
    <div class="relative">
        <img
            alt=""
            width="530"
            height="530"
            decoding="async"
            data-nimg="1"
            class="absolute -right-64 top-64"
            style="color:transparent"
            src="/blur-cyan.d28a5585.png"
        />
        <img
            alt=""
            width="567"
            height="567"
            decoding="async"
            data-nimg="1"
            class="absolute top-10 -right-44"
            style="color:transparent"
            src="/blur-indigo.b752cf77.png"
        />
        <div
            class="absolute inset-0 rounded-2xl bg-gradient-to-tr from-sky-300 via-sky-300/70 to-blue-300 opacity-10"
        >
        </div>
        <div
            class="absolute inset-0 rounded-2xl bg-gradient-to-tr from-sky-300 via-sky-300/70 to-blue-300 opacity-10"
        >
        </div>
        <div class="relative rounded-2xl bg-[#0A101F]/80 ring-1 ring-white/10">
            <div
                class="absolute -top-px left-20 right-11 h-px bg-gradient-to-r from-sky-300/0 via-sky-300/70 to-sky-300/0"
            >
            </div>
            <div
                class="absolute -bottom-px left-11 right-20 h-px bg-gradient-to-r from-blue-400/0 via-blue-400 to-blue-400/0"
            >
            </div>
            <div>
                <svg
                    aria-hidden="true"
                    viewBox="0 0 42 10"
                    fill="none"
                    class="h-2.5 w-auto stroke-slate-500/30"
                >
                    <circle cx="5" cy="5" r="4.5"></circle>
                    <circle cx="21" cy="5" r="4.5"></circle>
                    <circle cx="37" cy="5" r="4.5"></circle>
                </svg>
                <div>
                    <div class="mt-4 flex text-xs">
                        <div
                            class="flex h-6 rounded-t-md bg-gradient-to-r from-sky-400/30 via-sky-400 to-sky-400/30 pt-px px-px font-medium text-sky-300"
                        >
                            <div
                                class="flex items-center rounded-t-md px-2.5 bg"
                            >
                                package.json
                            </div>
                        </div>
                    </div>
                    <div class="p-px bg-black -mt-px"></div>
                </div>
                <div class="flex items-start px-1 text-sm">
                    <div
                        aria-hidden="true"
                        class="select-none border-r border-slate-300/5 pr-4 font-mono text-slate-600 text-right pb-4"
                    >
                    </div>
                    <div>
                        {
                            lines.map((_x, i) => (
                                <div id={"code" + i} class="font-mono" />
                            ))
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<astro-greet data-message={codex} data-arr={stringx}></astro-greet>

<script>
    class AstroGreet extends HTMLElement {
        constructor() {
            super();
            let i = 0;
            let sum = 0;
            const message = this.dataset.message;
            const arrx = this.dataset.arr?.split("\n");
            console.log(arrx);
            const arr = message!.split("\n");
            while (i < arr.length) {
                sum = sum += arr[i].length;
                const indent = arrx![i].split("  ").length * 10;
                const xx = `<div style="width:${indent}px;" class="float-left font-mono relative">
                    <div class="absolute select-none border-r border-slate-300/5 pr-4 font-mono text-slate-600 text-right w-3">
                        ${i}
                    </div>&nbsp;</div> ${arr[i]}
                    </div>`;
                new Typed("#code" + i, {
                    strings: [xx],
                    typeSpeed: 1,
                    startDelay: sum,
                });
                i++;
            }
        }
    }

    customElements.define("astro-greet", AstroGreet);
</script>
<script is:inline>
    const message = this.dataset.message;
    console.log(message);
    const lines = JSON.stringify(lines);
    let i = 0;

    while (i < lines.length) {
        console.log(scores[i]);
        i++;
    }
</script>
